Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 51 conflicts: 1 shift/reduce
State 148 conflicts: 1 shift/reduce
State 154 conflicts: 1 shift/reduce
State 164 conflicts: 1 shift/reduce
State 168 conflicts: 1 shift/reduce
State 169 conflicts: 1 shift/reduce
State 389 conflicts: 2 shift/reduce
State 463 conflicts: 7 shift/reduce
State 652 conflicts: 3 reduce/reduce
State 669 conflicts: 2 shift/reduce
State 1031 conflicts: 6 shift/reduce
State 1033 conflicts: 6 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program bitfield_alias_declaration
   13        | program ';'

   14 optional_public_or_private_module: %empty
   15                                  | "public"
   16                                  | "private"

   17 module_name: '$'
   18            | "name"

   19 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   20 character_sequence: STRING_CHARACTER
   21                   | STRING_CHARACTER_ESC
   22                   | character_sequence STRING_CHARACTER
   23                   | character_sequence STRING_CHARACTER_ESC

   24 string_constant: "start of the string" character_sequence "end of the string"

   25 string_builder_body: %empty
   26                    | string_builder_body character_sequence
   27                    | string_builder_body "{" expr "}"

   28 string_builder: "start of the string" string_builder_body "end of the string"

   29 reader_character_sequence: STRING_CHARACTER
   30                          | reader_character_sequence STRING_CHARACTER

   31 $@1: %empty

   32 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   33 options_declaration: "options" annotation_argument_list

   34 require_declaration: "require" require_module

   35 require_module_name: "name"
   36                    | '%' require_module_name
   37                    | require_module_name '.' "name"
   38                    | require_module_name '/' "name"

   39 require_module: require_module_name is_public_module
   40               | require_module_name "as" "name" is_public_module

   41 is_public_module: %empty
   42                 | "public"

   43 expect_declaration: "expect" expect_list

   44 expect_list: expect_error
   45            | expect_list ',' expect_error

   46 expect_error: "integer constant"
   47             | "integer constant" ':' "integer constant"

   48 expression_label: "label" "integer constant" ':'

   49 expression_goto: "goto" "label" "integer constant"
   50                | "goto" expr

   51 elif_or_static_elif: "elif"
   52                    | "static_elif"

   53 expression_else: %empty
   54                | "else" expression_block
   55                | elif_or_static_elif expr expression_block expression_else

   56 if_or_static_if: "if"
   57                | "static_if"

   58 expression_else_one_liner: %empty

   59 $@2: %empty

   60 expression_else_one_liner: "else" $@2 expression_if_one_liner

   61 expression_if_one_liner: expr
   62                        | expression_return_no_pipe
   63                        | expression_yield_no_pipe
   64                        | expression_break
   65                        | expression_continue

   66 expression_if_then_else: if_or_static_if expr expression_block expression_else

   67 $@3: %empty

   68 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner ';'

   69 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' expression_block

   70 expression_unsafe: "unsafe" expression_block

   71 expression_while_loop: "while" expr expression_block

   72 expression_with: "with" expr expression_block

   73 $@4: %empty

   74 expression_with_alias: "assume" "name" '=' $@4 expr

   75 annotation_argument_value: string_constant
   76                          | "name"
   77                          | "integer constant"
   78                          | "floating point constant"
   79                          | "true"
   80                          | "false"

   81 annotation_argument_value_list: annotation_argument_value
   82                               | annotation_argument_value_list ',' annotation_argument_value

   83 annotation_argument_name: "name"
   84                         | "type"
   85                         | "in"

   86 annotation_argument: annotation_argument_name '=' string_constant
   87                    | annotation_argument_name '=' "name"
   88                    | annotation_argument_name '=' "integer constant"
   89                    | annotation_argument_name '=' "floating point constant"
   90                    | annotation_argument_name '=' "true"
   91                    | annotation_argument_name '=' "false"
   92                    | annotation_argument_name
   93                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

   94 annotation_argument_list: annotation_argument
   95                         | annotation_argument_list ',' annotation_argument

   96 annotation_declaration_name: name_in_namespace
   97                            | "require"
   98                            | "private"

   99 annotation_declaration: annotation_declaration_name
  100                       | annotation_declaration_name '(' annotation_argument_list ')'

  101 annotation_list: annotation_declaration
  102                | annotation_list ',' annotation_declaration

  103 optional_annotation_list: %empty
  104                         | '[' annotation_list ']'

  105 optional_function_argument_list: %empty
  106                                | '(' ')'
  107                                | '(' function_argument_list ')'

  108 optional_function_type: %empty
  109                       | ':' type_declaration

  110 function_name: "name"
  111              | "operator" '!'
  112              | "operator" '~'
  113              | "operator" "+="
  114              | "operator" "-="
  115              | "operator" "*="
  116              | "operator" "/="
  117              | "operator" "%="
  118              | "operator" "&="
  119              | "operator" "|="
  120              | "operator" "^="
  121              | "operator" "&&="
  122              | "operator" "||="
  123              | "operator" "^^="
  124              | "operator" "&&"
  125              | "operator" "||"
  126              | "operator" "^^"
  127              | "operator" '+'
  128              | "operator" '-'
  129              | "operator" '*'
  130              | "operator" '/'
  131              | "operator" '%'
  132              | "operator" '<'
  133              | "operator" '>'
  134              | "operator" ".."
  135              | "operator" "=="
  136              | "operator" "!="
  137              | "operator" "<="
  138              | "operator" ">="
  139              | "operator" '&'
  140              | "operator" '|'
  141              | "operator" '^'
  142              | "++" "operator"
  143              | "--" "operator"
  144              | "operator" "++"
  145              | "operator" "--"
  146              | "operator" "<<"
  147              | "operator" ">>"
  148              | "operator" "<<="
  149              | "operator" ">>="
  150              | "operator" "<<<"
  151              | "operator" ">>>"
  152              | "operator" "<<<="
  153              | "operator" ">>>="
  154              | "operator" '[' ']'
  155              | "operator" "?[" ']'
  156              | "operator" '.'
  157              | "operator" "?."
  158              | "operator" ":="
  159              | "operator" "delete"
  160              | "operator" "??"
  161              | "operator" "is"
  162              | "operator" "as"
  163              | "operator" '?' "as"
  164              | "bool"
  165              | "string"
  166              | "int"
  167              | "int2"
  168              | "int3"
  169              | "int4"
  170              | "uint"
  171              | "uint2"
  172              | "uint3"
  173              | "uint4"
  174              | "float"
  175              | "float2"
  176              | "float3"
  177              | "float4"
  178              | "range"
  179              | "urange"
  180              | "int64"
  181              | "uint64"
  182              | "double"
  183              | "int8"
  184              | "uint8"
  185              | "int16"
  186              | "uint16"

  187 global_function_declaration: optional_annotation_list "def" function_declaration

  188 optional_public_or_private_function: %empty
  189                                    | "private"
  190                                    | "public"

  191 function_declaration_header: function_name optional_function_argument_list optional_function_type

  192 $@5: %empty

  193 function_declaration: optional_public_or_private_function $@5 function_declaration_header expression_block

  194 expression_block: '{' expressions '}'
  195                 | '{' expressions '}' "finally" '{' expressions '}'

  196 expression_any: ';'
  197               | expr_pipe
  198               | expr_assign_pipe
  199               | expr_assign ';'
  200               | expression_delete ';'
  201               | expression_let
  202               | expression_while_loop
  203               | expression_unsafe
  204               | expression_with
  205               | expression_with_alias
  206               | expression_for_loop
  207               | expression_break ';'
  208               | expression_continue ';'
  209               | expression_return
  210               | expression_yield
  211               | expression_if_then_else
  212               | expression_try_catch
  213               | expression_label ';'
  214               | expression_goto ';'
  215               | "pass" ';'

  216 expressions: %empty
  217            | expressions expression_any
  218            | expressions error

  219 expr_pipe: expr_assign " <|" expr_block
  220          | "@ <|" expr_block
  221          | "@@ <|" expr_block

  222 name_in_namespace: "name"
  223                  | "name" "::" "name"
  224                  | "::" "name"

  225 expression_delete: "delete" expr

  226 expr_new: "new" type_declaration
  227         | "new" type_declaration '(' ')'
  228         | "new" type_declaration '(' expr_list ')'
  229         | "new" make_decl

  230 expression_break: "break"

  231 expression_continue: "continue"

  232 expression_return_no_pipe: "return"
  233                          | "return" expr
  234                          | "return" "<-" expr

  235 expression_return: expression_return_no_pipe ';'
  236                  | "return" expr_pipe
  237                  | "return" "<-" expr_pipe

  238 expression_yield_no_pipe: "yield" expr
  239                         | "yield" "<-" expr

  240 expression_yield: expression_yield_no_pipe ';'
  241                 | "yield" expr_pipe
  242                 | "yield" "<-" expr_pipe

  243 expression_try_catch: "try" expression_block "recover" expression_block

  244 kwd_let: "let"
  245        | "var"

  246 expression_let: kwd_let let_variable_declaration

  247 $@6: %empty

  248 $@7: %empty

  249 expr_cast: "cast" '<' $@6 type_declaration '>' $@7 expr

  250 $@8: %empty

  251 $@9: %empty

  252 expr_cast: "upcast" '<' $@8 type_declaration '>' $@9 expr

  253 $@10: %empty

  254 $@11: %empty

  255 expr_cast: "reinterpret" '<' $@10 type_declaration '>' $@11 expr

  256 $@12: %empty

  257 $@13: %empty

  258 expr_type_decl: "type" '<' $@12 type_declaration '>' $@13

  259 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  260               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  261               | "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

  262 expr_list: expr
  263          | expr_list ',' expr

  264 block_or_simple_block: expression_block
  265                      | "=>" expr
  266                      | "=>" "<-" expr

  267 block_or_lambda: '$'
  268                | '@'
  269                | '@' '@'

  270 capture_entry: '&' "name"
  271              | '=' "name"
  272              | "<-" "name"
  273              | ":=" "name"

  274 capture_list: capture_entry
  275             | capture_list ',' capture_entry

  276 optional_capture_list: %empty
  277                      | "[[" capture_list ']' ']'

  278 expr_block: expression_block
  279           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  280 expr_numeric_const: "integer constant"
  281                   | "unsigned integer constant"
  282                   | "long integer constant"
  283                   | "unsigned long integer constant"
  284                   | "floating point constant"
  285                   | "double constant"

  286 expr_assign: expr
  287            | expr '=' expr
  288            | expr "<-" expr
  289            | expr ":=" expr
  290            | expr "&=" expr
  291            | expr "|=" expr
  292            | expr "^=" expr
  293            | expr "&&=" expr
  294            | expr "||=" expr
  295            | expr "^^=" expr
  296            | expr "+=" expr
  297            | expr "-=" expr
  298            | expr "*=" expr
  299            | expr "/=" expr
  300            | expr "%=" expr
  301            | expr "<<=" expr
  302            | expr ">>=" expr
  303            | expr "<<<=" expr
  304            | expr ">>>=" expr

  305 expr_assign_pipe: expr '=' "@ <|" expr
  306                 | expr '=' "@@ <|" expr
  307                 | expr "<-" "@ <|" expr
  308                 | expr "<-" "@@ <|" expr

  309 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'

  310 expr_method_call: expr "->" "name" '(' ')'
  311                 | expr "->" "name" '(' expr_list ')'

  312 func_addr_name: name_in_namespace
  313               | "$i" '(' expr ')'

  314 func_addr_expr: '@' '@' func_addr_name

  315 $@14: %empty

  316 $@15: %empty

  317 func_addr_expr: '@' '@' '<' $@14 type_declaration '>' $@15 func_addr_name

  318 $@16: %empty

  319 $@17: %empty

  320 func_addr_expr: '@' '@' '<' $@16 optional_function_argument_list optional_function_type '>' $@17 func_addr_name

  321 expr_field: expr '.' "name"
  322           | expr '.' '.' "name"

  323 $@18: %empty

  324 $@19: %empty

  325 expr_field: expr '.' $@18 error $@19

  326 expr: "null"
  327     | name_in_namespace
  328     | expr_numeric_const
  329     | expr_reader
  330     | string_builder
  331     | make_decl
  332     | "true"
  333     | "false"
  334     | expr_field
  335     | expr_mtag
  336     | '!' expr
  337     | '~' expr
  338     | '+' expr
  339     | '-' expr
  340     | expr "<<" expr
  341     | expr ">>" expr
  342     | expr "<<<" expr
  343     | expr ">>>" expr
  344     | expr '+' expr
  345     | expr '-' expr
  346     | expr '*' expr
  347     | expr '/' expr
  348     | expr '%' expr
  349     | expr '<' expr
  350     | expr '>' expr
  351     | expr "==" expr
  352     | expr "!=" expr
  353     | expr "<=" expr
  354     | expr ">=" expr
  355     | expr '&' expr
  356     | expr '|' expr
  357     | expr '^' expr
  358     | expr "&&" expr
  359     | expr "||" expr
  360     | expr "^^" expr
  361     | expr ".." expr
  362     | "++" expr
  363     | "--" expr
  364     | expr "++"
  365     | expr "--"
  366     | '(' expr ')'
  367     | expr '[' expr ']'
  368     | expr '.' '[' expr ']'
  369     | expr "?[" expr ']'
  370     | expr '.' "?[" expr ']'
  371     | expr "?." "name"
  372     | expr '.' "?." "name"
  373     | func_addr_expr
  374     | name_in_namespace '(' ')'
  375     | name_in_namespace '(' expr_list ')'
  376     | basic_type_declaration '(' ')'
  377     | basic_type_declaration '(' expr_list ')'
  378     | '*' expr
  379     | "deref" '(' expr ')'
  380     | "addr" '(' expr ')'
  381     | "generator" '<' type_declaration '>' optional_capture_list '(' ')'
  382     | "generator" '<' type_declaration '>' optional_capture_list '(' expr ')'
  383     | expr "??" expr
  384     | expr '?' expr ':' expr

  385 $@20: %empty

  386 $@21: %empty

  387 expr: expr "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr "is" basic_type_declaration
  389     | expr "is" "name"
  390     | expr "as" "name"

  391 $@22: %empty

  392 $@23: %empty

  393 expr: expr "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr "as" basic_type_declaration
  395     | expr '?' "as" "name"

  396 $@24: %empty

  397 $@25: %empty

  398 expr: expr '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr '?' "as" basic_type_declaration
  400     | expr_type_info
  401     | expr_type_decl
  402     | expr_cast
  403     | expr_new
  404     | expr_method_call
  405     | expr_named_call
  406     | expr_block
  407     | expr "<|" expr
  408     | expr "|>" expr
  409     | name_in_namespace "name"
  410     | "unsafe" '(' expr ')'

  411 expr_mtag: "$$" '(' expr ')'
  412          | "$i" '(' expr ')'
  413          | "$v" '(' expr ')'
  414          | "$b" '(' expr ')'
  415          | "$a" '(' expr ')'
  416          | "$c" '(' expr ')' '(' ')'
  417          | "$c" '(' expr ')' '(' expr_list ')'
  418          | expr '.' "$f" '(' expr ')'
  419          | expr "?." "$f" '(' expr ')'
  420          | expr '.' '.' "$f" '(' expr ')'
  421          | expr '.' "?." "$f" '(' expr ')'
  422          | expr "as" "$f" '(' expr ')'
  423          | expr '?' "as" "$f" '(' expr ')'
  424          | expr "is" "$f" '(' expr ')'
  425          | '@' '@' "$c" '(' expr ')'

  426 optional_field_annotation: %empty
  427                          | "[[" annotation_argument_list ']' ']'

  428 optional_override: %empty
  429                  | "override"
  430                  | "sealed"

  431 optional_constant: %empty
  432                  | "const"

  433 optional_public_or_private_member_variable: %empty
  434                                           | "public"
  435                                           | "private"

  436 structure_variable_declaration: optional_field_annotation optional_override optional_public_or_private_member_variable variable_declaration

  437 struct_variable_declaration_list: %empty

  438 $@26: %empty

  439 struct_variable_declaration_list: struct_variable_declaration_list $@26 structure_variable_declaration ';'

  440 $@27: %empty

  441 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" $@27 function_declaration_header ';'

  442 $@28: %empty

  443 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant $@28 function_declaration_header expression_block
  444                                 | struct_variable_declaration_list '[' annotation_list ']' ';'

  445 function_argument_declaration: optional_field_annotation variable_declaration
  446                              | optional_field_annotation "var" variable_declaration
  447                              | "$a" '(' expr ')'

  448 function_argument_list: function_argument_declaration
  449                       | function_argument_list ';' function_argument_declaration

  450 tuple_type: type_declaration
  451           | "name" ':' type_declaration

  452 tuple_type_list: tuple_type
  453                | tuple_type_list ';' tuple_type

  454 variant_type: "name" ':' type_declaration

  455 variant_type_list: variant_type
  456                  | variant_type_list ';' variant_type

  457 copy_or_move: '='
  458             | "<-"

  459 variable_declaration: variable_name_with_pos_list
  460                     | variable_name_with_pos_list '&'
  461                     | variable_name_with_pos_list ':' type_declaration
  462                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  463                     | variable_name_with_pos_list copy_or_move expr
  464                     | variable_name_with_pos_list copy_or_move expr_pipe

  465 copy_or_move_or_clone: '='
  466                      | "<-"
  467                      | ":="

  468 optional_ref: %empty
  469             | '&'

  470 let_variable_name_with_pos_list: "name"
  471                                | "$i" '(' expr ')'
  472                                | "name" "aka" "name"
  473                                | let_variable_name_with_pos_list ',' "name"
  474                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  475 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration ';'
  476                         | let_variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone expr ';'
  477                         | let_variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone expr_pipe
  478                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';'
  479                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  480 global_variable_declaration_list: %empty

  481 $@29: %empty

  482 global_variable_declaration_list: global_variable_declaration_list $@29 optional_field_annotation let_variable_declaration

  483 optional_shared: %empty
  484                | "shared"

  485 optional_public_or_private_variable: %empty
  486                                    | "private"
  487                                    | "public"

  488 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  489 $@30: %empty

  490 global_let: kwd_let optional_shared optional_public_or_private_variable $@30 optional_field_annotation let_variable_declaration

  491 enum_list: %empty
  492          | enum_list "name" ';'
  493          | enum_list "name" '=' expr ';'

  494 $@31: %empty

  495 single_alias: "name" $@31 '=' type_declaration

  496 alias_list: single_alias ';'
  497           | alias_list single_alias ';'

  498 alias_declaration: "typedef" '{' alias_list '}'
  499                  | "typedef" single_alias

  500 optional_public_or_private_enum: %empty
  501                                | "private"
  502                                | "public"

  503 enum_name: "name"

  504 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' enum_list '}'
  505                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list '}'

  506 optional_structure_parent: %empty
  507                          | ':' name_in_namespace

  508 optional_sealed: %empty
  509                | "sealed"

  510 structure_name: optional_sealed "name" optional_structure_parent

  511 class_or_struct: "class"
  512                | "struct"

  513 optional_public_or_private_structure: %empty
  514                                     | "private"
  515                                     | "public"

  516 $@32: %empty

  517 $@33: %empty

  518 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name $@33 '{' struct_variable_declaration_list '}'

  519 variable_name_with_pos_list: "name"
  520                            | "$i" '(' expr ')'
  521                            | "name" "aka" "name"
  522                            | variable_name_with_pos_list ',' "name"
  523                            | variable_name_with_pos_list ',' "name" "aka" "name"

  524 basic_type_declaration: "bool"
  525                       | "string"
  526                       | "int"
  527                       | "int8"
  528                       | "int16"
  529                       | "int64"
  530                       | "int2"
  531                       | "int3"
  532                       | "int4"
  533                       | "uint"
  534                       | "uint8"
  535                       | "uint16"
  536                       | "uint64"
  537                       | "uint2"
  538                       | "uint3"
  539                       | "uint4"
  540                       | "float"
  541                       | "float2"
  542                       | "float3"
  543                       | "float4"
  544                       | "void"
  545                       | "range"
  546                       | "urange"
  547                       | "double"
  548                       | "bitfield"

  549 enum_basic_type_declaration: "int"
  550                            | "int8"
  551                            | "int16"
  552                            | "uint"
  553                            | "uint8"
  554                            | "uint16"

  555 structure_type_declaration: name_in_namespace

  556 auto_type_declaration: "auto"
  557                      | "auto" '(' "name" ')'
  558                      | "$t" '(' expr ')'

  559 bitfield_bits: "name"
  560              | bitfield_bits ';' "name"

  561 $@34: %empty

  562 $@35: %empty

  563 bitfield_type_declaration: "bitfield" '<' $@34 bitfield_bits '>' $@35

  564 table_type_pair: type_declaration
  565                | type_declaration ';' type_declaration

  566 type_declaration: basic_type_declaration
  567                 | auto_type_declaration
  568                 | bitfield_type_declaration
  569                 | structure_type_declaration
  570                 | type_declaration '[' expr ']'
  571                 | type_declaration '[' ']'
  572                 | type_declaration '-' '[' ']'
  573                 | type_declaration "explicit"
  574                 | type_declaration "const"
  575                 | type_declaration '-' "const"
  576                 | type_declaration '&'
  577                 | type_declaration '-' '&'
  578                 | type_declaration '#'
  579                 | type_declaration "implicit"
  580                 | type_declaration '-' '#'
  581                 | type_declaration '=' "const"
  582                 | type_declaration '?'

  583 $@36: %empty

  584 $@37: %empty

  585 type_declaration: "smart_ptr" '<' $@36 type_declaration '>' $@37
  586                 | type_declaration "??"

  587 $@38: %empty

  588 $@39: %empty

  589 type_declaration: "array" '<' $@38 type_declaration '>' $@39

  590 $@40: %empty

  591 $@41: %empty

  592 type_declaration: "table" '<' $@40 table_type_pair '>' $@41

  593 $@42: %empty

  594 $@43: %empty

  595 type_declaration: "iterator" '<' $@42 type_declaration '>' $@43
  596                 | "block"

  597 $@44: %empty

  598 $@45: %empty

  599 type_declaration: "block" '<' $@44 type_declaration '>' $@45

  600 $@46: %empty

  601 $@47: %empty

  602 type_declaration: "block" '<' $@46 optional_function_argument_list optional_function_type '>' $@47
  603                 | "function"

  604 $@48: %empty

  605 $@49: %empty

  606 type_declaration: "function" '<' $@48 type_declaration '>' $@49

  607 $@50: %empty

  608 $@51: %empty

  609 type_declaration: "function" '<' $@50 optional_function_argument_list optional_function_type '>' $@51
  610                 | "lambda"

  611 $@52: %empty

  612 $@53: %empty

  613 type_declaration: "lambda" '<' $@52 type_declaration '>' $@53

  614 $@54: %empty

  615 $@55: %empty

  616 type_declaration: "lambda" '<' $@54 optional_function_argument_list optional_function_type '>' $@55

  617 $@56: %empty

  618 $@57: %empty

  619 type_declaration: "tuple" '<' $@56 tuple_type_list '>' $@57

  620 $@58: %empty

  621 $@59: %empty

  622 type_declaration: "variant" '<' $@58 variant_type_list '>' $@59

  623 $@60: %empty

  624 $@61: %empty

  625 variant_alias_declaration: "variant" $@60 "name" $@61 '{' variant_type_list ';' '}'

  626 $@62: %empty

  627 bitfield_alias_declaration: "bitfield" $@62 "name" '{' bitfield_bits ';' '}'

  628 make_decl: make_struct_decl
  629          | make_dim_decl
  630          | make_table_decl
  631          | array_comprehension

  632 make_struct_fields: "name" copy_or_move expr
  633                   | "name" ":=" expr
  634                   | make_struct_fields ',' "name" copy_or_move expr
  635                   | make_struct_fields ',' "name" ":=" expr

  636 make_struct_dim: make_struct_fields
  637                | make_struct_dim ';' make_struct_fields

  638 optional_block: %empty
  639               | "where" expr_block

  640 make_struct_decl: "[[" type_declaration make_struct_dim optional_block ']' ']'
  641                 | "[[" type_declaration optional_block ']' ']'
  642                 | "[[" type_declaration '(' ')' optional_block ']' ']'
  643                 | "[[" type_declaration '(' ')' make_struct_dim optional_block ']' ']'
  644                 | "[{" type_declaration make_struct_dim optional_block '}' ']'
  645                 | "[{" type_declaration '(' ')' make_struct_dim optional_block '}' ']'

  646 make_tuple: expr
  647           | make_tuple ',' expr

  648 make_map_tuple: expr "=>" expr
  649               | expr

  650 make_any_tuple: make_tuple
  651               | make_map_tuple

  652 make_dim: make_any_tuple
  653         | make_dim ';' make_any_tuple

  654 make_dim_decl: "[[" type_declaration make_dim ']' ']'
  655              | "[{" type_declaration make_dim '}' ']'

  656 make_table: make_map_tuple
  657           | make_table ';' make_map_tuple

  658 make_table_decl: "{{" make_table '}' '}'

  659 array_comprehension_where: %empty
  660                          | ';' "where" expr

  661 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'
  662                    | "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 111 336
    '#' (35) 578 580
    '$' (36) 17 267
    '%' (37) 32 36 131 348
    '&' (38) 139 270 355 460 469 576 577
    '(' (40) 93 100 106 107 227 228 259 260 261 309 310 311 313 366 374 375 376 377 379 380 381 382 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 447 471 520 557 558 642 643 645
    ')' (41) 93 100 106 107 227 228 259 260 261 309 310 311 313 366 374 375 376 377 379 380 381 382 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 447 471 520 557 558 642 643 645
    '*' (42) 129 346 378
    '+' (43) 127 338 344
    ',' (44) 45 82 95 102 263 275 473 474 522 523 634 635 647
    '-' (45) 128 339 345 572 575 577 580
    '.' (46) 37 156 321 322 325 368 370 372 418 420 421
    '/' (47) 38 130 347
    ':' (58) 47 48 109 384 451 454 461 462 475 476 477 505 507
    ';' (59) 13 68 69 196 199 200 207 208 213 214 215 235 240 261 439 441 444 449 453 456 475 476 478 492 493 496 497 560 565 625 627 637 653 657 660 661 662
    '<' (60) 132 249 252 255 258 260 261 317 320 349 381 382 387 393 398 563 585 589 592 595 599 602 606 609 613 616 619 622
    '=' (61) 74 86 87 88 89 90 91 93 271 287 305 306 457 465 493 495 581
    '>' (62) 133 249 252 255 258 260 261 317 320 350 381 382 387 393 398 563 585 589 592 595 599 602 606 609 613 616 619 622
    '?' (63) 163 384 395 398 399 423 582
    '@' (64) 268 269 314 317 320 425
    '[' (91) 104 154 309 367 368 444 570 571 572
    ']' (93) 104 154 155 277 309 367 368 369 370 427 444 570 571 572 640 641 642 643 644 645 654 655 661 662
    '^' (94) 141 357
    '{' (123) 194 195 488 498 504 505 518 625 627
    '|' (124) 140 356
    '}' (125) 194 195 488 498 504 505 518 625 627 644 645 655 658 662
    '~' (126) 112 337
    error (256) 218 325
    "lexer error" (258)
    "struct" (259) 512
    "class" (260) 511
    "let" (261) 244
    "def" (262) 187 441 443
    "while" (263) 71
    "if" (264) 56 68
    "static_if" (265) 57
    "else" (266) 54 60
    "for" (267) 69 661 662
    "recover" (268) 243
    "true" (269) 79 90 332
    "false" (270) 80 91 333
    "new" (271) 226 227 228 229
    "typeinfo" (272) 259 260 261
    "type" (273) 84 258 387 393 398
    "in" (274) 69 85 661 662
    "is" (275) 161 387 388 389 424
    "as" (276) 40 162 163 390 393 394 395 398 399 422 423
    "elif" (277) 51
    "static_elif" (278) 52
    "array" (279) 589
    "return" (280) 232 233 234 236 237
    "null" (281) 326
    "break" (282) 230
    "try" (283) 243
    "options" (284) 33
    "table" (285) 592
    "expect" (286) 43
    "const" (287) 432 574 575 581
    "require" (288) 34 97
    "operator" (289) 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163
    "enum" (290) 504 505
    "finally" (291) 195
    "delete" (292) 159 225
    "deref" (293) 379
    "typedef" (294) 498 499
    "with" (295) 72
    "aka" (296) 472 474 521 523
    "assume" (297) 74
    "cast" (298) 249
    "override" (299) 429
    "abstract" (300) 441
    "upcast" (301) 252
    "iterator" (302) 595
    "var" (303) 245 446
    "addr" (304) 380
    "continue" (305) 231
    "where" (306) 639 660
    "pass" (307) 215
    "reinterpret" (308) 255
    "module" (309) 19
    "public" (310) 15 42 190 434 487 502 515
    "label" (311) 48 49
    "goto" (312) 49 50
    "implicit" (313) 579
    "explicit" (314) 573
    "shared" (315) 484
    "private" (316) 16 98 189 435 486 501 514
    "smart_ptr" (317) 585
    "unsafe" (318) 70 410
    "bool" (319) 164 524
    "void" (320) 544
    "string" (321) 165 525
    "auto" (322) 556 557
    "int" (323) 166 526 549
    "int2" (324) 167 530
    "int3" (325) 168 531
    "int4" (326) 169 532
    "uint" (327) 170 533 552
    "bitfield" (328) 548 563 627
    "uint2" (329) 171 537
    "uint3" (330) 172 538
    "uint4" (331) 173 539
    "float" (332) 174 540
    "float2" (333) 175 541
    "float3" (334) 176 542
    "float4" (335) 177 543
    "range" (336) 178 545
    "urange" (337) 179 546
    "block" (338) 596 599 602
    "int64" (339) 180 529
    "uint64" (340) 181 536
    "double" (341) 182 547
    "function" (342) 603 606 609
    "lambda" (343) 610 613 616
    "int8" (344) 183 527 550
    "uint8" (345) 184 534 553
    "int16" (346) 185 528 551
    "uint16" (347) 186 535 554
    "tuple" (348) 619
    "variant" (349) 622 625
    "generator" (350) 381 382
    "yield" (351) 238 239 241 242
    "sealed" (352) 430 509
    "+=" (353) 113 296
    "-=" (354) 114 297
    "/=" (355) 116 299
    "*=" (356) 115 298
    "%=" (357) 117 300
    "&=" (358) 118 290
    "|=" (359) 119 291
    "^=" (360) 120 292
    "<<" (361) 146 340
    ">>" (362) 147 341
    "++" (363) 142 144 362 364
    "--" (364) 143 145 363 365
    "<=" (365) 137 353
    "<<=" (366) 148 301
    ">>=" (367) 149 302
    ">=" (368) 138 354
    "==" (369) 135 351
    "!=" (370) 136 352
    "->" (371) 310 311
    "<-" (372) 234 237 239 242 266 272 288 307 308 458 466
    "??" (373) 160 383 586
    "?." (374) 157 371 372 419 421
    "?[" (375) 155 369 370
    "<|" (376) 407
    " <|" (377) 219
    "@ <|" (378) 220 305 307
    "@@ <|" (379) 221 306 308
    "|>" (380) 408
    ":=" (381) 158 273 289 467 633 635
    "<<<" (382) 150 342
    ">>>" (383) 151 343
    "<<<=" (384) 152 303
    ">>>=" (385) 153 304
    "=>" (386) 265 266 648
    "::" (387) 223 224
    "&&" (388) 124 358
    "||" (389) 125 359
    "^^" (390) 126 360
    "&&=" (391) 121 293
    "||=" (392) 122 294
    "^^=" (393) 123 295
    ".." (394) 134 361
    "$$" (395) 411
    "$i" (396) 313 412 471 520
    "$v" (397) 413
    "$b" (398) 414
    "$a" (399) 415 447
    "$t" (400) 558
    "$c" (401) 416 417 425
    "$f" (402) 418 419 420 421 422 423 424
    "[[" (403) 277 427 640 641 642 643 654 661
    "[{" (404) 644 645 655 662
    "{{" (405) 658
    "integer constant" <i> (406) 46 47 48 49 77 88 280
    "long integer constant" <i64> (407) 282
    "unsigned integer constant" <ui> (408) 281
    "unsigned long integer constant" <ui64> (409) 283
    "floating point constant" <fd> (410) 78 89 284
    "double constant" <d> (411) 285
    "name" <s> (412) 18 35 37 38 40 74 76 83 87 110 222 223 224 260 261 270 271 272 273 310 311 321 322 371 372 389 390 395 409 451 454 470 472 473 474 492 493 495 503 510 519 521 522 523 557 559 560 625 627 632 633 634 635
    "start of the string" (413) 24 28
    STRING_CHARACTER <ch> (414) 20 22 29 30
    STRING_CHARACTER_ESC (415) 21 23
    "end of the string" (416) 24 28
    "{" (417) 27
    "}" (418) 27
    "end of failed eader macro" (419)
    UNARY_MINUS (420)
    UNARY_PLUS (421)
    PRE_INC (422)
    PRE_DEC (423)
    POST_INC (424)
    POST_DEC (425)
    DEREF (426)


Nonterminals, with rules where they appear

    $accept (199)
        on left: 0
    program (200)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13
    optional_public_or_private_module <b> (201)
        on left: 14 15 16
        on right: 19
    module_name <s> (202)
        on left: 17 18
        on right: 19
    module_declaration (203)
        on left: 19
        on right: 2
    character_sequence <s> (204)
        on left: 20 21 22 23
        on right: 22 23 24 26
    string_constant <s> (205)
        on left: 24
        on right: 75 86
    string_builder_body <pExpression> (206)
        on left: 25 26 27
        on right: 26 27 28
    string_builder <pExpression> (207)
        on left: 28
        on right: 330
    reader_character_sequence (208)
        on left: 29 30
        on right: 30 32
    expr_reader <pExpression> (209)
        on left: 32
        on right: 329
    $@1 (210)
        on left: 31
        on right: 32
    options_declaration (211)
        on left: 33
        on right: 9
    require_declaration (212)
        on left: 34
        on right: 8
    require_module_name <s> (213)
        on left: 35 36 37 38
        on right: 36 37 38 39 40
    require_module (214)
        on left: 39 40
        on right: 34
    is_public_module <b> (215)
        on left: 41 42
        on right: 39 40
    expect_declaration (216)
        on left: 43
        on right: 7
    expect_list (217)
        on left: 44 45
        on right: 43 45
    expect_error (218)
        on left: 46 47
        on right: 44 45
    expression_label <pExpression> (219)
        on left: 48
        on right: 213
    expression_goto <pExpression> (220)
        on left: 49 50
        on right: 214
    elif_or_static_elif <b> (221)
        on left: 51 52
        on right: 55
    expression_else <pExpression> (222)
        on left: 53 54 55
        on right: 55 66
    if_or_static_if <b> (223)
        on left: 56 57
        on right: 66
    expression_else_one_liner <pExpression> (224)
        on left: 58 60
        on right: 68
    $@2 (225)
        on left: 59
        on right: 60
    expression_if_one_liner <pExpression> (226)
        on left: 61 62 63 64 65
        on right: 60 68
    expression_if_then_else <pExpression> (227)
        on left: 66 68
        on right: 211
    $@3 (228)
        on left: 67
        on right: 68
    expression_for_loop <pExpression> (229)
        on left: 69
        on right: 206
    expression_unsafe <pExpression> (230)
        on left: 70
        on right: 203
    expression_while_loop <pExpression> (231)
        on left: 71
        on right: 202
    expression_with <pExpression> (232)
        on left: 72
        on right: 204
    expression_with_alias <pExpression> (233)
        on left: 74
        on right: 205
    $@4 (234)
        on left: 73
        on right: 74
    annotation_argument_value <aa> (235)
        on left: 75 76 77 78 79 80
        on right: 81 82
    annotation_argument_value_list <aaList> (236)
        on left: 81 82
        on right: 82 93
    annotation_argument_name <s> (237)
        on left: 83 84 85
        on right: 86 87 88 89 90 91 92 93
    annotation_argument <aa> (238)
        on left: 86 87 88 89 90 91 92 93
        on right: 94 95
    annotation_argument_list <aaList> (239)
        on left: 94 95
        on right: 33 95 100 427
    annotation_declaration_name <s> (240)
        on left: 96 97 98
        on right: 99 100
    annotation_declaration <fa> (241)
        on left: 99 100
        on right: 101 102
    annotation_list <faList> (242)
        on left: 101 102
        on right: 102 104 444
    optional_annotation_list <faList> (243)
        on left: 103 104
        on right: 187 279 441 443 504 505 518
    optional_function_argument_list <pVarDeclList> (244)
        on left: 105 106 107
        on right: 191 279 320 602 609 616
    optional_function_type <pTypeDecl> (245)
        on left: 108 109
        on right: 191 279 320 602 609 616
    function_name <s> (246)
        on left: 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186
        on right: 191
    global_function_declaration (247)
        on left: 187
        on right: 6
    optional_public_or_private_function <b> (248)
        on left: 188 189 190
        on right: 193
    function_declaration_header <pFuncDecl> (249)
        on left: 191
        on right: 193 441 443
    function_declaration <pFuncDecl> (250)
        on left: 193
        on right: 187
    $@5 (251)
        on left: 192
        on right: 193
    expression_block <pExpression> (252)
        on left: 194 195
        on right: 54 55 66 69 70 71 72 193 243 264 278 443
    expression_any <pExpression> (253)
        on left: 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215
        on right: 217
    expressions <pExpression> (254)
        on left: 216 217 218
        on right: 194 195 217 218
    expr_pipe <pExpression> (255)
        on left: 219 220 221
        on right: 197 236 237 241 242 464 477 479
    name_in_namespace <s> (256)
        on left: 222 223 224
        on right: 32 96 259 260 261 309 312 327 374 375 409 507 555
    expression_delete <pExpression> (257)
        on left: 225
        on right: 200
    expr_new <pExpression> (258)
        on left: 226 227 228 229
        on right: 403
    expression_break <pExpression> (259)
        on left: 230
        on right: 64 207
    expression_continue <pExpression> (260)
        on left: 231
        on right: 65 208
    expression_return_no_pipe <pExpression> (261)
        on left: 232 233 234
        on right: 62 235
    expression_return <pExpression> (262)
        on left: 235 236 237
        on right: 209
    expression_yield_no_pipe <pExpression> (263)
        on left: 238 239
        on right: 63 240
    expression_yield <pExpression> (264)
        on left: 240 241 242
        on right: 210
    expression_try_catch <pExpression> (265)
        on left: 243
        on right: 212
    kwd_let <b> (266)
        on left: 244 245
        on right: 246 488 490
    expression_let <pExpression> (267)
        on left: 246
        on right: 201
    expr_cast <pExpression> (268)
        on left: 249 252 255
        on right: 402
    $@6 (269)
        on left: 247
        on right: 249
    $@7 (270)
        on left: 248
        on right: 249
    $@8 (271)
        on left: 250
        on right: 252
    $@9 (272)
        on left: 251
        on right: 252
    $@10 (273)
        on left: 253
        on right: 255
    $@11 (274)
        on left: 254
        on right: 255
    expr_type_decl <pExpression> (275)
        on left: 258
        on right: 401
    $@12 (276)
        on left: 256
        on right: 258
    $@13 (277)
        on left: 257
        on right: 258
    expr_type_info <pExpression> (278)
        on left: 259 260 261
        on right: 400
    expr_list <pExpression> (279)
        on left: 262 263
        on right: 69 228 263 311 375 377 417 661 662
    block_or_simple_block <pExpression> (280)
        on left: 264 265 266
        on right: 279
    block_or_lambda <i> (281)
        on left: 267 268 269
        on right: 279
    capture_entry <pCapt> (282)
        on left: 270 271 272 273
        on right: 274 275
    capture_list <pCaptList> (283)
        on left: 274 275
        on right: 275 277
    optional_capture_list <pCaptList> (284)
        on left: 276 277
        on right: 279 381 382
    expr_block <pExpression> (285)
        on left: 278 279
        on right: 219 220 221 406 639
    expr_numeric_const <pExpression> (286)
        on left: 280 281 282 283 284 285
        on right: 328
    expr_assign <pExpression> (287)
        on left: 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304
        on right: 199 219
    expr_assign_pipe <pExpression> (288)
        on left: 305 306 307 308
        on right: 198
    expr_named_call <pExpression> (289)
        on left: 309
        on right: 405
    expr_method_call <pExpression> (290)
        on left: 310 311
        on right: 404
    func_addr_name <pExpression> (291)
        on left: 312 313
        on right: 314 317 320
    func_addr_expr <pExpression> (292)
        on left: 314 317 320
        on right: 373
    $@14 (293)
        on left: 315
        on right: 317
    $@15 (294)
        on left: 316
        on right: 317
    $@16 (295)
        on left: 318
        on right: 320
    $@17 (296)
        on left: 319
        on right: 320
    expr_field <pExpression> (297)
        on left: 321 322 325
        on right: 334
    $@18 (298)
        on left: 323
        on right: 325
    $@19 (299)
        on left: 324
        on right: 325
    expr <pExpression> (300)
        on left: 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 387 388 389 390 393 394 395 398 399 400 401 402 403 404 405 406 407 408 409 410
        on right: 27 50 55 61 66 68 71 72 74 225 233 234 238 239 249 252 255 259 260 261 262 263 265 266 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 310 311 313 321 322 325 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 378 379 380 382 383 384 387 388 389 390 393 394 395 398 399 407 408 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 447 462 463 471 476 478 493 520 558 570 632 633 634 635 646 647 648 649 660 661 662
    $@20 (301)
        on left: 385
        on right: 387
    $@21 (302)
        on left: 386
        on right: 387
    $@22 (303)
        on left: 391
        on right: 393
    $@23 (304)
        on left: 392
        on right: 393
    $@24 (305)
        on left: 396
        on right: 398
    $@25 (306)
        on left: 397
        on right: 398
    expr_mtag <pExpression> (307)
        on left: 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425
        on right: 335
    optional_field_annotation <aaList> (308)
        on left: 426 427
        on right: 436 445 446 482 490
    optional_override <i> (309)
        on left: 428 429 430
        on right: 436 443
    optional_constant <b> (310)
        on left: 431 432
        on right: 443
    optional_public_or_private_member_variable <b> (311)
        on left: 433 434 435
        on right: 436 441 443
    structure_variable_declaration <pVarDecl> (312)
        on left: 436
        on right: 439
    struct_variable_declaration_list <pVarDeclList> (313)
        on left: 437 439 441 443 444
        on right: 439 441 443 444 518
    $@26 (314)
        on left: 438
        on right: 439
    $@27 (315)
        on left: 440
        on right: 441
    $@28 (316)
        on left: 442
        on right: 443
    function_argument_declaration <pVarDecl> (317)
        on left: 445 446 447
        on right: 448 449
    function_argument_list <pVarDeclList> (318)
        on left: 448 449
        on right: 107 449
    tuple_type <pVarDecl> (319)
        on left: 450 451
        on right: 452 453
    tuple_type_list <pVarDeclList> (320)
        on left: 452 453
        on right: 453 619
    variant_type <pVarDecl> (321)
        on left: 454
        on right: 455 456
    variant_type_list <pVarDeclList> (322)
        on left: 455 456
        on right: 456 622 625
    copy_or_move <b> (323)
        on left: 457 458
        on right: 462 463 464 632 634
    variable_declaration <pVarDecl> (324)
        on left: 459 460 461 462 463 464
        on right: 436 445 446
    copy_or_move_or_clone <i> (325)
        on left: 465 466 467
        on right: 476 477 478 479
    optional_ref <b> (326)
        on left: 468 469
        on right: 478 479
    let_variable_name_with_pos_list <pNameWithPosList> (327)
        on left: 470 471 472 473 474
        on right: 473 474 475 476 477 478 479
    let_variable_declaration <pVarDecl> (328)
        on left: 475 476 477 478 479
        on right: 246 482 490
    global_variable_declaration_list <pVarDeclList> (329)
        on left: 480 482
        on right: 482 488
    $@29 (330)
        on left: 481
        on right: 482
    optional_shared <b> (331)
        on left: 483 484
        on right: 19 488 490
    optional_public_or_private_variable <b> (332)
        on left: 485 486 487
        on right: 488 490
    global_let (333)
        on left: 488 490
        on right: 5
    $@30 (334)
        on left: 489
        on right: 490
    enum_list <pEnum> (335)
        on left: 491 492 493
        on right: 492 493 504 505
    single_alias (336)
        on left: 495
        on right: 496 497 499
    $@31 (337)
        on left: 494
        on right: 495
    alias_list (338)
        on left: 496 497
        on right: 497 498
    alias_declaration (339)
        on left: 498 499
        on right: 10
    optional_public_or_private_enum <b> (340)
        on left: 500 501 502
        on right: 504 505
    enum_name <pEnum> (341)
        on left: 503
        on right: 504 505
    enum_declaration (342)
        on left: 504 505
        on right: 4
    optional_structure_parent <s> (343)
        on left: 506 507
        on right: 510
    optional_sealed <b> (344)
        on left: 508 509
        on right: 510
    structure_name <pStructure> (345)
        on left: 510
        on right: 518
    class_or_struct <b> (346)
        on left: 511 512
        on right: 518
    optional_public_or_private_structure <b> (347)
        on left: 513 514 515
        on right: 518
    structure_declaration (348)
        on left: 518
        on right: 3
    $@32 (349)
        on left: 516
        on right: 518
    $@33 (350)
        on left: 517
        on right: 518
    variable_name_with_pos_list <pNameWithPosList> (351)
        on left: 519 520 521 522 523
        on right: 69 459 460 461 462 463 464 522 523 661 662
    basic_type_declaration <type> (352)
        on left: 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548
        on right: 376 377 388 394 399 566
    enum_basic_type_declaration <type> (353)
        on left: 549 550 551 552 553 554
        on right: 505
    structure_type_declaration <pTypeDecl> (354)
        on left: 555
        on right: 569
    auto_type_declaration <pTypeDecl> (355)
        on left: 556 557 558
        on right: 567
    bitfield_bits <pNameList> (356)
        on left: 559 560
        on right: 560 563 627
    bitfield_type_declaration <pTypeDecl> (357)
        on left: 563
        on right: 568
    $@34 (358)
        on left: 561
        on right: 563
    $@35 (359)
        on left: 562
        on right: 563
    table_type_pair <aTypePair> (360)
        on left: 564 565
        on right: 592
    type_declaration <pTypeDecl> (361)
        on left: 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 585 586 589 592 595 596 599 602 603 606 609 610 613 616 619 622
        on right: 109 226 227 228 249 252 255 258 317 381 382 387 393 398 450 451 454 461 462 475 476 477 495 564 565 570 571 572 573 574 575 576 577 578 579 580 581 582 585 586 589 595 599 606 613 640 641 642 643 644 645 654 655
    $@36 (362)
        on left: 583
        on right: 585
    $@37 (363)
        on left: 584
        on right: 585
    $@38 (364)
        on left: 587
        on right: 589
    $@39 (365)
        on left: 588
        on right: 589
    $@40 (366)
        on left: 590
        on right: 592
    $@41 (367)
        on left: 591
        on right: 592
    $@42 (368)
        on left: 593
        on right: 595
    $@43 (369)
        on left: 594
        on right: 595
    $@44 (370)
        on left: 597
        on right: 599
    $@45 (371)
        on left: 598
        on right: 599
    $@46 (372)
        on left: 600
        on right: 602
    $@47 (373)
        on left: 601
        on right: 602
    $@48 (374)
        on left: 604
        on right: 606
    $@49 (375)
        on left: 605
        on right: 606
    $@50 (376)
        on left: 607
        on right: 609
    $@51 (377)
        on left: 608
        on right: 609
    $@52 (378)
        on left: 611
        on right: 613
    $@53 (379)
        on left: 612
        on right: 613
    $@54 (380)
        on left: 614
        on right: 616
    $@55 (381)
        on left: 615
        on right: 616
    $@56 (382)
        on left: 617
        on right: 619
    $@57 (383)
        on left: 618
        on right: 619
    $@58 (384)
        on left: 620
        on right: 622
    $@59 (385)
        on left: 621
        on right: 622
    variant_alias_declaration (386)
        on left: 625
        on right: 11
    $@60 (387)
        on left: 623
        on right: 625
    $@61 (388)
        on left: 624
        on right: 625
    bitfield_alias_declaration (389)
        on left: 627
        on right: 12
    $@62 (390)
        on left: 626
        on right: 627
    make_decl <pExpression> (391)
        on left: 628 629 630 631
        on right: 229 331
    make_struct_fields <pMakeStruct> (392)
        on left: 632 633 634 635
        on right: 309 634 635 636 637
    make_struct_dim <pExpression> (393)
        on left: 636 637
        on right: 637 640 643 644 645
    optional_block <pExpression> (394)
        on left: 638 639
        on right: 640 641 642 643 644 645
    make_struct_decl <pExpression> (395)
        on left: 640 641 642 643 644 645
        on right: 628
    make_tuple <pExpression> (396)
        on left: 646 647
        on right: 647 650
    make_map_tuple <pExpression> (397)
        on left: 648 649
        on right: 651 656 657
    make_any_tuple <pExpression> (398)
        on left: 650 651
        on right: 652 653
    make_dim <pExpression> (399)
        on left: 652 653
        on right: 653 654 655
    make_dim_decl <pExpression> (400)
        on left: 654 655
        on right: 629
    make_table <pExpression> (401)
        on left: 656 657
        on right: 657 658
    make_table_decl <pExpression> (402)
        on left: 658
        on right: 630
    array_comprehension_where <pExpression> (403)
        on left: 659 660
        on right: 661 662
    array_comprehension <pExpression> (404)
        on left: 661 662
        on right: 631


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . bitfield_alias_declaration
   13        | program . ';'

    $end        shift, and go to state 2
    "let"       shift, and go to state 3
    "options"   shift, and go to state 4
    "expect"    shift, and go to state 5
    "require"   shift, and go to state 6
    "typedef"   shift, and go to state 7
    "var"       shift, and go to state 8
    "module"    shift, and go to state 9
    "bitfield"  shift, and go to state 10
    "variant"   shift, and go to state 11
    '['         shift, and go to state 12
    ';'         shift, and go to state 13

    $default  reduce using rule 103 (optional_annotation_list)

    module_declaration           go to state 14
    options_declaration          go to state 15
    require_declaration          go to state 16
    expect_declaration           go to state 17
    optional_annotation_list     go to state 18
    global_function_declaration  go to state 19
    kwd_let                      go to state 20
    global_let                   go to state 21
    alias_declaration            go to state 22
    enum_declaration             go to state 23
    structure_declaration        go to state 24
    variant_alias_declaration    go to state 25
    bitfield_alias_declaration   go to state 26


State 2

    0 $accept: program $end .

    $default  accept


State 3

  244 kwd_let: "let" .

    $default  reduce using rule 244 (kwd_let)


State 4

   33 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 27
    "in"    shift, and go to state 28
    "name"  shift, and go to state 29

    annotation_argument_name  go to state 30
    annotation_argument       go to state 31
    annotation_argument_list  go to state 32


State 5

   43 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 33

    expect_list   go to state 34
    expect_error  go to state 35


State 6

   34 require_declaration: "require" . require_module

    "name"  shift, and go to state 36
    '%'     shift, and go to state 37

    require_module_name  go to state 38
    require_module       go to state 39


State 7

  498 alias_declaration: "typedef" . '{' alias_list '}'
  499                  | "typedef" . single_alias

    "name"  shift, and go to state 40
    '{'     shift, and go to state 41

    single_alias  go to state 42


State 8

  245 kwd_let: "var" .

    $default  reduce using rule 245 (kwd_let)


State 9

   19 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 43
    '$'     shift, and go to state 44

    module_name  go to state 45


State 10

  627 bitfield_alias_declaration: "bitfield" . $@62 "name" '{' bitfield_bits ';' '}'

    $default  reduce using rule 626 ($@62)

    $@62  go to state 46


State 11

  625 variant_alias_declaration: "variant" . $@60 "name" $@61 '{' variant_type_list ';' '}'

    $default  reduce using rule 623 ($@60)

    $@60  go to state 47


State 12

  104 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 48
    "private"  shift, and go to state 49
    "::"       shift, and go to state 50
    "name"     shift, and go to state 51

    annotation_declaration_name  go to state 52
    annotation_declaration       go to state 53
    annotation_list              go to state 54
    name_in_namespace            go to state 55


State 13

   13 program: program ';' .

    $default  reduce using rule 13 (program)


State 14

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 15

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 16

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 17

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 18

  187 global_function_declaration: optional_annotation_list . "def" function_declaration
  504 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name '{' enum_list '}'
  505                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list '}'
  518 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@32 structure_name $@33 '{' struct_variable_declaration_list '}'

    "struct"  shift, and go to state 56
    "class"   shift, and go to state 57
    "def"     shift, and go to state 58
    "enum"    shift, and go to state 59

    class_or_struct  go to state 60


State 19

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 20

  488 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  490           | kwd_let . optional_shared optional_public_or_private_variable $@30 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 61

    $default  reduce using rule 483 (optional_shared)

    optional_shared  go to state 62


State 21

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 22

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 23

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 24

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 25

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 26

   12 program: program bitfield_alias_declaration .

    $default  reduce using rule 12 (program)


State 27

   84 annotation_argument_name: "type" .

    $default  reduce using rule 84 (annotation_argument_name)


State 28

   85 annotation_argument_name: "in" .

    $default  reduce using rule 85 (annotation_argument_name)


State 29

   83 annotation_argument_name: "name" .

    $default  reduce using rule 83 (annotation_argument_name)


State 30

   86 annotation_argument: annotation_argument_name . '=' string_constant
   87                    | annotation_argument_name . '=' "name"
   88                    | annotation_argument_name . '=' "integer constant"
   89                    | annotation_argument_name . '=' "floating point constant"
   90                    | annotation_argument_name . '=' "true"
   91                    | annotation_argument_name . '=' "false"
   92                    | annotation_argument_name .
   93                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 63

    $default  reduce using rule 92 (annotation_argument)


State 31

   94 annotation_argument_list: annotation_argument .

    $default  reduce using rule 94 (annotation_argument_list)


State 32

   33 options_declaration: "options" annotation_argument_list .
   95 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 64

    $default  reduce using rule 33 (options_declaration)


State 33

   46 expect_error: "integer constant" .
   47             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 65

    $default  reduce using rule 46 (expect_error)


State 34

   43 expect_declaration: "expect" expect_list .
   45 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 66

    $default  reduce using rule 43 (expect_declaration)


State 35

   44 expect_list: expect_error .

    $default  reduce using rule 44 (expect_list)


State 36

   35 require_module_name: "name" .

    $default  reduce using rule 35 (require_module_name)


State 37

   36 require_module_name: '%' . require_module_name

    "name"  shift, and go to state 36
    '%'     shift, and go to state 37

    require_module_name  go to state 67


State 38

   37 require_module_name: require_module_name . '.' "name"
   38                    | require_module_name . '/' "name"
   39 require_module: require_module_name . is_public_module
   40               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 68
    "public"  shift, and go to state 69
    '/'       shift, and go to state 70
    '.'       shift, and go to state 71

    $default  reduce using rule 41 (is_public_module)

    is_public_module  go to state 72


State 39

   34 require_declaration: "require" require_module .

    $default  reduce using rule 34 (require_declaration)


State 40

  495 single_alias: "name" . $@31 '=' type_declaration

    $default  reduce using rule 494 ($@31)

    $@31  go to state 73


State 41

  498 alias_declaration: "typedef" '{' . alias_list '}'

    "name"  shift, and go to state 40

    single_alias  go to state 74
    alias_list    go to state 75


State 42

  499 alias_declaration: "typedef" single_alias .

    $default  reduce using rule 499 (alias_declaration)


State 43

   18 module_name: "name" .

    $default  reduce using rule 18 (module_name)


State 44

   17 module_name: '$' .

    $default  reduce using rule 17 (module_name)


State 45

   19 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 61

    $default  reduce using rule 483 (optional_shared)

    optional_shared  go to state 76


State 46

  627 bitfield_alias_declaration: "bitfield" $@62 . "name" '{' bitfield_bits ';' '}'

    "name"  shift, and go to state 77


State 47

  625 variant_alias_declaration: "variant" $@60 . "name" $@61 '{' variant_type_list ';' '}'

    "name"  shift, and go to state 78


State 48

   97 annotation_declaration_name: "require" .

    $default  reduce using rule 97 (annotation_declaration_name)


State 49

   98 annotation_declaration_name: "private" .

    $default  reduce using rule 98 (annotation_declaration_name)


State 50

  224 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 79


State 51

  222 name_in_namespace: "name" .
  223                  | "name" . "::" "name"

    "::"  shift, and go to state 80

    "::"      [reduce using rule 222 (name_in_namespace)]
    $default  reduce using rule 222 (name_in_namespace)


State 52

   99 annotation_declaration: annotation_declaration_name .
  100                       | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 81

    $default  reduce using rule 99 (annotation_declaration)


State 53

  101 annotation_list: annotation_declaration .

    $default  reduce using rule 101 (annotation_list)


State 54

  102 annotation_list: annotation_list . ',' annotation_declaration
  104 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 82
    ']'  shift, and go to state 83


State 55

   96 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 96 (annotation_declaration_name)


State 56

  512 class_or_struct: "struct" .

    $default  reduce using rule 512 (class_or_struct)


State 57

  511 class_or_struct: "class" .

    $default  reduce using rule 511 (class_or_struct)


State 58

  187 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 84
    "private"  shift, and go to state 85

    $default  reduce using rule 188 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 86
    function_declaration                 go to state 87


State 59

  504 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name '{' enum_list '}'
  505                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list '}'

    "public"   shift, and go to state 88
    "private"  shift, and go to state 89

    $default  reduce using rule 500 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 90


State 60

  518 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@32 structure_name $@33 '{' struct_variable_declaration_list '}'

    "public"   shift, and go to state 91
    "private"  shift, and go to state 92

    $default  reduce using rule 513 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 93


State 61

  484 optional_shared: "shared" .

    $default  reduce using rule 484 (optional_shared)


State 62

  488 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  490           | kwd_let optional_shared . optional_public_or_private_variable $@30 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 94
    "private"  shift, and go to state 95

    $default  reduce using rule 485 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 96


State 63

   86 annotation_argument: annotation_argument_name '=' . string_constant
   87                    | annotation_argument_name '=' . "name"
   88                    | annotation_argument_name '=' . "integer constant"
   89                    | annotation_argument_name '=' . "floating point constant"
   90                    | annotation_argument_name '=' . "true"
   91                    | annotation_argument_name '=' . "false"
   93                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 97
    "false"                    shift, and go to state 98
    "integer constant"         shift, and go to state 99
    "floating point constant"  shift, and go to state 100
    "name"                     shift, and go to state 101
    "start of the string"      shift, and go to state 102
    '('                        shift, and go to state 103

    string_constant  go to state 104


State 64

   95 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 27
    "in"    shift, and go to state 28
    "name"  shift, and go to state 29

    annotation_argument_name  go to state 30
    annotation_argument       go to state 105


State 65

   47 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 106


State 66

   45 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 33

    expect_error  go to state 107


State 67

   36 require_module_name: '%' require_module_name .
   37                    | require_module_name . '.' "name"
   38                    | require_module_name . '/' "name"

    '.'  shift, and go to state 71

    $default  reduce using rule 36 (require_module_name)


State 68

   40 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 108


State 69

   42 is_public_module: "public" .

    $default  reduce using rule 42 (is_public_module)


State 70

   38 require_module_name: require_module_name '/' . "name"

    "name"  shift, and go to state 109


State 71

   37 require_module_name: require_module_name '.' . "name"

    "name"  shift, and go to state 110


State 72

   39 require_module: require_module_name is_public_module .

    $default  reduce using rule 39 (require_module)


State 73

  495 single_alias: "name" $@31 . '=' type_declaration

    '='  shift, and go to state 111


State 74

  496 alias_list: single_alias . ';'

    ';'  shift, and go to state 112


State 75

  497 alias_list: alias_list . single_alias ';'
  498 alias_declaration: "typedef" '{' alias_list . '}'

    "name"  shift, and go to state 40
    '}'     shift, and go to state 113

    single_alias  go to state 114


State 76

   19 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 115
    "private"  shift, and go to state 116

    $default  reduce using rule 14 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 117


State 77

  627 bitfield_alias_declaration: "bitfield" $@62 "name" . '{' bitfield_bits ';' '}'

    '{'  shift, and go to state 118


State 78

  625 variant_alias_declaration: "variant" $@60 "name" . $@61 '{' variant_type_list ';' '}'

    $default  reduce using rule 624 ($@61)

    $@61  go to state 119


State 79

  224 name_in_namespace: "::" "name" .

    $default  reduce using rule 224 (name_in_namespace)


State 80

  223 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 120


State 81

  100 annotation_declaration: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 27
    "in"    shift, and go to state 28
    "name"  shift, and go to state 29

    annotation_argument_name  go to state 30
    annotation_argument       go to state 31
    annotation_argument_list  go to state 121


State 82

  102 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 48
    "private"  shift, and go to state 49
    "::"       shift, and go to state 50
    "name"     shift, and go to state 51

    annotation_declaration_name  go to state 52
    annotation_declaration       go to state 122
    name_in_namespace            go to state 55


State 83

  104 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 104 (optional_annotation_list)


State 84

  190 optional_public_or_private_function: "public" .

    $default  reduce using rule 190 (optional_public_or_private_function)


State 85

  189 optional_public_or_private_function: "private" .

    $default  reduce using rule 189 (optional_public_or_private_function)


State 86

  193 function_declaration: optional_public_or_private_function . $@5 function_declaration_header expression_block

    $default  reduce using rule 192 ($@5)

    $@5  go to state 123


State 87

  187 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 187 (global_function_declaration)


State 88

  502 optional_public_or_private_enum: "public" .

    $default  reduce using rule 502 (optional_public_or_private_enum)


State 89

  501 optional_public_or_private_enum: "private" .

    $default  reduce using rule 501 (optional_public_or_private_enum)


State 90

  504 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name '{' enum_list '}'
  505                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration '{' enum_list '}'

    "name"  shift, and go to state 124

    enum_name  go to state 125


State 91

  515 optional_public_or_private_structure: "public" .

    $default  reduce using rule 515 (optional_public_or_private_structure)


State 92

  514 optional_public_or_private_structure: "private" .

    $default  reduce using rule 514 (optional_public_or_private_structure)


State 93

  518 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@32 structure_name $@33 '{' struct_variable_declaration_list '}'

    $default  reduce using rule 516 ($@32)

    $@32  go to state 126


State 94

  487 optional_public_or_private_variable: "public" .

    $default  reduce using rule 487 (optional_public_or_private_variable)


State 95

  486 optional_public_or_private_variable: "private" .

    $default  reduce using rule 486 (optional_public_or_private_variable)


State 96

  488 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  490           | kwd_let optional_shared optional_public_or_private_variable . $@30 optional_field_annotation let_variable_declaration

    '{'  shift, and go to state 127

    $default  reduce using rule 489 ($@30)

    $@30  go to state 128


State 97

   90 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 90 (annotation_argument)


State 98

   91 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 91 (annotation_argument)


State 99

   88 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 88 (annotation_argument)


State 100

   89 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 89 (annotation_argument)


State 101

   87 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 87 (annotation_argument)


State 102

   24 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 129
    STRING_CHARACTER_ESC  shift, and go to state 130

    character_sequence  go to state 131


State 103

   93 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 132
    "false"                    shift, and go to state 133
    "integer constant"         shift, and go to state 134
    "floating point constant"  shift, and go to state 135
    "name"                     shift, and go to state 136
    "start of the string"      shift, and go to state 102

    string_constant                 go to state 137
    annotation_argument_value       go to state 138
    annotation_argument_value_list  go to state 139


State 104

   86 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 86 (annotation_argument)


State 105

   95 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 95 (annotation_argument_list)


State 106

   47 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 47 (expect_error)


State 107

   45 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 45 (expect_list)


State 108

   40 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 69

    $default  reduce using rule 41 (is_public_module)

    is_public_module  go to state 140


State 109

   38 require_module_name: require_module_name '/' "name" .

    $default  reduce using rule 38 (require_module_name)


State 110

   37 require_module_name: require_module_name '.' "name" .

    $default  reduce using rule 37 (require_module_name)


State 111

  495 single_alias: "name" $@31 '=' . type_declaration

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 182


State 112

  496 alias_list: single_alias ';' .

    $default  reduce using rule 496 (alias_list)


State 113

  498 alias_declaration: "typedef" '{' alias_list '}' .

    $default  reduce using rule 498 (alias_declaration)


State 114

  497 alias_list: alias_list single_alias . ';'

    ';'  shift, and go to state 183


State 115

   15 optional_public_or_private_module: "public" .

    $default  reduce using rule 15 (optional_public_or_private_module)


State 116

   16 optional_public_or_private_module: "private" .

    $default  reduce using rule 16 (optional_public_or_private_module)


State 117

   19 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 19 (module_declaration)


State 118

  627 bitfield_alias_declaration: "bitfield" $@62 "name" '{' . bitfield_bits ';' '}'

    "name"  shift, and go to state 184

    bitfield_bits  go to state 185


State 119

  625 variant_alias_declaration: "variant" $@60 "name" $@61 . '{' variant_type_list ';' '}'

    '{'  shift, and go to state 186


State 120

  223 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 223 (name_in_namespace)


State 121

   95 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  100 annotation_declaration: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 64
    ')'  shift, and go to state 187


State 122

  102 annotation_list: annotation_list ',' annotation_declaration .

    $default  reduce using rule 102 (annotation_list)


State 123

  193 function_declaration: optional_public_or_private_function $@5 . function_declaration_header expression_block

    "operator"  shift, and go to state 188
    "bool"      shift, and go to state 189
    "string"    shift, and go to state 190
    "int"       shift, and go to state 191
    "int2"      shift, and go to state 192
    "int3"      shift, and go to state 193
    "int4"      shift, and go to state 194
    "uint"      shift, and go to state 195
    "uint2"     shift, and go to state 196
    "uint3"     shift, and go to state 197
    "uint4"     shift, and go to state 198
    "float"     shift, and go to state 199
    "float2"    shift, and go to state 200
    "float3"    shift, and go to state 201
    "float4"    shift, and go to state 202
    "range"     shift, and go to state 203
    "urange"    shift, and go to state 204
    "int64"     shift, and go to state 205
    "uint64"    shift, and go to state 206
    "double"    shift, and go to state 207
    "int8"      shift, and go to state 208
    "uint8"     shift, and go to state 209
    "int16"     shift, and go to state 210
    "uint16"    shift, and go to state 211
    "++"        shift, and go to state 212
    "--"        shift, and go to state 213
    "name"      shift, and go to state 214

    function_name                go to state 215
    function_declaration_header  go to state 216


State 124

  503 enum_name: "name" .

    $default  reduce using rule 503 (enum_name)


State 125

  504 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . '{' enum_list '}'
  505                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration '{' enum_list '}'

    ':'  shift, and go to state 217
    '{'  shift, and go to state 218


State 126

  518 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 . structure_name $@33 '{' struct_variable_declaration_list '}'

    "sealed"  shift, and go to state 219

    $default  reduce using rule 508 (optional_sealed)

    optional_sealed  go to state 220
    structure_name   go to state 221


State 127

  488 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 480 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 222


State 128

  490 global_let: kwd_let optional_shared optional_public_or_private_variable $@30 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 223

    $default  reduce using rule 426 (optional_field_annotation)

    optional_field_annotation  go to state 224


State 129

   20 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 20 (character_sequence)


State 130

   21 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 21 (character_sequence)


State 131

   22 character_sequence: character_sequence . STRING_CHARACTER
   23                   | character_sequence . STRING_CHARACTER_ESC
   24 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 225
    STRING_CHARACTER_ESC  shift, and go to state 226
    "end of the string"   shift, and go to state 227


State 132

   79 annotation_argument_value: "true" .

    $default  reduce using rule 79 (annotation_argument_value)


State 133

   80 annotation_argument_value: "false" .

    $default  reduce using rule 80 (annotation_argument_value)


State 134

   77 annotation_argument_value: "integer constant" .

    $default  reduce using rule 77 (annotation_argument_value)


State 135

   78 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 78 (annotation_argument_value)


State 136

   76 annotation_argument_value: "name" .

    $default  reduce using rule 76 (annotation_argument_value)


State 137

   75 annotation_argument_value: string_constant .

    $default  reduce using rule 75 (annotation_argument_value)


State 138

   81 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 81 (annotation_argument_value_list)


State 139

   82 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
   93 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 228
    ')'  shift, and go to state 229


State 140

   40 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 40 (require_module)


State 141

  589 type_declaration: "array" . '<' $@38 type_declaration '>' $@39

    '<'  shift, and go to state 230


State 142

  592 type_declaration: "table" . '<' $@40 table_type_pair '>' $@41

    '<'  shift, and go to state 231


State 143

  595 type_declaration: "iterator" . '<' $@42 type_declaration '>' $@43

    '<'  shift, and go to state 232


State 144

  585 type_declaration: "smart_ptr" . '<' $@36 type_declaration '>' $@37

    '<'  shift, and go to state 233


State 145

  524 basic_type_declaration: "bool" .

    $default  reduce using rule 524 (basic_type_declaration)


State 146

  544 basic_type_declaration: "void" .

    $default  reduce using rule 544 (basic_type_declaration)


State 147

  525 basic_type_declaration: "string" .

    $default  reduce using rule 525 (basic_type_declaration)


State 148

  556 auto_type_declaration: "auto" .
  557                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 234

    '('       [reduce using rule 556 (auto_type_declaration)]
    $default  reduce using rule 556 (auto_type_declaration)


State 149

  526 basic_type_declaration: "int" .

    $default  reduce using rule 526 (basic_type_declaration)


State 150

  530 basic_type_declaration: "int2" .

    $default  reduce using rule 530 (basic_type_declaration)


State 151

  531 basic_type_declaration: "int3" .

    $default  reduce using rule 531 (basic_type_declaration)


State 152

  532 basic_type_declaration: "int4" .

    $default  reduce using rule 532 (basic_type_declaration)


State 153

  533 basic_type_declaration: "uint" .

    $default  reduce using rule 533 (basic_type_declaration)


State 154

  548 basic_type_declaration: "bitfield" .
  563 bitfield_type_declaration: "bitfield" . '<' $@34 bitfield_bits '>' $@35

    '<'  shift, and go to state 235

    '<'       [reduce using rule 548 (basic_type_declaration)]
    $default  reduce using rule 548 (basic_type_declaration)


State 155

  537 basic_type_declaration: "uint2" .

    $default  reduce using rule 537 (basic_type_declaration)


State 156

  538 basic_type_declaration: "uint3" .

    $default  reduce using rule 538 (basic_type_declaration)


State 157

  539 basic_type_declaration: "uint4" .

    $default  reduce using rule 539 (basic_type_declaration)


State 158

  540 basic_type_declaration: "float" .

    $default  reduce using rule 540 (basic_type_declaration)


State 159

  541 basic_type_declaration: "float2" .

    $default  reduce using rule 541 (basic_type_declaration)


State 160

  542 basic_type_declaration: "float3" .

    $default  reduce using rule 542 (basic_type_declaration)


State 161

  543 basic_type_declaration: "float4" .

    $default  reduce using rule 543 (basic_type_declaration)


State 162

  545 basic_type_declaration: "range" .

    $default  reduce using rule 545 (basic_type_declaration)


State 163

  546 basic_type_declaration: "urange" .

    $default  reduce using rule 546 (basic_type_declaration)


State 164

  596 type_declaration: "block" .
  599                 | "block" . '<' $@44 type_declaration '>' $@45
  602                 | "block" . '<' $@46 optional_function_argument_list optional_function_type '>' $@47

    '<'  shift, and go to state 236

    '<'       [reduce using rule 596 (type_declaration)]
    $default  reduce using rule 596 (type_declaration)


State 165

  529 basic_type_declaration: "int64" .

    $default  reduce using rule 529 (basic_type_declaration)


State 166

  536 basic_type_declaration: "uint64" .

    $default  reduce using rule 536 (basic_type_declaration)


State 167

  547 basic_type_declaration: "double" .

    $default  reduce using rule 547 (basic_type_declaration)


State 168

  603 type_declaration: "function" .
  606                 | "function" . '<' $@48 type_declaration '>' $@49
  609                 | "function" . '<' $@50 optional_function_argument_list optional_function_type '>' $@51

    '<'  shift, and go to state 237

    '<'       [reduce using rule 603 (type_declaration)]
    $default  reduce using rule 603 (type_declaration)


State 169

  610 type_declaration: "lambda" .
  613                 | "lambda" . '<' $@52 type_declaration '>' $@53
  616                 | "lambda" . '<' $@54 optional_function_argument_list optional_function_type '>' $@55

    '<'  shift, and go to state 238

    '<'       [reduce using rule 610 (type_declaration)]
    $default  reduce using rule 610 (type_declaration)


State 170

  527 basic_type_declaration: "int8" .

    $default  reduce using rule 527 (basic_type_declaration)


State 171

  534 basic_type_declaration: "uint8" .

    $default  reduce using rule 534 (basic_type_declaration)


State 172

  528 basic_type_declaration: "int16" .

    $default  reduce using rule 528 (basic_type_declaration)


State 173

  535 basic_type_declaration: "uint16" .

    $default  reduce using rule 535 (basic_type_declaration)


State 174

  619 type_declaration: "tuple" . '<' $@56 tuple_type_list '>' $@57

    '<'  shift, and go to state 239


State 175

  622 type_declaration: "variant" . '<' $@58 variant_type_list '>' $@59

    '<'  shift, and go to state 240


State 176

  558 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 241


State 177

  555 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 555 (structure_type_declaration)


State 178

  566 type_declaration: basic_type_declaration .

    $default  reduce using rule 566 (type_declaration)


State 179

  569 type_declaration: structure_type_declaration .

    $default  reduce using rule 569 (type_declaration)


State 180

  567 type_declaration: auto_type_declaration .

    $default  reduce using rule 567 (type_declaration)


State 181

  568 type_declaration: bitfield_type_declaration .

    $default  reduce using rule 568 (type_declaration)


State 182

  495 single_alias: "name" $@31 '=' type_declaration .
  570 type_declaration: type_declaration . '[' expr ']'
  571                 | type_declaration . '[' ']'
  572                 | type_declaration . '-' '[' ']'
  573                 | type_declaration . "explicit"
  574                 | type_declaration . "const"
  575                 | type_declaration . '-' "const"
  576                 | type_declaration . '&'
  577                 | type_declaration . '-' '&'
  578                 | type_declaration . '#'
  579                 | type_declaration . "implicit"
  580                 | type_declaration . '-' '#'
  581                 | type_declaration . '=' "const"
  582                 | type_declaration . '?'
  586                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251

    $default  reduce using rule 495 (single_alias)


State 183

  497 alias_list: alias_list single_alias ';' .

    $default  reduce using rule 497 (alias_list)


State 184

  559 bitfield_bits: "name" .

    $default  reduce using rule 559 (bitfield_bits)


State 185

  560 bitfield_bits: bitfield_bits . ';' "name"
  627 bitfield_alias_declaration: "bitfield" $@62 "name" '{' bitfield_bits . ';' '}'

    ';'  shift, and go to state 252


State 186

  625 variant_alias_declaration: "variant" $@60 "name" $@61 '{' . variant_type_list ';' '}'

    "name"  shift, and go to state 253

    variant_type       go to state 254
    variant_type_list  go to state 255


State 187

  100 annotation_declaration: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 100 (annotation_declaration)


State 188

  111 function_name: "operator" . '!'
  112              | "operator" . '~'
  113              | "operator" . "+="
  114              | "operator" . "-="
  115              | "operator" . "*="
  116              | "operator" . "/="
  117              | "operator" . "%="
  118              | "operator" . "&="
  119              | "operator" . "|="
  120              | "operator" . "^="
  121              | "operator" . "&&="
  122              | "operator" . "||="
  123              | "operator" . "^^="
  124              | "operator" . "&&"
  125              | "operator" . "||"
  126              | "operator" . "^^"
  127              | "operator" . '+'
  128              | "operator" . '-'
  129              | "operator" . '*'
  130              | "operator" . '/'
  131              | "operator" . '%'
  132              | "operator" . '<'
  133              | "operator" . '>'
  134              | "operator" . ".."
  135              | "operator" . "=="
  136              | "operator" . "!="
  137              | "operator" . "<="
  138              | "operator" . ">="
  139              | "operator" . '&'
  140              | "operator" . '|'
  141              | "operator" . '^'
  144              | "operator" . "++"
  145              | "operator" . "--"
  146              | "operator" . "<<"
  147              | "operator" . ">>"
  148              | "operator" . "<<="
  149              | "operator" . ">>="
  150              | "operator" . "<<<"
  151              | "operator" . ">>>"
  152              | "operator" . "<<<="
  153              | "operator" . ">>>="
  154              | "operator" . '[' ']'
  155              | "operator" . "?[" ']'
  156              | "operator" . '.'
  157              | "operator" . "?."
  158              | "operator" . ":="
  159              | "operator" . "delete"
  160              | "operator" . "??"
  161              | "operator" . "is"
  162              | "operator" . "as"
  163              | "operator" . '?' "as"

    "is"      shift, and go to state 256
    "as"      shift, and go to state 257
    "delete"  shift, and go to state 258
    "+="      shift, and go to state 259
    "-="      shift, and go to state 260
    "/="      shift, and go to state 261
    "*="      shift, and go to state 262
    "%="      shift, and go to state 263
    "&="      shift, and go to state 264
    "|="      shift, and go to state 265
    "^="      shift, and go to state 266
    "<<"      shift, and go to state 267
    ">>"      shift, and go to state 268
    "++"      shift, and go to state 269
    "--"      shift, and go to state 270
    "<="      shift, and go to state 271
    "<<="     shift, and go to state 272
    ">>="     shift, and go to state 273
    ">="      shift, and go to state 274
    "=="      shift, and go to state 275
    "!="      shift, and go to state 276
    "??"      shift, and go to state 277
    "?."      shift, and go to state 278
    "?["      shift, and go to state 279
    ":="      shift, and go to state 280
    "<<<"     shift, and go to state 281
    ">>>"     shift, and go to state 282
    "<<<="    shift, and go to state 283
    ">>>="    shift, and go to state 284
    "&&"      shift, and go to state 285
    "||"      shift, and go to state 286
    "^^"      shift, and go to state 287
    "&&="     shift, and go to state 288
    "||="     shift, and go to state 289
    "^^="     shift, and go to state 290
    ".."      shift, and go to state 291
    '?'       shift, and go to state 292
    '|'       shift, and go to state 293
    '^'       shift, and go to state 294
    '&'       shift, and go to state 295
    '<'       shift, and go to state 296
    '>'       shift, and go to state 297
    '-'       shift, and go to state 298
    '+'       shift, and go to state 299
    '*'       shift, and go to state 300
    '/'       shift, and go to state 301
    '%'       shift, and go to state 302
    '~'       shift, and go to state 303
    '!'       shift, and go to state 304
    '.'       shift, and go to state 305
    '['       shift, and go to state 306


State 189

  164 function_name: "bool" .

    $default  reduce using rule 164 (function_name)


State 190

  165 function_name: "string" .

    $default  reduce using rule 165 (function_name)


State 191

  166 function_name: "int" .

    $default  reduce using rule 166 (function_name)


State 192

  167 function_name: "int2" .

    $default  reduce using rule 167 (function_name)


State 193

  168 function_name: "int3" .

    $default  reduce using rule 168 (function_name)


State 194

  169 function_name: "int4" .

    $default  reduce using rule 169 (function_name)


State 195

  170 function_name: "uint" .

    $default  reduce using rule 170 (function_name)


State 196

  171 function_name: "uint2" .

    $default  reduce using rule 171 (function_name)


State 197

  172 function_name: "uint3" .

    $default  reduce using rule 172 (function_name)


State 198

  173 function_name: "uint4" .

    $default  reduce using rule 173 (function_name)


State 199

  174 function_name: "float" .

    $default  reduce using rule 174 (function_name)


State 200

  175 function_name: "float2" .

    $default  reduce using rule 175 (function_name)


State 201

  176 function_name: "float3" .

    $default  reduce using rule 176 (function_name)


State 202

  177 function_name: "float4" .

    $default  reduce using rule 177 (function_name)


State 203

  178 function_name: "range" .

    $default  reduce using rule 178 (function_name)


State 204

  179 function_name: "urange" .

    $default  reduce using rule 179 (function_name)


State 205

  180 function_name: "int64" .

    $default  reduce using rule 180 (function_name)


State 206

  181 function_name: "uint64" .

    $default  reduce using rule 181 (function_name)


State 207

  182 function_name: "double" .

    $default  reduce using rule 182 (function_name)


State 208

  183 function_name: "int8" .

    $default  reduce using rule 183 (function_name)


State 209

  184 function_name: "uint8" .

    $default  reduce using rule 184 (function_name)


State 210

  185 function_name: "int16" .

    $default  reduce using rule 185 (function_name)


State 211

  186 function_name: "uint16" .

    $default  reduce using rule 186 (function_name)


State 212

  142 function_name: "++" . "operator"

    "operator"  shift, and go to state 307


State 213

  143 function_name: "--" . "operator"

    "operator"  shift, and go to state 308


State 214

  110 function_name: "name" .

    $default  reduce using rule 110 (function_name)


State 215

  191 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 309

    $default  reduce using rule 105 (optional_function_argument_list)

    optional_function_argument_list  go to state 310


State 216

  193 function_declaration: optional_public_or_private_function $@5 function_declaration_header . expression_block

    '{'  shift, and go to state 311

    expression_block  go to state 312


State 217

  505 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration '{' enum_list '}'

    "int"     shift, and go to state 313
    "uint"    shift, and go to state 314
    "int8"    shift, and go to state 315
    "uint8"   shift, and go to state 316
    "int16"   shift, and go to state 317
    "uint16"  shift, and go to state 318

    enum_basic_type_declaration  go to state 319


State 218

  504 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' . enum_list '}'

    $default  reduce using rule 491 (enum_list)

    enum_list  go to state 320


State 219

  509 optional_sealed: "sealed" .

    $default  reduce using rule 509 (optional_sealed)


State 220

  510 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 321


State 221

  518 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name . $@33 '{' struct_variable_declaration_list '}'

    $default  reduce using rule 517 ($@33)

    $@33  go to state 322


State 222

  482 global_variable_declaration_list: global_variable_declaration_list . $@29 optional_field_annotation let_variable_declaration
  488 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    '}'  shift, and go to state 323

    $default  reduce using rule 481 ($@29)

    $@29  go to state 324


State 223

  427 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 27
    "in"    shift, and go to state 28
    "name"  shift, and go to state 29

    annotation_argument_name  go to state 30
    annotation_argument       go to state 31
    annotation_argument_list  go to state 325


State 224

  490 global_let: kwd_let optional_shared optional_public_or_private_variable $@30 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 326
    "name"  shift, and go to state 327

    let_variable_name_with_pos_list  go to state 328
    let_variable_declaration         go to state 329


State 225

   22 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 22 (character_sequence)


State 226

   23 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 23 (character_sequence)


State 227

   24 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 24 (string_constant)


State 228

   82 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 132
    "false"                    shift, and go to state 133
    "integer constant"         shift, and go to state 134
    "floating point constant"  shift, and go to state 135
    "name"                     shift, and go to state 136
    "start of the string"      shift, and go to state 102

    string_constant            go to state 137
    annotation_argument_value  go to state 330


State 229

   93 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 93 (annotation_argument)


State 230

  589 type_declaration: "array" '<' . $@38 type_declaration '>' $@39

    $default  reduce using rule 587 ($@38)

    $@38  go to state 331


State 231

  592 type_declaration: "table" '<' . $@40 table_type_pair '>' $@41

    $default  reduce using rule 590 ($@40)

    $@40  go to state 332


State 232

  595 type_declaration: "iterator" '<' . $@42 type_declaration '>' $@43

    $default  reduce using rule 593 ($@42)

    $@42  go to state 333


State 233

  585 type_declaration: "smart_ptr" '<' . $@36 type_declaration '>' $@37

    $default  reduce using rule 583 ($@36)

    $@36  go to state 334


State 234

  557 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 335


State 235

  563 bitfield_type_declaration: "bitfield" '<' . $@34 bitfield_bits '>' $@35

    $default  reduce using rule 561 ($@34)

    $@34  go to state 336


State 236

  599 type_declaration: "block" '<' . $@44 type_declaration '>' $@45
  602                 | "block" '<' . $@46 optional_function_argument_list optional_function_type '>' $@47

    ':'       reduce using rule 600 ($@46)
    '>'       reduce using rule 600 ($@46)
    '('       reduce using rule 600 ($@46)
    $default  reduce using rule 597 ($@44)

    $@44  go to state 337
    $@46  go to state 338


State 237

  606 type_declaration: "function" '<' . $@48 type_declaration '>' $@49
  609                 | "function" '<' . $@50 optional_function_argument_list optional_function_type '>' $@51

    ':'       reduce using rule 607 ($@50)
    '>'       reduce using rule 607 ($@50)
    '('       reduce using rule 607 ($@50)
    $default  reduce using rule 604 ($@48)

    $@48  go to state 339
    $@50  go to state 340


State 238

  613 type_declaration: "lambda" '<' . $@52 type_declaration '>' $@53
  616                 | "lambda" '<' . $@54 optional_function_argument_list optional_function_type '>' $@55

    ':'       reduce using rule 614 ($@54)
    '>'       reduce using rule 614 ($@54)
    '('       reduce using rule 614 ($@54)
    $default  reduce using rule 611 ($@52)

    $@52  go to state 341
    $@54  go to state 342


State 239

  619 type_declaration: "tuple" '<' . $@56 tuple_type_list '>' $@57

    $default  reduce using rule 617 ($@56)

    $@56  go to state 343


State 240

  622 type_declaration: "variant" '<' . $@58 variant_type_list '>' $@59

    $default  reduce using rule 620 ($@58)

    $@58  go to state 344


State 241

  558 auto_type_declaration: "$t" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 401
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 242

  574 type_declaration: type_declaration "const" .

    $default  reduce using rule 574 (type_declaration)


State 243

  579 type_declaration: type_declaration "implicit" .

    $default  reduce using rule 579 (type_declaration)


State 244

  573 type_declaration: type_declaration "explicit" .

    $default  reduce using rule 573 (type_declaration)


State 245

  586 type_declaration: type_declaration "??" .

    $default  reduce using rule 586 (type_declaration)


State 246

  581 type_declaration: type_declaration '=' . "const"

    "const"  shift, and go to state 409


State 247

  582 type_declaration: type_declaration '?' .

    $default  reduce using rule 582 (type_declaration)


State 248

  576 type_declaration: type_declaration '&' .

    $default  reduce using rule 576 (type_declaration)


State 249

  572 type_declaration: type_declaration '-' . '[' ']'
  575                 | type_declaration '-' . "const"
  577                 | type_declaration '-' . '&'
  580                 | type_declaration '-' . '#'

    "const"  shift, and go to state 410
    '&'      shift, and go to state 411
    '['      shift, and go to state 412
    '#'      shift, and go to state 413


State 250

  570 type_declaration: type_declaration '[' . expr ']'
  571                 | type_declaration '[' . ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    ']'                               shift, and go to state 414
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 415
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 251

  578 type_declaration: type_declaration '#' .

    $default  reduce using rule 578 (type_declaration)


State 252

  560 bitfield_bits: bitfield_bits ';' . "name"
  627 bitfield_alias_declaration: "bitfield" $@62 "name" '{' bitfield_bits ';' . '}'

    "name"  shift, and go to state 416
    '}'     shift, and go to state 417


State 253

  454 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 418


State 254

  455 variant_type_list: variant_type .

    $default  reduce using rule 455 (variant_type_list)


State 255

  456 variant_type_list: variant_type_list . ';' variant_type
  625 variant_alias_declaration: "variant" $@60 "name" $@61 '{' variant_type_list . ';' '}'

    ';'  shift, and go to state 419


State 256

  161 function_name: "operator" "is" .

    $default  reduce using rule 161 (function_name)


State 257

  162 function_name: "operator" "as" .

    $default  reduce using rule 162 (function_name)


State 258

  159 function_name: "operator" "delete" .

    $default  reduce using rule 159 (function_name)


State 259

  113 function_name: "operator" "+=" .

    $default  reduce using rule 113 (function_name)


State 260

  114 function_name: "operator" "-=" .

    $default  reduce using rule 114 (function_name)


State 261

  116 function_name: "operator" "/=" .

    $default  reduce using rule 116 (function_name)


State 262

  115 function_name: "operator" "*=" .

    $default  reduce using rule 115 (function_name)


State 263

  117 function_name: "operator" "%=" .

    $default  reduce using rule 117 (function_name)


State 264

  118 function_name: "operator" "&=" .

    $default  reduce using rule 118 (function_name)


State 265

  119 function_name: "operator" "|=" .

    $default  reduce using rule 119 (function_name)


State 266

  120 function_name: "operator" "^=" .

    $default  reduce using rule 120 (function_name)


State 267

  146 function_name: "operator" "<<" .

    $default  reduce using rule 146 (function_name)


State 268

  147 function_name: "operator" ">>" .

    $default  reduce using rule 147 (function_name)


State 269

  144 function_name: "operator" "++" .

    $default  reduce using rule 144 (function_name)


State 270

  145 function_name: "operator" "--" .

    $default  reduce using rule 145 (function_name)


State 271

  137 function_name: "operator" "<=" .

    $default  reduce using rule 137 (function_name)


State 272

  148 function_name: "operator" "<<=" .

    $default  reduce using rule 148 (function_name)


State 273

  149 function_name: "operator" ">>=" .

    $default  reduce using rule 149 (function_name)


State 274

  138 function_name: "operator" ">=" .

    $default  reduce using rule 138 (function_name)


State 275

  135 function_name: "operator" "==" .

    $default  reduce using rule 135 (function_name)


State 276

  136 function_name: "operator" "!=" .

    $default  reduce using rule 136 (function_name)


State 277

  160 function_name: "operator" "??" .

    $default  reduce using rule 160 (function_name)


State 278

  157 function_name: "operator" "?." .

    $default  reduce using rule 157 (function_name)


State 279

  155 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 420


State 280

  158 function_name: "operator" ":=" .

    $default  reduce using rule 158 (function_name)


State 281

  150 function_name: "operator" "<<<" .

    $default  reduce using rule 150 (function_name)


State 282

  151 function_name: "operator" ">>>" .

    $default  reduce using rule 151 (function_name)


State 283

  152 function_name: "operator" "<<<=" .

    $default  reduce using rule 152 (function_name)


State 284

  153 function_name: "operator" ">>>=" .

    $default  reduce using rule 153 (function_name)


State 285

  124 function_name: "operator" "&&" .

    $default  reduce using rule 124 (function_name)


State 286

  125 function_name: "operator" "||" .

    $default  reduce using rule 125 (function_name)


State 287

  126 function_name: "operator" "^^" .

    $default  reduce using rule 126 (function_name)


State 288

  121 function_name: "operator" "&&=" .

    $default  reduce using rule 121 (function_name)


State 289

  122 function_name: "operator" "||=" .

    $default  reduce using rule 122 (function_name)


State 290

  123 function_name: "operator" "^^=" .

    $default  reduce using rule 123 (function_name)


State 291

  134 function_name: "operator" ".." .

    $default  reduce using rule 134 (function_name)


State 292

  163 function_name: "operator" '?' . "as"

    "as"  shift, and go to state 421


State 293

  140 function_name: "operator" '|' .

    $default  reduce using rule 140 (function_name)


State 294

  141 function_name: "operator" '^' .

    $default  reduce using rule 141 (function_name)


State 295

  139 function_name: "operator" '&' .

    $default  reduce using rule 139 (function_name)


State 296

  132 function_name: "operator" '<' .

    $default  reduce using rule 132 (function_name)


State 297

  133 function_name: "operator" '>' .

    $default  reduce using rule 133 (function_name)


State 298

  128 function_name: "operator" '-' .

    $default  reduce using rule 128 (function_name)


State 299

  127 function_name: "operator" '+' .

    $default  reduce using rule 127 (function_name)


State 300

  129 function_name: "operator" '*' .

    $default  reduce using rule 129 (function_name)


State 301

  130 function_name: "operator" '/' .

    $default  reduce using rule 130 (function_name)


State 302

  131 function_name: "operator" '%' .

    $default  reduce using rule 131 (function_name)


State 303

  112 function_name: "operator" '~' .

    $default  reduce using rule 112 (function_name)


State 304

  111 function_name: "operator" '!' .

    $default  reduce using rule 111 (function_name)


State 305

  156 function_name: "operator" '.' .

    $default  reduce using rule 156 (function_name)


State 306

  154 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 422


State 307

  142 function_name: "++" "operator" .

    $default  reduce using rule 142 (function_name)


State 308

  143 function_name: "--" "operator" .

    $default  reduce using rule 143 (function_name)


State 309

  106 optional_function_argument_list: '(' . ')'
  107                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 423
    "[["  shift, and go to state 223
    ')'   shift, and go to state 424

    $default  reduce using rule 426 (optional_field_annotation)

    optional_field_annotation      go to state 425
    function_argument_declaration  go to state 426
    function_argument_list         go to state 427


State 310

  191 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 428

    $default  reduce using rule 108 (optional_function_type)

    optional_function_type  go to state 429


State 311

  194 expression_block: '{' . expressions '}'
  195                 | '{' . expressions '}' "finally" '{' expressions '}'

    $default  reduce using rule 216 (expressions)

    expressions  go to state 430


State 312

  193 function_declaration: optional_public_or_private_function $@5 function_declaration_header expression_block .

    $default  reduce using rule 193 (function_declaration)


State 313

  549 enum_basic_type_declaration: "int" .

    $default  reduce using rule 549 (enum_basic_type_declaration)


State 314

  552 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 552 (enum_basic_type_declaration)


State 315

  550 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 550 (enum_basic_type_declaration)


State 316

  553 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 553 (enum_basic_type_declaration)


State 317

  551 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 551 (enum_basic_type_declaration)


State 318

  554 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 554 (enum_basic_type_declaration)


State 319

  505 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . '{' enum_list '}'

    '{'  shift, and go to state 431


State 320

  492 enum_list: enum_list . "name" ';'
  493          | enum_list . "name" '=' expr ';'
  504 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' enum_list . '}'

    "name"  shift, and go to state 432
    '}'     shift, and go to state 433


State 321

  510 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 434

    $default  reduce using rule 506 (optional_structure_parent)

    optional_structure_parent  go to state 435


State 322

  518 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name $@33 . '{' struct_variable_declaration_list '}'

    '{'  shift, and go to state 436


State 323

  488 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 488 (global_let)


State 324

  482 global_variable_declaration_list: global_variable_declaration_list $@29 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 223

    $default  reduce using rule 426 (optional_field_annotation)

    optional_field_annotation  go to state 437


State 325

   95 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  427 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 64
    ']'  shift, and go to state 438


State 326

  471 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 439


State 327

  470 let_variable_name_with_pos_list: "name" .
  472                                | "name" . "aka" "name"

    "aka"  shift, and go to state 440

    $default  reduce using rule 470 (let_variable_name_with_pos_list)


State 328

  473 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  474                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  475 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration ';'
  476                         | let_variable_name_with_pos_list . ':' type_declaration copy_or_move_or_clone expr ';'
  477                         | let_variable_name_with_pos_list . ':' type_declaration copy_or_move_or_clone expr_pipe
  478                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr ';'
  479                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 441
    ':'  shift, and go to state 442
    '&'  shift, and go to state 443

    $default  reduce using rule 468 (optional_ref)

    optional_ref  go to state 444


State 329

  490 global_let: kwd_let optional_shared optional_public_or_private_variable $@30 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 490 (global_let)


State 330

   82 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 82 (annotation_argument_value_list)


State 331

  589 type_declaration: "array" '<' $@38 . type_declaration '>' $@39

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 445


State 332

  592 type_declaration: "table" '<' $@40 . table_type_pair '>' $@41

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    table_type_pair             go to state 446
    type_declaration            go to state 447


State 333

  595 type_declaration: "iterator" '<' $@42 . type_declaration '>' $@43

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 448


State 334

  585 type_declaration: "smart_ptr" '<' $@36 . type_declaration '>' $@37

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 449


State 335

  557 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 450


State 336

  563 bitfield_type_declaration: "bitfield" '<' $@34 . bitfield_bits '>' $@35

    "name"  shift, and go to state 184

    bitfield_bits  go to state 451


State 337

  599 type_declaration: "block" '<' $@44 . type_declaration '>' $@45

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 452


State 338

  602 type_declaration: "block" '<' $@46 . optional_function_argument_list optional_function_type '>' $@47

    '('  shift, and go to state 309

    $default  reduce using rule 105 (optional_function_argument_list)

    optional_function_argument_list  go to state 453


State 339

  606 type_declaration: "function" '<' $@48 . type_declaration '>' $@49

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 454


State 340

  609 type_declaration: "function" '<' $@50 . optional_function_argument_list optional_function_type '>' $@51

    '('  shift, and go to state 309

    $default  reduce using rule 105 (optional_function_argument_list)

    optional_function_argument_list  go to state 455


State 341

  613 type_declaration: "lambda" '<' $@52 . type_declaration '>' $@53

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 456


State 342

  616 type_declaration: "lambda" '<' $@54 . optional_function_argument_list optional_function_type '>' $@55

    '('  shift, and go to state 309

    $default  reduce using rule 105 (optional_function_argument_list)

    optional_function_argument_list  go to state 457


State 343

  619 type_declaration: "tuple" '<' $@56 . tuple_type_list '>' $@57

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 458

    name_in_namespace           go to state 177
    tuple_type                  go to state 459
    tuple_type_list             go to state 460
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 461


State 344

  622 type_declaration: "variant" '<' $@58 . variant_type_list '>' $@59

    "name"  shift, and go to state 253

    variant_type       go to state 254
    variant_type_list  go to state 462


State 345

  332 expr: "true" .

    $default  reduce using rule 332 (expr)


State 346

  333 expr: "false" .

    $default  reduce using rule 333 (expr)


State 347

  226 expr_new: "new" . type_declaration
  227         | "new" . type_declaration '(' ')'
  228         | "new" . type_declaration '(' expr_list ')'
  229         | "new" . make_decl

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "[["         shift, and go to state 367
    "[{"         shift, and go to state 368
    "{{"         shift, and go to state 369
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 463
    make_decl                   go to state 464
    make_struct_decl            go to state 405
    make_dim_decl               go to state 406
    make_table_decl             go to state 407
    array_comprehension         go to state 408


State 348

  259 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  260               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  261               | "typeinfo" . '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

    '('  shift, and go to state 465


State 349

  258 expr_type_decl: "type" . '<' $@12 type_declaration '>' $@13

    '<'  shift, and go to state 466


State 350

  326 expr: "null" .

    $default  reduce using rule 326 (expr)


State 351

  379 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 467


State 352

  249 expr_cast: "cast" . '<' $@6 type_declaration '>' $@7 expr

    '<'  shift, and go to state 468


State 353

  252 expr_cast: "upcast" . '<' $@8 type_declaration '>' $@9 expr

    '<'  shift, and go to state 469


State 354

  380 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 470


State 355

  255 expr_cast: "reinterpret" . '<' $@10 type_declaration '>' $@11 expr

    '<'  shift, and go to state 471


State 356

  410 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 472


State 357

  548 basic_type_declaration: "bitfield" .

    $default  reduce using rule 548 (basic_type_declaration)


State 358

  381 expr: "generator" . '<' type_declaration '>' optional_capture_list '(' ')'
  382     | "generator" . '<' type_declaration '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 473


State 359

  362 expr: "++" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 474
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 360

  363 expr: "--" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 475
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 361

  411 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 476


State 362

  412 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 477


State 363

  413 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 478


State 364

  414 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 479


State 365

  415 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 480


State 366

  416 expr_mtag: "$c" . '(' expr ')' '(' ')'
  417          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 481


State 367

  640 make_struct_decl: "[[" . type_declaration make_struct_dim optional_block ']' ']'
  641                 | "[[" . type_declaration optional_block ']' ']'
  642                 | "[[" . type_declaration '(' ')' optional_block ']' ']'
  643                 | "[[" . type_declaration '(' ')' make_struct_dim optional_block ']' ']'
  654 make_dim_decl: "[[" . type_declaration make_dim ']' ']'
  661 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 482
    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 483


State 368

  644 make_struct_decl: "[{" . type_declaration make_struct_dim optional_block '}' ']'
  645                 | "[{" . type_declaration '(' ')' make_struct_dim optional_block '}' ']'
  655 make_dim_decl: "[{" . type_declaration make_dim '}' ']'
  662 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "for"        shift, and go to state 484
    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 485


State 369

  658 make_table_decl: "{{" . make_table '}' '}'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 486
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_map_tuple          go to state 487
    make_dim_decl           go to state 406
    make_table              go to state 488
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 370

  280 expr_numeric_const: "integer constant" .

    $default  reduce using rule 280 (expr_numeric_const)


State 371

  282 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 282 (expr_numeric_const)


State 372

  281 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 281 (expr_numeric_const)


State 373

  283 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 283 (expr_numeric_const)


State 374

  284 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 284 (expr_numeric_const)


State 375

  285 expr_numeric_const: "double constant" .

    $default  reduce using rule 285 (expr_numeric_const)


State 376

   28 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 25 (string_builder_body)

    string_builder_body  go to state 489


State 377

  339 expr: '-' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 490
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 378

  338 expr: '+' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 491
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 379

  378 expr: '*' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 492
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 380

   32 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 50
    "name"  shift, and go to state 51

    name_in_namespace  go to state 493


State 381

  337 expr: '~' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 494
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 382

  336 expr: '!' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 495
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 383

  366 expr: '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 496
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 384

  267 block_or_lambda: '$' .

    $default  reduce using rule 267 (block_or_lambda)


State 385

  268 block_or_lambda: '@' .
  269                | '@' . '@'
  314 func_addr_expr: '@' . '@' func_addr_name
  317               | '@' . '@' '<' $@14 type_declaration '>' $@15 func_addr_name
  320               | '@' . '@' '<' $@16 optional_function_argument_list optional_function_type '>' $@17 func_addr_name
  425 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 497

    $default  reduce using rule 268 (block_or_lambda)


State 386

  330 expr: string_builder .

    $default  reduce using rule 330 (expr)


State 387

  329 expr: expr_reader .

    $default  reduce using rule 329 (expr)


State 388

  278 expr_block: expression_block .

    $default  reduce using rule 278 (expr_block)


State 389

  309 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  327 expr: name_in_namespace .
  374     | name_in_namespace . '(' ')'
  375     | name_in_namespace . '(' expr_list ')'
  409     | name_in_namespace . "name"

    "name"  shift, and go to state 498
    '('     shift, and go to state 499

    "name"    [reduce using rule 327 (expr)]
    '('       [reduce using rule 327 (expr)]
    $default  reduce using rule 327 (expr)


State 390

  403 expr: expr_new .

    $default  reduce using rule 403 (expr)


State 391

  402 expr: expr_cast .

    $default  reduce using rule 402 (expr)


State 392

  401 expr: expr_type_decl .

    $default  reduce using rule 401 (expr)


State 393

  400 expr: expr_type_info .

    $default  reduce using rule 400 (expr)


State 394

  279 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 12

    $default  reduce using rule 103 (optional_annotation_list)

    optional_annotation_list  go to state 500


State 395

  406 expr: expr_block .

    $default  reduce using rule 406 (expr)


State 396

  328 expr: expr_numeric_const .

    $default  reduce using rule 328 (expr)


State 397

  405 expr: expr_named_call .

    $default  reduce using rule 405 (expr)


State 398

  404 expr: expr_method_call .

    $default  reduce using rule 404 (expr)


State 399

  373 expr: func_addr_expr .

    $default  reduce using rule 373 (expr)


State 400

  334 expr: expr_field .

    $default  reduce using rule 334 (expr)


State 401

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'
  558 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 536


State 402

  335 expr: expr_mtag .

    $default  reduce using rule 335 (expr)


State 403

  376 expr: basic_type_declaration . '(' ')'
  377     | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 537


State 404

  331 expr: make_decl .

    $default  reduce using rule 331 (expr)


State 405

  628 make_decl: make_struct_decl .

    $default  reduce using rule 628 (make_decl)


State 406

  629 make_decl: make_dim_decl .

    $default  reduce using rule 629 (make_decl)


State 407

  630 make_decl: make_table_decl .

    $default  reduce using rule 630 (make_decl)


State 408

  631 make_decl: array_comprehension .

    $default  reduce using rule 631 (make_decl)


State 409

  581 type_declaration: type_declaration '=' "const" .

    $default  reduce using rule 581 (type_declaration)


State 410

  575 type_declaration: type_declaration '-' "const" .

    $default  reduce using rule 575 (type_declaration)


State 411

  577 type_declaration: type_declaration '-' '&' .

    $default  reduce using rule 577 (type_declaration)


State 412

  572 type_declaration: type_declaration '-' '[' . ']'

    ']'  shift, and go to state 538


State 413

  580 type_declaration: type_declaration '-' '#' .

    $default  reduce using rule 580 (type_declaration)


State 414

  571 type_declaration: type_declaration '[' ']' .

    $default  reduce using rule 571 (type_declaration)


State 415

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'
  570 type_declaration: type_declaration '[' expr . ']'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ']'    shift, and go to state 539


State 416

  560 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 560 (bitfield_bits)


State 417

  627 bitfield_alias_declaration: "bitfield" $@62 "name" '{' bitfield_bits ';' '}' .

    $default  reduce using rule 627 (bitfield_alias_declaration)


State 418

  454 variant_type: "name" ':' . type_declaration

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 540


State 419

  456 variant_type_list: variant_type_list ';' . variant_type
  625 variant_alias_declaration: "variant" $@60 "name" $@61 '{' variant_type_list ';' . '}'

    "name"  shift, and go to state 253
    '}'     shift, and go to state 541

    variant_type  go to state 542


State 420

  155 function_name: "operator" "?[" ']' .

    $default  reduce using rule 155 (function_name)


State 421

  163 function_name: "operator" '?' "as" .

    $default  reduce using rule 163 (function_name)


State 422

  154 function_name: "operator" '[' ']' .

    $default  reduce using rule 154 (function_name)


State 423

  447 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 543


State 424

  106 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 106 (optional_function_argument_list)


State 425

  445 function_argument_declaration: optional_field_annotation . variable_declaration
  446                              | optional_field_annotation . "var" variable_declaration

    "var"   shift, and go to state 544
    "$i"    shift, and go to state 545
    "name"  shift, and go to state 546

    variable_declaration         go to state 547
    variable_name_with_pos_list  go to state 548


State 426

  448 function_argument_list: function_argument_declaration .

    $default  reduce using rule 448 (function_argument_list)


State 427

  107 optional_function_argument_list: '(' function_argument_list . ')'
  449 function_argument_list: function_argument_list . ';' function_argument_declaration

    ')'  shift, and go to state 549
    ';'  shift, and go to state 550


State 428

  109 optional_function_type: ':' . type_declaration

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 551


State 429

  191 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 191 (function_declaration_header)


State 430

  194 expression_block: '{' expressions . '}'
  195                 | '{' expressions . '}' "finally" '{' expressions '}'
  217 expressions: expressions . expression_any
  218            | expressions . error

    error                             shift, and go to state 552
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 553
    "if"                              shift, and go to state 554
    "static_if"                       shift, and go to state 555
    "for"                             shift, and go to state 556
    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "return"                          shift, and go to state 557
    "null"                            shift, and go to state 350
    "break"                           shift, and go to state 558
    "try"                             shift, and go to state 559
    "delete"                          shift, and go to state 560
    "deref"                           shift, and go to state 351
    "with"                            shift, and go to state 561
    "assume"                          shift, and go to state 562
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 354
    "continue"                        shift, and go to state 563
    "pass"                            shift, and go to state 564
    "reinterpret"                     shift, and go to state 355
    "label"                           shift, and go to state 565
    "goto"                            shift, and go to state 566
    "unsafe"                          shift, and go to state 567
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "yield"                           shift, and go to state 568
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "@ <|"                            shift, and go to state 569
    "@@ <|"                           shift, and go to state 570
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    ';'                               shift, and go to state 571
    '{'                               shift, and go to state 311
    '}'                               shift, and go to state 572

    string_builder             go to state 386
    expr_reader                go to state 387
    expression_label           go to state 573
    expression_goto            go to state 574
    if_or_static_if            go to state 575
    expression_if_one_liner    go to state 576
    expression_if_then_else    go to state 577
    expression_for_loop        go to state 578
    expression_unsafe          go to state 579
    expression_while_loop      go to state 580
    expression_with            go to state 581
    expression_with_alias      go to state 582
    expression_block           go to state 388
    expression_any             go to state 583
    expr_pipe                  go to state 584
    name_in_namespace          go to state 389
    expression_delete          go to state 585
    expr_new                   go to state 390
    expression_break           go to state 586
    expression_continue        go to state 587
    expression_return_no_pipe  go to state 588
    expression_return          go to state 589
    expression_yield_no_pipe   go to state 590
    expression_yield           go to state 591
    expression_try_catch       go to state 592
    kwd_let                    go to state 593
    expression_let             go to state 594
    expr_cast                  go to state 391
    expr_type_decl             go to state 392
    expr_type_info             go to state 393
    block_or_lambda            go to state 394
    expr_block                 go to state 395
    expr_numeric_const         go to state 396
    expr_assign                go to state 595
    expr_assign_pipe           go to state 596
    expr_named_call            go to state 397
    expr_method_call           go to state 398
    func_addr_expr             go to state 399
    expr_field                 go to state 400
    expr                       go to state 597
    expr_mtag                  go to state 402
    basic_type_declaration     go to state 403
    make_decl                  go to state 404
    make_struct_decl           go to state 405
    make_dim_decl              go to state 406
    make_table_decl            go to state 407
    array_comprehension        go to state 408


State 431

  505 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' . enum_list '}'

    $default  reduce using rule 491 (enum_list)

    enum_list  go to state 598


State 432

  492 enum_list: enum_list "name" . ';'
  493          | enum_list "name" . '=' expr ';'

    '='  shift, and go to state 599
    ';'  shift, and go to state 600


State 433

  504 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' enum_list '}' .

    $default  reduce using rule 504 (enum_declaration)


State 434

  507 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 50
    "name"  shift, and go to state 51

    name_in_namespace  go to state 601


State 435

  510 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 510 (structure_name)


State 436

  518 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name $@33 '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 437 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 602


State 437

  482 global_variable_declaration_list: global_variable_declaration_list $@29 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 326
    "name"  shift, and go to state 327

    let_variable_name_with_pos_list  go to state 328
    let_variable_declaration         go to state 603


State 438

  427 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 604


State 439

  471 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 605
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 440

  472 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 606


State 441

  473 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  474                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 607


State 442

  475 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration ';'
  476                         | let_variable_name_with_pos_list ':' . type_declaration copy_or_move_or_clone expr ';'
  477                         | let_variable_name_with_pos_list ':' . type_declaration copy_or_move_or_clone expr_pipe

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 608


State 443

  469 optional_ref: '&' .

    $default  reduce using rule 469 (optional_ref)


State 444

  478 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr ';'
  479                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 609
    ":="  shift, and go to state 610
    '='   shift, and go to state 611

    copy_or_move_or_clone  go to state 612


State 445

  570 type_declaration: type_declaration . '[' expr ']'
  571                 | type_declaration . '[' ']'
  572                 | type_declaration . '-' '[' ']'
  573                 | type_declaration . "explicit"
  574                 | type_declaration . "const"
  575                 | type_declaration . '-' "const"
  576                 | type_declaration . '&'
  577                 | type_declaration . '-' '&'
  578                 | type_declaration . '#'
  579                 | type_declaration . "implicit"
  580                 | type_declaration . '-' '#'
  581                 | type_declaration . '=' "const"
  582                 | type_declaration . '?'
  586                 | type_declaration . "??"
  589                 | "array" '<' $@38 type_declaration . '>' $@39

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 613
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 446

  592 type_declaration: "table" '<' $@40 table_type_pair . '>' $@41

    '>'  shift, and go to state 614


State 447

  564 table_type_pair: type_declaration .
  565                | type_declaration . ';' type_declaration
  570 type_declaration: type_declaration . '[' expr ']'
  571                 | type_declaration . '[' ']'
  572                 | type_declaration . '-' '[' ']'
  573                 | type_declaration . "explicit"
  574                 | type_declaration . "const"
  575                 | type_declaration . '-' "const"
  576                 | type_declaration . '&'
  577                 | type_declaration . '-' '&'
  578                 | type_declaration . '#'
  579                 | type_declaration . "implicit"
  580                 | type_declaration . '-' '#'
  581                 | type_declaration . '=' "const"
  582                 | type_declaration . '?'
  586                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    ';'         shift, and go to state 615
    '#'         shift, and go to state 251

    $default  reduce using rule 564 (table_type_pair)


State 448

  570 type_declaration: type_declaration . '[' expr ']'
  571                 | type_declaration . '[' ']'
  572                 | type_declaration . '-' '[' ']'
  573                 | type_declaration . "explicit"
  574                 | type_declaration . "const"
  575                 | type_declaration . '-' "const"
  576                 | type_declaration . '&'
  577                 | type_declaration . '-' '&'
  578                 | type_declaration . '#'
  579                 | type_declaration . "implicit"
  580                 | type_declaration . '-' '#'
  581                 | type_declaration . '=' "const"
  582                 | type_declaration . '?'
  586                 | type_declaration . "??"
  595                 | "iterator" '<' $@42 type_declaration . '>' $@43

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 616
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 449

  570 type_declaration: type_declaration . '[' expr ']'
  571                 | type_declaration . '[' ']'
  572                 | type_declaration . '-' '[' ']'
  573                 | type_declaration . "explicit"
  574                 | type_declaration . "const"
  575                 | type_declaration . '-' "const"
  576                 | type_declaration . '&'
  577                 | type_declaration . '-' '&'
  578                 | type_declaration . '#'
  579                 | type_declaration . "implicit"
  580                 | type_declaration . '-' '#'
  581                 | type_declaration . '=' "const"
  582                 | type_declaration . '?'
  585                 | "smart_ptr" '<' $@36 type_declaration . '>' $@37
  586                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 617
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 450

  557 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 557 (auto_type_declaration)


State 451

  560 bitfield_bits: bitfield_bits . ';' "name"
  563 bitfield_type_declaration: "bitfield" '<' $@34 bitfield_bits . '>' $@35

    '>'  shift, and go to state 618
    ';'  shift, and go to state 619


State 452

  570 type_declaration: type_declaration . '[' expr ']'
  571                 | type_declaration . '[' ']'
  572                 | type_declaration . '-' '[' ']'
  573                 | type_declaration . "explicit"
  574                 | type_declaration . "const"
  575                 | type_declaration . '-' "const"
  576                 | type_declaration . '&'
  577                 | type_declaration . '-' '&'
  578                 | type_declaration . '#'
  579                 | type_declaration . "implicit"
  580                 | type_declaration . '-' '#'
  581                 | type_declaration . '=' "const"
  582                 | type_declaration . '?'
  586                 | type_declaration . "??"
  599                 | "block" '<' $@44 type_declaration . '>' $@45

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 620
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 453

  602 type_declaration: "block" '<' $@46 optional_function_argument_list . optional_function_type '>' $@47

    ':'  shift, and go to state 428

    $default  reduce using rule 108 (optional_function_type)

    optional_function_type  go to state 621


State 454

  570 type_declaration: type_declaration . '[' expr ']'
  571                 | type_declaration . '[' ']'
  572                 | type_declaration . '-' '[' ']'
  573                 | type_declaration . "explicit"
  574                 | type_declaration . "const"
  575                 | type_declaration . '-' "const"
  576                 | type_declaration . '&'
  577                 | type_declaration . '-' '&'
  578                 | type_declaration . '#'
  579                 | type_declaration . "implicit"
  580                 | type_declaration . '-' '#'
  581                 | type_declaration . '=' "const"
  582                 | type_declaration . '?'
  586                 | type_declaration . "??"
  606                 | "function" '<' $@48 type_declaration . '>' $@49

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 622
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 455

  609 type_declaration: "function" '<' $@50 optional_function_argument_list . optional_function_type '>' $@51

    ':'  shift, and go to state 428

    $default  reduce using rule 108 (optional_function_type)

    optional_function_type  go to state 623


State 456

  570 type_declaration: type_declaration . '[' expr ']'
  571                 | type_declaration . '[' ']'
  572                 | type_declaration . '-' '[' ']'
  573                 | type_declaration . "explicit"
  574                 | type_declaration . "const"
  575                 | type_declaration . '-' "const"
  576                 | type_declaration . '&'
  577                 | type_declaration . '-' '&'
  578                 | type_declaration . '#'
  579                 | type_declaration . "implicit"
  580                 | type_declaration . '-' '#'
  581                 | type_declaration . '=' "const"
  582                 | type_declaration . '?'
  586                 | type_declaration . "??"
  613                 | "lambda" '<' $@52 type_declaration . '>' $@53

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 624
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 457

  616 type_declaration: "lambda" '<' $@54 optional_function_argument_list . optional_function_type '>' $@55

    ':'  shift, and go to state 428

    $default  reduce using rule 108 (optional_function_type)

    optional_function_type  go to state 625


State 458

  222 name_in_namespace: "name" .
  223                  | "name" . "::" "name"
  451 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 80
    ':'   shift, and go to state 626

    $default  reduce using rule 222 (name_in_namespace)


State 459

  452 tuple_type_list: tuple_type .

    $default  reduce using rule 452 (tuple_type_list)


State 460

  453 tuple_type_list: tuple_type_list . ';' tuple_type
  619 type_declaration: "tuple" '<' $@56 tuple_type_list . '>' $@57

    '>'  shift, and go to state 627
    ';'  shift, and go to state 628


State 461

  450 tuple_type: type_declaration .
  570 type_declaration: type_declaration . '[' expr ']'
  571                 | type_declaration . '[' ']'
  572                 | type_declaration . '-' '[' ']'
  573                 | type_declaration . "explicit"
  574                 | type_declaration . "const"
  575                 | type_declaration . '-' "const"
  576                 | type_declaration . '&'
  577                 | type_declaration . '-' '&'
  578                 | type_declaration . '#'
  579                 | type_declaration . "implicit"
  580                 | type_declaration . '-' '#'
  581                 | type_declaration . '=' "const"
  582                 | type_declaration . '?'
  586                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251

    $default  reduce using rule 450 (tuple_type)


State 462

  456 variant_type_list: variant_type_list . ';' variant_type
  622 type_declaration: "variant" '<' $@58 variant_type_list . '>' $@59

    '>'  shift, and go to state 629
    ';'  shift, and go to state 630


State 463

  226 expr_new: "new" type_declaration .
  227         | "new" type_declaration . '(' ')'
  228         | "new" type_declaration . '(' expr_list ')'
  570 type_declaration: type_declaration . '[' expr ']'
  571                 | type_declaration . '[' ']'
  572                 | type_declaration . '-' '[' ']'
  573                 | type_declaration . "explicit"
  574                 | type_declaration . "const"
  575                 | type_declaration . '-' "const"
  576                 | type_declaration . '&'
  577                 | type_declaration . '-' '&'
  578                 | type_declaration . '#'
  579                 | type_declaration . "implicit"
  580                 | type_declaration . '-' '#'
  581                 | type_declaration . '=' "const"
  582                 | type_declaration . '?'
  586                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '('         shift, and go to state 631
    '#'         shift, and go to state 251

    "??"      [reduce using rule 226 (expr_new)]
    '='       [reduce using rule 226 (expr_new)]
    '?'       [reduce using rule 226 (expr_new)]
    '&'       [reduce using rule 226 (expr_new)]
    '-'       [reduce using rule 226 (expr_new)]
    '['       [reduce using rule 226 (expr_new)]
    '('       [reduce using rule 226 (expr_new)]
    $default  reduce using rule 226 (expr_new)


State 464

  229 expr_new: "new" make_decl .

    $default  reduce using rule 229 (expr_new)


State 465

  259 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  260               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  261               | "typeinfo" '(' . name_in_namespace '<' "name" ';' "name" '>' expr ')'

    "::"    shift, and go to state 50
    "name"  shift, and go to state 51

    name_in_namespace  go to state 632


State 466

  258 expr_type_decl: "type" '<' . $@12 type_declaration '>' $@13

    $default  reduce using rule 256 ($@12)

    $@12  go to state 633


State 467

  379 expr: "deref" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 634
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 468

  249 expr_cast: "cast" '<' . $@6 type_declaration '>' $@7 expr

    $default  reduce using rule 247 ($@6)

    $@6  go to state 635


State 469

  252 expr_cast: "upcast" '<' . $@8 type_declaration '>' $@9 expr

    $default  reduce using rule 250 ($@8)

    $@8  go to state 636


State 470

  380 expr: "addr" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 637
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 471

  255 expr_cast: "reinterpret" '<' . $@10 type_declaration '>' $@11 expr

    $default  reduce using rule 253 ($@10)

    $@10  go to state 638


State 472

  410 expr: "unsafe" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 639
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 473

  381 expr: "generator" '<' . type_declaration '>' optional_capture_list '(' ')'
  382     | "generator" '<' . type_declaration '>' optional_capture_list '(' expr ')'

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 640


State 474

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  362     | "++" expr .
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 362 (expr)


State 475

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  363     | "--" expr .
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 363 (expr)


State 476

  411 expr_mtag: "$$" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 641
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 477

  412 expr_mtag: "$i" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 642
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 478

  413 expr_mtag: "$v" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 643
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 479

  414 expr_mtag: "$b" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 644
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 480

  415 expr_mtag: "$a" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 645
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 481

  416 expr_mtag: "$c" '(' . expr ')' '(' ')'
  417          | "$c" '(' . expr ')' '(' expr_list ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 646
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 482

  661 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 545
    "name"  shift, and go to state 546

    variable_name_with_pos_list  go to state 647


State 483

  570 type_declaration: type_declaration . '[' expr ']'
  571                 | type_declaration . '[' ']'
  572                 | type_declaration . '-' '[' ']'
  573                 | type_declaration . "explicit"
  574                 | type_declaration . "const"
  575                 | type_declaration . '-' "const"
  576                 | type_declaration . '&'
  577                 | type_declaration . '-' '&'
  578                 | type_declaration . '#'
  579                 | type_declaration . "implicit"
  580                 | type_declaration . '-' '#'
  581                 | type_declaration . '=' "const"
  582                 | type_declaration . '?'
  586                 | type_declaration . "??"
  640 make_struct_decl: "[[" type_declaration . make_struct_dim optional_block ']' ']'
  641                 | "[[" type_declaration . optional_block ']' ']'
  642                 | "[[" type_declaration . '(' ')' optional_block ']' ']'
  643                 | "[[" type_declaration . '(' ')' make_struct_dim optional_block ']' ']'
  654 make_dim_decl: "[[" type_declaration . make_dim ']' ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "const"                           shift, and go to state 242
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "where"                           shift, and go to state 648
    "reinterpret"                     shift, and go to state 355
    "implicit"                        shift, and go to state 243
    "explicit"                        shift, and go to state 244
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "??"                              shift, and go to state 245
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 649
    "start of the string"             shift, and go to state 376
    '='                               shift, and go to state 246
    '?'                               shift, and go to state 247
    '&'                               shift, and go to state 248
    '-'                               shift, and go to state 650
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '['                               shift, and go to state 250
    '('                               shift, and go to state 651
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311
    '#'                               shift, and go to state 251

    $default  reduce using rule 638 (optional_block)

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 652
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_fields      go to state 653
    make_struct_dim         go to state 654
    optional_block          go to state 655
    make_struct_decl        go to state 405
    make_tuple              go to state 656
    make_map_tuple          go to state 657
    make_any_tuple          go to state 658
    make_dim                go to state 659
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 484

  662 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "$i"    shift, and go to state 545
    "name"  shift, and go to state 546

    variable_name_with_pos_list  go to state 660


State 485

  570 type_declaration: type_declaration . '[' expr ']'
  571                 | type_declaration . '[' ']'
  572                 | type_declaration . '-' '[' ']'
  573                 | type_declaration . "explicit"
  574                 | type_declaration . "const"
  575                 | type_declaration . '-' "const"
  576                 | type_declaration . '&'
  577                 | type_declaration . '-' '&'
  578                 | type_declaration . '#'
  579                 | type_declaration . "implicit"
  580                 | type_declaration . '-' '#'
  581                 | type_declaration . '=' "const"
  582                 | type_declaration . '?'
  586                 | type_declaration . "??"
  644 make_struct_decl: "[{" type_declaration . make_struct_dim optional_block '}' ']'
  645                 | "[{" type_declaration . '(' ')' make_struct_dim optional_block '}' ']'
  655 make_dim_decl: "[{" type_declaration . make_dim '}' ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "const"                           shift, and go to state 242
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "implicit"                        shift, and go to state 243
    "explicit"                        shift, and go to state 244
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "??"                              shift, and go to state 245
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 649
    "start of the string"             shift, and go to state 376
    '='                               shift, and go to state 246
    '?'                               shift, and go to state 247
    '&'                               shift, and go to state 248
    '-'                               shift, and go to state 650
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '['                               shift, and go to state 250
    '('                               shift, and go to state 661
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311
    '#'                               shift, and go to state 251

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 652
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_fields      go to state 653
    make_struct_dim         go to state 662
    make_struct_decl        go to state 405
    make_tuple              go to state 656
    make_map_tuple          go to state 657
    make_any_tuple          go to state 658
    make_dim                go to state 663
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 486

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'
  648 make_map_tuple: expr . "=>" expr
  649               | expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "=>"   shift, and go to state 664
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 649 (make_map_tuple)


State 487

  656 make_table: make_map_tuple .

    $default  reduce using rule 656 (make_table)


State 488

  657 make_table: make_table . ';' make_map_tuple
  658 make_table_decl: "{{" make_table . '}' '}'

    ';'  shift, and go to state 665
    '}'  shift, and go to state 666


State 489

   26 string_builder_body: string_builder_body . character_sequence
   27                    | string_builder_body . "{" expr "}"
   28 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 129
    STRING_CHARACTER_ESC  shift, and go to state 130
    "end of the string"   shift, and go to state 667
    "{"                   shift, and go to state 668

    character_sequence  go to state 669


State 490

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  339 expr: '-' expr .
  340     | expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 339 (expr)


State 491

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  338 expr: '+' expr .
  340     | expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 338 (expr)


State 492

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  378     | '*' expr .
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 378 (expr)


State 493

   32 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 31 ($@1)

    $@1  go to state 670


State 494

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  337 expr: '~' expr .
  340     | expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 337 (expr)


State 495

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  336 expr: '!' expr .
  340     | expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 336 (expr)


State 496

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  366     | '(' expr . ')'
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 671


State 497

  269 block_or_lambda: '@' '@' .
  314 func_addr_expr: '@' '@' . func_addr_name
  317               | '@' '@' . '<' $@14 type_declaration '>' $@15 func_addr_name
  320               | '@' '@' . '<' $@16 optional_function_argument_list optional_function_type '>' $@17 func_addr_name
  425 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 50
    "$i"    shift, and go to state 672
    "$c"    shift, and go to state 673
    "name"  shift, and go to state 51
    '<'     shift, and go to state 674

    $default  reduce using rule 269 (block_or_lambda)

    name_in_namespace  go to state 675
    func_addr_name     go to state 676


State 498

  409 expr: name_in_namespace "name" .

    $default  reduce using rule 409 (expr)


State 499

  309 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  374 expr: name_in_namespace '(' . ')'
  375     | name_in_namespace '(' . expr_list ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '['                               shift, and go to state 677
    '('                               shift, and go to state 383
    ')'                               shift, and go to state 678
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    expr_list               go to state 679
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 680
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 500

  279 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 681

    $default  reduce using rule 276 (optional_capture_list)

    optional_capture_list  go to state 682


State 501

  387 expr: expr "is" . "type" '<' $@20 type_declaration '>' $@21
  388     | expr "is" . basic_type_declaration
  389     | expr "is" . "name"
  424 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 683
    "bool"      shift, and go to state 145
    "void"      shift, and go to state 146
    "string"    shift, and go to state 147
    "int"       shift, and go to state 149
    "int2"      shift, and go to state 150
    "int3"      shift, and go to state 151
    "int4"      shift, and go to state 152
    "uint"      shift, and go to state 153
    "bitfield"  shift, and go to state 357
    "uint2"     shift, and go to state 155
    "uint3"     shift, and go to state 156
    "uint4"     shift, and go to state 157
    "float"     shift, and go to state 158
    "float2"    shift, and go to state 159
    "float3"    shift, and go to state 160
    "float4"    shift, and go to state 161
    "range"     shift, and go to state 162
    "urange"    shift, and go to state 163
    "int64"     shift, and go to state 165
    "uint64"    shift, and go to state 166
    "double"    shift, and go to state 167
    "int8"      shift, and go to state 170
    "uint8"     shift, and go to state 171
    "int16"     shift, and go to state 172
    "uint16"    shift, and go to state 173
    "$f"        shift, and go to state 684
    "name"      shift, and go to state 685

    basic_type_declaration  go to state 686


State 502

  390 expr: expr "as" . "name"
  393     | expr "as" . "type" '<' $@22 type_declaration '>' $@23
  394     | expr "as" . basic_type_declaration
  422 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 687
    "bool"      shift, and go to state 145
    "void"      shift, and go to state 146
    "string"    shift, and go to state 147
    "int"       shift, and go to state 149
    "int2"      shift, and go to state 150
    "int3"      shift, and go to state 151
    "int4"      shift, and go to state 152
    "uint"      shift, and go to state 153
    "bitfield"  shift, and go to state 357
    "uint2"     shift, and go to state 155
    "uint3"     shift, and go to state 156
    "uint4"     shift, and go to state 157
    "float"     shift, and go to state 158
    "float2"    shift, and go to state 159
    "float3"    shift, and go to state 160
    "float4"    shift, and go to state 161
    "range"     shift, and go to state 162
    "urange"    shift, and go to state 163
    "int64"     shift, and go to state 165
    "uint64"    shift, and go to state 166
    "double"    shift, and go to state 167
    "int8"      shift, and go to state 170
    "uint8"     shift, and go to state 171
    "int16"     shift, and go to state 172
    "uint16"    shift, and go to state 173
    "$f"        shift, and go to state 688
    "name"      shift, and go to state 689

    basic_type_declaration  go to state 690


State 503

  340 expr: expr "<<" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 691
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 504

  341 expr: expr ">>" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 692
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 505

  364 expr: expr "++" .

    $default  reduce using rule 364 (expr)


State 506

  365 expr: expr "--" .

    $default  reduce using rule 365 (expr)


State 507

  353 expr: expr "<=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 693
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 508

  354 expr: expr ">=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 694
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 509

  351 expr: expr "==" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 695
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 510

  352 expr: expr "!=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 696
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 511

  310 expr_method_call: expr "->" . "name" '(' ')'
  311                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 697


State 512

  383 expr: expr "??" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 698
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 513

  371 expr: expr "?." . "name"
  419 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 699
    "name"  shift, and go to state 700


State 514

  369 expr: expr "?[" . expr ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 701
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 515

  407 expr: expr "<|" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 702
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 516

  408 expr: expr "|>" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 703
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 517

  342 expr: expr "<<<" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 704
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 518

  343 expr: expr ">>>" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 705
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 519

  358 expr: expr "&&" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 706
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 520

  359 expr: expr "||" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 707
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 521

  360 expr: expr "^^" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 708
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 522

  361 expr: expr ".." . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 709
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 523

  384 expr: expr '?' . expr ':' expr
  395     | expr '?' . "as" "name"
  398     | expr '?' . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr '?' . "as" basic_type_declaration
  423 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "as"                              shift, and go to state 710
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 711
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 524

  356 expr: expr '|' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 712
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 525

  357 expr: expr '^' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 713
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 526

  355 expr: expr '&' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 714
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 527

  349 expr: expr '<' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 715
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 528

  350 expr: expr '>' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 716
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 529

  345 expr: expr '-' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 717
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 530

  344 expr: expr '+' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 718
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 531

  346 expr: expr '*' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 719
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 532

  347 expr: expr '/' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 720
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 533

  348 expr: expr '%' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 721
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 534

  321 expr_field: expr '.' . "name"
  322           | expr '.' . '.' "name"
  325           | expr '.' . $@18 error $@19
  368 expr: expr '.' . '[' expr ']'
  370     | expr '.' . "?[" expr ']'
  372     | expr '.' . "?." "name"
  418 expr_mtag: expr '.' . "$f" '(' expr ')'
  420          | expr '.' . '.' "$f" '(' expr ')'
  421          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 722
    "?["    shift, and go to state 723
    "$f"    shift, and go to state 724
    "name"  shift, and go to state 725
    '.'     shift, and go to state 726
    '['     shift, and go to state 727

    $default  reduce using rule 323 ($@18)

    $@18  go to state 728


State 535

  367 expr: expr '[' . expr ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 729
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 536

  558 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 558 (auto_type_declaration)


State 537

  376 expr: basic_type_declaration '(' . ')'
  377     | basic_type_declaration '(' . expr_list ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    ')'                               shift, and go to state 730
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    expr_list               go to state 731
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 680
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 538

  572 type_declaration: type_declaration '-' '[' ']' .

    $default  reduce using rule 572 (type_declaration)


State 539

  570 type_declaration: type_declaration '[' expr ']' .

    $default  reduce using rule 570 (type_declaration)


State 540

  454 variant_type: "name" ':' type_declaration .
  570 type_declaration: type_declaration . '[' expr ']'
  571                 | type_declaration . '[' ']'
  572                 | type_declaration . '-' '[' ']'
  573                 | type_declaration . "explicit"
  574                 | type_declaration . "const"
  575                 | type_declaration . '-' "const"
  576                 | type_declaration . '&'
  577                 | type_declaration . '-' '&'
  578                 | type_declaration . '#'
  579                 | type_declaration . "implicit"
  580                 | type_declaration . '-' '#'
  581                 | type_declaration . '=' "const"
  582                 | type_declaration . '?'
  586                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251

    $default  reduce using rule 454 (variant_type)


State 541

  625 variant_alias_declaration: "variant" $@60 "name" $@61 '{' variant_type_list ';' '}' .

    $default  reduce using rule 625 (variant_alias_declaration)


State 542

  456 variant_type_list: variant_type_list ';' variant_type .

    $default  reduce using rule 456 (variant_type_list)


State 543

  447 function_argument_declaration: "$a" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 732
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 544

  446 function_argument_declaration: optional_field_annotation "var" . variable_declaration

    "$i"    shift, and go to state 545
    "name"  shift, and go to state 546

    variable_declaration         go to state 733
    variable_name_with_pos_list  go to state 548


State 545

  520 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 734


State 546

  519 variable_name_with_pos_list: "name" .
  521                            | "name" . "aka" "name"

    "aka"  shift, and go to state 735

    $default  reduce using rule 519 (variable_name_with_pos_list)


State 547

  445 function_argument_declaration: optional_field_annotation variable_declaration .

    $default  reduce using rule 445 (function_argument_declaration)


State 548

  459 variable_declaration: variable_name_with_pos_list .
  460                     | variable_name_with_pos_list . '&'
  461                     | variable_name_with_pos_list . ':' type_declaration
  462                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  463                     | variable_name_with_pos_list . copy_or_move expr
  464                     | variable_name_with_pos_list . copy_or_move expr_pipe
  522 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  523                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 736
    ','   shift, and go to state 737
    '='   shift, and go to state 738
    ':'   shift, and go to state 739
    '&'   shift, and go to state 740

    $default  reduce using rule 459 (variable_declaration)

    copy_or_move  go to state 741


State 549

  107 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 107 (optional_function_argument_list)


State 550

  449 function_argument_list: function_argument_list ';' . function_argument_declaration

    "$a"  shift, and go to state 423
    "[["  shift, and go to state 223

    $default  reduce using rule 426 (optional_field_annotation)

    optional_field_annotation      go to state 425
    function_argument_declaration  go to state 742


State 551

  109 optional_function_type: ':' type_declaration .
  570 type_declaration: type_declaration . '[' expr ']'
  571                 | type_declaration . '[' ']'
  572                 | type_declaration . '-' '[' ']'
  573                 | type_declaration . "explicit"
  574                 | type_declaration . "const"
  575                 | type_declaration . '-' "const"
  576                 | type_declaration . '&'
  577                 | type_declaration . '-' '&'
  578                 | type_declaration . '#'
  579                 | type_declaration . "implicit"
  580                 | type_declaration . '-' '#'
  581                 | type_declaration . '=' "const"
  582                 | type_declaration . '?'
  586                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251

    $default  reduce using rule 109 (optional_function_type)


State 552

  218 expressions: expressions error .

    $default  reduce using rule 218 (expressions)


State 553

   71 expression_while_loop: "while" . expr expression_block

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 743
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 554

   56 if_or_static_if: "if" .

    $default  reduce using rule 56 (if_or_static_if)


State 555

   57 if_or_static_if: "static_if" .

    $default  reduce using rule 57 (if_or_static_if)


State 556

   69 expression_for_loop: "for" . variable_name_with_pos_list "in" expr_list ';' expression_block

    "$i"    shift, and go to state 545
    "name"  shift, and go to state 546

    variable_name_with_pos_list  go to state 744


State 557

  232 expression_return_no_pipe: "return" .
  233                          | "return" . expr
  234                          | "return" . "<-" expr
  236 expression_return: "return" . expr_pipe
  237                  | "return" . "<-" expr_pipe

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "<-"                              shift, and go to state 745
    "@ <|"                            shift, and go to state 569
    "@@ <|"                           shift, and go to state 570
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    $default  reduce using rule 232 (expression_return_no_pipe)

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    expr_pipe               go to state 746
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_assign             go to state 747
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 748
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 558

  230 expression_break: "break" .

    $default  reduce using rule 230 (expression_break)


State 559

  243 expression_try_catch: "try" . expression_block "recover" expression_block

    '{'  shift, and go to state 311

    expression_block  go to state 749


State 560

  225 expression_delete: "delete" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 750
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 561

   72 expression_with: "with" . expr expression_block

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 751
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 562

   74 expression_with_alias: "assume" . "name" '=' $@4 expr

    "name"  shift, and go to state 752


State 563

  231 expression_continue: "continue" .

    $default  reduce using rule 231 (expression_continue)


State 564

  215 expression_any: "pass" . ';'

    ';'  shift, and go to state 753


State 565

   48 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 754


State 566

   49 expression_goto: "goto" . "label" "integer constant"
   50                | "goto" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "label"                           shift, and go to state 755
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 756
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 567

   70 expression_unsafe: "unsafe" . expression_block
  410 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 472
    '{'  shift, and go to state 311

    expression_block  go to state 757


State 568

  238 expression_yield_no_pipe: "yield" . expr
  239                         | "yield" . "<-" expr
  241 expression_yield: "yield" . expr_pipe
  242                 | "yield" . "<-" expr_pipe

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "<-"                              shift, and go to state 758
    "@ <|"                            shift, and go to state 569
    "@@ <|"                           shift, and go to state 570
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    expr_pipe               go to state 759
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_assign             go to state 747
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 760
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 569

  220 expr_pipe: "@ <|" . expr_block

    '$'  shift, and go to state 384
    '@'  shift, and go to state 761
    '{'  shift, and go to state 311

    expression_block  go to state 388
    block_or_lambda   go to state 394
    expr_block        go to state 762


State 570

  221 expr_pipe: "@@ <|" . expr_block

    '$'  shift, and go to state 384
    '@'  shift, and go to state 761
    '{'  shift, and go to state 311

    expression_block  go to state 388
    block_or_lambda   go to state 394
    expr_block        go to state 763


State 571

  196 expression_any: ';' .

    $default  reduce using rule 196 (expression_any)


State 572

  194 expression_block: '{' expressions '}' .
  195                 | '{' expressions '}' . "finally" '{' expressions '}'

    "finally"  shift, and go to state 764

    $default  reduce using rule 194 (expression_block)


State 573

  213 expression_any: expression_label . ';'

    ';'  shift, and go to state 765


State 574

  214 expression_any: expression_goto . ';'

    ';'  shift, and go to state 766


State 575

   66 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 767
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 576

   68 expression_if_then_else: expression_if_one_liner . "if" $@3 expr expression_else_one_liner ';'

    "if"  shift, and go to state 768


State 577

  211 expression_any: expression_if_then_else .

    $default  reduce using rule 211 (expression_any)


State 578

  206 expression_any: expression_for_loop .

    $default  reduce using rule 206 (expression_any)


State 579

  203 expression_any: expression_unsafe .

    $default  reduce using rule 203 (expression_any)


State 580

  202 expression_any: expression_while_loop .

    $default  reduce using rule 202 (expression_any)


State 581

  204 expression_any: expression_with .

    $default  reduce using rule 204 (expression_any)


State 582

  205 expression_any: expression_with_alias .

    $default  reduce using rule 205 (expression_any)


State 583

  217 expressions: expressions expression_any .

    $default  reduce using rule 217 (expressions)


State 584

  197 expression_any: expr_pipe .

    $default  reduce using rule 197 (expression_any)


State 585

  200 expression_any: expression_delete . ';'

    ';'  shift, and go to state 769


State 586

   64 expression_if_one_liner: expression_break .
  207 expression_any: expression_break . ';'

    ';'  shift, and go to state 770

    $default  reduce using rule 64 (expression_if_one_liner)


State 587

   65 expression_if_one_liner: expression_continue .
  208 expression_any: expression_continue . ';'

    ';'  shift, and go to state 771

    $default  reduce using rule 65 (expression_if_one_liner)


State 588

   62 expression_if_one_liner: expression_return_no_pipe .
  235 expression_return: expression_return_no_pipe . ';'

    ';'  shift, and go to state 772

    $default  reduce using rule 62 (expression_if_one_liner)


State 589

  209 expression_any: expression_return .

    $default  reduce using rule 209 (expression_any)


State 590

   63 expression_if_one_liner: expression_yield_no_pipe .
  240 expression_yield: expression_yield_no_pipe . ';'

    ';'  shift, and go to state 773

    $default  reduce using rule 63 (expression_if_one_liner)


State 591

  210 expression_any: expression_yield .

    $default  reduce using rule 210 (expression_any)


State 592

  212 expression_any: expression_try_catch .

    $default  reduce using rule 212 (expression_any)


State 593

  246 expression_let: kwd_let . let_variable_declaration

    "$i"    shift, and go to state 326
    "name"  shift, and go to state 327

    let_variable_name_with_pos_list  go to state 328
    let_variable_declaration         go to state 774


State 594

  201 expression_any: expression_let .

    $default  reduce using rule 201 (expression_any)


State 595

  199 expression_any: expr_assign . ';'
  219 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 775
    ';'    shift, and go to state 776


State 596

  198 expression_any: expr_assign_pipe .

    $default  reduce using rule 198 (expression_any)


State 597

   61 expression_if_one_liner: expr .
  286 expr_assign: expr .
  287            | expr . '=' expr
  288            | expr . "<-" expr
  289            | expr . ":=" expr
  290            | expr . "&=" expr
  291            | expr . "|=" expr
  292            | expr . "^=" expr
  293            | expr . "&&=" expr
  294            | expr . "||=" expr
  295            | expr . "^^=" expr
  296            | expr . "+=" expr
  297            | expr . "-=" expr
  298            | expr . "*=" expr
  299            | expr . "/=" expr
  300            | expr . "%=" expr
  301            | expr . "<<=" expr
  302            | expr . ">>=" expr
  303            | expr . "<<<=" expr
  304            | expr . ">>>=" expr
  305 expr_assign_pipe: expr . '=' "@ <|" expr
  306                 | expr . '=' "@@ <|" expr
  307                 | expr . "<-" "@ <|" expr
  308                 | expr . "<-" "@@ <|" expr
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 501
    "as"    shift, and go to state 502
    "+="    shift, and go to state 777
    "-="    shift, and go to state 778
    "/="    shift, and go to state 779
    "*="    shift, and go to state 780
    "%="    shift, and go to state 781
    "&="    shift, and go to state 782
    "|="    shift, and go to state 783
    "^="    shift, and go to state 784
    "<<"    shift, and go to state 503
    ">>"    shift, and go to state 504
    "++"    shift, and go to state 505
    "--"    shift, and go to state 506
    "<="    shift, and go to state 507
    "<<="   shift, and go to state 785
    ">>="   shift, and go to state 786
    ">="    shift, and go to state 508
    "=="    shift, and go to state 509
    "!="    shift, and go to state 510
    "->"    shift, and go to state 511
    "<-"    shift, and go to state 787
    "??"    shift, and go to state 512
    "?."    shift, and go to state 513
    "?["    shift, and go to state 514
    "<|"    shift, and go to state 515
    "|>"    shift, and go to state 516
    ":="    shift, and go to state 788
    "<<<"   shift, and go to state 517
    ">>>"   shift, and go to state 518
    "<<<="  shift, and go to state 789
    ">>>="  shift, and go to state 790
    "&&"    shift, and go to state 519
    "||"    shift, and go to state 520
    "^^"    shift, and go to state 521
    "&&="   shift, and go to state 791
    "||="   shift, and go to state 792
    "^^="   shift, and go to state 793
    ".."    shift, and go to state 522
    '='     shift, and go to state 794
    '?'     shift, and go to state 523
    '|'     shift, and go to state 524
    '^'     shift, and go to state 525
    '&'     shift, and go to state 526
    '<'     shift, and go to state 527
    '>'     shift, and go to state 528
    '-'     shift, and go to state 529
    '+'     shift, and go to state 530
    '*'     shift, and go to state 531
    '/'     shift, and go to state 532
    '%'     shift, and go to state 533
    '.'     shift, and go to state 534
    '['     shift, and go to state 535

    "if"      reduce using rule 61 (expression_if_one_liner)
    $default  reduce using rule 286 (expr_assign)


State 598

  492 enum_list: enum_list . "name" ';'
  493          | enum_list . "name" '=' expr ';'
  505 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list . '}'

    "name"  shift, and go to state 432
    '}'     shift, and go to state 795


State 599

  493 enum_list: enum_list "name" '=' . expr ';'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 796
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 600

  492 enum_list: enum_list "name" ';' .

    $default  reduce using rule 492 (enum_list)


State 601

  507 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 507 (optional_structure_parent)


State 602

  439 struct_variable_declaration_list: struct_variable_declaration_list . $@26 structure_variable_declaration ';'
  441                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" $@27 function_declaration_header ';'
  443                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant $@28 function_declaration_header expression_block
  444                                 | struct_variable_declaration_list . '[' annotation_list ']' ';'
  518 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name $@33 '{' struct_variable_declaration_list . '}'

    '['  shift, and go to state 797
    '}'  shift, and go to state 798

    "def"     reduce using rule 103 (optional_annotation_list)
    $default  reduce using rule 438 ($@26)

    optional_annotation_list  go to state 799
    $@26                      go to state 800


State 603

  482 global_variable_declaration_list: global_variable_declaration_list $@29 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 482 (global_variable_declaration_list)


State 604

  427 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 427 (optional_field_annotation)


State 605

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'
  471 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 801


State 606

  472 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 472 (let_variable_name_with_pos_list)


State 607

  473 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  474                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 802

    $default  reduce using rule 473 (let_variable_name_with_pos_list)


State 608

  475 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration . ';'
  476                         | let_variable_name_with_pos_list ':' type_declaration . copy_or_move_or_clone expr ';'
  477                         | let_variable_name_with_pos_list ':' type_declaration . copy_or_move_or_clone expr_pipe
  570 type_declaration: type_declaration . '[' expr ']'
  571                 | type_declaration . '[' ']'
  572                 | type_declaration . '-' '[' ']'
  573                 | type_declaration . "explicit"
  574                 | type_declaration . "const"
  575                 | type_declaration . '-' "const"
  576                 | type_declaration . '&'
  577                 | type_declaration . '-' '&'
  578                 | type_declaration . '#'
  579                 | type_declaration . "implicit"
  580                 | type_declaration . '-' '#'
  581                 | type_declaration . '=' "const"
  582                 | type_declaration . '?'
  586                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "<-"        shift, and go to state 609
    "??"        shift, and go to state 245
    ":="        shift, and go to state 610
    '='         shift, and go to state 803
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    ';'         shift, and go to state 804
    '#'         shift, and go to state 251

    copy_or_move_or_clone  go to state 805


State 609

  466 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 466 (copy_or_move_or_clone)


State 610

  467 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 467 (copy_or_move_or_clone)


State 611

  465 copy_or_move_or_clone: '=' .

    $default  reduce using rule 465 (copy_or_move_or_clone)


State 612

  478 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr ';'
  479                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "@ <|"                            shift, and go to state 569
    "@@ <|"                           shift, and go to state 570
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    expr_pipe               go to state 806
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_assign             go to state 747
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 807
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 613

  589 type_declaration: "array" '<' $@38 type_declaration '>' . $@39

    $default  reduce using rule 588 ($@39)

    $@39  go to state 808


State 614

  592 type_declaration: "table" '<' $@40 table_type_pair '>' . $@41

    $default  reduce using rule 591 ($@41)

    $@41  go to state 809


State 615

  565 table_type_pair: type_declaration ';' . type_declaration

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 810


State 616

  595 type_declaration: "iterator" '<' $@42 type_declaration '>' . $@43

    $default  reduce using rule 594 ($@43)

    $@43  go to state 811


State 617

  585 type_declaration: "smart_ptr" '<' $@36 type_declaration '>' . $@37

    $default  reduce using rule 584 ($@37)

    $@37  go to state 812


State 618

  563 bitfield_type_declaration: "bitfield" '<' $@34 bitfield_bits '>' . $@35

    $default  reduce using rule 562 ($@35)

    $@35  go to state 813


State 619

  560 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 416


State 620

  599 type_declaration: "block" '<' $@44 type_declaration '>' . $@45

    $default  reduce using rule 598 ($@45)

    $@45  go to state 814


State 621

  602 type_declaration: "block" '<' $@46 optional_function_argument_list optional_function_type . '>' $@47

    '>'  shift, and go to state 815


State 622

  606 type_declaration: "function" '<' $@48 type_declaration '>' . $@49

    $default  reduce using rule 605 ($@49)

    $@49  go to state 816


State 623

  609 type_declaration: "function" '<' $@50 optional_function_argument_list optional_function_type . '>' $@51

    '>'  shift, and go to state 817


State 624

  613 type_declaration: "lambda" '<' $@52 type_declaration '>' . $@53

    $default  reduce using rule 612 ($@53)

    $@53  go to state 818


State 625

  616 type_declaration: "lambda" '<' $@54 optional_function_argument_list optional_function_type . '>' $@55

    '>'  shift, and go to state 819


State 626

  451 tuple_type: "name" ':' . type_declaration

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 820


State 627

  619 type_declaration: "tuple" '<' $@56 tuple_type_list '>' . $@57

    $default  reduce using rule 618 ($@57)

    $@57  go to state 821


State 628

  453 tuple_type_list: tuple_type_list ';' . tuple_type

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 458

    name_in_namespace           go to state 177
    tuple_type                  go to state 822
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 461


State 629

  622 type_declaration: "variant" '<' $@58 variant_type_list '>' . $@59

    $default  reduce using rule 621 ($@59)

    $@59  go to state 823


State 630

  456 variant_type_list: variant_type_list ';' . variant_type

    "name"  shift, and go to state 253

    variant_type  go to state 542


State 631

  227 expr_new: "new" type_declaration '(' . ')'
  228         | "new" type_declaration '(' . expr_list ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    ')'                               shift, and go to state 824
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    expr_list               go to state 825
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 680
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 632

  259 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  260               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  261               | "typeinfo" '(' name_in_namespace . '<' "name" ';' "name" '>' expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '<'                               shift, and go to state 826
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 827
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 633

  258 expr_type_decl: "type" '<' $@12 . type_declaration '>' $@13

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 828


State 634

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  379     | "deref" '(' expr . ')'
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 829


State 635

  249 expr_cast: "cast" '<' $@6 . type_declaration '>' $@7 expr

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 830


State 636

  252 expr_cast: "upcast" '<' $@8 . type_declaration '>' $@9 expr

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 831


State 637

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  380     | "addr" '(' expr . ')'
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 832


State 638

  255 expr_cast: "reinterpret" '<' $@10 . type_declaration '>' $@11 expr

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 833


State 639

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  410     | "unsafe" '(' expr . ')'
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 834


State 640

  381 expr: "generator" '<' type_declaration . '>' optional_capture_list '(' ')'
  382     | "generator" '<' type_declaration . '>' optional_capture_list '(' expr ')'
  570 type_declaration: type_declaration . '[' expr ']'
  571                 | type_declaration . '[' ']'
  572                 | type_declaration . '-' '[' ']'
  573                 | type_declaration . "explicit"
  574                 | type_declaration . "const"
  575                 | type_declaration . '-' "const"
  576                 | type_declaration . '&'
  577                 | type_declaration . '-' '&'
  578                 | type_declaration . '#'
  579                 | type_declaration . "implicit"
  580                 | type_declaration . '-' '#'
  581                 | type_declaration . '=' "const"
  582                 | type_declaration . '?'
  586                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 835
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 641

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  411 expr_mtag: "$$" '(' expr . ')'
  418          | expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 836


State 642

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  412 expr_mtag: "$i" '(' expr . ')'
  418          | expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 837


State 643

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  413 expr_mtag: "$v" '(' expr . ')'
  418          | expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 838


State 644

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  414 expr_mtag: "$b" '(' expr . ')'
  418          | expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 839


State 645

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  415 expr_mtag: "$a" '(' expr . ')'
  418          | expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 840


State 646

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  416 expr_mtag: "$c" '(' expr . ')' '(' ')'
  417          | "$c" '(' expr . ')' '(' expr_list ')'
  418          | expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 841


State 647

  522 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  523                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  661 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 842
    ','   shift, and go to state 737


State 648

  639 optional_block: "where" . expr_block

    '$'  shift, and go to state 384
    '@'  shift, and go to state 761
    '{'  shift, and go to state 311

    expression_block  go to state 388
    block_or_lambda   go to state 394
    expr_block        go to state 843


State 649

  222 name_in_namespace: "name" .
  223                  | "name" . "::" "name"
  632 make_struct_fields: "name" . copy_or_move expr
  633                   | "name" . ":=" expr

    "<-"  shift, and go to state 736
    ":="  shift, and go to state 844
    "::"  shift, and go to state 80
    '='   shift, and go to state 738

    $default  reduce using rule 222 (name_in_namespace)

    copy_or_move  go to state 845


State 650

  339 expr: '-' . expr
  572 type_declaration: type_declaration '-' . '[' ']'
  575                 | type_declaration '-' . "const"
  577                 | type_declaration '-' . '&'
  580                 | type_declaration '-' . '#'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "const"                           shift, and go to state 410
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '&'                               shift, and go to state 411
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '['                               shift, and go to state 412
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311
    '#'                               shift, and go to state 413

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 490
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 651

  366 expr: '(' . expr ')'
  642 make_struct_decl: "[[" type_declaration '(' . ')' optional_block ']' ']'
  643                 | "[[" type_declaration '(' . ')' make_struct_dim optional_block ']' ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    ')'                               shift, and go to state 846
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 496
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 652

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'
  646 make_tuple: expr .
  648 make_map_tuple: expr . "=>" expr
  649               | expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "=>"   shift, and go to state 664
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    ']'       reduce using rule 646 (make_tuple)
    ']'       [reduce using rule 649 (make_map_tuple)]
    ';'       reduce using rule 646 (make_tuple)
    ';'       [reduce using rule 649 (make_map_tuple)]
    '}'       reduce using rule 646 (make_tuple)
    '}'       [reduce using rule 649 (make_map_tuple)]
    $default  reduce using rule 646 (make_tuple)


State 653

  634 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  635                   | make_struct_fields . ',' "name" ":=" expr
  636 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 847

    $default  reduce using rule 636 (make_struct_dim)


State 654

  637 make_struct_dim: make_struct_dim . ';' make_struct_fields
  640 make_struct_decl: "[[" type_declaration make_struct_dim . optional_block ']' ']'

    "where"  shift, and go to state 648
    ';'      shift, and go to state 848

    $default  reduce using rule 638 (optional_block)

    optional_block  go to state 849


State 655

  641 make_struct_decl: "[[" type_declaration optional_block . ']' ']'

    ']'  shift, and go to state 850


State 656

  647 make_tuple: make_tuple . ',' expr
  650 make_any_tuple: make_tuple .

    ','  shift, and go to state 851

    $default  reduce using rule 650 (make_any_tuple)


State 657

  651 make_any_tuple: make_map_tuple .

    $default  reduce using rule 651 (make_any_tuple)


State 658

  652 make_dim: make_any_tuple .

    $default  reduce using rule 652 (make_dim)


State 659

  653 make_dim: make_dim . ';' make_any_tuple
  654 make_dim_decl: "[[" type_declaration make_dim . ']' ']'

    ']'  shift, and go to state 852
    ';'  shift, and go to state 853


State 660

  522 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  523                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  662 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where '}' ']'

    "in"  shift, and go to state 854
    ','   shift, and go to state 737


State 661

  366 expr: '(' . expr ')'
  645 make_struct_decl: "[{" type_declaration '(' . ')' make_struct_dim optional_block '}' ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    ')'                               shift, and go to state 855
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 496
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 662

  637 make_struct_dim: make_struct_dim . ';' make_struct_fields
  644 make_struct_decl: "[{" type_declaration make_struct_dim . optional_block '}' ']'

    "where"  shift, and go to state 648
    ';'      shift, and go to state 848

    $default  reduce using rule 638 (optional_block)

    optional_block  go to state 856


State 663

  653 make_dim: make_dim . ';' make_any_tuple
  655 make_dim_decl: "[{" type_declaration make_dim . '}' ']'

    ';'  shift, and go to state 853
    '}'  shift, and go to state 857


State 664

  648 make_map_tuple: expr "=>" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 858
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 665

  657 make_table: make_table ';' . make_map_tuple

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 486
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_map_tuple          go to state 859
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 666

  658 make_table_decl: "{{" make_table '}' . '}'

    '}'  shift, and go to state 860


State 667

   28 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 28 (string_builder)


State 668

   27 string_builder_body: string_builder_body "{" . expr "}"

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 861
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 669

   22 character_sequence: character_sequence . STRING_CHARACTER
   23                   | character_sequence . STRING_CHARACTER_ESC
   26 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 225
    STRING_CHARACTER_ESC  shift, and go to state 226

    STRING_CHARACTER      [reduce using rule 26 (string_builder_body)]
    STRING_CHARACTER_ESC  [reduce using rule 26 (string_builder_body)]
    $default              reduce using rule 26 (string_builder_body)


State 670

   32 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 862

    reader_character_sequence  go to state 863


State 671

  366 expr: '(' expr ')' .

    $default  reduce using rule 366 (expr)


State 672

  313 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 864


State 673

  425 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 865


State 674

  317 func_addr_expr: '@' '@' '<' . $@14 type_declaration '>' $@15 func_addr_name
  320               | '@' '@' '<' . $@16 optional_function_argument_list optional_function_type '>' $@17 func_addr_name

    ':'       reduce using rule 318 ($@16)
    '>'       reduce using rule 318 ($@16)
    '('       reduce using rule 318 ($@16)
    $default  reduce using rule 315 ($@14)

    $@14  go to state 866
    $@16  go to state 867


State 675

  312 func_addr_name: name_in_namespace .

    $default  reduce using rule 312 (func_addr_name)


State 676

  314 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 314 (func_addr_expr)


State 677

  309 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'

    "name"  shift, and go to state 868

    make_struct_fields  go to state 869


State 678

  374 expr: name_in_namespace '(' ')' .

    $default  reduce using rule 374 (expr)


State 679

  263 expr_list: expr_list . ',' expr
  375 expr: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 870
    ')'  shift, and go to state 871


State 680

  262 expr_list: expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 262 (expr_list)


State 681

  277 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"  shift, and go to state 872
    ":="  shift, and go to state 873
    '='   shift, and go to state 874
    '&'   shift, and go to state 875

    capture_entry  go to state 876
    capture_list   go to state 877


State 682

  279 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 309

    $default  reduce using rule 105 (optional_function_argument_list)

    optional_function_argument_list  go to state 878


State 683

  387 expr: expr "is" "type" . '<' $@20 type_declaration '>' $@21

    '<'  shift, and go to state 879


State 684

  424 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 880


State 685

  389 expr: expr "is" "name" .

    $default  reduce using rule 389 (expr)


State 686

  388 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 388 (expr)


State 687

  393 expr: expr "as" "type" . '<' $@22 type_declaration '>' $@23

    '<'  shift, and go to state 881


State 688

  422 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 882


State 689

  390 expr: expr "as" "name" .

    $default  reduce using rule 390 (expr)


State 690

  394 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 394 (expr)


State 691

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  340     | expr "<<" expr .
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '-'   shift, and go to state 529
    '+'   shift, and go to state 530
    '*'   shift, and go to state 531
    '/'   shift, and go to state 532
    '%'   shift, and go to state 533
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 340 (expr)


State 692

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  341     | expr ">>" expr .
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '-'   shift, and go to state 529
    '+'   shift, and go to state 530
    '*'   shift, and go to state 531
    '/'   shift, and go to state 532
    '%'   shift, and go to state 533
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 341 (expr)


State 693

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  353     | expr "<=" expr .
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 353 (expr)


State 694

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  354     | expr ">=" expr .
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 354 (expr)


State 695

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  351     | expr "==" expr .
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 351 (expr)


State 696

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  352     | expr "!=" expr .
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 352 (expr)


State 697

  310 expr_method_call: expr "->" "name" . '(' ')'
  311                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 883


State 698

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  383     | expr "??" expr .
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 383 (expr)


State 699

  419 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 884


State 700

  371 expr: expr "?." "name" .

    $default  reduce using rule 371 (expr)


State 701

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  369     | expr "?[" expr . ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ']'    shift, and go to state 885


State 702

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  407     | expr "<|" expr .
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 511
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 407 (expr)


State 703

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  408     | expr "|>" expr .
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 511
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 408 (expr)


State 704

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  342     | expr "<<<" expr .
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '-'   shift, and go to state 529
    '+'   shift, and go to state 530
    '*'   shift, and go to state 531
    '/'   shift, and go to state 532
    '%'   shift, and go to state 533
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 342 (expr)


State 705

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  343     | expr ">>>" expr .
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '-'   shift, and go to state 529
    '+'   shift, and go to state 530
    '*'   shift, and go to state 531
    '/'   shift, and go to state 532
    '%'   shift, and go to state 533
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 343 (expr)


State 706

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  358     | expr "&&" expr .
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 358 (expr)


State 707

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  359     | expr "||" expr .
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "^^"   shift, and go to state 521
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 359 (expr)


State 708

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  360     | expr "^^" expr .
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 360 (expr)


State 709

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  361     | expr ".." expr .
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    ".."  error (nonassociative)

    $default  reduce using rule 361 (expr)


State 710

  395 expr: expr '?' "as" . "name"
  398     | expr '?' "as" . "type" '<' $@24 type_declaration '>' $@25
  399     | expr '?' "as" . basic_type_declaration
  423 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 886
    "bool"      shift, and go to state 145
    "void"      shift, and go to state 146
    "string"    shift, and go to state 147
    "int"       shift, and go to state 149
    "int2"      shift, and go to state 150
    "int3"      shift, and go to state 151
    "int4"      shift, and go to state 152
    "uint"      shift, and go to state 153
    "bitfield"  shift, and go to state 357
    "uint2"     shift, and go to state 155
    "uint3"     shift, and go to state 156
    "uint4"     shift, and go to state 157
    "float"     shift, and go to state 158
    "float2"    shift, and go to state 159
    "float3"    shift, and go to state 160
    "float4"    shift, and go to state 161
    "range"     shift, and go to state 162
    "urange"    shift, and go to state 163
    "int64"     shift, and go to state 165
    "uint64"    shift, and go to state 166
    "double"    shift, and go to state 167
    "int8"      shift, and go to state 170
    "uint8"     shift, and go to state 171
    "int16"     shift, and go to state 172
    "uint16"    shift, and go to state 173
    "$f"        shift, and go to state 887
    "name"      shift, and go to state 888

    basic_type_declaration  go to state 889


State 711

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  384     | expr '?' expr . ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    ':'    shift, and go to state 890
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535


State 712

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  356     | expr '|' expr .
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 356 (expr)


State 713

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  357     | expr '^' expr .
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 357 (expr)


State 714

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  355     | expr '&' expr .
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 355 (expr)


State 715

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  349     | expr '<' expr .
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 349 (expr)


State 716

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  350     | expr '>' expr .
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 350 (expr)


State 717

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  345     | expr '-' expr .
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '*'   shift, and go to state 531
    '/'   shift, and go to state 532
    '%'   shift, and go to state 533
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 345 (expr)


State 718

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  344     | expr '+' expr .
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '*'   shift, and go to state 531
    '/'   shift, and go to state 532
    '%'   shift, and go to state 533
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 344 (expr)


State 719

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  346     | expr '*' expr .
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 346 (expr)


State 720

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  347     | expr '/' expr .
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 347 (expr)


State 721

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  348     | expr '%' expr .
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 348 (expr)


State 722

  372 expr: expr '.' "?." . "name"
  421 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 891
    "name"  shift, and go to state 892


State 723

  370 expr: expr '.' "?[" . expr ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 893
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 724

  418 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 894


State 725

  321 expr_field: expr '.' "name" .

    $default  reduce using rule 321 (expr_field)


State 726

  322 expr_field: expr '.' '.' . "name"
  420 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 895
    "name"  shift, and go to state 896


State 727

  368 expr: expr '.' '[' . expr ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 897
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 728

  325 expr_field: expr '.' $@18 . error $@19

    error  shift, and go to state 898


State 729

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  367     | expr '[' expr . ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ']'    shift, and go to state 899


State 730

  376 expr: basic_type_declaration '(' ')' .

    $default  reduce using rule 376 (expr)


State 731

  263 expr_list: expr_list . ',' expr
  377 expr: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 870
    ')'  shift, and go to state 900


State 732

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'
  447 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 901


State 733

  446 function_argument_declaration: optional_field_annotation "var" variable_declaration .

    $default  reduce using rule 446 (function_argument_declaration)


State 734

  520 variable_name_with_pos_list: "$i" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 902
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 735

  521 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 903


State 736

  458 copy_or_move: "<-" .

    $default  reduce using rule 458 (copy_or_move)


State 737

  522 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  523                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 904


State 738

  457 copy_or_move: '=' .

    $default  reduce using rule 457 (copy_or_move)


State 739

  461 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  462                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 905


State 740

  460 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 460 (variable_declaration)


State 741

  463 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  464                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "@ <|"                            shift, and go to state 569
    "@@ <|"                           shift, and go to state 570
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    expr_pipe               go to state 906
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_assign             go to state 747
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 907
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 742

  449 function_argument_list: function_argument_list ';' function_argument_declaration .

    $default  reduce using rule 449 (function_argument_list)


State 743

   71 expression_while_loop: "while" expr . expression_block
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    '{'    shift, and go to state 311

    expression_block  go to state 908


State 744

   69 expression_for_loop: "for" variable_name_with_pos_list . "in" expr_list ';' expression_block
  522 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  523                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 909
    ','   shift, and go to state 737


State 745

  234 expression_return_no_pipe: "return" "<-" . expr
  237 expression_return: "return" "<-" . expr_pipe

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "@ <|"                            shift, and go to state 569
    "@@ <|"                           shift, and go to state 570
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    expr_pipe               go to state 910
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_assign             go to state 747
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 911
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 746

  236 expression_return: "return" expr_pipe .

    $default  reduce using rule 236 (expression_return)


State 747

  219 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 775


State 748

  233 expression_return_no_pipe: "return" expr .
  286 expr_assign: expr .
  287            | expr . '=' expr
  288            | expr . "<-" expr
  289            | expr . ":=" expr
  290            | expr . "&=" expr
  291            | expr . "|=" expr
  292            | expr . "^=" expr
  293            | expr . "&&=" expr
  294            | expr . "||=" expr
  295            | expr . "^^=" expr
  296            | expr . "+=" expr
  297            | expr . "-=" expr
  298            | expr . "*=" expr
  299            | expr . "/=" expr
  300            | expr . "%=" expr
  301            | expr . "<<=" expr
  302            | expr . ">>=" expr
  303            | expr . "<<<=" expr
  304            | expr . ">>>=" expr
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 501
    "as"    shift, and go to state 502
    "+="    shift, and go to state 777
    "-="    shift, and go to state 778
    "/="    shift, and go to state 779
    "*="    shift, and go to state 780
    "%="    shift, and go to state 781
    "&="    shift, and go to state 782
    "|="    shift, and go to state 783
    "^="    shift, and go to state 784
    "<<"    shift, and go to state 503
    ">>"    shift, and go to state 504
    "++"    shift, and go to state 505
    "--"    shift, and go to state 506
    "<="    shift, and go to state 507
    "<<="   shift, and go to state 785
    ">>="   shift, and go to state 786
    ">="    shift, and go to state 508
    "=="    shift, and go to state 509
    "!="    shift, and go to state 510
    "->"    shift, and go to state 511
    "<-"    shift, and go to state 912
    "??"    shift, and go to state 512
    "?."    shift, and go to state 513
    "?["    shift, and go to state 514
    "<|"    shift, and go to state 515
    "|>"    shift, and go to state 516
    ":="    shift, and go to state 788
    "<<<"   shift, and go to state 517
    ">>>"   shift, and go to state 518
    "<<<="  shift, and go to state 789
    ">>>="  shift, and go to state 790
    "&&"    shift, and go to state 519
    "||"    shift, and go to state 520
    "^^"    shift, and go to state 521
    "&&="   shift, and go to state 791
    "||="   shift, and go to state 792
    "^^="   shift, and go to state 793
    ".."    shift, and go to state 522
    '='     shift, and go to state 913
    '?'     shift, and go to state 523
    '|'     shift, and go to state 524
    '^'     shift, and go to state 525
    '&'     shift, and go to state 526
    '<'     shift, and go to state 527
    '>'     shift, and go to state 528
    '-'     shift, and go to state 529
    '+'     shift, and go to state 530
    '*'     shift, and go to state 531
    '/'     shift, and go to state 532
    '%'     shift, and go to state 533
    '.'     shift, and go to state 534
    '['     shift, and go to state 535

    " <|"     reduce using rule 286 (expr_assign)
    $default  reduce using rule 233 (expression_return_no_pipe)


State 749

  243 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 914


State 750

  225 expression_delete: "delete" expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 225 (expression_delete)


State 751

   72 expression_with: "with" expr . expression_block
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    '{'    shift, and go to state 311

    expression_block  go to state 915


State 752

   74 expression_with_alias: "assume" "name" . '=' $@4 expr

    '='  shift, and go to state 916


State 753

  215 expression_any: "pass" ';' .

    $default  reduce using rule 215 (expression_any)


State 754

   48 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 917


State 755

   49 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 918


State 756

   50 expression_goto: "goto" expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 50 (expression_goto)


State 757

   70 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 70 (expression_unsafe)


State 758

  239 expression_yield_no_pipe: "yield" "<-" . expr
  242 expression_yield: "yield" "<-" . expr_pipe

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "@ <|"                            shift, and go to state 569
    "@@ <|"                           shift, and go to state 570
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    expr_pipe               go to state 919
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_assign             go to state 747
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 920
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 759

  241 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 241 (expression_yield)


State 760

  238 expression_yield_no_pipe: "yield" expr .
  286 expr_assign: expr .
  287            | expr . '=' expr
  288            | expr . "<-" expr
  289            | expr . ":=" expr
  290            | expr . "&=" expr
  291            | expr . "|=" expr
  292            | expr . "^=" expr
  293            | expr . "&&=" expr
  294            | expr . "||=" expr
  295            | expr . "^^=" expr
  296            | expr . "+=" expr
  297            | expr . "-=" expr
  298            | expr . "*=" expr
  299            | expr . "/=" expr
  300            | expr . "%=" expr
  301            | expr . "<<=" expr
  302            | expr . ">>=" expr
  303            | expr . "<<<=" expr
  304            | expr . ">>>=" expr
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 501
    "as"    shift, and go to state 502
    "+="    shift, and go to state 777
    "-="    shift, and go to state 778
    "/="    shift, and go to state 779
    "*="    shift, and go to state 780
    "%="    shift, and go to state 781
    "&="    shift, and go to state 782
    "|="    shift, and go to state 783
    "^="    shift, and go to state 784
    "<<"    shift, and go to state 503
    ">>"    shift, and go to state 504
    "++"    shift, and go to state 505
    "--"    shift, and go to state 506
    "<="    shift, and go to state 507
    "<<="   shift, and go to state 785
    ">>="   shift, and go to state 786
    ">="    shift, and go to state 508
    "=="    shift, and go to state 509
    "!="    shift, and go to state 510
    "->"    shift, and go to state 511
    "<-"    shift, and go to state 912
    "??"    shift, and go to state 512
    "?."    shift, and go to state 513
    "?["    shift, and go to state 514
    "<|"    shift, and go to state 515
    "|>"    shift, and go to state 516
    ":="    shift, and go to state 788
    "<<<"   shift, and go to state 517
    ">>>"   shift, and go to state 518
    "<<<="  shift, and go to state 789
    ">>>="  shift, and go to state 790
    "&&"    shift, and go to state 519
    "||"    shift, and go to state 520
    "^^"    shift, and go to state 521
    "&&="   shift, and go to state 791
    "||="   shift, and go to state 792
    "^^="   shift, and go to state 793
    ".."    shift, and go to state 522
    '='     shift, and go to state 913
    '?'     shift, and go to state 523
    '|'     shift, and go to state 524
    '^'     shift, and go to state 525
    '&'     shift, and go to state 526
    '<'     shift, and go to state 527
    '>'     shift, and go to state 528
    '-'     shift, and go to state 529
    '+'     shift, and go to state 530
    '*'     shift, and go to state 531
    '/'     shift, and go to state 532
    '%'     shift, and go to state 533
    '.'     shift, and go to state 534
    '['     shift, and go to state 535

    " <|"     reduce using rule 286 (expr_assign)
    $default  reduce using rule 238 (expression_yield_no_pipe)


State 761

  268 block_or_lambda: '@' .
  269                | '@' . '@'

    '@'  shift, and go to state 921

    $default  reduce using rule 268 (block_or_lambda)


State 762

  220 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 220 (expr_pipe)


State 763

  221 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 221 (expr_pipe)


State 764

  195 expression_block: '{' expressions '}' "finally" . '{' expressions '}'

    '{'  shift, and go to state 922


State 765

  213 expression_any: expression_label ';' .

    $default  reduce using rule 213 (expression_any)


State 766

  214 expression_any: expression_goto ';' .

    $default  reduce using rule 214 (expression_any)


State 767

   66 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    '{'    shift, and go to state 311

    expression_block  go to state 923


State 768

   68 expression_if_then_else: expression_if_one_liner "if" . $@3 expr expression_else_one_liner ';'

    $default  reduce using rule 67 ($@3)

    $@3  go to state 924


State 769

  200 expression_any: expression_delete ';' .

    $default  reduce using rule 200 (expression_any)


State 770

  207 expression_any: expression_break ';' .

    $default  reduce using rule 207 (expression_any)


State 771

  208 expression_any: expression_continue ';' .

    $default  reduce using rule 208 (expression_any)


State 772

  235 expression_return: expression_return_no_pipe ';' .

    $default  reduce using rule 235 (expression_return)


State 773

  240 expression_yield: expression_yield_no_pipe ';' .

    $default  reduce using rule 240 (expression_yield)


State 774

  246 expression_let: kwd_let let_variable_declaration .

    $default  reduce using rule 246 (expression_let)


State 775

  219 expr_pipe: expr_assign " <|" . expr_block

    '$'  shift, and go to state 384
    '@'  shift, and go to state 761
    '{'  shift, and go to state 311

    expression_block  go to state 388
    block_or_lambda   go to state 394
    expr_block        go to state 925


State 776

  199 expression_any: expr_assign ';' .

    $default  reduce using rule 199 (expression_any)


State 777

  296 expr_assign: expr "+=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 926
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 778

  297 expr_assign: expr "-=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 927
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 779

  299 expr_assign: expr "/=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 928
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 780

  298 expr_assign: expr "*=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 929
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 781

  300 expr_assign: expr "%=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 930
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 782

  290 expr_assign: expr "&=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 931
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 783

  291 expr_assign: expr "|=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 932
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 784

  292 expr_assign: expr "^=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 933
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 785

  301 expr_assign: expr "<<=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 934
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 786

  302 expr_assign: expr ">>=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 935
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 787

  288 expr_assign: expr "<-" . expr
  307 expr_assign_pipe: expr "<-" . "@ <|" expr
  308                 | expr "<-" . "@@ <|" expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "@ <|"                            shift, and go to state 936
    "@@ <|"                           shift, and go to state 937
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 938
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 788

  289 expr_assign: expr ":=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 939
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 789

  303 expr_assign: expr "<<<=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 940
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 790

  304 expr_assign: expr ">>>=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 941
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 791

  293 expr_assign: expr "&&=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 942
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 792

  294 expr_assign: expr "||=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 943
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 793

  295 expr_assign: expr "^^=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 944
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 794

  287 expr_assign: expr '=' . expr
  305 expr_assign_pipe: expr '=' . "@ <|" expr
  306                 | expr '=' . "@@ <|" expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "@ <|"                            shift, and go to state 945
    "@@ <|"                           shift, and go to state 946
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 947
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 795

  505 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list '}' .

    $default  reduce using rule 505 (enum_declaration)


State 796

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'
  493 enum_list: enum_list "name" '=' expr . ';'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ';'    shift, and go to state 948


State 797

  104 optional_annotation_list: '[' . annotation_list ']'
  444 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' ';'

    "require"  shift, and go to state 48
    "private"  shift, and go to state 49
    "::"       shift, and go to state 50
    "name"     shift, and go to state 51

    annotation_declaration_name  go to state 52
    annotation_declaration       go to state 53
    annotation_list              go to state 949
    name_in_namespace            go to state 55


State 798

  518 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name $@33 '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 518 (structure_declaration)


State 799

  441 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" $@27 function_declaration_header ';'
  443                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_override optional_constant $@28 function_declaration_header expression_block

    "def"  shift, and go to state 950


State 800

  439 struct_variable_declaration_list: struct_variable_declaration_list $@26 . structure_variable_declaration ';'

    "[["  shift, and go to state 223

    $default  reduce using rule 426 (optional_field_annotation)

    optional_field_annotation       go to state 951
    structure_variable_declaration  go to state 952


State 801

  471 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 471 (let_variable_name_with_pos_list)


State 802

  474 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 953


State 803

  465 copy_or_move_or_clone: '=' .
  581 type_declaration: type_declaration '=' . "const"

    "const"  shift, and go to state 409

    $default  reduce using rule 465 (copy_or_move_or_clone)


State 804

  475 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration ';' .

    $default  reduce using rule 475 (let_variable_declaration)


State 805

  476 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone . expr ';'
  477                         | let_variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone . expr_pipe

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "@ <|"                            shift, and go to state 569
    "@@ <|"                           shift, and go to state 570
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    expr_pipe               go to state 954
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_assign             go to state 747
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 955
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 806

  479 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 479 (let_variable_declaration)


State 807

  286 expr_assign: expr .
  287            | expr . '=' expr
  288            | expr . "<-" expr
  289            | expr . ":=" expr
  290            | expr . "&=" expr
  291            | expr . "|=" expr
  292            | expr . "^=" expr
  293            | expr . "&&=" expr
  294            | expr . "||=" expr
  295            | expr . "^^=" expr
  296            | expr . "+=" expr
  297            | expr . "-=" expr
  298            | expr . "*=" expr
  299            | expr . "/=" expr
  300            | expr . "%=" expr
  301            | expr . "<<=" expr
  302            | expr . ">>=" expr
  303            | expr . "<<<=" expr
  304            | expr . ">>>=" expr
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'
  478 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 501
    "as"    shift, and go to state 502
    "+="    shift, and go to state 777
    "-="    shift, and go to state 778
    "/="    shift, and go to state 779
    "*="    shift, and go to state 780
    "%="    shift, and go to state 781
    "&="    shift, and go to state 782
    "|="    shift, and go to state 783
    "^="    shift, and go to state 784
    "<<"    shift, and go to state 503
    ">>"    shift, and go to state 504
    "++"    shift, and go to state 505
    "--"    shift, and go to state 506
    "<="    shift, and go to state 507
    "<<="   shift, and go to state 785
    ">>="   shift, and go to state 786
    ">="    shift, and go to state 508
    "=="    shift, and go to state 509
    "!="    shift, and go to state 510
    "->"    shift, and go to state 511
    "<-"    shift, and go to state 912
    "??"    shift, and go to state 512
    "?."    shift, and go to state 513
    "?["    shift, and go to state 514
    "<|"    shift, and go to state 515
    "|>"    shift, and go to state 516
    ":="    shift, and go to state 788
    "<<<"   shift, and go to state 517
    ">>>"   shift, and go to state 518
    "<<<="  shift, and go to state 789
    ">>>="  shift, and go to state 790
    "&&"    shift, and go to state 519
    "||"    shift, and go to state 520
    "^^"    shift, and go to state 521
    "&&="   shift, and go to state 791
    "||="   shift, and go to state 792
    "^^="   shift, and go to state 793
    ".."    shift, and go to state 522
    '='     shift, and go to state 913
    '?'     shift, and go to state 523
    '|'     shift, and go to state 524
    '^'     shift, and go to state 525
    '&'     shift, and go to state 526
    '<'     shift, and go to state 527
    '>'     shift, and go to state 528
    '-'     shift, and go to state 529
    '+'     shift, and go to state 530
    '*'     shift, and go to state 531
    '/'     shift, and go to state 532
    '%'     shift, and go to state 533
    '.'     shift, and go to state 534
    '['     shift, and go to state 535
    ';'     shift, and go to state 956

    $default  reduce using rule 286 (expr_assign)


State 808

  589 type_declaration: "array" '<' $@38 type_declaration '>' $@39 .

    $default  reduce using rule 589 (type_declaration)


State 809

  592 type_declaration: "table" '<' $@40 table_type_pair '>' $@41 .

    $default  reduce using rule 592 (type_declaration)


State 810

  565 table_type_pair: type_declaration ';' type_declaration .
  570 type_declaration: type_declaration . '[' expr ']'
  571                 | type_declaration . '[' ']'
  572                 | type_declaration . '-' '[' ']'
  573                 | type_declaration . "explicit"
  574                 | type_declaration . "const"
  575                 | type_declaration . '-' "const"
  576                 | type_declaration . '&'
  577                 | type_declaration . '-' '&'
  578                 | type_declaration . '#'
  579                 | type_declaration . "implicit"
  580                 | type_declaration . '-' '#'
  581                 | type_declaration . '=' "const"
  582                 | type_declaration . '?'
  586                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251

    $default  reduce using rule 565 (table_type_pair)


State 811

  595 type_declaration: "iterator" '<' $@42 type_declaration '>' $@43 .

    $default  reduce using rule 595 (type_declaration)


State 812

  585 type_declaration: "smart_ptr" '<' $@36 type_declaration '>' $@37 .

    $default  reduce using rule 585 (type_declaration)


State 813

  563 bitfield_type_declaration: "bitfield" '<' $@34 bitfield_bits '>' $@35 .

    $default  reduce using rule 563 (bitfield_type_declaration)


State 814

  599 type_declaration: "block" '<' $@44 type_declaration '>' $@45 .

    $default  reduce using rule 599 (type_declaration)


State 815

  602 type_declaration: "block" '<' $@46 optional_function_argument_list optional_function_type '>' . $@47

    $default  reduce using rule 601 ($@47)

    $@47  go to state 957


State 816

  606 type_declaration: "function" '<' $@48 type_declaration '>' $@49 .

    $default  reduce using rule 606 (type_declaration)


State 817

  609 type_declaration: "function" '<' $@50 optional_function_argument_list optional_function_type '>' . $@51

    $default  reduce using rule 608 ($@51)

    $@51  go to state 958


State 818

  613 type_declaration: "lambda" '<' $@52 type_declaration '>' $@53 .

    $default  reduce using rule 613 (type_declaration)


State 819

  616 type_declaration: "lambda" '<' $@54 optional_function_argument_list optional_function_type '>' . $@55

    $default  reduce using rule 615 ($@55)

    $@55  go to state 959


State 820

  451 tuple_type: "name" ':' type_declaration .
  570 type_declaration: type_declaration . '[' expr ']'
  571                 | type_declaration . '[' ']'
  572                 | type_declaration . '-' '[' ']'
  573                 | type_declaration . "explicit"
  574                 | type_declaration . "const"
  575                 | type_declaration . '-' "const"
  576                 | type_declaration . '&'
  577                 | type_declaration . '-' '&'
  578                 | type_declaration . '#'
  579                 | type_declaration . "implicit"
  580                 | type_declaration . '-' '#'
  581                 | type_declaration . '=' "const"
  582                 | type_declaration . '?'
  586                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251

    $default  reduce using rule 451 (tuple_type)


State 821

  619 type_declaration: "tuple" '<' $@56 tuple_type_list '>' $@57 .

    $default  reduce using rule 619 (type_declaration)


State 822

  453 tuple_type_list: tuple_type_list ';' tuple_type .

    $default  reduce using rule 453 (tuple_type_list)


State 823

  622 type_declaration: "variant" '<' $@58 variant_type_list '>' $@59 .

    $default  reduce using rule 622 (type_declaration)


State 824

  227 expr_new: "new" type_declaration '(' ')' .

    $default  reduce using rule 227 (expr_new)


State 825

  228 expr_new: "new" type_declaration '(' expr_list . ')'
  263 expr_list: expr_list . ',' expr

    ','  shift, and go to state 870
    ')'  shift, and go to state 960


State 826

  260 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  261               | "typeinfo" '(' name_in_namespace '<' . "name" ';' "name" '>' expr ')'

    "name"  shift, and go to state 961


State 827

  259 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 962


State 828

  258 expr_type_decl: "type" '<' $@12 type_declaration . '>' $@13
  570 type_declaration: type_declaration . '[' expr ']'
  571                 | type_declaration . '[' ']'
  572                 | type_declaration . '-' '[' ']'
  573                 | type_declaration . "explicit"
  574                 | type_declaration . "const"
  575                 | type_declaration . '-' "const"
  576                 | type_declaration . '&'
  577                 | type_declaration . '-' '&'
  578                 | type_declaration . '#'
  579                 | type_declaration . "implicit"
  580                 | type_declaration . '-' '#'
  581                 | type_declaration . '=' "const"
  582                 | type_declaration . '?'
  586                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 963
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 829

  379 expr: "deref" '(' expr ')' .

    $default  reduce using rule 379 (expr)


State 830

  249 expr_cast: "cast" '<' $@6 type_declaration . '>' $@7 expr
  570 type_declaration: type_declaration . '[' expr ']'
  571                 | type_declaration . '[' ']'
  572                 | type_declaration . '-' '[' ']'
  573                 | type_declaration . "explicit"
  574                 | type_declaration . "const"
  575                 | type_declaration . '-' "const"
  576                 | type_declaration . '&'
  577                 | type_declaration . '-' '&'
  578                 | type_declaration . '#'
  579                 | type_declaration . "implicit"
  580                 | type_declaration . '-' '#'
  581                 | type_declaration . '=' "const"
  582                 | type_declaration . '?'
  586                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 964
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 831

  252 expr_cast: "upcast" '<' $@8 type_declaration . '>' $@9 expr
  570 type_declaration: type_declaration . '[' expr ']'
  571                 | type_declaration . '[' ']'
  572                 | type_declaration . '-' '[' ']'
  573                 | type_declaration . "explicit"
  574                 | type_declaration . "const"
  575                 | type_declaration . '-' "const"
  576                 | type_declaration . '&'
  577                 | type_declaration . '-' '&'
  578                 | type_declaration . '#'
  579                 | type_declaration . "implicit"
  580                 | type_declaration . '-' '#'
  581                 | type_declaration . '=' "const"
  582                 | type_declaration . '?'
  586                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 965
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 832

  380 expr: "addr" '(' expr ')' .

    $default  reduce using rule 380 (expr)


State 833

  255 expr_cast: "reinterpret" '<' $@10 type_declaration . '>' $@11 expr
  570 type_declaration: type_declaration . '[' expr ']'
  571                 | type_declaration . '[' ']'
  572                 | type_declaration . '-' '[' ']'
  573                 | type_declaration . "explicit"
  574                 | type_declaration . "const"
  575                 | type_declaration . '-' "const"
  576                 | type_declaration . '&'
  577                 | type_declaration . '-' '&'
  578                 | type_declaration . '#'
  579                 | type_declaration . "implicit"
  580                 | type_declaration . '-' '#'
  581                 | type_declaration . '=' "const"
  582                 | type_declaration . '?'
  586                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 966
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 834

  410 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 410 (expr)


State 835

  381 expr: "generator" '<' type_declaration '>' . optional_capture_list '(' ')'
  382     | "generator" '<' type_declaration '>' . optional_capture_list '(' expr ')'

    "[["  shift, and go to state 681

    $default  reduce using rule 276 (optional_capture_list)

    optional_capture_list  go to state 967


State 836

  411 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 411 (expr_mtag)


State 837

  412 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 412 (expr_mtag)


State 838

  413 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 413 (expr_mtag)


State 839

  414 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 414 (expr_mtag)


State 840

  415 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 415 (expr_mtag)


State 841

  416 expr_mtag: "$c" '(' expr ')' . '(' ')'
  417          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 968


State 842

  661 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where ']' ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    expr_list               go to state 969
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 680
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 843

  639 optional_block: "where" expr_block .

    $default  reduce using rule 639 (optional_block)


State 844

  633 make_struct_fields: "name" ":=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 970
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 845

  632 make_struct_fields: "name" copy_or_move . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 971
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 846

  642 make_struct_decl: "[[" type_declaration '(' ')' . optional_block ']' ']'
  643                 | "[[" type_declaration '(' ')' . make_struct_dim optional_block ']' ']'

    "where"  shift, and go to state 648
    "name"   shift, and go to state 868

    $default  reduce using rule 638 (optional_block)

    make_struct_fields  go to state 653
    make_struct_dim     go to state 972
    optional_block      go to state 973


State 847

  634 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  635                   | make_struct_fields ',' . "name" ":=" expr

    "name"  shift, and go to state 974


State 848

  637 make_struct_dim: make_struct_dim ';' . make_struct_fields

    "name"  shift, and go to state 868

    make_struct_fields  go to state 975


State 849

  640 make_struct_decl: "[[" type_declaration make_struct_dim optional_block . ']' ']'

    ']'  shift, and go to state 976


State 850

  641 make_struct_decl: "[[" type_declaration optional_block ']' . ']'

    ']'  shift, and go to state 977


State 851

  647 make_tuple: make_tuple ',' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 978
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 852

  654 make_dim_decl: "[[" type_declaration make_dim ']' . ']'

    ']'  shift, and go to state 979


State 853

  653 make_dim: make_dim ';' . make_any_tuple

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 652
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_tuple              go to state 656
    make_map_tuple          go to state 657
    make_any_tuple          go to state 980
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 854

  662 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where '}' ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    expr_list               go to state 981
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 680
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 855

  645 make_struct_decl: "[{" type_declaration '(' ')' . make_struct_dim optional_block '}' ']'

    "name"  shift, and go to state 868

    make_struct_fields  go to state 653
    make_struct_dim     go to state 982


State 856

  644 make_struct_decl: "[{" type_declaration make_struct_dim optional_block . '}' ']'

    '}'  shift, and go to state 983


State 857

  655 make_dim_decl: "[{" type_declaration make_dim '}' . ']'

    ']'  shift, and go to state 984


State 858

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'
  648 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 648 (make_map_tuple)


State 859

  657 make_table: make_table ';' make_map_tuple .

    $default  reduce using rule 657 (make_table)


State 860

  658 make_table_decl: "{{" make_table '}' '}' .

    $default  reduce using rule 658 (make_table_decl)


State 861

   27 string_builder_body: string_builder_body "{" expr . "}"
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    "}"    shift, and go to state 985
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535


State 862

   29 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 29 (reader_character_sequence)


State 863

   30 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   32 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 986

    $default  reduce using rule 32 (expr_reader)


State 864

  313 func_addr_name: "$i" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 987
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 865

  425 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 988
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 866

  317 func_addr_expr: '@' '@' '<' $@14 . type_declaration '>' $@15 func_addr_name

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 989


State 867

  320 func_addr_expr: '@' '@' '<' $@16 . optional_function_argument_list optional_function_type '>' $@17 func_addr_name

    '('  shift, and go to state 309

    $default  reduce using rule 105 (optional_function_argument_list)

    optional_function_argument_list  go to state 990


State 868

  632 make_struct_fields: "name" . copy_or_move expr
  633                   | "name" . ":=" expr

    "<-"  shift, and go to state 736
    ":="  shift, and go to state 844
    '='   shift, and go to state 738

    copy_or_move  go to state 845


State 869

  309 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  634 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  635                   | make_struct_fields . ',' "name" ":=" expr

    ','  shift, and go to state 847
    ']'  shift, and go to state 991


State 870

  263 expr_list: expr_list ',' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 992
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 871

  375 expr: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 375 (expr)


State 872

  272 capture_entry: "<-" . "name"

    "name"  shift, and go to state 993


State 873

  273 capture_entry: ":=" . "name"

    "name"  shift, and go to state 994


State 874

  271 capture_entry: '=' . "name"

    "name"  shift, and go to state 995


State 875

  270 capture_entry: '&' . "name"

    "name"  shift, and go to state 996


State 876

  274 capture_list: capture_entry .

    $default  reduce using rule 274 (capture_list)


State 877

  275 capture_list: capture_list . ',' capture_entry
  277 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 997
    ']'  shift, and go to state 998


State 878

  279 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 428

    $default  reduce using rule 108 (optional_function_type)

    optional_function_type  go to state 999


State 879

  387 expr: expr "is" "type" '<' . $@20 type_declaration '>' $@21

    $default  reduce using rule 385 ($@20)

    $@20  go to state 1000


State 880

  424 expr_mtag: expr "is" "$f" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1001
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 881

  393 expr: expr "as" "type" '<' . $@22 type_declaration '>' $@23

    $default  reduce using rule 391 ($@22)

    $@22  go to state 1002


State 882

  422 expr_mtag: expr "as" "$f" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1003
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 883

  310 expr_method_call: expr "->" "name" '(' . ')'
  311                 | expr "->" "name" '(' . expr_list ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    ')'                               shift, and go to state 1004
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    expr_list               go to state 1005
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 680
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 884

  419 expr_mtag: expr "?." "$f" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1006
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 885

  369 expr: expr "?[" expr ']' .

    $default  reduce using rule 369 (expr)


State 886

  398 expr: expr '?' "as" "type" . '<' $@24 type_declaration '>' $@25

    '<'  shift, and go to state 1007


State 887

  423 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1008


State 888

  395 expr: expr '?' "as" "name" .

    $default  reduce using rule 395 (expr)


State 889

  399 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 399 (expr)


State 890

  384 expr: expr '?' expr ':' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1009
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 891

  421 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1010


State 892

  372 expr: expr '.' "?." "name" .

    $default  reduce using rule 372 (expr)


State 893

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  370     | expr '.' "?[" expr . ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ']'    shift, and go to state 1011


State 894

  418 expr_mtag: expr '.' "$f" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1012
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 895

  420 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1013


State 896

  322 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 322 (expr_field)


State 897

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  368     | expr '.' '[' expr . ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ']'    shift, and go to state 1014


State 898

  325 expr_field: expr '.' $@18 error . $@19

    $default  reduce using rule 324 ($@19)

    $@19  go to state 1015


State 899

  367 expr: expr '[' expr ']' .

    $default  reduce using rule 367 (expr)


State 900

  377 expr: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 377 (expr)


State 901

  447 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 447 (function_argument_declaration)


State 902

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'
  520 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1016


State 903

  521 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 521 (variable_name_with_pos_list)


State 904

  522 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  523                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1017

    $default  reduce using rule 522 (variable_name_with_pos_list)


State 905

  461 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  462                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  570 type_declaration: type_declaration . '[' expr ']'
  571                 | type_declaration . '[' ']'
  572                 | type_declaration . '-' '[' ']'
  573                 | type_declaration . "explicit"
  574                 | type_declaration . "const"
  575                 | type_declaration . '-' "const"
  576                 | type_declaration . '&'
  577                 | type_declaration . '-' '&'
  578                 | type_declaration . '#'
  579                 | type_declaration . "implicit"
  580                 | type_declaration . '-' '#'
  581                 | type_declaration . '=' "const"
  582                 | type_declaration . '?'
  586                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "<-"        shift, and go to state 736
    "??"        shift, and go to state 245
    '='         shift, and go to state 1018
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251

    $default  reduce using rule 461 (variable_declaration)

    copy_or_move  go to state 1019


State 906

  464 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 464 (variable_declaration)


State 907

  286 expr_assign: expr .
  287            | expr . '=' expr
  288            | expr . "<-" expr
  289            | expr . ":=" expr
  290            | expr . "&=" expr
  291            | expr . "|=" expr
  292            | expr . "^=" expr
  293            | expr . "&&=" expr
  294            | expr . "||=" expr
  295            | expr . "^^=" expr
  296            | expr . "+=" expr
  297            | expr . "-=" expr
  298            | expr . "*=" expr
  299            | expr . "/=" expr
  300            | expr . "%=" expr
  301            | expr . "<<=" expr
  302            | expr . ">>=" expr
  303            | expr . "<<<=" expr
  304            | expr . ">>>=" expr
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'
  463 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 501
    "as"    shift, and go to state 502
    "+="    shift, and go to state 777
    "-="    shift, and go to state 778
    "/="    shift, and go to state 779
    "*="    shift, and go to state 780
    "%="    shift, and go to state 781
    "&="    shift, and go to state 782
    "|="    shift, and go to state 783
    "^="    shift, and go to state 784
    "<<"    shift, and go to state 503
    ">>"    shift, and go to state 504
    "++"    shift, and go to state 505
    "--"    shift, and go to state 506
    "<="    shift, and go to state 507
    "<<="   shift, and go to state 785
    ">>="   shift, and go to state 786
    ">="    shift, and go to state 508
    "=="    shift, and go to state 509
    "!="    shift, and go to state 510
    "->"    shift, and go to state 511
    "<-"    shift, and go to state 912
    "??"    shift, and go to state 512
    "?."    shift, and go to state 513
    "?["    shift, and go to state 514
    "<|"    shift, and go to state 515
    "|>"    shift, and go to state 516
    ":="    shift, and go to state 788
    "<<<"   shift, and go to state 517
    ">>>"   shift, and go to state 518
    "<<<="  shift, and go to state 789
    ">>>="  shift, and go to state 790
    "&&"    shift, and go to state 519
    "||"    shift, and go to state 520
    "^^"    shift, and go to state 521
    "&&="   shift, and go to state 791
    "||="   shift, and go to state 792
    "^^="   shift, and go to state 793
    ".."    shift, and go to state 522
    '='     shift, and go to state 913
    '?'     shift, and go to state 523
    '|'     shift, and go to state 524
    '^'     shift, and go to state 525
    '&'     shift, and go to state 526
    '<'     shift, and go to state 527
    '>'     shift, and go to state 528
    '-'     shift, and go to state 529
    '+'     shift, and go to state 530
    '*'     shift, and go to state 531
    '/'     shift, and go to state 532
    '%'     shift, and go to state 533
    '.'     shift, and go to state 534
    '['     shift, and go to state 535

    " <|"     reduce using rule 286 (expr_assign)
    $default  reduce using rule 463 (variable_declaration)


State 908

   71 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 71 (expression_while_loop)


State 909

   69 expression_for_loop: "for" variable_name_with_pos_list "in" . expr_list ';' expression_block

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    expr_list               go to state 1020
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 680
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 910

  237 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 237 (expression_return)


State 911

  234 expression_return_no_pipe: "return" "<-" expr .
  286 expr_assign: expr .
  287            | expr . '=' expr
  288            | expr . "<-" expr
  289            | expr . ":=" expr
  290            | expr . "&=" expr
  291            | expr . "|=" expr
  292            | expr . "^=" expr
  293            | expr . "&&=" expr
  294            | expr . "||=" expr
  295            | expr . "^^=" expr
  296            | expr . "+=" expr
  297            | expr . "-=" expr
  298            | expr . "*=" expr
  299            | expr . "/=" expr
  300            | expr . "%=" expr
  301            | expr . "<<=" expr
  302            | expr . ">>=" expr
  303            | expr . "<<<=" expr
  304            | expr . ">>>=" expr
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 501
    "as"    shift, and go to state 502
    "+="    shift, and go to state 777
    "-="    shift, and go to state 778
    "/="    shift, and go to state 779
    "*="    shift, and go to state 780
    "%="    shift, and go to state 781
    "&="    shift, and go to state 782
    "|="    shift, and go to state 783
    "^="    shift, and go to state 784
    "<<"    shift, and go to state 503
    ">>"    shift, and go to state 504
    "++"    shift, and go to state 505
    "--"    shift, and go to state 506
    "<="    shift, and go to state 507
    "<<="   shift, and go to state 785
    ">>="   shift, and go to state 786
    ">="    shift, and go to state 508
    "=="    shift, and go to state 509
    "!="    shift, and go to state 510
    "->"    shift, and go to state 511
    "<-"    shift, and go to state 912
    "??"    shift, and go to state 512
    "?."    shift, and go to state 513
    "?["    shift, and go to state 514
    "<|"    shift, and go to state 515
    "|>"    shift, and go to state 516
    ":="    shift, and go to state 788
    "<<<"   shift, and go to state 517
    ">>>"   shift, and go to state 518
    "<<<="  shift, and go to state 789
    ">>>="  shift, and go to state 790
    "&&"    shift, and go to state 519
    "||"    shift, and go to state 520
    "^^"    shift, and go to state 521
    "&&="   shift, and go to state 791
    "||="   shift, and go to state 792
    "^^="   shift, and go to state 793
    ".."    shift, and go to state 522
    '='     shift, and go to state 913
    '?'     shift, and go to state 523
    '|'     shift, and go to state 524
    '^'     shift, and go to state 525
    '&'     shift, and go to state 526
    '<'     shift, and go to state 527
    '>'     shift, and go to state 528
    '-'     shift, and go to state 529
    '+'     shift, and go to state 530
    '*'     shift, and go to state 531
    '/'     shift, and go to state 532
    '%'     shift, and go to state 533
    '.'     shift, and go to state 534
    '['     shift, and go to state 535

    " <|"     reduce using rule 286 (expr_assign)
    $default  reduce using rule 234 (expression_return_no_pipe)


State 912

  288 expr_assign: expr "<-" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 938
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 913

  287 expr_assign: expr '=' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 947
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 914

  243 expression_try_catch: "try" expression_block "recover" . expression_block

    '{'  shift, and go to state 311

    expression_block  go to state 1021


State 915

   72 expression_with: "with" expr expression_block .

    $default  reduce using rule 72 (expression_with)


State 916

   74 expression_with_alias: "assume" "name" '=' . $@4 expr

    $default  reduce using rule 73 ($@4)

    $@4  go to state 1022


State 917

   48 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 48 (expression_label)


State 918

   49 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 49 (expression_goto)


State 919

  242 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 242 (expression_yield)


State 920

  239 expression_yield_no_pipe: "yield" "<-" expr .
  286 expr_assign: expr .
  287            | expr . '=' expr
  288            | expr . "<-" expr
  289            | expr . ":=" expr
  290            | expr . "&=" expr
  291            | expr . "|=" expr
  292            | expr . "^=" expr
  293            | expr . "&&=" expr
  294            | expr . "||=" expr
  295            | expr . "^^=" expr
  296            | expr . "+=" expr
  297            | expr . "-=" expr
  298            | expr . "*=" expr
  299            | expr . "/=" expr
  300            | expr . "%=" expr
  301            | expr . "<<=" expr
  302            | expr . ">>=" expr
  303            | expr . "<<<=" expr
  304            | expr . ">>>=" expr
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 501
    "as"    shift, and go to state 502
    "+="    shift, and go to state 777
    "-="    shift, and go to state 778
    "/="    shift, and go to state 779
    "*="    shift, and go to state 780
    "%="    shift, and go to state 781
    "&="    shift, and go to state 782
    "|="    shift, and go to state 783
    "^="    shift, and go to state 784
    "<<"    shift, and go to state 503
    ">>"    shift, and go to state 504
    "++"    shift, and go to state 505
    "--"    shift, and go to state 506
    "<="    shift, and go to state 507
    "<<="   shift, and go to state 785
    ">>="   shift, and go to state 786
    ">="    shift, and go to state 508
    "=="    shift, and go to state 509
    "!="    shift, and go to state 510
    "->"    shift, and go to state 511
    "<-"    shift, and go to state 912
    "??"    shift, and go to state 512
    "?."    shift, and go to state 513
    "?["    shift, and go to state 514
    "<|"    shift, and go to state 515
    "|>"    shift, and go to state 516
    ":="    shift, and go to state 788
    "<<<"   shift, and go to state 517
    ">>>"   shift, and go to state 518
    "<<<="  shift, and go to state 789
    ">>>="  shift, and go to state 790
    "&&"    shift, and go to state 519
    "||"    shift, and go to state 520
    "^^"    shift, and go to state 521
    "&&="   shift, and go to state 791
    "||="   shift, and go to state 792
    "^^="   shift, and go to state 793
    ".."    shift, and go to state 522
    '='     shift, and go to state 913
    '?'     shift, and go to state 523
    '|'     shift, and go to state 524
    '^'     shift, and go to state 525
    '&'     shift, and go to state 526
    '<'     shift, and go to state 527
    '>'     shift, and go to state 528
    '-'     shift, and go to state 529
    '+'     shift, and go to state 530
    '*'     shift, and go to state 531
    '/'     shift, and go to state 532
    '%'     shift, and go to state 533
    '.'     shift, and go to state 534
    '['     shift, and go to state 535

    " <|"     reduce using rule 286 (expr_assign)
    $default  reduce using rule 239 (expression_yield_no_pipe)


State 921

  269 block_or_lambda: '@' '@' .

    $default  reduce using rule 269 (block_or_lambda)


State 922

  195 expression_block: '{' expressions '}' "finally" '{' . expressions '}'

    $default  reduce using rule 216 (expressions)

    expressions  go to state 1023


State 923

   66 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1024
    "elif"         shift, and go to state 1025
    "static_elif"  shift, and go to state 1026

    $default  reduce using rule 53 (expression_else)

    elif_or_static_elif  go to state 1027
    expression_else      go to state 1028


State 924

   68 expression_if_then_else: expression_if_one_liner "if" $@3 . expr expression_else_one_liner ';'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1029
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 925

  219 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 219 (expr_pipe)


State 926

  296 expr_assign: expr "+=" expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 296 (expr_assign)


State 927

  297 expr_assign: expr "-=" expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 297 (expr_assign)


State 928

  299 expr_assign: expr "/=" expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 299 (expr_assign)


State 929

  298 expr_assign: expr "*=" expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 298 (expr_assign)


State 930

  300 expr_assign: expr "%=" expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 300 (expr_assign)


State 931

  290 expr_assign: expr "&=" expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 290 (expr_assign)


State 932

  291 expr_assign: expr "|=" expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 291 (expr_assign)


State 933

  292 expr_assign: expr "^=" expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 292 (expr_assign)


State 934

  301 expr_assign: expr "<<=" expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 301 (expr_assign)


State 935

  302 expr_assign: expr ">>=" expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 302 (expr_assign)


State 936

  307 expr_assign_pipe: expr "<-" "@ <|" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1030
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 937

  308 expr_assign_pipe: expr "<-" "@@ <|" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1031
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 938

  288 expr_assign: expr "<-" expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 288 (expr_assign)


State 939

  289 expr_assign: expr ":=" expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 289 (expr_assign)


State 940

  303 expr_assign: expr "<<<=" expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 303 (expr_assign)


State 941

  304 expr_assign: expr ">>>=" expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 304 (expr_assign)


State 942

  293 expr_assign: expr "&&=" expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 293 (expr_assign)


State 943

  294 expr_assign: expr "||=" expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 294 (expr_assign)


State 944

  295 expr_assign: expr "^^=" expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 295 (expr_assign)


State 945

  305 expr_assign_pipe: expr '=' "@ <|" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1032
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 946

  306 expr_assign_pipe: expr '=' "@@ <|" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1033
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 947

  287 expr_assign: expr '=' expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 287 (expr_assign)


State 948

  493 enum_list: enum_list "name" '=' expr ';' .

    $default  reduce using rule 493 (enum_list)


State 949

  102 annotation_list: annotation_list . ',' annotation_declaration
  104 optional_annotation_list: '[' annotation_list . ']'
  444 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' ';'

    ','  shift, and go to state 82
    ']'  shift, and go to state 1034


State 950

  441 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" $@27 function_declaration_header ';'
  443                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_override optional_constant $@28 function_declaration_header expression_block

    "public"   shift, and go to state 1035
    "private"  shift, and go to state 1036

    $default  reduce using rule 433 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1037


State 951

  436 structure_variable_declaration: optional_field_annotation . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1038
    "sealed"    shift, and go to state 1039

    $default  reduce using rule 428 (optional_override)

    optional_override  go to state 1040


State 952

  439 struct_variable_declaration_list: struct_variable_declaration_list $@26 structure_variable_declaration . ';'

    ';'  shift, and go to state 1041


State 953

  474 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 474 (let_variable_name_with_pos_list)


State 954

  477 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 477 (let_variable_declaration)


State 955

  286 expr_assign: expr .
  287            | expr . '=' expr
  288            | expr . "<-" expr
  289            | expr . ":=" expr
  290            | expr . "&=" expr
  291            | expr . "|=" expr
  292            | expr . "^=" expr
  293            | expr . "&&=" expr
  294            | expr . "||=" expr
  295            | expr . "^^=" expr
  296            | expr . "+=" expr
  297            | expr . "-=" expr
  298            | expr . "*=" expr
  299            | expr . "/=" expr
  300            | expr . "%=" expr
  301            | expr . "<<=" expr
  302            | expr . ">>=" expr
  303            | expr . "<<<=" expr
  304            | expr . ">>>=" expr
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'
  476 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 501
    "as"    shift, and go to state 502
    "+="    shift, and go to state 777
    "-="    shift, and go to state 778
    "/="    shift, and go to state 779
    "*="    shift, and go to state 780
    "%="    shift, and go to state 781
    "&="    shift, and go to state 782
    "|="    shift, and go to state 783
    "^="    shift, and go to state 784
    "<<"    shift, and go to state 503
    ">>"    shift, and go to state 504
    "++"    shift, and go to state 505
    "--"    shift, and go to state 506
    "<="    shift, and go to state 507
    "<<="   shift, and go to state 785
    ">>="   shift, and go to state 786
    ">="    shift, and go to state 508
    "=="    shift, and go to state 509
    "!="    shift, and go to state 510
    "->"    shift, and go to state 511
    "<-"    shift, and go to state 912
    "??"    shift, and go to state 512
    "?."    shift, and go to state 513
    "?["    shift, and go to state 514
    "<|"    shift, and go to state 515
    "|>"    shift, and go to state 516
    ":="    shift, and go to state 788
    "<<<"   shift, and go to state 517
    ">>>"   shift, and go to state 518
    "<<<="  shift, and go to state 789
    ">>>="  shift, and go to state 790
    "&&"    shift, and go to state 519
    "||"    shift, and go to state 520
    "^^"    shift, and go to state 521
    "&&="   shift, and go to state 791
    "||="   shift, and go to state 792
    "^^="   shift, and go to state 793
    ".."    shift, and go to state 522
    '='     shift, and go to state 913
    '?'     shift, and go to state 523
    '|'     shift, and go to state 524
    '^'     shift, and go to state 525
    '&'     shift, and go to state 526
    '<'     shift, and go to state 527
    '>'     shift, and go to state 528
    '-'     shift, and go to state 529
    '+'     shift, and go to state 530
    '*'     shift, and go to state 531
    '/'     shift, and go to state 532
    '%'     shift, and go to state 533
    '.'     shift, and go to state 534
    '['     shift, and go to state 535
    ';'     shift, and go to state 1042

    $default  reduce using rule 286 (expr_assign)


State 956

  478 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 478 (let_variable_declaration)


State 957

  602 type_declaration: "block" '<' $@46 optional_function_argument_list optional_function_type '>' $@47 .

    $default  reduce using rule 602 (type_declaration)


State 958

  609 type_declaration: "function" '<' $@50 optional_function_argument_list optional_function_type '>' $@51 .

    $default  reduce using rule 609 (type_declaration)


State 959

  616 type_declaration: "lambda" '<' $@54 optional_function_argument_list optional_function_type '>' $@55 .

    $default  reduce using rule 616 (type_declaration)


State 960

  228 expr_new: "new" type_declaration '(' expr_list ')' .

    $default  reduce using rule 228 (expr_new)


State 961

  260 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  261               | "typeinfo" '(' name_in_namespace '<' "name" . ';' "name" '>' expr ')'

    '>'  shift, and go to state 1043
    ';'  shift, and go to state 1044


State 962

  259 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 259 (expr_type_info)


State 963

  258 expr_type_decl: "type" '<' $@12 type_declaration '>' . $@13

    $default  reduce using rule 257 ($@13)

    $@13  go to state 1045


State 964

  249 expr_cast: "cast" '<' $@6 type_declaration '>' . $@7 expr

    $default  reduce using rule 248 ($@7)

    $@7  go to state 1046


State 965

  252 expr_cast: "upcast" '<' $@8 type_declaration '>' . $@9 expr

    $default  reduce using rule 251 ($@9)

    $@9  go to state 1047


State 966

  255 expr_cast: "reinterpret" '<' $@10 type_declaration '>' . $@11 expr

    $default  reduce using rule 254 ($@11)

    $@11  go to state 1048


State 967

  381 expr: "generator" '<' type_declaration '>' optional_capture_list . '(' ')'
  382     | "generator" '<' type_declaration '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1049


State 968

  416 expr_mtag: "$c" '(' expr ')' '(' . ')'
  417          | "$c" '(' expr ')' '(' . expr_list ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    ')'                               shift, and go to state 1050
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    expr_list               go to state 1051
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 680
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 969

  263 expr_list: expr_list . ',' expr
  661 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where ']' ']'

    ','  shift, and go to state 870
    ';'  shift, and go to state 1052


State 970

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'
  633 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 633 (make_struct_fields)


State 971

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'
  632 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 632 (make_struct_fields)


State 972

  637 make_struct_dim: make_struct_dim . ';' make_struct_fields
  643 make_struct_decl: "[[" type_declaration '(' ')' make_struct_dim . optional_block ']' ']'

    "where"  shift, and go to state 648
    ';'      shift, and go to state 848

    $default  reduce using rule 638 (optional_block)

    optional_block  go to state 1053


State 973

  642 make_struct_decl: "[[" type_declaration '(' ')' optional_block . ']' ']'

    ']'  shift, and go to state 1054


State 974

  634 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  635                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 736
    ":="  shift, and go to state 1055
    '='   shift, and go to state 738

    copy_or_move  go to state 1056


State 975

  634 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  635                   | make_struct_fields . ',' "name" ":=" expr
  637 make_struct_dim: make_struct_dim ';' make_struct_fields .

    ','  shift, and go to state 847

    $default  reduce using rule 637 (make_struct_dim)


State 976

  640 make_struct_decl: "[[" type_declaration make_struct_dim optional_block ']' . ']'

    ']'  shift, and go to state 1057


State 977

  641 make_struct_decl: "[[" type_declaration optional_block ']' ']' .

    $default  reduce using rule 641 (make_struct_decl)


State 978

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'
  647 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 647 (make_tuple)


State 979

  654 make_dim_decl: "[[" type_declaration make_dim ']' ']' .

    $default  reduce using rule 654 (make_dim_decl)


State 980

  653 make_dim: make_dim ';' make_any_tuple .

    $default  reduce using rule 653 (make_dim)


State 981

  263 expr_list: expr_list . ',' expr
  662 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where '}' ']'

    ','  shift, and go to state 870
    ';'  shift, and go to state 1058


State 982

  637 make_struct_dim: make_struct_dim . ';' make_struct_fields
  645 make_struct_decl: "[{" type_declaration '(' ')' make_struct_dim . optional_block '}' ']'

    "where"  shift, and go to state 648
    ';'      shift, and go to state 848

    $default  reduce using rule 638 (optional_block)

    optional_block  go to state 1059


State 983

  644 make_struct_decl: "[{" type_declaration make_struct_dim optional_block '}' . ']'

    ']'  shift, and go to state 1060


State 984

  655 make_dim_decl: "[{" type_declaration make_dim '}' ']' .

    $default  reduce using rule 655 (make_dim_decl)


State 985

   27 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 27 (string_builder_body)


State 986

   30 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 30 (reader_character_sequence)


State 987

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  313 func_addr_name: "$i" '(' expr . ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1061


State 988

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'
  425          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1062


State 989

  317 func_addr_expr: '@' '@' '<' $@14 type_declaration . '>' $@15 func_addr_name
  570 type_declaration: type_declaration . '[' expr ']'
  571                 | type_declaration . '[' ']'
  572                 | type_declaration . '-' '[' ']'
  573                 | type_declaration . "explicit"
  574                 | type_declaration . "const"
  575                 | type_declaration . '-' "const"
  576                 | type_declaration . '&'
  577                 | type_declaration . '-' '&'
  578                 | type_declaration . '#'
  579                 | type_declaration . "implicit"
  580                 | type_declaration . '-' '#'
  581                 | type_declaration . '=' "const"
  582                 | type_declaration . '?'
  586                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 1063
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 990

  320 func_addr_expr: '@' '@' '<' $@16 optional_function_argument_list . optional_function_type '>' $@17 func_addr_name

    ':'  shift, and go to state 428

    $default  reduce using rule 108 (optional_function_type)

    optional_function_type  go to state 1064


State 991

  309 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1065


State 992

  263 expr_list: expr_list ',' expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 263 (expr_list)


State 993

  272 capture_entry: "<-" "name" .

    $default  reduce using rule 272 (capture_entry)


State 994

  273 capture_entry: ":=" "name" .

    $default  reduce using rule 273 (capture_entry)


State 995

  271 capture_entry: '=' "name" .

    $default  reduce using rule 271 (capture_entry)


State 996

  270 capture_entry: '&' "name" .

    $default  reduce using rule 270 (capture_entry)


State 997

  275 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 872
    ":="  shift, and go to state 873
    '='   shift, and go to state 874
    '&'   shift, and go to state 875

    capture_entry  go to state 1066


State 998

  277 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1067


State 999

  279 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"  shift, and go to state 1068
    '{'   shift, and go to state 311

    expression_block       go to state 1069
    block_or_simple_block  go to state 1070


State 1000

  387 expr: expr "is" "type" '<' $@20 . type_declaration '>' $@21

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 1071


State 1001

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'
  424          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1072


State 1002

  393 expr: expr "as" "type" '<' $@22 . type_declaration '>' $@23

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 1073


State 1003

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  422          | expr "as" "$f" '(' expr . ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1074


State 1004

  310 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 310 (expr_method_call)


State 1005

  263 expr_list: expr_list . ',' expr
  311 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 870
    ')'  shift, and go to state 1075


State 1006

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  419          | expr "?." "$f" '(' expr . ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1076


State 1007

  398 expr: expr '?' "as" "type" '<' . $@24 type_declaration '>' $@25

    $default  reduce using rule 396 ($@24)

    $@24  go to state 1077


State 1008

  423 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1078
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1009

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  384     | expr '?' expr ':' expr .
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 384 (expr)


State 1010

  421 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1079
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1011

  370 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 370 (expr)


State 1012

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  418          | expr '.' "$f" '(' expr . ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1080


State 1013

  420 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1081
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1014

  368 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 368 (expr)


State 1015

  325 expr_field: expr '.' $@18 error $@19 .

    $default  reduce using rule 325 (expr_field)


State 1016

  520 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 520 (variable_name_with_pos_list)


State 1017

  523 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1082


State 1018

  457 copy_or_move: '=' .
  581 type_declaration: type_declaration '=' . "const"

    "const"  shift, and go to state 409

    $default  reduce using rule 457 (copy_or_move)


State 1019

  462 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1083
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1020

   69 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list . ';' expression_block
  263 expr_list: expr_list . ',' expr

    ','  shift, and go to state 870
    ';'  shift, and go to state 1084


State 1021

  243 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 243 (expression_try_catch)


State 1022

   74 expression_with_alias: "assume" "name" '=' $@4 . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1085
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1023

  195 expression_block: '{' expressions '}' "finally" '{' expressions . '}'
  217 expressions: expressions . expression_any
  218            | expressions . error

    error                             shift, and go to state 552
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 553
    "if"                              shift, and go to state 554
    "static_if"                       shift, and go to state 555
    "for"                             shift, and go to state 556
    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "return"                          shift, and go to state 557
    "null"                            shift, and go to state 350
    "break"                           shift, and go to state 558
    "try"                             shift, and go to state 559
    "delete"                          shift, and go to state 560
    "deref"                           shift, and go to state 351
    "with"                            shift, and go to state 561
    "assume"                          shift, and go to state 562
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 354
    "continue"                        shift, and go to state 563
    "pass"                            shift, and go to state 564
    "reinterpret"                     shift, and go to state 355
    "label"                           shift, and go to state 565
    "goto"                            shift, and go to state 566
    "unsafe"                          shift, and go to state 567
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "yield"                           shift, and go to state 568
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "@ <|"                            shift, and go to state 569
    "@@ <|"                           shift, and go to state 570
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    ';'                               shift, and go to state 571
    '{'                               shift, and go to state 311
    '}'                               shift, and go to state 1086

    string_builder             go to state 386
    expr_reader                go to state 387
    expression_label           go to state 573
    expression_goto            go to state 574
    if_or_static_if            go to state 575
    expression_if_one_liner    go to state 576
    expression_if_then_else    go to state 577
    expression_for_loop        go to state 578
    expression_unsafe          go to state 579
    expression_while_loop      go to state 580
    expression_with            go to state 581
    expression_with_alias      go to state 582
    expression_block           go to state 388
    expression_any             go to state 583
    expr_pipe                  go to state 584
    name_in_namespace          go to state 389
    expression_delete          go to state 585
    expr_new                   go to state 390
    expression_break           go to state 586
    expression_continue        go to state 587
    expression_return_no_pipe  go to state 588
    expression_return          go to state 589
    expression_yield_no_pipe   go to state 590
    expression_yield           go to state 591
    expression_try_catch       go to state 592
    kwd_let                    go to state 593
    expression_let             go to state 594
    expr_cast                  go to state 391
    expr_type_decl             go to state 392
    expr_type_info             go to state 393
    block_or_lambda            go to state 394
    expr_block                 go to state 395
    expr_numeric_const         go to state 396
    expr_assign                go to state 595
    expr_assign_pipe           go to state 596
    expr_named_call            go to state 397
    expr_method_call           go to state 398
    func_addr_expr             go to state 399
    expr_field                 go to state 400
    expr                       go to state 597
    expr_mtag                  go to state 402
    basic_type_declaration     go to state 403
    make_decl                  go to state 404
    make_struct_decl           go to state 405
    make_dim_decl              go to state 406
    make_table_decl            go to state 407
    array_comprehension        go to state 408


State 1024

   54 expression_else: "else" . expression_block

    '{'  shift, and go to state 311

    expression_block  go to state 1087


State 1025

   51 elif_or_static_elif: "elif" .

    $default  reduce using rule 51 (elif_or_static_elif)


State 1026

   52 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 52 (elif_or_static_elif)


State 1027

   55 expression_else: elif_or_static_elif . expr expression_block expression_else

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1088
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1028

   66 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 66 (expression_if_then_else)


State 1029

   68 expression_if_then_else: expression_if_one_liner "if" $@3 expr . expression_else_one_liner ';'
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1089
    "is"    shift, and go to state 501
    "as"    shift, and go to state 502
    "<<"    shift, and go to state 503
    ">>"    shift, and go to state 504
    "++"    shift, and go to state 505
    "--"    shift, and go to state 506
    "<="    shift, and go to state 507
    ">="    shift, and go to state 508
    "=="    shift, and go to state 509
    "!="    shift, and go to state 510
    "->"    shift, and go to state 511
    "??"    shift, and go to state 512
    "?."    shift, and go to state 513
    "?["    shift, and go to state 514
    "<|"    shift, and go to state 515
    "|>"    shift, and go to state 516
    "<<<"   shift, and go to state 517
    ">>>"   shift, and go to state 518
    "&&"    shift, and go to state 519
    "||"    shift, and go to state 520
    "^^"    shift, and go to state 521
    ".."    shift, and go to state 522
    '?'     shift, and go to state 523
    '|'     shift, and go to state 524
    '^'     shift, and go to state 525
    '&'     shift, and go to state 526
    '<'     shift, and go to state 527
    '>'     shift, and go to state 528
    '-'     shift, and go to state 529
    '+'     shift, and go to state 530
    '*'     shift, and go to state 531
    '/'     shift, and go to state 532
    '%'     shift, and go to state 533
    '.'     shift, and go to state 534
    '['     shift, and go to state 535

    $default  reduce using rule 58 (expression_else_one_liner)

    expression_else_one_liner  go to state 1090


State 1030

  307 expr_assign_pipe: expr "<-" "@ <|" expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '/'    shift, and go to state 532
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 307 (expr_assign_pipe)


State 1031

  308 expr_assign_pipe: expr "<-" "@@ <|" expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    "++"      [reduce using rule 308 (expr_assign_pipe)]
    "--"      [reduce using rule 308 (expr_assign_pipe)]
    '-'       [reduce using rule 308 (expr_assign_pipe)]
    '+'       [reduce using rule 308 (expr_assign_pipe)]
    '*'       [reduce using rule 308 (expr_assign_pipe)]
    '%'       [reduce using rule 308 (expr_assign_pipe)]
    $default  reduce using rule 308 (expr_assign_pipe)


State 1032

  305 expr_assign_pipe: expr '=' "@ <|" expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '/'    shift, and go to state 532
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 305 (expr_assign_pipe)


State 1033

  306 expr_assign_pipe: expr '=' "@@ <|" expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    "++"      [reduce using rule 306 (expr_assign_pipe)]
    "--"      [reduce using rule 306 (expr_assign_pipe)]
    '-'       [reduce using rule 306 (expr_assign_pipe)]
    '+'       [reduce using rule 306 (expr_assign_pipe)]
    '*'       [reduce using rule 306 (expr_assign_pipe)]
    '%'       [reduce using rule 306 (expr_assign_pipe)]
    $default  reduce using rule 306 (expr_assign_pipe)


State 1034

  104 optional_annotation_list: '[' annotation_list ']' .
  444 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . ';'

    ';'  shift, and go to state 1091

    $default  reduce using rule 104 (optional_annotation_list)


State 1035

  434 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 434 (optional_public_or_private_member_variable)


State 1036

  435 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 435 (optional_public_or_private_member_variable)


State 1037

  441 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" $@27 function_declaration_header ';'
  443                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_override optional_constant $@28 function_declaration_header expression_block

    "override"  shift, and go to state 1038
    "abstract"  shift, and go to state 1092
    "sealed"    shift, and go to state 1039

    $default  reduce using rule 428 (optional_override)

    optional_override  go to state 1093


State 1038

  429 optional_override: "override" .

    $default  reduce using rule 429 (optional_override)


State 1039

  430 optional_override: "sealed" .

    $default  reduce using rule 430 (optional_override)


State 1040

  436 structure_variable_declaration: optional_field_annotation optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1035
    "private"  shift, and go to state 1036

    $default  reduce using rule 433 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1094


State 1041

  439 struct_variable_declaration_list: struct_variable_declaration_list $@26 structure_variable_declaration ';' .

    $default  reduce using rule 439 (struct_variable_declaration_list)


State 1042

  476 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone expr ';' .

    $default  reduce using rule 476 (let_variable_declaration)


State 1043

  260 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1095
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1044

  261 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' . "name" '>' expr ')'

    "name"  shift, and go to state 1096


State 1045

  258 expr_type_decl: "type" '<' $@12 type_declaration '>' $@13 .

    $default  reduce using rule 258 (expr_type_decl)


State 1046

  249 expr_cast: "cast" '<' $@6 type_declaration '>' $@7 . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1097
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1047

  252 expr_cast: "upcast" '<' $@8 type_declaration '>' $@9 . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1098
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1048

  255 expr_cast: "reinterpret" '<' $@10 type_declaration '>' $@11 . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1099
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1049

  381 expr: "generator" '<' type_declaration '>' optional_capture_list '(' . ')'
  382     | "generator" '<' type_declaration '>' optional_capture_list '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    ')'                               shift, and go to state 1100
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1101
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1050

  416 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 416 (expr_mtag)


State 1051

  263 expr_list: expr_list . ',' expr
  417 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 870
    ')'  shift, and go to state 1102


State 1052

  661 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where ']' ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1103
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1053

  643 make_struct_decl: "[[" type_declaration '(' ')' make_struct_dim optional_block . ']' ']'

    ']'  shift, and go to state 1104


State 1054

  642 make_struct_decl: "[[" type_declaration '(' ')' optional_block ']' . ']'

    ']'  shift, and go to state 1105


State 1055

  635 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1106
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1056

  634 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1107
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1057

  640 make_struct_decl: "[[" type_declaration make_struct_dim optional_block ']' ']' .

    $default  reduce using rule 640 (make_struct_decl)


State 1058

  662 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where '}' ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1108
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1059

  645 make_struct_decl: "[{" type_declaration '(' ')' make_struct_dim optional_block . '}' ']'

    '}'  shift, and go to state 1109


State 1060

  644 make_struct_decl: "[{" type_declaration make_struct_dim optional_block '}' ']' .

    $default  reduce using rule 644 (make_struct_decl)


State 1061

  313 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 313 (func_addr_name)


State 1062

  425 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 425 (expr_mtag)


State 1063

  317 func_addr_expr: '@' '@' '<' $@14 type_declaration '>' . $@15 func_addr_name

    $default  reduce using rule 316 ($@15)

    $@15  go to state 1110


State 1064

  320 func_addr_expr: '@' '@' '<' $@16 optional_function_argument_list optional_function_type . '>' $@17 func_addr_name

    '>'  shift, and go to state 1111


State 1065

  309 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 309 (expr_named_call)


State 1066

  275 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 275 (capture_list)


State 1067

  277 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 277 (optional_capture_list)


State 1068

  265 block_or_simple_block: "=>" . expr
  266                      | "=>" . "<-" expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "<-"                              shift, and go to state 1112
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1113
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1069

  264 block_or_simple_block: expression_block .

    $default  reduce using rule 264 (block_or_simple_block)


State 1070

  279 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 279 (expr_block)


State 1071

  387 expr: expr "is" "type" '<' $@20 type_declaration . '>' $@21
  570 type_declaration: type_declaration . '[' expr ']'
  571                 | type_declaration . '[' ']'
  572                 | type_declaration . '-' '[' ']'
  573                 | type_declaration . "explicit"
  574                 | type_declaration . "const"
  575                 | type_declaration . '-' "const"
  576                 | type_declaration . '&'
  577                 | type_declaration . '-' '&'
  578                 | type_declaration . '#'
  579                 | type_declaration . "implicit"
  580                 | type_declaration . '-' '#'
  581                 | type_declaration . '=' "const"
  582                 | type_declaration . '?'
  586                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 1114
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 1072

  424 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 424 (expr_mtag)


State 1073

  393 expr: expr "as" "type" '<' $@22 type_declaration . '>' $@23
  570 type_declaration: type_declaration . '[' expr ']'
  571                 | type_declaration . '[' ']'
  572                 | type_declaration . '-' '[' ']'
  573                 | type_declaration . "explicit"
  574                 | type_declaration . "const"
  575                 | type_declaration . '-' "const"
  576                 | type_declaration . '&'
  577                 | type_declaration . '-' '&'
  578                 | type_declaration . '#'
  579                 | type_declaration . "implicit"
  580                 | type_declaration . '-' '#'
  581                 | type_declaration . '=' "const"
  582                 | type_declaration . '?'
  586                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 1115
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 1074

  422 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 422 (expr_mtag)


State 1075

  311 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 311 (expr_method_call)


State 1076

  419 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 419 (expr_mtag)


State 1077

  398 expr: expr '?' "as" "type" '<' $@24 . type_declaration '>' $@25

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 1116


State 1078

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  423          | expr '?' "as" "$f" '(' expr . ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1117


State 1079

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  421          | expr '.' "?." "$f" '(' expr . ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1118


State 1080

  418 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 418 (expr_mtag)


State 1081

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  420          | expr '.' '.' "$f" '(' expr . ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1119


State 1082

  523 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 523 (variable_name_with_pos_list)


State 1083

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'
  462 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 462 (variable_declaration)


State 1084

   69 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' . expression_block

    '{'  shift, and go to state 311

    expression_block  go to state 1120


State 1085

   74 expression_with_alias: "assume" "name" '=' $@4 expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 74 (expression_with_alias)


State 1086

  195 expression_block: '{' expressions '}' "finally" '{' expressions '}' .

    $default  reduce using rule 195 (expression_block)


State 1087

   54 expression_else: "else" expression_block .

    $default  reduce using rule 54 (expression_else)


State 1088

   55 expression_else: elif_or_static_elif expr . expression_block expression_else
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    '{'    shift, and go to state 311

    expression_block  go to state 1121


State 1089

   60 expression_else_one_liner: "else" . $@2 expression_if_one_liner

    $default  reduce using rule 59 ($@2)

    $@2  go to state 1122


State 1090

   68 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner . ';'

    ';'  shift, and go to state 1123


State 1091

  444 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' ';' .

    $default  reduce using rule 444 (struct_variable_declaration_list)


State 1092

  441 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . $@27 function_declaration_header ';'

    $default  reduce using rule 440 ($@27)

    $@27  go to state 1124


State 1093

  443 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override . optional_constant $@28 function_declaration_header expression_block

    "const"  shift, and go to state 1125

    $default  reduce using rule 431 (optional_constant)

    optional_constant  go to state 1126


State 1094

  436 structure_variable_declaration: optional_field_annotation optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 545
    "name"  shift, and go to state 546

    variable_declaration         go to state 1127
    variable_name_with_pos_list  go to state 548


State 1095

  260 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1128


State 1096

  261 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" . '>' expr ')'

    '>'  shift, and go to state 1129


State 1097

  249 expr_cast: "cast" '<' $@6 type_declaration '>' $@7 expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 249 (expr_cast)


State 1098

  252 expr_cast: "upcast" '<' $@8 type_declaration '>' $@9 expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 252 (expr_cast)


State 1099

  255 expr_cast: "reinterpret" '<' $@10 type_declaration '>' $@11 expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 255 (expr_cast)


State 1100

  381 expr: "generator" '<' type_declaration '>' optional_capture_list '(' ')' .

    $default  reduce using rule 381 (expr)


State 1101

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  382     | "generator" '<' type_declaration '>' optional_capture_list '(' expr . ')'
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1130


State 1102

  417 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 417 (expr_mtag)


State 1103

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'
  661 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where ']' ']'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ';'    shift, and go to state 1131

    $default  reduce using rule 659 (array_comprehension_where)

    array_comprehension_where  go to state 1132


State 1104

  643 make_struct_decl: "[[" type_declaration '(' ')' make_struct_dim optional_block ']' . ']'

    ']'  shift, and go to state 1133


State 1105

  642 make_struct_decl: "[[" type_declaration '(' ')' optional_block ']' ']' .

    $default  reduce using rule 642 (make_struct_decl)


State 1106

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'
  635 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 635 (make_struct_fields)


State 1107

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'
  634 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 634 (make_struct_fields)


State 1108

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'
  662 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where '}' ']'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ';'    shift, and go to state 1131

    $default  reduce using rule 659 (array_comprehension_where)

    array_comprehension_where  go to state 1134


State 1109

  645 make_struct_decl: "[{" type_declaration '(' ')' make_struct_dim optional_block '}' . ']'

    ']'  shift, and go to state 1135


State 1110

  317 func_addr_expr: '@' '@' '<' $@14 type_declaration '>' $@15 . func_addr_name

    "::"    shift, and go to state 50
    "$i"    shift, and go to state 672
    "name"  shift, and go to state 51

    name_in_namespace  go to state 675
    func_addr_name     go to state 1136


State 1111

  320 func_addr_expr: '@' '@' '<' $@16 optional_function_argument_list optional_function_type '>' . $@17 func_addr_name

    $default  reduce using rule 319 ($@17)

    $@17  go to state 1137


State 1112

  266 block_or_simple_block: "=>" "<-" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1138
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1113

  265 block_or_simple_block: "=>" expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    ".."  error (nonassociative)

    $default  reduce using rule 265 (block_or_simple_block)


State 1114

  387 expr: expr "is" "type" '<' $@20 type_declaration '>' . $@21

    $default  reduce using rule 386 ($@21)

    $@21  go to state 1139


State 1115

  393 expr: expr "as" "type" '<' $@22 type_declaration '>' . $@23

    $default  reduce using rule 392 ($@23)

    $@23  go to state 1140


State 1116

  398 expr: expr '?' "as" "type" '<' $@24 type_declaration . '>' $@25
  570 type_declaration: type_declaration . '[' expr ']'
  571                 | type_declaration . '[' ']'
  572                 | type_declaration . '-' '[' ']'
  573                 | type_declaration . "explicit"
  574                 | type_declaration . "const"
  575                 | type_declaration . '-' "const"
  576                 | type_declaration . '&'
  577                 | type_declaration . '-' '&'
  578                 | type_declaration . '#'
  579                 | type_declaration . "implicit"
  580                 | type_declaration . '-' '#'
  581                 | type_declaration . '=' "const"
  582                 | type_declaration . '?'
  586                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 1141
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 1117

  423 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 423 (expr_mtag)


State 1118

  421 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 421 (expr_mtag)


State 1119

  420 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 420 (expr_mtag)


State 1120

   69 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' expression_block .

    $default  reduce using rule 69 (expression_for_loop)


State 1121

   55 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1024
    "elif"         shift, and go to state 1025
    "static_elif"  shift, and go to state 1026

    $default  reduce using rule 53 (expression_else)

    elif_or_static_elif  go to state 1027
    expression_else      go to state 1142


State 1122

   60 expression_else_one_liner: "else" $@2 . expression_if_one_liner

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "return"                          shift, and go to state 1143
    "null"                            shift, and go to state 350
    "break"                           shift, and go to state 558
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "continue"                        shift, and go to state 563
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "yield"                           shift, and go to state 1144
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder             go to state 386
    expr_reader                go to state 387
    expression_if_one_liner    go to state 1145
    expression_block           go to state 388
    name_in_namespace          go to state 389
    expr_new                   go to state 390
    expression_break           go to state 1146
    expression_continue        go to state 1147
    expression_return_no_pipe  go to state 1148
    expression_yield_no_pipe   go to state 1149
    expr_cast                  go to state 391
    expr_type_decl             go to state 392
    expr_type_info             go to state 393
    block_or_lambda            go to state 394
    expr_block                 go to state 395
    expr_numeric_const         go to state 396
    expr_named_call            go to state 397
    expr_method_call           go to state 398
    func_addr_expr             go to state 399
    expr_field                 go to state 400
    expr                       go to state 1150
    expr_mtag                  go to state 402
    basic_type_declaration     go to state 403
    make_decl                  go to state 404
    make_struct_decl           go to state 405
    make_dim_decl              go to state 406
    make_table_decl            go to state 407
    array_comprehension        go to state 408


State 1123

   68 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner ';' .

    $default  reduce using rule 68 (expression_if_then_else)


State 1124

  441 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" $@27 . function_declaration_header ';'

    "operator"  shift, and go to state 188
    "bool"      shift, and go to state 189
    "string"    shift, and go to state 190
    "int"       shift, and go to state 191
    "int2"      shift, and go to state 192
    "int3"      shift, and go to state 193
    "int4"      shift, and go to state 194
    "uint"      shift, and go to state 195
    "uint2"     shift, and go to state 196
    "uint3"     shift, and go to state 197
    "uint4"     shift, and go to state 198
    "float"     shift, and go to state 199
    "float2"    shift, and go to state 200
    "float3"    shift, and go to state 201
    "float4"    shift, and go to state 202
    "range"     shift, and go to state 203
    "urange"    shift, and go to state 204
    "int64"     shift, and go to state 205
    "uint64"    shift, and go to state 206
    "double"    shift, and go to state 207
    "int8"      shift, and go to state 208
    "uint8"     shift, and go to state 209
    "int16"     shift, and go to state 210
    "uint16"    shift, and go to state 211
    "++"        shift, and go to state 212
    "--"        shift, and go to state 213
    "name"      shift, and go to state 214

    function_name                go to state 215
    function_declaration_header  go to state 1151


State 1125

  432 optional_constant: "const" .

    $default  reduce using rule 432 (optional_constant)


State 1126

  443 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant . $@28 function_declaration_header expression_block

    $default  reduce using rule 442 ($@28)

    $@28  go to state 1152


State 1127

  436 structure_variable_declaration: optional_field_annotation optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 436 (structure_variable_declaration)


State 1128

  260 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 260 (expr_type_info)


State 1129

  261 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1153
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1130

  382 expr: "generator" '<' type_declaration '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 382 (expr)


State 1131

  660 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1154


State 1132

  661 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1155


State 1133

  643 make_struct_decl: "[[" type_declaration '(' ')' make_struct_dim optional_block ']' ']' .

    $default  reduce using rule 643 (make_struct_decl)


State 1134

  662 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . '}' ']'

    '}'  shift, and go to state 1156


State 1135

  645 make_struct_decl: "[{" type_declaration '(' ')' make_struct_dim optional_block '}' ']' .

    $default  reduce using rule 645 (make_struct_decl)


State 1136

  317 func_addr_expr: '@' '@' '<' $@14 type_declaration '>' $@15 func_addr_name .

    $default  reduce using rule 317 (func_addr_expr)


State 1137

  320 func_addr_expr: '@' '@' '<' $@16 optional_function_argument_list optional_function_type '>' $@17 . func_addr_name

    "::"    shift, and go to state 50
    "$i"    shift, and go to state 672
    "name"  shift, and go to state 51

    name_in_namespace  go to state 675
    func_addr_name     go to state 1157


State 1138

  266 block_or_simple_block: "=>" "<-" expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 266 (block_or_simple_block)


State 1139

  387 expr: expr "is" "type" '<' $@20 type_declaration '>' $@21 .

    $default  reduce using rule 387 (expr)


State 1140

  393 expr: expr "as" "type" '<' $@22 type_declaration '>' $@23 .

    $default  reduce using rule 393 (expr)


State 1141

  398 expr: expr '?' "as" "type" '<' $@24 type_declaration '>' . $@25

    $default  reduce using rule 397 ($@25)

    $@25  go to state 1158


State 1142

   55 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 55 (expression_else)


State 1143

  232 expression_return_no_pipe: "return" .
  233                          | "return" . expr
  234                          | "return" . "<-" expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "<-"                              shift, and go to state 1159
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    $default  reduce using rule 232 (expression_return_no_pipe)

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1160
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1144

  238 expression_yield_no_pipe: "yield" . expr
  239                         | "yield" . "<-" expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "<-"                              shift, and go to state 1161
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1162
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1145

   60 expression_else_one_liner: "else" $@2 expression_if_one_liner .

    $default  reduce using rule 60 (expression_else_one_liner)


State 1146

   64 expression_if_one_liner: expression_break .

    $default  reduce using rule 64 (expression_if_one_liner)


State 1147

   65 expression_if_one_liner: expression_continue .

    $default  reduce using rule 65 (expression_if_one_liner)


State 1148

   62 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 62 (expression_if_one_liner)


State 1149

   63 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 63 (expression_if_one_liner)


State 1150

   61 expression_if_one_liner: expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 61 (expression_if_one_liner)


State 1151

  441 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" $@27 function_declaration_header . ';'

    ';'  shift, and go to state 1163


State 1152

  443 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant $@28 . function_declaration_header expression_block

    "operator"  shift, and go to state 188
    "bool"      shift, and go to state 189
    "string"    shift, and go to state 190
    "int"       shift, and go to state 191
    "int2"      shift, and go to state 192
    "int3"      shift, and go to state 193
    "int4"      shift, and go to state 194
    "uint"      shift, and go to state 195
    "uint2"     shift, and go to state 196
    "uint3"     shift, and go to state 197
    "uint4"     shift, and go to state 198
    "float"     shift, and go to state 199
    "float2"    shift, and go to state 200
    "float3"    shift, and go to state 201
    "float4"    shift, and go to state 202
    "range"     shift, and go to state 203
    "urange"    shift, and go to state 204
    "int64"     shift, and go to state 205
    "uint64"    shift, and go to state 206
    "double"    shift, and go to state 207
    "int8"      shift, and go to state 208
    "uint8"     shift, and go to state 209
    "int16"     shift, and go to state 210
    "uint16"    shift, and go to state 211
    "++"        shift, and go to state 212
    "--"        shift, and go to state 213
    "name"      shift, and go to state 214

    function_name                go to state 215
    function_declaration_header  go to state 1164


State 1153

  261 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr . ')'
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1165


State 1154

  660 array_comprehension_where: ';' "where" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1166
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1155

  661 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1167


State 1156

  662 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' . ']'

    ']'  shift, and go to state 1168


State 1157

  320 func_addr_expr: '@' '@' '<' $@16 optional_function_argument_list optional_function_type '>' $@17 func_addr_name .

    $default  reduce using rule 320 (func_addr_expr)


State 1158

  398 expr: expr '?' "as" "type" '<' $@24 type_declaration '>' $@25 .

    $default  reduce using rule 398 (expr)


State 1159

  234 expression_return_no_pipe: "return" "<-" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1169
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1160

  233 expression_return_no_pipe: "return" expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 233 (expression_return_no_pipe)


State 1161

  239 expression_yield_no_pipe: "yield" "<-" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1170
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1162

  238 expression_yield_no_pipe: "yield" expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 238 (expression_yield_no_pipe)


State 1163

  441 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" $@27 function_declaration_header ';' .

    $default  reduce using rule 441 (struct_variable_declaration_list)


State 1164

  443 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant $@28 function_declaration_header . expression_block

    '{'  shift, and go to state 311

    expression_block  go to state 1171


State 1165

  261 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')' .

    $default  reduce using rule 261 (expr_type_info)


State 1166

  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'
  660 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 660 (array_comprehension_where)


State 1167

  661 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']' .

    $default  reduce using rule 661 (array_comprehension)


State 1168

  662 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']' .

    $default  reduce using rule 662 (array_comprehension)


State 1169

  234 expression_return_no_pipe: "return" "<-" expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 234 (expression_return_no_pipe)


State 1170

  239 expression_yield_no_pipe: "yield" "<-" expr .
  310 expr_method_call: expr . "->" "name" '(' ')'
  311                 | expr . "->" "name" '(' expr_list ')'
  321 expr_field: expr . '.' "name"
  322           | expr . '.' '.' "name"
  325           | expr . '.' $@18 error $@19
  340 expr: expr . "<<" expr
  341     | expr . ">>" expr
  342     | expr . "<<<" expr
  343     | expr . ">>>" expr
  344     | expr . '+' expr
  345     | expr . '-' expr
  346     | expr . '*' expr
  347     | expr . '/' expr
  348     | expr . '%' expr
  349     | expr . '<' expr
  350     | expr . '>' expr
  351     | expr . "==" expr
  352     | expr . "!=" expr
  353     | expr . "<=" expr
  354     | expr . ">=" expr
  355     | expr . '&' expr
  356     | expr . '|' expr
  357     | expr . '^' expr
  358     | expr . "&&" expr
  359     | expr . "||" expr
  360     | expr . "^^" expr
  361     | expr . ".." expr
  364     | expr . "++"
  365     | expr . "--"
  367     | expr . '[' expr ']'
  368     | expr . '.' '[' expr ']'
  369     | expr . "?[" expr ']'
  370     | expr . '.' "?[" expr ']'
  371     | expr . "?." "name"
  372     | expr . '.' "?." "name"
  383     | expr . "??" expr
  384     | expr . '?' expr ':' expr
  387     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  388     | expr . "is" basic_type_declaration
  389     | expr . "is" "name"
  390     | expr . "as" "name"
  393     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  394     | expr . "as" basic_type_declaration
  395     | expr . '?' "as" "name"
  398     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . '?' "as" basic_type_declaration
  407     | expr . "<|" expr
  408     | expr . "|>" expr
  418 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr . "?." "$f" '(' expr ')'
  420          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr . "as" "$f" '(' expr ')'
  423          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 239 (expression_yield_no_pipe)


State 1171

  443 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant $@28 function_declaration_header expression_block .

    $default  reduce using rule 443 (struct_variable_declaration_list)

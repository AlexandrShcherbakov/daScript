Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 59 conflicts: 1 shift/reduce
State 313 conflicts: 1 shift/reduce
State 509 conflicts: 2 shift/reduce
State 614 conflicts: 1 shift/reduce
State 874 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program ';'

   16 top_level_reader_macro: expr_reader ';'

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"

   28 string_builder_body: %empty
   29                    | string_builder_body character_sequence
   30                    | string_builder_body "{" expr "}"

   31 string_builder: "start of the string" string_builder_body "end of the string"

   32 reader_character_sequence: STRING_CHARACTER
   33                          | reader_character_sequence STRING_CHARACTER

   34 $@1: %empty

   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   36 options_declaration: "options" annotation_argument_list

   37 require_declaration: "require" require_module

   38 keyword_or_name: "name"
   39                | "keyword"
   40                | "type function"

   41 require_module_name: keyword_or_name
   42                    | '%' require_module_name
   43                    | require_module_name '.' keyword_or_name
   44                    | require_module_name '/' keyword_or_name

   45 require_module: require_module_name is_public_module
   46               | require_module_name "as" "name" is_public_module

   47 is_public_module: %empty
   48                 | "public"

   49 expect_declaration: "expect" expect_list

   50 expect_list: expect_error
   51            | expect_list ',' expect_error

   52 expect_error: "integer constant"
   53             | "integer constant" ':' "integer constant"

   54 expression_label: "label" "integer constant" ':'

   55 expression_goto: "goto" "label" "integer constant"
   56                | "goto" expr

   57 elif_or_static_elif: "elif"
   58                    | "static_elif"

   59 expression_else: %empty
   60                | "else" expression_block
   61                | elif_or_static_elif expr expression_block expression_else

   62 if_or_static_if: "if"
   63                | "static_if"

   64 expression_else_one_liner: %empty

   65 $@2: %empty

   66 expression_else_one_liner: "else" $@2 expression_if_one_liner

   67 expression_if_one_liner: expr
   68                        | expression_return_no_pipe
   69                        | expression_yield_no_pipe
   70                        | expression_break
   71                        | expression_continue

   72 expression_if_then_else: if_or_static_if expr expression_block expression_else

   73 $@3: %empty

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner ';'

   75 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' expression_block

   76 expression_unsafe: "unsafe" expression_block

   77 expression_while_loop: "while" expr expression_block

   78 expression_with: "with" expr expression_block

   79 $@4: %empty

   80 expression_with_alias: "assume" "name" '=' $@4 expr

   81 annotation_argument_value: string_constant
   82                          | "name"
   83                          | "integer constant"
   84                          | "floating point constant"
   85                          | "true"
   86                          | "false"

   87 annotation_argument_value_list: annotation_argument_value
   88                               | annotation_argument_value_list ',' annotation_argument_value

   89 annotation_argument_name: "name"
   90                         | "type"
   91                         | "in"

   92 annotation_argument: annotation_argument_name '=' string_constant
   93                    | annotation_argument_name '=' "name"
   94                    | annotation_argument_name '=' "integer constant"
   95                    | annotation_argument_name '=' "floating point constant"
   96                    | annotation_argument_name '=' "true"
   97                    | annotation_argument_name '=' "false"
   98                    | annotation_argument_name
   99                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  100 annotation_argument_list: annotation_argument
  101                         | annotation_argument_list ',' annotation_argument

  102 annotation_declaration_name: name_in_namespace
  103                            | "require"
  104                            | "private"

  105 annotation_declaration_basic: annotation_declaration_name
  106                             | annotation_declaration_name '(' annotation_argument_list ')'

  107 annotation_declaration: annotation_declaration_basic
  108                       | '!' annotation_declaration
  109                       | annotation_declaration "&&" annotation_declaration
  110                       | annotation_declaration "||" annotation_declaration
  111                       | annotation_declaration "^^" annotation_declaration
  112                       | '(' annotation_declaration ')'
  113                       | "|>" annotation_declaration

  114 annotation_list: annotation_declaration
  115                | annotation_list ',' annotation_declaration

  116 optional_annotation_list: %empty
  117                         | '[' annotation_list ']'

  118 optional_function_argument_list: %empty
  119                                | '(' ')'
  120                                | '(' function_argument_list ')'

  121 optional_function_type: %empty
  122                       | ':' type_declaration

  123 function_name: "name"
  124              | "operator" '!'
  125              | "operator" '~'
  126              | "operator" "+="
  127              | "operator" "-="
  128              | "operator" "*="
  129              | "operator" "/="
  130              | "operator" "%="
  131              | "operator" "&="
  132              | "operator" "|="
  133              | "operator" "^="
  134              | "operator" "&&="
  135              | "operator" "||="
  136              | "operator" "^^="
  137              | "operator" "&&"
  138              | "operator" "||"
  139              | "operator" "^^"
  140              | "operator" '+'
  141              | "operator" '-'
  142              | "operator" '*'
  143              | "operator" '/'
  144              | "operator" '%'
  145              | "operator" '<'
  146              | "operator" '>'
  147              | "operator" ".."
  148              | "operator" "=="
  149              | "operator" "!="
  150              | "operator" "<="
  151              | "operator" ">="
  152              | "operator" '&'
  153              | "operator" '|'
  154              | "operator" '^'
  155              | "++" "operator"
  156              | "--" "operator"
  157              | "operator" "++"
  158              | "operator" "--"
  159              | "operator" "<<"
  160              | "operator" ">>"
  161              | "operator" "<<="
  162              | "operator" ">>="
  163              | "operator" "<<<"
  164              | "operator" ">>>"
  165              | "operator" "<<<="
  166              | "operator" ">>>="
  167              | "operator" '[' ']'
  168              | "operator" "?[" ']'
  169              | "operator" '.'
  170              | "operator" "?."
  171              | "operator" '.' "name"
  172              | "operator" '.' "name" ":="
  173              | "operator" "?." "name"
  174              | "operator" ":="
  175              | "operator" "delete"
  176              | "operator" "??"
  177              | "operator" "is"
  178              | "operator" "as"
  179              | "operator" "is" "name"
  180              | "operator" "as" "name"
  181              | "operator" '?' "as"
  182              | "operator" '?' "as" "name"
  183              | "bool"
  184              | "string"
  185              | "int"
  186              | "int2"
  187              | "int3"
  188              | "int4"
  189              | "uint"
  190              | "uint2"
  191              | "uint3"
  192              | "uint4"
  193              | "float"
  194              | "float2"
  195              | "float3"
  196              | "float4"
  197              | "range"
  198              | "urange"
  199              | "range64"
  200              | "urange64"
  201              | "int64"
  202              | "uint64"
  203              | "double"
  204              | "int8"
  205              | "uint8"
  206              | "int16"
  207              | "uint16"

  208 global_function_declaration: optional_annotation_list "def" function_declaration

  209 optional_public_or_private_function: %empty
  210                                    | "private"
  211                                    | "public"

  212 function_declaration_header: function_name optional_function_argument_list optional_function_type

  213 $@5: %empty

  214 function_declaration: optional_public_or_private_function $@5 function_declaration_header expression_block

  215 expression_block: '{' expressions '}'
  216                 | '{' expressions '}' "finally" '{' expressions '}'

  217 expression_any: ';'
  218               | expr_pipe
  219               | expr_keyword
  220               | expr_assign_pipe
  221               | expr_assign ';'
  222               | expression_delete ';'
  223               | expression_let
  224               | expression_while_loop
  225               | expression_unsafe
  226               | expression_with
  227               | expression_with_alias
  228               | expression_for_loop
  229               | expression_break ';'
  230               | expression_continue ';'
  231               | expression_return
  232               | expression_yield
  233               | expression_if_then_else
  234               | expression_try_catch
  235               | expression_label ';'
  236               | expression_goto ';'
  237               | "pass" ';'

  238 expressions: %empty
  239            | expressions expression_any
  240            | expressions error

  241 expr_keyword: "keyword" expr expression_block

  242 optional_expr_list: %empty
  243                   | expr_list

  244 $@6: %empty

  245 $@7: %empty

  246 expression_keyword: "keyword" '<' $@6 type_declaration_no_options '>' $@7 expr

  247 $@8: %empty

  248 $@9: %empty

  249 expression_keyword: "type function" '<' $@8 type_declaration_no_options '>' $@9 '(' optional_expr_list ')'

  250 expr_pipe: expr_assign " <|" expr_block
  251          | "@ <|" expr_block
  252          | "@@ <|" expr_block
  253          | "$ <|" expr_block

  254 name_in_namespace: "name"
  255                  | "name" "::" "name"
  256                  | "::" "name"

  257 expression_delete: "delete" expr
  258                  | "delete" "explicit" expr

  259 $@10: %empty

  260 $@11: %empty

  261 new_type_declaration: '<' $@10 type_declaration '>' $@11
  262                     | structure_type_declaration

  263 expr_new: "new" new_type_declaration
  264         | "new" new_type_declaration '(' ')'
  265         | "new" new_type_declaration '(' expr_list ')'
  266         | "new" make_decl

  267 expression_break: "break"

  268 expression_continue: "continue"

  269 expression_return_no_pipe: "return"
  270                          | "return" expr_list
  271                          | "return" "<-" expr_list

  272 expression_return: expression_return_no_pipe ';'
  273                  | "return" expr_pipe
  274                  | "return" "<-" expr_pipe

  275 expression_yield_no_pipe: "yield" expr
  276                         | "yield" "<-" expr

  277 expression_yield: expression_yield_no_pipe ';'
  278                 | "yield" expr_pipe
  279                 | "yield" "<-" expr_pipe

  280 expression_try_catch: "try" expression_block "recover" expression_block

  281 kwd_let: "let"
  282        | "var"

  283 optional_in_scope: "inscope"
  284                  | %empty

  285 tuple_expansion: "name"
  286                | tuple_expansion ',' "name"

  287 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  288                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr ';'

  289 expression_let: kwd_let optional_in_scope let_variable_declaration
  290               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  291 $@12: %empty

  292 $@13: %empty

  293 expr_cast: "cast" '<' $@12 type_declaration_no_options '>' $@13 expr

  294 $@14: %empty

  295 $@15: %empty

  296 expr_cast: "upcast" '<' $@14 type_declaration_no_options '>' $@15 expr

  297 $@16: %empty

  298 $@17: %empty

  299 expr_cast: "reinterpret" '<' $@16 type_declaration_no_options '>' $@17 expr

  300 $@18: %empty

  301 $@19: %empty

  302 expr_type_decl: "type" '<' $@18 type_declaration '>' $@19

  303 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  304               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  305               | "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

  306 expr_list: expr
  307          | expr_list ',' expr

  308 block_or_simple_block: expression_block
  309                      | "=>" expr
  310                      | "=>" "<-" expr

  311 block_or_lambda: '$'
  312                | '@'
  313                | '@' '@'

  314 capture_entry: '&' "name"
  315              | '=' "name"
  316              | "<-" "name"
  317              | ":=" "name"

  318 capture_list: capture_entry
  319             | capture_list ',' capture_entry

  320 optional_capture_list: %empty
  321                      | "[[" capture_list ']' ']'

  322 expr_block: expression_block
  323           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  324 expr_numeric_const: "integer constant"
  325                   | "unsigned integer constant"
  326                   | "long integer constant"
  327                   | "unsigned long integer constant"
  328                   | "unsigned int8 constant"
  329                   | "floating point constant"
  330                   | "double constant"

  331 expr_assign: expr
  332            | expr '=' expr
  333            | expr "<-" expr
  334            | expr ":=" expr
  335            | expr "&=" expr
  336            | expr "|=" expr
  337            | expr "^=" expr
  338            | expr "&&=" expr
  339            | expr "||=" expr
  340            | expr "^^=" expr
  341            | expr "+=" expr
  342            | expr "-=" expr
  343            | expr "*=" expr
  344            | expr "/=" expr
  345            | expr "%=" expr
  346            | expr "<<=" expr
  347            | expr ">>=" expr
  348            | expr "<<<=" expr
  349            | expr ">>>=" expr

  350 expr_assign_pipe: expr '=' "@ <|" expr_block
  351                 | expr '=' "@@ <|" expr_block
  352                 | expr '=' "$ <|" expr_block
  353                 | expr "<-" "@ <|" expr_block
  354                 | expr "<-" "@@ <|" expr_block
  355                 | expr "<-" "$ <|" expr_block

  356 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  357                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  358 expr_method_call: expr "->" "name" '(' ')'
  359                 | expr "->" "name" '(' expr_list ')'

  360 func_addr_name: name_in_namespace
  361               | "$i" '(' expr ')'

  362 func_addr_expr: '@' '@' func_addr_name

  363 $@20: %empty

  364 $@21: %empty

  365 func_addr_expr: '@' '@' '<' $@20 type_declaration_no_options '>' $@21 func_addr_name

  366 $@22: %empty

  367 $@23: %empty

  368 func_addr_expr: '@' '@' '<' $@22 optional_function_argument_list optional_function_type '>' $@23 func_addr_name

  369 expr_field: expr '.' "name"
  370           | expr '.' '.' "name"

  371 $@24: %empty

  372 $@25: %empty

  373 expr_field: expr '.' $@24 error $@25

  374 expr: "null"
  375     | name_in_namespace
  376     | expr_numeric_const
  377     | expr_reader
  378     | string_builder
  379     | make_decl
  380     | "true"
  381     | "false"
  382     | expr_field
  383     | expr_mtag
  384     | '!' expr
  385     | '~' expr
  386     | '+' expr
  387     | '-' expr
  388     | expr "<<" expr
  389     | expr ">>" expr
  390     | expr "<<<" expr
  391     | expr ">>>" expr
  392     | expr '+' expr
  393     | expr '-' expr
  394     | expr '*' expr
  395     | expr '/' expr
  396     | expr '%' expr
  397     | expr '<' expr
  398     | expr '>' expr
  399     | expr "==" expr
  400     | expr "!=" expr
  401     | expr "<=" expr
  402     | expr ">=" expr
  403     | expr '&' expr
  404     | expr '|' expr
  405     | expr '^' expr
  406     | expr "&&" expr
  407     | expr "||" expr
  408     | expr "^^" expr
  409     | expr ".." expr
  410     | "++" expr
  411     | "--" expr
  412     | expr "++"
  413     | expr "--"
  414     | '(' expr ')'
  415     | expr '[' expr ']'
  416     | expr '.' '[' expr ']'
  417     | expr "?[" expr ']'
  418     | expr '.' "?[" expr ']'
  419     | expr "?." "name"
  420     | expr '.' "?." "name"
  421     | func_addr_expr
  422     | name_in_namespace '(' ')'
  423     | name_in_namespace '(' expr_list ')'
  424     | basic_type_declaration '(' ')'
  425     | basic_type_declaration '(' expr_list ')'
  426     | '*' expr
  427     | "deref" '(' expr ')'
  428     | "addr" '(' expr ')'
  429     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  430     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  431     | expr "??" expr
  432     | expr '?' expr ':' expr

  433 $@26: %empty

  434 $@27: %empty

  435 expr: expr "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr "is" basic_type_declaration
  437     | expr "is" "name"
  438     | expr "as" "name"

  439 $@28: %empty

  440 $@29: %empty

  441 expr: expr "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr "as" basic_type_declaration
  443     | expr '?' "as" "name"

  444 $@30: %empty

  445 $@31: %empty

  446 expr: expr '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr '?' "as" basic_type_declaration
  448     | expr_type_info
  449     | expr_type_decl
  450     | expr_cast
  451     | expr_new
  452     | expr_method_call
  453     | expr_named_call
  454     | expr_block
  455     | expr "<|" expr
  456     | expr "|>" expr
  457     | expr "|>" basic_type_declaration
  458     | name_in_namespace "name"
  459     | "unsafe" '(' expr ')'
  460     | expression_keyword

  461 expr_mtag: "$$" '(' expr ')'
  462          | "$i" '(' expr ')'
  463          | "$v" '(' expr ')'
  464          | "$b" '(' expr ')'
  465          | "$a" '(' expr ')'
  466          | "..."
  467          | "$c" '(' expr ')' '(' ')'
  468          | "$c" '(' expr ')' '(' expr_list ')'
  469          | expr '.' "$f" '(' expr ')'
  470          | expr "?." "$f" '(' expr ')'
  471          | expr '.' '.' "$f" '(' expr ')'
  472          | expr '.' "?." "$f" '(' expr ')'
  473          | expr "as" "$f" '(' expr ')'
  474          | expr '?' "as" "$f" '(' expr ')'
  475          | expr "is" "$f" '(' expr ')'
  476          | '@' '@' "$c" '(' expr ')'

  477 optional_field_annotation: %empty
  478                          | "[[" annotation_argument_list ']' ']'

  479 optional_override: %empty
  480                  | "override"
  481                  | "sealed"

  482 optional_constant: %empty
  483                  | "const"

  484 optional_public_or_private_member_variable: %empty
  485                                           | "public"
  486                                           | "private"

  487 optional_static_member_variable: %empty
  488                                | "static"

  489 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  490 struct_variable_declaration_list: %empty

  491 $@32: %empty

  492 struct_variable_declaration_list: struct_variable_declaration_list $@32 structure_variable_declaration ';'

  493 $@33: %empty

  494 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@33 function_declaration_header ';'

  495 $@34: %empty

  496 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@34 function_declaration_header expression_block
  497                                 | struct_variable_declaration_list '[' annotation_list ']' ';'

  498 function_argument_declaration: optional_field_annotation variable_declaration
  499                              | optional_field_annotation "var" variable_declaration
  500                              | "$a" '(' expr ')'

  501 function_argument_list: function_argument_declaration
  502                       | function_argument_list ';' function_argument_declaration

  503 tuple_type: type_declaration
  504           | "name" ':' type_declaration

  505 tuple_type_list: tuple_type
  506                | tuple_type_list ';' tuple_type

  507 tuple_alias_type_list: %empty
  508                      | tuple_alias_type_list ';'
  509                      | tuple_alias_type_list tuple_type ';'

  510 variant_type: "name" ':' type_declaration

  511 variant_type_list: variant_type
  512                  | variant_type_list ';' variant_type

  513 variant_alias_type_list: %empty
  514                        | variant_alias_type_list ';'
  515                        | variant_alias_type_list variant_type ';'

  516 copy_or_move: '='
  517             | "<-"

  518 variable_declaration: variable_name_with_pos_list
  519                     | variable_name_with_pos_list '&'
  520                     | variable_name_with_pos_list ':' type_declaration
  521                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  522                     | variable_name_with_pos_list copy_or_move expr
  523                     | variable_name_with_pos_list copy_or_move expr_pipe

  524 copy_or_move_or_clone: '='
  525                      | "<-"
  526                      | ":="

  527 optional_ref: %empty
  528             | '&'

  529 let_variable_name_with_pos_list: "name"
  530                                | "$i" '(' expr ')'
  531                                | "name" "aka" "name"
  532                                | let_variable_name_with_pos_list ',' "name"
  533                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  534 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options ';'
  535                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  536                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  537                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';'
  538                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  539 global_variable_declaration_list: %empty

  540 $@35: %empty

  541 global_variable_declaration_list: global_variable_declaration_list $@35 optional_field_annotation let_variable_declaration

  542 optional_shared: %empty
  543                | "shared"

  544 optional_public_or_private_variable: %empty
  545                                    | "private"
  546                                    | "public"

  547 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  548 $@36: %empty

  549 global_let: kwd_let optional_shared optional_public_or_private_variable $@36 optional_field_annotation let_variable_declaration

  550 enum_list: %empty
  551          | enum_list ';'
  552          | enum_list "name" ';'
  553          | enum_list "name" '=' expr ';'

  554 optional_public_or_private_alias: %empty
  555                                 | "private"
  556                                 | "public"

  557 $@37: %empty

  558 single_alias: optional_public_or_private_alias "name" $@37 '=' type_declaration

  559 alias_list: single_alias ';'
  560           | alias_list single_alias ';'

  561 alias_declaration: "typedef" '{' alias_list '}'

  562 $@38: %empty

  563 alias_declaration: "typedef" $@38 single_alias ';'

  564 optional_public_or_private_enum: %empty
  565                                | "private"
  566                                | "public"

  567 enum_name: "name"

  568 $@39: %empty

  569 $@40: %empty

  570 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@39 enum_list $@40 '}'

  571 $@41: %empty

  572 $@42: %empty

  573 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@41 enum_list $@42 '}'

  574 optional_structure_parent: %empty
  575                          | ':' name_in_namespace

  576 optional_sealed: %empty
  577                | "sealed"

  578 structure_name: optional_sealed "name" optional_structure_parent

  579 class_or_struct: "class"
  580                | "struct"

  581 optional_public_or_private_structure: %empty
  582                                     | "private"
  583                                     | "public"

  584 $@43: %empty

  585 $@44: %empty

  586 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@43 structure_name $@44 '{' struct_variable_declaration_list '}'

  587 variable_name_with_pos_list: "name"
  588                            | "$i" '(' expr ')'
  589                            | "name" "aka" "name"
  590                            | variable_name_with_pos_list ',' "name"
  591                            | variable_name_with_pos_list ',' "name" "aka" "name"

  592 basic_type_declaration: "bool"
  593                       | "string"
  594                       | "int"
  595                       | "int8"
  596                       | "int16"
  597                       | "int64"
  598                       | "int2"
  599                       | "int3"
  600                       | "int4"
  601                       | "uint"
  602                       | "uint8"
  603                       | "uint16"
  604                       | "uint64"
  605                       | "uint2"
  606                       | "uint3"
  607                       | "uint4"
  608                       | "float"
  609                       | "float2"
  610                       | "float3"
  611                       | "float4"
  612                       | "void"
  613                       | "range"
  614                       | "urange"
  615                       | "range64"
  616                       | "urange64"
  617                       | "double"
  618                       | "bitfield"

  619 enum_basic_type_declaration: "int"
  620                            | "int8"
  621                            | "int16"
  622                            | "uint"
  623                            | "uint8"
  624                            | "uint16"

  625 structure_type_declaration: name_in_namespace

  626 auto_type_declaration: "auto"
  627                      | "auto" '(' "name" ')'
  628                      | "$t" '(' expr ')'

  629 bitfield_bits: "name"
  630              | bitfield_bits ';' "name"

  631 bitfield_alias_bits: %empty
  632                    | bitfield_alias_bits ';'
  633                    | bitfield_alias_bits "name" ';'

  634 $@45: %empty

  635 $@46: %empty

  636 bitfield_type_declaration: "bitfield" '<' $@45 bitfield_bits '>' $@46

  637 table_type_pair: type_declaration
  638                | type_declaration ';' type_declaration

  639 type_declaration_no_options: basic_type_declaration
  640                            | auto_type_declaration
  641                            | bitfield_type_declaration
  642                            | structure_type_declaration
  643                            | type_declaration_no_options '[' expr ']'
  644                            | type_declaration_no_options '[' ']'

  645 $@47: %empty

  646 $@48: %empty

  647 type_declaration_no_options: "type" '<' $@47 type_declaration '>' $@48
  648                            | "typedecl" '(' expr ')'
  649                            | '$' name_in_namespace '(' optional_expr_list ')'
  650                            | type_declaration_no_options '-' '[' ']'
  651                            | type_declaration_no_options "explicit"
  652                            | type_declaration_no_options "const"
  653                            | type_declaration_no_options '-' "const"
  654                            | type_declaration_no_options '&'
  655                            | type_declaration_no_options '-' '&'
  656                            | type_declaration_no_options '#'
  657                            | type_declaration_no_options "implicit"
  658                            | type_declaration_no_options '-' '#'
  659                            | type_declaration_no_options "==" "const"
  660                            | type_declaration_no_options "==" '&'
  661                            | type_declaration_no_options '?'

  662 $@49: %empty

  663 $@50: %empty

  664 type_declaration_no_options: "smart_ptr" '<' $@49 type_declaration '>' $@50
  665                            | type_declaration_no_options "??"

  666 $@51: %empty

  667 $@52: %empty

  668 type_declaration_no_options: "array" '<' $@51 type_declaration '>' $@52

  669 $@53: %empty

  670 $@54: %empty

  671 type_declaration_no_options: "table" '<' $@53 table_type_pair '>' $@54

  672 $@55: %empty

  673 $@56: %empty

  674 type_declaration_no_options: "iterator" '<' $@55 type_declaration '>' $@56
  675                            | "block"

  676 $@57: %empty

  677 $@58: %empty

  678 type_declaration_no_options: "block" '<' $@57 type_declaration '>' $@58

  679 $@59: %empty

  680 $@60: %empty

  681 type_declaration_no_options: "block" '<' $@59 optional_function_argument_list optional_function_type '>' $@60
  682                            | "function"

  683 $@61: %empty

  684 $@62: %empty

  685 type_declaration_no_options: "function" '<' $@61 type_declaration '>' $@62

  686 $@63: %empty

  687 $@64: %empty

  688 type_declaration_no_options: "function" '<' $@63 optional_function_argument_list optional_function_type '>' $@64
  689                            | "lambda"

  690 $@65: %empty

  691 $@66: %empty

  692 type_declaration_no_options: "lambda" '<' $@65 type_declaration '>' $@66

  693 $@67: %empty

  694 $@68: %empty

  695 type_declaration_no_options: "lambda" '<' $@67 optional_function_argument_list optional_function_type '>' $@68

  696 $@69: %empty

  697 $@70: %empty

  698 type_declaration_no_options: "tuple" '<' $@69 tuple_type_list '>' $@70

  699 $@71: %empty

  700 $@72: %empty

  701 type_declaration_no_options: "variant" '<' $@71 variant_type_list '>' $@72

  702 type_declaration: type_declaration_no_options
  703                 | type_declaration '|' type_declaration_no_options
  704                 | type_declaration '|' '#'

  705 $@73: %empty

  706 $@74: %empty

  707 $@75: %empty

  708 $@76: %empty

  709 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@73 "name" $@74 '{' $@75 tuple_alias_type_list $@76 '}'

  710 $@77: %empty

  711 $@78: %empty

  712 $@79: %empty

  713 $@80: %empty

  714 variant_alias_declaration: "variant" optional_public_or_private_alias $@77 "name" $@78 '{' $@79 variant_alias_type_list $@80 '}'

  715 $@81: %empty

  716 $@82: %empty

  717 $@83: %empty

  718 $@84: %empty

  719 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@81 "name" $@82 '{' $@83 bitfield_alias_bits $@84 '}'

  720 make_decl: make_struct_decl
  721          | make_dim_decl
  722          | make_table_decl
  723          | array_comprehension
  724          | make_tuple_call

  725 make_struct_fields: "name" copy_or_move expr
  726                   | "name" ":=" expr
  727                   | make_struct_fields ',' "name" copy_or_move expr
  728                   | make_struct_fields ',' "name" ":=" expr
  729                   | "$f" '(' expr ')' copy_or_move expr
  730                   | "$f" '(' expr ')' ":=" expr
  731                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  732                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  733 make_struct_dim: make_struct_fields
  734                | make_struct_dim ';' make_struct_fields

  735 optional_block: %empty
  736               | "where" expr_block

  737 optional_trailing_semicolon_cur_cur: '}' '}'
  738                                    | ";}}"

  739 optional_trailing_semicolon_cur_sqr: '}' ']'
  740                                    | ";}]"

  741 optional_trailing_semicolon_sqr_sqr: ']' ']'
  742                                    | ";]]"

  743 optional_trailing_delim_sqr_sqr: ']' ']'
  744                                | ";]]"
  745                                | ",]]"

  746 optional_trailing_delim_cur_sqr: '}' ']'
  747                                | ";}]"
  748                                | ",}]"

  749 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  750                 | "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  751                 | "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  752                 | "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  753                 | "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  754                 | "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

  755 make_tuple: expr
  756           | expr "=>" expr
  757           | make_tuple ',' expr

  758 make_map_tuple: expr "=>" expr
  759               | expr

  760 make_tuple_call: "tuple" '(' expr_list ')'

  761 make_dim: make_tuple
  762         | make_dim ';' make_tuple

  763 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  764              | "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  765              | "array" '(' expr_list ')'

  766 $@85: %empty

  767 $@86: %empty

  768 make_dim_decl: "array" '<' $@85 type_declaration_no_options '>' $@86 '(' expr_list ')'
  769              | "fixed_array" '(' expr_list ')'

  770 $@87: %empty

  771 $@88: %empty

  772 make_dim_decl: "fixed_array" '<' $@87 type_declaration_no_options '>' $@88 '(' expr_list ')'

  773 make_table: make_map_tuple
  774           | make_table ';' make_map_tuple

  775 expr_map_tuple_list: make_map_tuple
  776                    | expr_map_tuple_list ',' make_map_tuple

  777 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur
  778                | "table" '(' expr_map_tuple_list ')'
  779                | "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list ')'
  780                | "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list ')'

  781 array_comprehension_where: %empty
  782                          | ';' "where" expr

  783 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'
  784                    | "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 108 124 384
    '#' (35) 656 658 704
    '$' (36) 20 311 649
    '%' (37) 35 42 144 396
    '&' (38) 152 314 403 519 528 654 655 660
    '(' (40) 99 106 112 119 120 249 264 265 303 304 305 356 357 358 359 361 414 422 423 424 425 427 428 429 430 459 461 462 463 464 465 467 468 469 470 471 472 473 474 475 476 500 530 588 627 628 648 649 729 730 731 732 751 752 754 760 765 768 769 772 778 779 780
    ')' (41) 99 106 112 119 120 249 264 265 303 304 305 356 357 358 359 361 414 422 423 424 425 427 428 429 430 459 461 462 463 464 465 467 468 469 470 471 472 473 474 475 476 500 530 588 627 628 648 649 729 730 731 732 751 752 754 760 765 768 769 772 778 779 780
    '*' (42) 142 394 426
    '+' (43) 140 386 392
    ',' (44) 51 88 101 115 286 307 319 357 532 533 590 591 727 728 731 732 757 776
    '-' (45) 141 387 393 650 653 655 658
    '.' (46) 43 169 171 172 369 370 373 416 418 420 469 471 472
    '/' (47) 44 143 395
    ':' (58) 53 54 122 287 432 504 510 520 521 534 535 536 573 575
    ';' (59) 15 16 74 75 217 221 222 229 230 235 236 237 272 277 287 288 305 492 494 497 502 506 508 509 512 514 515 534 535 537 551 552 553 559 560 563 630 632 633 638 734 762 774 780 782 783 784
    '<' (60) 145 246 249 261 293 296 299 302 304 305 365 368 397 429 430 435 441 446 636 647 664 668 671 674 678 681 685 688 692 695 698 701 768 772 779 780
    '=' (61) 80 92 93 94 95 96 97 99 315 332 350 351 352 516 524 553 558
    '>' (62) 146 246 249 261 293 296 299 302 304 305 365 368 398 429 430 435 441 446 636 647 664 668 671 674 678 681 685 688 692 695 698 701 768 772 779 780
    '?' (63) 181 182 432 443 446 447 474 661
    '@' (64) 312 313 362 365 368 476
    '[' (91) 117 167 356 357 415 416 497 643 644 650
    ']' (93) 117 167 168 287 288 321 356 357 415 416 417 418 478 497 643 644 650 739 741 743 746 783 784
    '^' (94) 154 405
    '{' (123) 215 216 547 561 570 573 586 709 714 719
    '|' (124) 153 404 703 704
    '}' (125) 215 216 547 561 570 573 586 709 714 719 737 739 746 784
    '~' (126) 125 385
    error (256) 240 373
    "lexer error" (258)
    "struct" (259) 580
    "class" (260) 579
    "let" (261) 281
    "def" (262) 208 494 496
    "while" (263) 77
    "if" (264) 62 74
    "static_if" (265) 63
    "else" (266) 60 66
    "for" (267) 75 783 784
    "recover" (268) 280
    "true" (269) 85 96 380
    "false" (270) 86 97 381
    "new" (271) 263 264 265 266
    "typeinfo" (272) 303 304 305
    "type" (273) 90 302 435 441 446 647
    "in" (274) 75 91 783 784
    "is" (275) 177 179 435 436 437 475
    "as" (276) 46 178 180 181 182 438 441 442 443 446 447 473 474
    "elif" (277) 57
    "static_elif" (278) 58
    "array" (279) 668 765 768
    "return" (280) 269 270 271 273 274
    "null" (281) 374
    "break" (282) 267
    "try" (283) 280
    "options" (284) 36
    "table" (285) 671 778 779 780
    "expect" (286) 49
    "const" (287) 483 652 653 659
    "require" (288) 37 103
    "operator" (289) 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182
    "enum" (290) 570 573
    "finally" (291) 216
    "delete" (292) 175 257 258
    "deref" (293) 427
    "typedef" (294) 561 563
    "typedecl" (295) 648
    "with" (296) 78
    "aka" (297) 531 533 589 591
    "assume" (298) 80
    "cast" (299) 293
    "override" (300) 480
    "abstract" (301) 494
    "upcast" (302) 296
    "iterator" (303) 674
    "var" (304) 282 499
    "addr" (305) 428
    "continue" (306) 268
    "where" (307) 736 782
    "pass" (308) 237
    "reinterpret" (309) 299
    "module" (310) 22
    "public" (311) 18 48 211 485 546 556 566 583
    "label" (312) 54 55
    "goto" (313) 55 56
    "implicit" (314) 657
    "explicit" (315) 258 651
    "shared" (316) 543
    "private" (317) 19 104 210 486 545 555 565 582
    "smart_ptr" (318) 664
    "unsafe" (319) 76 459
    "inscope" (320) 283
    "static" (321) 488
    "fixed_array" (322) 769 772
    "bool" (323) 183 592
    "void" (324) 612
    "string" (325) 184 593
    "auto" (326) 626 627
    "int" (327) 185 594 619
    "int2" (328) 186 598
    "int3" (329) 187 599
    "int4" (330) 188 600
    "uint" (331) 189 601 622
    "bitfield" (332) 618 636 719
    "uint2" (333) 190 605
    "uint3" (334) 191 606
    "uint4" (335) 192 607
    "float" (336) 193 608
    "float2" (337) 194 609
    "float3" (338) 195 610
    "float4" (339) 196 611
    "range" (340) 197 613
    "urange" (341) 198 614
    "range64" (342) 199 615
    "urange64" (343) 200 616
    "block" (344) 675 678 681
    "int64" (345) 201 597
    "uint64" (346) 202 604
    "double" (347) 203 617
    "function" (348) 682 685 688
    "lambda" (349) 689 692 695
    "int8" (350) 204 595 620
    "uint8" (351) 205 602 623
    "int16" (352) 206 596 621
    "uint16" (353) 207 603 624
    "tuple" (354) 698 709 760
    "variant" (355) 701 714
    "generator" (356) 429 430
    "yield" (357) 275 276 278 279
    "sealed" (358) 481 577
    "+=" (359) 126 341
    "-=" (360) 127 342
    "/=" (361) 129 344
    "*=" (362) 128 343
    "%=" (363) 130 345
    "&=" (364) 131 335
    "|=" (365) 132 336
    "^=" (366) 133 337
    "<<" (367) 159 388
    ">>" (368) 160 389
    "++" (369) 155 157 410 412
    "--" (370) 156 158 411 413
    "<=" (371) 150 401
    "<<=" (372) 161 346
    ">>=" (373) 162 347
    ">=" (374) 151 402
    "==" (375) 148 399 659 660
    "!=" (376) 149 400
    "->" (377) 358 359
    "<-" (378) 271 274 276 279 310 316 333 353 354 355 517 525
    "??" (379) 176 431 665
    "?." (380) 170 173 419 420 470 472
    "?[" (381) 168 417 418
    "<|" (382) 455
    " <|" (383) 250
    "$ <|" (384) 253 352 355
    "@ <|" (385) 251 350 353
    "@@ <|" (386) 252 351 354
    "|>" (387) 113 456 457
    ":=" (388) 172 174 317 334 526 726 728 730 732
    "<<<" (389) 163 390
    ">>>" (390) 164 391
    "<<<=" (391) 165 348
    ">>>=" (392) 166 349
    "=>" (393) 309 310 756 758
    "::" (394) 255 256
    "&&" (395) 109 137 406
    "||" (396) 110 138 407
    "^^" (397) 111 139 408
    "&&=" (398) 134 338
    "||=" (399) 135 339
    "^^=" (400) 136 340
    ".." (401) 147 409
    "$$" (402) 461
    "$i" (403) 361 462 530 588
    "$v" (404) 463
    "$b" (405) 464
    "$a" (406) 465 500
    "$t" (407) 628
    "$c" (408) 467 468 476
    "$f" (409) 469 470 471 472 473 474 475 729 730 731 732
    "..." (410) 466
    "[[" (411) 287 288 321 478 749 750 751 752 763 783
    "[{" (412) 753 754 764 784
    "{{" (413) 777
    "integer constant" <i> (414) 52 53 54 55 83 94 324
    "long integer constant" <i64> (415) 326
    "unsigned integer constant" <ui> (416) 325
    "unsigned long integer constant" <ui64> (417) 327
    "unsigned int8 constant" <ui> (418) 328
    "floating point constant" <fd> (419) 84 95 329
    "double constant" <d> (420) 330
    "name" <s> (421) 21 38 46 80 82 89 93 123 171 172 173 179 180 182 254 255 256 285 286 304 305 314 315 316 317 358 359 369 370 419 420 437 438 443 458 504 510 529 531 532 533 552 553 558 567 578 587 589 590 591 627 629 630 633 709 714 719 725 726 727 728
    "keyword" <s> (422) 39 241 246
    "type function" <s> (423) 40 249
    "start of the string" (424) 27 31
    STRING_CHARACTER <ch> (425) 23 25 32 33
    STRING_CHARACTER_ESC (426) 24 26
    "end of the string" (427) 27 31
    "{" (428) 30
    "}" (429) 30
    "end of failed eader macro" (430)
    ";}}" (431) 738
    ";}]" (432) 740 747
    ";]]" (433) 742 744
    ",]]" (434) 745
    ",}]" (435) 748
    UNARY_MINUS (436)
    UNARY_PLUS (437)
    PRE_INC (438)
    PRE_DEC (439)
    POST_INC (440)
    POST_DEC (441)
    DEREF (442)


Nonterminals, with rules where they appear

    $accept (215)
        on left: 0
    program (216)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (217)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (218)
        on left: 17 18 19
        on right: 22
    module_name <s> (219)
        on left: 20 21
        on right: 22
    module_declaration (220)
        on left: 22
        on right: 2
    character_sequence <s> (221)
        on left: 23 24 25 26
        on right: 25 26 27 29
    string_constant <s> (222)
        on left: 27
        on right: 81 92
    string_builder_body <pExpression> (223)
        on left: 28 29 30
        on right: 29 30 31
    string_builder <pExpression> (224)
        on left: 31
        on right: 378
    reader_character_sequence (225)
        on left: 32 33
        on right: 33 35
    expr_reader <pExpression> (226)
        on left: 35
        on right: 16 377
    $@1 (227)
        on left: 34
        on right: 35
    options_declaration (228)
        on left: 36
        on right: 9
    require_declaration (229)
        on left: 37
        on right: 8
    keyword_or_name <s> (230)
        on left: 38 39 40
        on right: 41 43 44
    require_module_name <s> (231)
        on left: 41 42 43 44
        on right: 42 43 44 45 46
    require_module (232)
        on left: 45 46
        on right: 37
    is_public_module <b> (233)
        on left: 47 48
        on right: 45 46
    expect_declaration (234)
        on left: 49
        on right: 7
    expect_list (235)
        on left: 50 51
        on right: 49 51
    expect_error (236)
        on left: 52 53
        on right: 50 51
    expression_label <pExpression> (237)
        on left: 54
        on right: 235
    expression_goto <pExpression> (238)
        on left: 55 56
        on right: 236
    elif_or_static_elif <b> (239)
        on left: 57 58
        on right: 61
    expression_else <pExpression> (240)
        on left: 59 60 61
        on right: 61 72
    if_or_static_if <b> (241)
        on left: 62 63
        on right: 72
    expression_else_one_liner <pExpression> (242)
        on left: 64 66
        on right: 74
    $@2 (243)
        on left: 65
        on right: 66
    expression_if_one_liner <pExpression> (244)
        on left: 67 68 69 70 71
        on right: 66 74
    expression_if_then_else <pExpression> (245)
        on left: 72 74
        on right: 233
    $@3 (246)
        on left: 73
        on right: 74
    expression_for_loop <pExpression> (247)
        on left: 75
        on right: 228
    expression_unsafe <pExpression> (248)
        on left: 76
        on right: 225
    expression_while_loop <pExpression> (249)
        on left: 77
        on right: 224
    expression_with <pExpression> (250)
        on left: 78
        on right: 226
    expression_with_alias <pExpression> (251)
        on left: 80
        on right: 227
    $@4 (252)
        on left: 79
        on right: 80
    annotation_argument_value <aa> (253)
        on left: 81 82 83 84 85 86
        on right: 87 88
    annotation_argument_value_list <aaList> (254)
        on left: 87 88
        on right: 88 99
    annotation_argument_name <s> (255)
        on left: 89 90 91
        on right: 92 93 94 95 96 97 98 99
    annotation_argument <aa> (256)
        on left: 92 93 94 95 96 97 98 99
        on right: 100 101
    annotation_argument_list <aaList> (257)
        on left: 100 101
        on right: 36 101 106 478
    annotation_declaration_name <s> (258)
        on left: 102 103 104
        on right: 105 106
    annotation_declaration_basic <fa> (259)
        on left: 105 106
        on right: 107
    annotation_declaration <fa> (260)
        on left: 107 108 109 110 111 112 113
        on right: 108 109 110 111 112 113 114 115
    annotation_list <faList> (261)
        on left: 114 115
        on right: 115 117 497
    optional_annotation_list <faList> (262)
        on left: 116 117
        on right: 208 323 494 496 570 573 586
    optional_function_argument_list <pVarDeclList> (263)
        on left: 118 119 120
        on right: 212 323 368 681 688 695
    optional_function_type <pTypeDecl> (264)
        on left: 121 122
        on right: 212 323 368 681 688 695
    function_name <s> (265)
        on left: 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207
        on right: 212
    global_function_declaration (266)
        on left: 208
        on right: 6
    optional_public_or_private_function <b> (267)
        on left: 209 210 211
        on right: 214
    function_declaration_header <pFuncDecl> (268)
        on left: 212
        on right: 214 494 496
    function_declaration <pFuncDecl> (269)
        on left: 214
        on right: 208
    $@5 (270)
        on left: 213
        on right: 214
    expression_block <pExpression> (271)
        on left: 215 216
        on right: 60 61 72 75 76 77 78 214 241 280 308 322 496
    expression_any <pExpression> (272)
        on left: 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237
        on right: 239
    expressions <pExpression> (273)
        on left: 238 239 240
        on right: 215 216 239 240
    expr_keyword <pExpression> (274)
        on left: 241
        on right: 219
    optional_expr_list <pExpression> (275)
        on left: 242 243
        on right: 249 649
    expression_keyword <pExpression> (276)
        on left: 246 249
        on right: 460
    $@6 (277)
        on left: 244
        on right: 246
    $@7 (278)
        on left: 245
        on right: 246
    $@8 (279)
        on left: 247
        on right: 249
    $@9 (280)
        on left: 248
        on right: 249
    expr_pipe <pExpression> (281)
        on left: 250 251 252 253
        on right: 218 273 274 278 279 523 536 538
    name_in_namespace <s> (282)
        on left: 254 255 256
        on right: 35 102 303 304 305 356 357 360 375 422 423 458 575 625 649
    expression_delete <pExpression> (283)
        on left: 257 258
        on right: 222
    new_type_declaration <pTypeDecl> (284)
        on left: 261 262
        on right: 263 264 265
    $@10 (285)
        on left: 259
        on right: 261
    $@11 (286)
        on left: 260
        on right: 261
    expr_new <pExpression> (287)
        on left: 263 264 265 266
        on right: 451
    expression_break <pExpression> (288)
        on left: 267
        on right: 70 229
    expression_continue <pExpression> (289)
        on left: 268
        on right: 71 230
    expression_return_no_pipe <pExpression> (290)
        on left: 269 270 271
        on right: 68 272
    expression_return <pExpression> (291)
        on left: 272 273 274
        on right: 231
    expression_yield_no_pipe <pExpression> (292)
        on left: 275 276
        on right: 69 277
    expression_yield <pExpression> (293)
        on left: 277 278 279
        on right: 232
    expression_try_catch <pExpression> (294)
        on left: 280
        on right: 234
    kwd_let <b> (295)
        on left: 281 282
        on right: 289 290 547 549
    optional_in_scope <b> (296)
        on left: 283 284
        on right: 289 290
    tuple_expansion <pNameList> (297)
        on left: 285 286
        on right: 286 287 288
    tuple_expansion_variable_declaration <pVarDecl> (298)
        on left: 287 288
        on right: 290
    expression_let <pExpression> (299)
        on left: 289 290
        on right: 223
    expr_cast <pExpression> (300)
        on left: 293 296 299
        on right: 450
    $@12 (301)
        on left: 291
        on right: 293
    $@13 (302)
        on left: 292
        on right: 293
    $@14 (303)
        on left: 294
        on right: 296
    $@15 (304)
        on left: 295
        on right: 296
    $@16 (305)
        on left: 297
        on right: 299
    $@17 (306)
        on left: 298
        on right: 299
    expr_type_decl <pExpression> (307)
        on left: 302
        on right: 449
    $@18 (308)
        on left: 300
        on right: 302
    $@19 (309)
        on left: 301
        on right: 302
    expr_type_info <pExpression> (310)
        on left: 303 304 305
        on right: 448
    expr_list <pExpression> (311)
        on left: 306 307
        on right: 75 243 265 270 271 307 357 359 423 425 468 760 765 768 769 772 783 784
    block_or_simple_block <pExpression> (312)
        on left: 308 309 310
        on right: 323
    block_or_lambda <i> (313)
        on left: 311 312 313
        on right: 323
    capture_entry <pCapt> (314)
        on left: 314 315 316 317
        on right: 318 319
    capture_list <pCaptList> (315)
        on left: 318 319
        on right: 319 321
    optional_capture_list <pCaptList> (316)
        on left: 320 321
        on right: 323 429 430
    expr_block <pExpression> (317)
        on left: 322 323
        on right: 250 251 252 253 350 351 352 353 354 355 454 736
    expr_numeric_const <pExpression> (318)
        on left: 324 325 326 327 328 329 330
        on right: 376
    expr_assign <pExpression> (319)
        on left: 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349
        on right: 221 250
    expr_assign_pipe <pExpression> (320)
        on left: 350 351 352 353 354 355
        on right: 220
    expr_named_call <pExpression> (321)
        on left: 356 357
        on right: 453
    expr_method_call <pExpression> (322)
        on left: 358 359
        on right: 452
    func_addr_name <pExpression> (323)
        on left: 360 361
        on right: 362 365 368
    func_addr_expr <pExpression> (324)
        on left: 362 365 368
        on right: 421
    $@20 (325)
        on left: 363
        on right: 365
    $@21 (326)
        on left: 364
        on right: 365
    $@22 (327)
        on left: 366
        on right: 368
    $@23 (328)
        on left: 367
        on right: 368
    expr_field <pExpression> (329)
        on left: 369 370 373
        on right: 382
    $@24 (330)
        on left: 371
        on right: 373
    $@25 (331)
        on left: 372
        on right: 373
    expr <pExpression> (332)
        on left: 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 435 436 437 438 441 442 443 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460
        on right
    $@26 (333)
        on left: 433
        on right: 435
    $@27 (334)
        on left: 434
        on right: 435
    $@28 (335)
        on left: 439
        on right: 441
    $@29 (336)
        on left: 440
        on right: 441
    $@30 (337)
        on left: 444
        on right: 446
    $@31 (338)
        on left: 445
        on right: 446
    expr_mtag <pExpression> (339)
        on left: 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476
        on right: 383
    optional_field_annotation <aaList> (340)
        on left: 477 478
        on right: 489 498 499 541 549
    optional_override <i> (341)
        on left: 479 480 481
        on right: 489 496
    optional_constant <b> (342)
        on left: 482 483
        on right: 494 496
    optional_public_or_private_member_variable <b> (343)
        on left: 484 485 486
        on right: 489 494 496
    optional_static_member_variable <b> (344)
        on left: 487 488
        on right: 489 496
    structure_variable_declaration <pVarDecl> (345)
        on left: 489
        on right: 492
    struct_variable_declaration_list <pVarDeclList> (346)
        on left: 490 492 494 496 497
        on right: 492 494 496 497 586
    $@32 (347)
        on left: 491
        on right: 492
    $@33 (348)
        on left: 493
        on right: 494
    $@34 (349)
        on left: 495
        on right: 496
    function_argument_declaration <pVarDecl> (350)
        on left: 498 499 500
        on right: 501 502
    function_argument_list <pVarDeclList> (351)
        on left: 501 502
        on right: 120 502
    tuple_type <pVarDecl> (352)
        on left: 503 504
        on right: 505 506 509
    tuple_type_list <pVarDeclList> (353)
        on left: 505 506
        on right: 506 698
    tuple_alias_type_list <pVarDeclList> (354)
        on left: 507 508 509
        on right: 508 509 709
    variant_type <pVarDecl> (355)
        on left: 510
        on right: 511 512 515
    variant_type_list <pVarDeclList> (356)
        on left: 511 512
        on right: 512 701
    variant_alias_type_list <pVarDeclList> (357)
        on left: 513 514 515
        on right: 514 515 714
    copy_or_move <b> (358)
        on left: 516 517
        on right: 521 522 523 725 727 729 731
    variable_declaration <pVarDecl> (359)
        on left: 518 519 520 521 522 523
        on right: 489 498 499
    copy_or_move_or_clone <i> (360)
        on left: 524 525 526
        on right: 287 288 535 536 537 538
    optional_ref <b> (361)
        on left: 527 528
        on right: 288 537 538
    let_variable_name_with_pos_list <pNameWithPosList> (362)
        on left: 529 530 531 532 533
        on right: 532 533 534 535 536 537 538
    let_variable_declaration <pVarDecl> (363)
        on left: 534 535 536 537 538
        on right: 289 541 549
    global_variable_declaration_list <pVarDeclList> (364)
        on left: 539 541
        on right: 541 547
    $@35 (365)
        on left: 540
        on right: 541
    optional_shared <b> (366)
        on left: 542 543
        on right: 22 547 549
    optional_public_or_private_variable <b> (367)
        on left: 544 545 546
        on right: 547 549
    global_let (368)
        on left: 547 549
        on right: 5
    $@36 (369)
        on left: 548
        on right: 549
    enum_list <pEnum> (370)
        on left: 550 551 552 553
        on right: 551 552 553 570 573
    optional_public_or_private_alias <b> (371)
        on left: 554 555 556
        on right: 558 709 714 719
    single_alias (372)
        on left: 558
        on right: 559 560 563
    $@37 (373)
        on left: 557
        on right: 558
    alias_list (374)
        on left: 559 560
        on right: 560 561
    alias_declaration (375)
        on left: 561 563
        on right: 10
    $@38 (376)
        on left: 562
        on right: 563
    optional_public_or_private_enum <b> (377)
        on left: 564 565 566
        on right: 570 573
    enum_name <pEnum> (378)
        on left: 567
        on right: 570 573
    enum_declaration (379)
        on left: 570 573
        on right: 4
    $@39 (380)
        on left: 568
        on right: 570
    $@40 (381)
        on left: 569
        on right: 570
    $@41 (382)
        on left: 571
        on right: 573
    $@42 (383)
        on left: 572
        on right: 573
    optional_structure_parent <s> (384)
        on left: 574 575
        on right: 578
    optional_sealed <b> (385)
        on left: 576 577
        on right: 578
    structure_name <pStructure> (386)
        on left: 578
        on right: 586
    class_or_struct <b> (387)
        on left: 579 580
        on right: 586
    optional_public_or_private_structure <b> (388)
        on left: 581 582 583
        on right: 586
    structure_declaration (389)
        on left: 586
        on right: 3
    $@43 (390)
        on left: 584
        on right: 586
    $@44 (391)
        on left: 585
        on right: 586
    variable_name_with_pos_list <pNameWithPosList> (392)
        on left: 587 588 589 590 591
        on right: 75 518 519 520 521 522 523 590 591 783 784
    basic_type_declaration <type> (393)
        on left: 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618
        on right: 424 425 436 442 447 457 639
    enum_basic_type_declaration <type> (394)
        on left: 619 620 621 622 623 624
        on right: 573
    structure_type_declaration <pTypeDecl> (395)
        on left: 625
        on right: 262 642
    auto_type_declaration <pTypeDecl> (396)
        on left: 626 627 628
        on right: 640
    bitfield_bits <pNameList> (397)
        on left: 629 630
        on right: 630 636
    bitfield_alias_bits <pNameList> (398)
        on left: 631 632 633
        on right: 632 633 719
    bitfield_type_declaration <pTypeDecl> (399)
        on left: 636
        on right: 641
    $@45 (400)
        on left: 634
        on right: 636
    $@46 (401)
        on left: 635
        on right: 636
    table_type_pair <aTypePair> (402)
        on left: 637 638
        on right: 671
    type_declaration_no_options <pTypeDecl> (403)
        on left: 639 640 641 642 643 644 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 664 665 668 671 674 675 678 681 682 685 688 689 692 695 698 701
        on right: 246 249 287 293 296 299 365 429 430 435 534 535 536 643 644 650 651 652 653 654 655 656 657 658 659 660 661 665 702 703 749 750 751 752 753 754 763 764 768 772 779 780
    $@47 (404)
        on left: 645
        on right: 647
    $@48 (405)
        on left: 646
        on right: 647
    $@49 (406)
        on left: 662
        on right: 664
    $@50 (407)
        on left: 663
        on right: 664
    $@51 (408)
        on left: 666
        on right: 668
    $@52 (409)
        on left: 667
        on right: 668
    $@53 (410)
        on left: 669
        on right: 671
    $@54 (411)
        on left: 670
        on right: 671
    $@55 (412)
        on left: 672
        on right: 674
    $@56 (413)
        on left: 673
        on right: 674
    $@57 (414)
        on left: 676
        on right: 678
    $@58 (415)
        on left: 677
        on right: 678
    $@59 (416)
        on left: 679
        on right: 681
    $@60 (417)
        on left: 680
        on right: 681
    $@61 (418)
        on left: 683
        on right: 685
    $@62 (419)
        on left: 684
        on right: 685
    $@63 (420)
        on left: 686
        on right: 688
    $@64 (421)
        on left: 687
        on right: 688
    $@65 (422)
        on left: 690
        on right: 692
    $@66 (423)
        on left: 691
        on right: 692
    $@67 (424)
        on left: 693
        on right: 695
    $@68 (425)
        on left: 694
        on right: 695
    $@69 (426)
        on left: 696
        on right: 698
    $@70 (427)
        on left: 697
        on right: 698
    $@71 (428)
        on left: 699
        on right: 701
    $@72 (429)
        on left: 700
        on right: 701
    type_declaration <pTypeDecl> (430)
        on left: 702 703 704
        on right: 122 261 302 441 446 503 504 510 520 521 558 637 638 647 664 668 674 678 685 692 703 704
    tuple_alias_declaration (431)
        on left: 709
        on right: 12
    $@73 (432)
        on left: 705
        on right: 709
    $@74 (433)
        on left: 706
        on right: 709
    $@75 (434)
        on left: 707
        on right: 709
    $@76 (435)
        on left: 708
        on right: 709
    variant_alias_declaration (436)
        on left: 714
        on right: 11
    $@77 (437)
        on left: 710
        on right: 714
    $@78 (438)
        on left: 711
        on right: 714
    $@79 (439)
        on left: 712
        on right: 714
    $@80 (440)
        on left: 713
        on right: 714
    bitfield_alias_declaration (441)
        on left: 719
        on right: 13
    $@81 (442)
        on left: 715
        on right: 719
    $@82 (443)
        on left: 716
        on right: 719
    $@83 (444)
        on left: 717
        on right: 719
    $@84 (445)
        on left: 718
        on right: 719
    make_decl <pExpression> (446)
        on left: 720 721 722 723 724
        on right: 266 379
    make_struct_fields <pMakeStruct> (447)
        on left: 725 726 727 728 729 730 731 732
        on right: 356 357 727 728 731 732 733 734
    make_struct_dim <pExpression> (448)
        on left: 733 734
        on right: 734 749 752 753 754
    optional_block <pExpression> (449)
        on left: 735 736
        on right: 749 750 751 752 753 754
    optional_trailing_semicolon_cur_cur (450)
        on left: 737 738
        on right: 777
    optional_trailing_semicolon_cur_sqr (451)
        on left: 739 740
        on right: 764
    optional_trailing_semicolon_sqr_sqr (452)
        on left: 741 742
        on right: 763
    optional_trailing_delim_sqr_sqr (453)
        on left: 743 744 745
        on right: 749 750 751 752
    optional_trailing_delim_cur_sqr (454)
        on left: 746 747 748
        on right: 753 754
    make_struct_decl <pExpression> (455)
        on left: 749 750 751 752 753 754
        on right: 720
    make_tuple <pExpression> (456)
        on left: 755 756 757
        on right: 757 761 762
    make_map_tuple <pExpression> (457)
        on left: 758 759
        on right: 773 774 775 776
    make_tuple_call <pExpression> (458)
        on left: 760
        on right: 724
    make_dim <pExpression> (459)
        on left: 761 762
        on right: 762 763 764
    make_dim_decl <pExpression> (460)
        on left: 763 764 765 768 769 772
        on right: 721
    $@85 (461)
        on left: 766
        on right: 768
    $@86 (462)
        on left: 767
        on right: 768
    $@87 (463)
        on left: 770
        on right: 772
    $@88 (464)
        on left: 771
        on right: 772
    make_table <pExpression> (465)
        on left: 773 774
        on right: 774 777
    expr_map_tuple_list <pExpression> (466)
        on left: 775 776
        on right: 776 778 779 780
    make_table_decl <pExpression> (467)
        on left: 777 778 779 780
        on right: 722
    array_comprehension_where <pExpression> (468)
        on left: 781 782
        on right: 783 784
    array_comprehension <pExpression> (469)
        on left: 783 784
        on right: 723


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . ';'

    $end        shift, and go to state 2
    "let"       shift, and go to state 3
    "options"   shift, and go to state 4
    "expect"    shift, and go to state 5
    "require"   shift, and go to state 6
    "typedef"   shift, and go to state 7
    "var"       shift, and go to state 8
    "module"    shift, and go to state 9
    "bitfield"  shift, and go to state 10
    "tuple"     shift, and go to state 11
    "variant"   shift, and go to state 12
    '%'         shift, and go to state 13
    '['         shift, and go to state 14
    ';'         shift, and go to state 15

    $default  reduce using rule 116 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  281 kwd_let: "let" .

    $default  reduce using rule 281 (kwd_let)


State 4

   36 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   49 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   37 require_declaration: "require" . require_module

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 46
    require_module       go to state 47


State 7

  561 alias_declaration: "typedef" . '{' alias_list '}'
  563                  | "typedef" . $@38 single_alias ';'

    '{'  shift, and go to state 48

    $default  reduce using rule 562 ($@38)

    $@38  go to state 49


State 8

  282 kwd_let: "var" .

    $default  reduce using rule 282 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 50
    '$'     shift, and go to state 51

    module_name  go to state 52


State 10

  719 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias $@81 "name" $@82 '{' $@83 bitfield_alias_bits $@84 '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 554 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 55


State 11

  709 tuple_alias_declaration: "tuple" . optional_public_or_private_alias $@73 "name" $@74 '{' $@75 tuple_alias_type_list $@76 '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 554 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 56


State 12

  714 variant_alias_declaration: "variant" . optional_public_or_private_alias $@77 "name" $@78 '{' $@79 variant_alias_type_list $@80 '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 554 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 57


State 13

   35 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 60


State 14

  117 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 69
    name_in_namespace             go to state 70


State 15

   15 program: program ';' .

    $default  reduce using rule 15 (program)


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . ';'

    ';'  shift, and go to state 71


State 19

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 20

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  208 global_function_declaration: optional_annotation_list . "def" function_declaration
  570 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name '{' $@39 enum_list $@40 '}'
  573                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@41 enum_list $@42 '}'
  586 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@43 structure_name $@44 '{' struct_variable_declaration_list '}'

    "struct"  shift, and go to state 72
    "class"   shift, and go to state 73
    "def"     shift, and go to state 74
    "enum"    shift, and go to state 75

    class_or_struct  go to state 76


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  547 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  549           | kwd_let . optional_shared optional_public_or_private_variable $@36 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 77

    $default  reduce using rule 542 (optional_shared)

    optional_shared  go to state 78


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   90 annotation_argument_name: "type" .

    $default  reduce using rule 90 (annotation_argument_name)


State 33

   91 annotation_argument_name: "in" .

    $default  reduce using rule 91 (annotation_argument_name)


State 34

   89 annotation_argument_name: "name" .

    $default  reduce using rule 89 (annotation_argument_name)


State 35

   92 annotation_argument: annotation_argument_name . '=' string_constant
   93                    | annotation_argument_name . '=' "name"
   94                    | annotation_argument_name . '=' "integer constant"
   95                    | annotation_argument_name . '=' "floating point constant"
   96                    | annotation_argument_name . '=' "true"
   97                    | annotation_argument_name . '=' "false"
   98                    | annotation_argument_name .
   99                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 79

    $default  reduce using rule 98 (annotation_argument)


State 36

  100 annotation_argument_list: annotation_argument .

    $default  reduce using rule 100 (annotation_argument_list)


State 37

   36 options_declaration: "options" annotation_argument_list .
  101 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 80

    $default  reduce using rule 36 (options_declaration)


State 38

   52 expect_error: "integer constant" .
   53             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 81

    $default  reduce using rule 52 (expect_error)


State 39

   49 expect_declaration: "expect" expect_list .
   51 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 82

    $default  reduce using rule 49 (expect_declaration)


State 40

   50 expect_list: expect_error .

    $default  reduce using rule 50 (expect_list)


State 41

   38 keyword_or_name: "name" .

    $default  reduce using rule 38 (keyword_or_name)


State 42

   39 keyword_or_name: "keyword" .

    $default  reduce using rule 39 (keyword_or_name)


State 43

   40 keyword_or_name: "type function" .

    $default  reduce using rule 40 (keyword_or_name)


State 44

   42 require_module_name: '%' . require_module_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 83


State 45

   41 require_module_name: keyword_or_name .

    $default  reduce using rule 41 (require_module_name)


State 46

   43 require_module_name: require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name
   45 require_module: require_module_name . is_public_module
   46               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 84
    "public"  shift, and go to state 85
    '/'       shift, and go to state 86
    '.'       shift, and go to state 87

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 88


State 47

   37 require_declaration: "require" require_module .

    $default  reduce using rule 37 (require_declaration)


State 48

  561 alias_declaration: "typedef" '{' . alias_list '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 554 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 90
    alias_list                        go to state 91


State 49

  563 alias_declaration: "typedef" $@38 . single_alias ';'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 554 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 92


State 50

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 51

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 52

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 77

    $default  reduce using rule 542 (optional_shared)

    optional_shared  go to state 93


State 53

  556 optional_public_or_private_alias: "public" .

    $default  reduce using rule 556 (optional_public_or_private_alias)


State 54

  555 optional_public_or_private_alias: "private" .

    $default  reduce using rule 555 (optional_public_or_private_alias)


State 55

  719 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . $@81 "name" $@82 '{' $@83 bitfield_alias_bits $@84 '}'

    $default  reduce using rule 715 ($@81)

    $@81  go to state 94


State 56

  709 tuple_alias_declaration: "tuple" optional_public_or_private_alias . $@73 "name" $@74 '{' $@75 tuple_alias_type_list $@76 '}'

    $default  reduce using rule 705 ($@73)

    $@73  go to state 95


State 57

  714 variant_alias_declaration: "variant" optional_public_or_private_alias . $@77 "name" $@78 '{' $@79 variant_alias_type_list $@80 '}'

    $default  reduce using rule 710 ($@77)

    $@77  go to state 96


State 58

  256 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 97


State 59

  254 name_in_namespace: "name" .
  255                  | "name" . "::" "name"

    "::"  shift, and go to state 98

    "::"      [reduce using rule 254 (name_in_namespace)]
    $default  reduce using rule 254 (name_in_namespace)


State 60

   35 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 34 ($@1)

    $@1  go to state 99


State 61

  103 annotation_declaration_name: "require" .

    $default  reduce using rule 103 (annotation_declaration_name)


State 62

  104 annotation_declaration_name: "private" .

    $default  reduce using rule 104 (annotation_declaration_name)


State 63

  113 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 100
    name_in_namespace             go to state 70


State 64

  108 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 101
    name_in_namespace             go to state 70


State 65

  112 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 102
    name_in_namespace             go to state 70


State 66

  105 annotation_declaration_basic: annotation_declaration_name .
  106                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 103

    $default  reduce using rule 105 (annotation_declaration_basic)


State 67

  107 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 107 (annotation_declaration)


State 68

  109 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  110                       | annotation_declaration . "||" annotation_declaration
  111                       | annotation_declaration . "^^" annotation_declaration
  114 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106

    $default  reduce using rule 114 (annotation_list)


State 69

  115 annotation_list: annotation_list . ',' annotation_declaration
  117 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 107
    ']'  shift, and go to state 108


State 70

  102 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 102 (annotation_declaration_name)


State 71

   16 top_level_reader_macro: expr_reader ';' .

    $default  reduce using rule 16 (top_level_reader_macro)


State 72

  580 class_or_struct: "struct" .

    $default  reduce using rule 580 (class_or_struct)


State 73

  579 class_or_struct: "class" .

    $default  reduce using rule 579 (class_or_struct)


State 74

  208 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 109
    "private"  shift, and go to state 110

    $default  reduce using rule 209 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 111
    function_declaration                 go to state 112


State 75

  570 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name '{' $@39 enum_list $@40 '}'
  573                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@41 enum_list $@42 '}'

    "public"   shift, and go to state 113
    "private"  shift, and go to state 114

    $default  reduce using rule 564 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 115


State 76

  586 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@43 structure_name $@44 '{' struct_variable_declaration_list '}'

    "public"   shift, and go to state 116
    "private"  shift, and go to state 117

    $default  reduce using rule 581 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 118


State 77

  543 optional_shared: "shared" .

    $default  reduce using rule 543 (optional_shared)


State 78

  547 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  549           | kwd_let optional_shared . optional_public_or_private_variable $@36 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 119
    "private"  shift, and go to state 120

    $default  reduce using rule 544 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 121


State 79

   92 annotation_argument: annotation_argument_name '=' . string_constant
   93                    | annotation_argument_name '=' . "name"
   94                    | annotation_argument_name '=' . "integer constant"
   95                    | annotation_argument_name '=' . "floating point constant"
   96                    | annotation_argument_name '=' . "true"
   97                    | annotation_argument_name '=' . "false"
   99                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 122
    "false"                    shift, and go to state 123
    "integer constant"         shift, and go to state 124
    "floating point constant"  shift, and go to state 125
    "name"                     shift, and go to state 126
    "start of the string"      shift, and go to state 127
    '('                        shift, and go to state 128

    string_constant  go to state 129


State 80

  101 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 130


State 81

   53 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 131


State 82

   51 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 132


State 83

   42 require_module_name: '%' require_module_name .
   43                    | require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 87

    $default  reduce using rule 42 (require_module_name)


State 84

   46 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 133


State 85

   48 is_public_module: "public" .

    $default  reduce using rule 48 (is_public_module)


State 86

   44 require_module_name: require_module_name '/' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 134


State 87

   43 require_module_name: require_module_name '.' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 135


State 88

   45 require_module: require_module_name is_public_module .

    $default  reduce using rule 45 (require_module)


State 89

  558 single_alias: optional_public_or_private_alias . "name" $@37 '=' type_declaration

    "name"  shift, and go to state 136


State 90

  559 alias_list: single_alias . ';'

    ';'  shift, and go to state 137


State 91

  560 alias_list: alias_list . single_alias ';'
  561 alias_declaration: "typedef" '{' alias_list . '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54
    '}'        shift, and go to state 138

    $default  reduce using rule 554 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 139


State 92

  563 alias_declaration: "typedef" $@38 single_alias . ';'

    ';'  shift, and go to state 140


State 93

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 141
    "private"  shift, and go to state 142

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 143


State 94

  719 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@81 . "name" $@82 '{' $@83 bitfield_alias_bits $@84 '}'

    "name"  shift, and go to state 144


State 95

  709 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@73 . "name" $@74 '{' $@75 tuple_alias_type_list $@76 '}'

    "name"  shift, and go to state 145


State 96

  714 variant_alias_declaration: "variant" optional_public_or_private_alias $@77 . "name" $@78 '{' $@79 variant_alias_type_list $@80 '}'

    "name"  shift, and go to state 146


State 97

  256 name_in_namespace: "::" "name" .

    $default  reduce using rule 256 (name_in_namespace)


State 98

  255 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 147


State 99

   35 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 148

    reader_character_sequence  go to state 149


State 100

  109 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  110                       | annotation_declaration . "||" annotation_declaration
  111                       | annotation_declaration . "^^" annotation_declaration
  113                       | "|>" annotation_declaration .

    $default  reduce using rule 113 (annotation_declaration)


State 101

  108 annotation_declaration: '!' annotation_declaration .
  109                       | annotation_declaration . "&&" annotation_declaration
  110                       | annotation_declaration . "||" annotation_declaration
  111                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 108 (annotation_declaration)


State 102

  109 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  110                       | annotation_declaration . "||" annotation_declaration
  111                       | annotation_declaration . "^^" annotation_declaration
  112                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106
    ')'   shift, and go to state 150


State 103

  106 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 151


State 104

  109 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 152
    name_in_namespace             go to state 70


State 105

  110 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 153
    name_in_namespace             go to state 70


State 106

  111 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 154
    name_in_namespace             go to state 70


State 107

  115 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 155
    name_in_namespace             go to state 70


State 108

  117 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 117 (optional_annotation_list)


State 109

  211 optional_public_or_private_function: "public" .

    $default  reduce using rule 211 (optional_public_or_private_function)


State 110

  210 optional_public_or_private_function: "private" .

    $default  reduce using rule 210 (optional_public_or_private_function)


State 111

  214 function_declaration: optional_public_or_private_function . $@5 function_declaration_header expression_block

    $default  reduce using rule 213 ($@5)

    $@5  go to state 156


State 112

  208 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 208 (global_function_declaration)


State 113

  566 optional_public_or_private_enum: "public" .

    $default  reduce using rule 566 (optional_public_or_private_enum)


State 114

  565 optional_public_or_private_enum: "private" .

    $default  reduce using rule 565 (optional_public_or_private_enum)


State 115

  570 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name '{' $@39 enum_list $@40 '}'
  573                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration '{' $@41 enum_list $@42 '}'

    "name"  shift, and go to state 157

    enum_name  go to state 158


State 116

  583 optional_public_or_private_structure: "public" .

    $default  reduce using rule 583 (optional_public_or_private_structure)


State 117

  582 optional_public_or_private_structure: "private" .

    $default  reduce using rule 582 (optional_public_or_private_structure)


State 118

  586 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@43 structure_name $@44 '{' struct_variable_declaration_list '}'

    $default  reduce using rule 584 ($@43)

    $@43  go to state 159


State 119

  546 optional_public_or_private_variable: "public" .

    $default  reduce using rule 546 (optional_public_or_private_variable)


State 120

  545 optional_public_or_private_variable: "private" .

    $default  reduce using rule 545 (optional_public_or_private_variable)


State 121

  547 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  549           | kwd_let optional_shared optional_public_or_private_variable . $@36 optional_field_annotation let_variable_declaration

    '{'  shift, and go to state 160

    $default  reduce using rule 548 ($@36)

    $@36  go to state 161


State 122

   96 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 96 (annotation_argument)


State 123

   97 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 97 (annotation_argument)


State 124

   94 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 94 (annotation_argument)


State 125

   95 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 95 (annotation_argument)


State 126

   93 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 93 (annotation_argument)


State 127

   27 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163

    character_sequence  go to state 164


State 128

   99 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 127

    string_constant                 go to state 170
    annotation_argument_value       go to state 171
    annotation_argument_value_list  go to state 172


State 129

   92 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 92 (annotation_argument)


State 130

  101 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 101 (annotation_argument_list)


State 131

   53 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 53 (expect_error)


State 132

   51 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 51 (expect_list)


State 133

   46 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 85

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 173


State 134

   44 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 44 (require_module_name)


State 135

   43 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 43 (require_module_name)


State 136

  558 single_alias: optional_public_or_private_alias "name" . $@37 '=' type_declaration

    $default  reduce using rule 557 ($@37)

    $@37  go to state 174


State 137

  559 alias_list: single_alias ';' .

    $default  reduce using rule 559 (alias_list)


State 138

  561 alias_declaration: "typedef" '{' alias_list '}' .

    $default  reduce using rule 561 (alias_declaration)


State 139

  560 alias_list: alias_list single_alias . ';'

    ';'  shift, and go to state 175


State 140

  563 alias_declaration: "typedef" $@38 single_alias ';' .

    $default  reduce using rule 563 (alias_declaration)


State 141

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 142

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 143

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 144

  719 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@81 "name" . $@82 '{' $@83 bitfield_alias_bits $@84 '}'

    $default  reduce using rule 716 ($@82)

    $@82  go to state 176


State 145

  709 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@73 "name" . $@74 '{' $@75 tuple_alias_type_list $@76 '}'

    $default  reduce using rule 706 ($@74)

    $@74  go to state 177


State 146

  714 variant_alias_declaration: "variant" optional_public_or_private_alias $@77 "name" . $@78 '{' $@79 variant_alias_type_list $@80 '}'

    $default  reduce using rule 711 ($@78)

    $@78  go to state 178


State 147

  255 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 255 (name_in_namespace)


State 148

   32 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 32 (reader_character_sequence)


State 149

   33 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 179

    $default  reduce using rule 35 (expr_reader)


State 150

  112 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 112 (annotation_declaration)


State 151

  101 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  106 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 80
    ')'  shift, and go to state 180


State 152

  109 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  109                       | annotation_declaration "&&" annotation_declaration .
  110                       | annotation_declaration . "||" annotation_declaration
  111                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 109 (annotation_declaration)


State 153

  109 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  110                       | annotation_declaration . "||" annotation_declaration
  110                       | annotation_declaration "||" annotation_declaration .
  111                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 104
    "^^"  shift, and go to state 106

    $default  reduce using rule 110 (annotation_declaration)


State 154

  109 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  110                       | annotation_declaration . "||" annotation_declaration
  111                       | annotation_declaration . "^^" annotation_declaration
  111                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 104

    $default  reduce using rule 111 (annotation_declaration)


State 155

  109 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  110                       | annotation_declaration . "||" annotation_declaration
  111                       | annotation_declaration . "^^" annotation_declaration
  115 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106

    $default  reduce using rule 115 (annotation_list)


State 156

  214 function_declaration: optional_public_or_private_function $@5 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 211


State 157

  567 enum_name: "name" .

    $default  reduce using rule 567 (enum_name)


State 158

  570 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . '{' $@39 enum_list $@40 '}'
  573                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration '{' $@41 enum_list $@42 '}'

    ':'  shift, and go to state 212
    '{'  shift, and go to state 213


State 159

  586 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@43 . structure_name $@44 '{' struct_variable_declaration_list '}'

    "sealed"  shift, and go to state 214

    $default  reduce using rule 576 (optional_sealed)

    optional_sealed  go to state 215
    structure_name   go to state 216


State 160

  547 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 539 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 217


State 161

  549 global_let: kwd_let optional_shared optional_public_or_private_variable $@36 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 218

    $default  reduce using rule 477 (optional_field_annotation)

    optional_field_annotation  go to state 219


State 162

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 163

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 164

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 220
    STRING_CHARACTER_ESC  shift, and go to state 221
    "end of the string"   shift, and go to state 222


State 165

   85 annotation_argument_value: "true" .

    $default  reduce using rule 85 (annotation_argument_value)


State 166

   86 annotation_argument_value: "false" .

    $default  reduce using rule 86 (annotation_argument_value)


State 167

   83 annotation_argument_value: "integer constant" .

    $default  reduce using rule 83 (annotation_argument_value)


State 168

   84 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 84 (annotation_argument_value)


State 169

   82 annotation_argument_value: "name" .

    $default  reduce using rule 82 (annotation_argument_value)


State 170

   81 annotation_argument_value: string_constant .

    $default  reduce using rule 81 (annotation_argument_value)


State 171

   87 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 87 (annotation_argument_value_list)


State 172

   88 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
   99 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 223
    ')'  shift, and go to state 224


State 173

   46 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 46 (require_module)


State 174

  558 single_alias: optional_public_or_private_alias "name" $@37 . '=' type_declaration

    '='  shift, and go to state 225


State 175

  560 alias_list: alias_list single_alias ';' .

    $default  reduce using rule 560 (alias_list)


State 176

  719 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@81 "name" $@82 . '{' $@83 bitfield_alias_bits $@84 '}'

    '{'  shift, and go to state 226


State 177

  709 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@73 "name" $@74 . '{' $@75 tuple_alias_type_list $@76 '}'

    '{'  shift, and go to state 227


State 178

  714 variant_alias_declaration: "variant" optional_public_or_private_alias $@77 "name" $@78 . '{' $@79 variant_alias_type_list $@80 '}'

    '{'  shift, and go to state 228


State 179

   33 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 180

  106 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 106 (annotation_declaration_basic)


State 181

  124 function_name: "operator" . '!'
  125              | "operator" . '~'
  126              | "operator" . "+="
  127              | "operator" . "-="
  128              | "operator" . "*="
  129              | "operator" . "/="
  130              | "operator" . "%="
  131              | "operator" . "&="
  132              | "operator" . "|="
  133              | "operator" . "^="
  134              | "operator" . "&&="
  135              | "operator" . "||="
  136              | "operator" . "^^="
  137              | "operator" . "&&"
  138              | "operator" . "||"
  139              | "operator" . "^^"
  140              | "operator" . '+'
  141              | "operator" . '-'
  142              | "operator" . '*'
  143              | "operator" . '/'
  144              | "operator" . '%'
  145              | "operator" . '<'
  146              | "operator" . '>'
  147              | "operator" . ".."
  148              | "operator" . "=="
  149              | "operator" . "!="
  150              | "operator" . "<="
  151              | "operator" . ">="
  152              | "operator" . '&'
  153              | "operator" . '|'
  154              | "operator" . '^'
  157              | "operator" . "++"
  158              | "operator" . "--"
  159              | "operator" . "<<"
  160              | "operator" . ">>"
  161              | "operator" . "<<="
  162              | "operator" . ">>="
  163              | "operator" . "<<<"
  164              | "operator" . ">>>"
  165              | "operator" . "<<<="
  166              | "operator" . ">>>="
  167              | "operator" . '[' ']'
  168              | "operator" . "?[" ']'
  169              | "operator" . '.'
  170              | "operator" . "?."
  171              | "operator" . '.' "name"
  172              | "operator" . '.' "name" ":="
  173              | "operator" . "?." "name"
  174              | "operator" . ":="
  175              | "operator" . "delete"
  176              | "operator" . "??"
  177              | "operator" . "is"
  178              | "operator" . "as"
  179              | "operator" . "is" "name"
  180              | "operator" . "as" "name"
  181              | "operator" . '?' "as"
  182              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 229
    "as"      shift, and go to state 230
    "delete"  shift, and go to state 231
    "+="      shift, and go to state 232
    "-="      shift, and go to state 233
    "/="      shift, and go to state 234
    "*="      shift, and go to state 235
    "%="      shift, and go to state 236
    "&="      shift, and go to state 237
    "|="      shift, and go to state 238
    "^="      shift, and go to state 239
    "<<"      shift, and go to state 240
    ">>"      shift, and go to state 241
    "++"      shift, and go to state 242
    "--"      shift, and go to state 243
    "<="      shift, and go to state 244
    "<<="     shift, and go to state 245
    ">>="     shift, and go to state 246
    ">="      shift, and go to state 247
    "=="      shift, and go to state 248
    "!="      shift, and go to state 249
    "??"      shift, and go to state 250
    "?."      shift, and go to state 251
    "?["      shift, and go to state 252
    ":="      shift, and go to state 253
    "<<<"     shift, and go to state 254
    ">>>"     shift, and go to state 255
    "<<<="    shift, and go to state 256
    ">>>="    shift, and go to state 257
    "&&"      shift, and go to state 258
    "||"      shift, and go to state 259
    "^^"      shift, and go to state 260
    "&&="     shift, and go to state 261
    "||="     shift, and go to state 262
    "^^="     shift, and go to state 263
    ".."      shift, and go to state 264
    '?'       shift, and go to state 265
    '|'       shift, and go to state 266
    '^'       shift, and go to state 267
    '&'       shift, and go to state 268
    '<'       shift, and go to state 269
    '>'       shift, and go to state 270
    '-'       shift, and go to state 271
    '+'       shift, and go to state 272
    '*'       shift, and go to state 273
    '/'       shift, and go to state 274
    '%'       shift, and go to state 275
    '~'       shift, and go to state 276
    '!'       shift, and go to state 277
    '.'       shift, and go to state 278
    '['       shift, and go to state 279


State 182

  183 function_name: "bool" .

    $default  reduce using rule 183 (function_name)


State 183

  184 function_name: "string" .

    $default  reduce using rule 184 (function_name)


State 184

  185 function_name: "int" .

    $default  reduce using rule 185 (function_name)


State 185

  186 function_name: "int2" .

    $default  reduce using rule 186 (function_name)


State 186

  187 function_name: "int3" .

    $default  reduce using rule 187 (function_name)


State 187

  188 function_name: "int4" .

    $default  reduce using rule 188 (function_name)


State 188

  189 function_name: "uint" .

    $default  reduce using rule 189 (function_name)


State 189

  190 function_name: "uint2" .

    $default  reduce using rule 190 (function_name)


State 190

  191 function_name: "uint3" .

    $default  reduce using rule 191 (function_name)


State 191

  192 function_name: "uint4" .

    $default  reduce using rule 192 (function_name)


State 192

  193 function_name: "float" .

    $default  reduce using rule 193 (function_name)


State 193

  194 function_name: "float2" .

    $default  reduce using rule 194 (function_name)


State 194

  195 function_name: "float3" .

    $default  reduce using rule 195 (function_name)


State 195

  196 function_name: "float4" .

    $default  reduce using rule 196 (function_name)


State 196

  197 function_name: "range" .

    $default  reduce using rule 197 (function_name)


State 197

  198 function_name: "urange" .

    $default  reduce using rule 198 (function_name)


State 198

  199 function_name: "range64" .

    $default  reduce using rule 199 (function_name)


State 199

  200 function_name: "urange64" .

    $default  reduce using rule 200 (function_name)


State 200

  201 function_name: "int64" .

    $default  reduce using rule 201 (function_name)


State 201

  202 function_name: "uint64" .

    $default  reduce using rule 202 (function_name)


State 202

  203 function_name: "double" .

    $default  reduce using rule 203 (function_name)


State 203

  204 function_name: "int8" .

    $default  reduce using rule 204 (function_name)


State 204

  205 function_name: "uint8" .

    $default  reduce using rule 205 (function_name)


State 205

  206 function_name: "int16" .

    $default  reduce using rule 206 (function_name)


State 206

  207 function_name: "uint16" .

    $default  reduce using rule 207 (function_name)


State 207

  155 function_name: "++" . "operator"

    "operator"  shift, and go to state 280


State 208

  156 function_name: "--" . "operator"

    "operator"  shift, and go to state 281


State 209

  123 function_name: "name" .

    $default  reduce using rule 123 (function_name)


State 210

  212 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 282

    $default  reduce using rule 118 (optional_function_argument_list)

    optional_function_argument_list  go to state 283


State 211

  214 function_declaration: optional_public_or_private_function $@5 function_declaration_header . expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 285


State 212

  573 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration '{' $@41 enum_list $@42 '}'

    "int"     shift, and go to state 286
    "uint"    shift, and go to state 287
    "int8"    shift, and go to state 288
    "uint8"   shift, and go to state 289
    "int16"   shift, and go to state 290
    "uint16"  shift, and go to state 291

    enum_basic_type_declaration  go to state 292


State 213

  570 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' . $@39 enum_list $@40 '}'

    $default  reduce using rule 568 ($@39)

    $@39  go to state 293


State 214

  577 optional_sealed: "sealed" .

    $default  reduce using rule 577 (optional_sealed)


State 215

  578 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 294


State 216

  586 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@43 structure_name . $@44 '{' struct_variable_declaration_list '}'

    $default  reduce using rule 585 ($@44)

    $@44  go to state 295


State 217

  541 global_variable_declaration_list: global_variable_declaration_list . $@35 optional_field_annotation let_variable_declaration
  547 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    '}'  shift, and go to state 296

    $default  reduce using rule 540 ($@35)

    $@35  go to state 297


State 218

  478 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 298


State 219

  549 global_let: kwd_let optional_shared optional_public_or_private_variable $@36 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 299
    "name"  shift, and go to state 300

    let_variable_name_with_pos_list  go to state 301
    let_variable_declaration         go to state 302


State 220

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 221

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 222

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 223

   88 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 127

    string_constant            go to state 170
    annotation_argument_value  go to state 303


State 224

   99 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 99 (annotation_argument)


State 225

  558 single_alias: optional_public_or_private_alias "name" $@37 '=' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 351


State 226

  719 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@81 "name" $@82 '{' . $@83 bitfield_alias_bits $@84 '}'

    $default  reduce using rule 717 ($@83)

    $@83  go to state 352


State 227

  709 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@73 "name" $@74 '{' . $@75 tuple_alias_type_list $@76 '}'

    $default  reduce using rule 707 ($@75)

    $@75  go to state 353


State 228

  714 variant_alias_declaration: "variant" optional_public_or_private_alias $@77 "name" $@78 '{' . $@79 variant_alias_type_list $@80 '}'

    $default  reduce using rule 712 ($@79)

    $@79  go to state 354


State 229

  177 function_name: "operator" "is" .
  179              | "operator" "is" . "name"

    "name"  shift, and go to state 355

    $default  reduce using rule 177 (function_name)


State 230

  178 function_name: "operator" "as" .
  180              | "operator" "as" . "name"

    "name"  shift, and go to state 356

    $default  reduce using rule 178 (function_name)


State 231

  175 function_name: "operator" "delete" .

    $default  reduce using rule 175 (function_name)


State 232

  126 function_name: "operator" "+=" .

    $default  reduce using rule 126 (function_name)


State 233

  127 function_name: "operator" "-=" .

    $default  reduce using rule 127 (function_name)


State 234

  129 function_name: "operator" "/=" .

    $default  reduce using rule 129 (function_name)


State 235

  128 function_name: "operator" "*=" .

    $default  reduce using rule 128 (function_name)


State 236

  130 function_name: "operator" "%=" .

    $default  reduce using rule 130 (function_name)


State 237

  131 function_name: "operator" "&=" .

    $default  reduce using rule 131 (function_name)


State 238

  132 function_name: "operator" "|=" .

    $default  reduce using rule 132 (function_name)


State 239

  133 function_name: "operator" "^=" .

    $default  reduce using rule 133 (function_name)


State 240

  159 function_name: "operator" "<<" .

    $default  reduce using rule 159 (function_name)


State 241

  160 function_name: "operator" ">>" .

    $default  reduce using rule 160 (function_name)


State 242

  157 function_name: "operator" "++" .

    $default  reduce using rule 157 (function_name)


State 243

  158 function_name: "operator" "--" .

    $default  reduce using rule 158 (function_name)


State 244

  150 function_name: "operator" "<=" .

    $default  reduce using rule 150 (function_name)


State 245

  161 function_name: "operator" "<<=" .

    $default  reduce using rule 161 (function_name)


State 246

  162 function_name: "operator" ">>=" .

    $default  reduce using rule 162 (function_name)


State 247

  151 function_name: "operator" ">=" .

    $default  reduce using rule 151 (function_name)


State 248

  148 function_name: "operator" "==" .

    $default  reduce using rule 148 (function_name)


State 249

  149 function_name: "operator" "!=" .

    $default  reduce using rule 149 (function_name)


State 250

  176 function_name: "operator" "??" .

    $default  reduce using rule 176 (function_name)


State 251

  170 function_name: "operator" "?." .
  173              | "operator" "?." . "name"

    "name"  shift, and go to state 357

    $default  reduce using rule 170 (function_name)


State 252

  168 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 358


State 253

  174 function_name: "operator" ":=" .

    $default  reduce using rule 174 (function_name)


State 254

  163 function_name: "operator" "<<<" .

    $default  reduce using rule 163 (function_name)


State 255

  164 function_name: "operator" ">>>" .

    $default  reduce using rule 164 (function_name)


State 256

  165 function_name: "operator" "<<<=" .

    $default  reduce using rule 165 (function_name)


State 257

  166 function_name: "operator" ">>>=" .

    $default  reduce using rule 166 (function_name)


State 258

  137 function_name: "operator" "&&" .

    $default  reduce using rule 137 (function_name)


State 259

  138 function_name: "operator" "||" .

    $default  reduce using rule 138 (function_name)


State 260

  139 function_name: "operator" "^^" .

    $default  reduce using rule 139 (function_name)


State 261

  134 function_name: "operator" "&&=" .

    $default  reduce using rule 134 (function_name)


State 262

  135 function_name: "operator" "||=" .

    $default  reduce using rule 135 (function_name)


State 263

  136 function_name: "operator" "^^=" .

    $default  reduce using rule 136 (function_name)


State 264

  147 function_name: "operator" ".." .

    $default  reduce using rule 147 (function_name)


State 265

  181 function_name: "operator" '?' . "as"
  182              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 359


State 266

  153 function_name: "operator" '|' .

    $default  reduce using rule 153 (function_name)


State 267

  154 function_name: "operator" '^' .

    $default  reduce using rule 154 (function_name)


State 268

  152 function_name: "operator" '&' .

    $default  reduce using rule 152 (function_name)


State 269

  145 function_name: "operator" '<' .

    $default  reduce using rule 145 (function_name)


State 270

  146 function_name: "operator" '>' .

    $default  reduce using rule 146 (function_name)


State 271

  141 function_name: "operator" '-' .

    $default  reduce using rule 141 (function_name)


State 272

  140 function_name: "operator" '+' .

    $default  reduce using rule 140 (function_name)


State 273

  142 function_name: "operator" '*' .

    $default  reduce using rule 142 (function_name)


State 274

  143 function_name: "operator" '/' .

    $default  reduce using rule 143 (function_name)


State 275

  144 function_name: "operator" '%' .

    $default  reduce using rule 144 (function_name)


State 276

  125 function_name: "operator" '~' .

    $default  reduce using rule 125 (function_name)


State 277

  124 function_name: "operator" '!' .

    $default  reduce using rule 124 (function_name)


State 278

  169 function_name: "operator" '.' .
  171              | "operator" '.' . "name"
  172              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 360

    $default  reduce using rule 169 (function_name)


State 279

  167 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 361


State 280

  155 function_name: "++" "operator" .

    $default  reduce using rule 155 (function_name)


State 281

  156 function_name: "--" "operator" .

    $default  reduce using rule 156 (function_name)


State 282

  119 optional_function_argument_list: '(' . ')'
  120                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 362
    "[["  shift, and go to state 218
    ')'   shift, and go to state 363

    $default  reduce using rule 477 (optional_field_annotation)

    optional_field_annotation      go to state 364
    function_argument_declaration  go to state 365
    function_argument_list         go to state 366


State 283

  212 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 367

    $default  reduce using rule 121 (optional_function_type)

    optional_function_type  go to state 368


State 284

  215 expression_block: '{' . expressions '}'
  216                 | '{' . expressions '}' "finally" '{' expressions '}'

    $default  reduce using rule 238 (expressions)

    expressions  go to state 369


State 285

  214 function_declaration: optional_public_or_private_function $@5 function_declaration_header expression_block .

    $default  reduce using rule 214 (function_declaration)


State 286

  619 enum_basic_type_declaration: "int" .

    $default  reduce using rule 619 (enum_basic_type_declaration)


State 287

  622 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 622 (enum_basic_type_declaration)


State 288

  620 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 620 (enum_basic_type_declaration)


State 289

  623 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 623 (enum_basic_type_declaration)


State 290

  621 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 621 (enum_basic_type_declaration)


State 291

  624 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 624 (enum_basic_type_declaration)


State 292

  573 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . '{' $@41 enum_list $@42 '}'

    '{'  shift, and go to state 370


State 293

  570 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@39 . enum_list $@40 '}'

    $default  reduce using rule 550 (enum_list)

    enum_list  go to state 371


State 294

  578 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 372

    $default  reduce using rule 574 (optional_structure_parent)

    optional_structure_parent  go to state 373


State 295

  586 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@43 structure_name $@44 . '{' struct_variable_declaration_list '}'

    '{'  shift, and go to state 374


State 296

  547 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 547 (global_let)


State 297

  541 global_variable_declaration_list: global_variable_declaration_list $@35 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 218

    $default  reduce using rule 477 (optional_field_annotation)

    optional_field_annotation  go to state 375


State 298

  101 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  478 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 80
    ']'  shift, and go to state 376


State 299

  530 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 377


State 300

  529 let_variable_name_with_pos_list: "name" .
  531                                | "name" . "aka" "name"

    "aka"  shift, and go to state 378

    $default  reduce using rule 529 (let_variable_name_with_pos_list)


State 301

  532 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  533                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  534 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options ';'
  535                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  536                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  537                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr ';'
  538                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 379
    ':'  shift, and go to state 380
    '&'  shift, and go to state 381

    $default  reduce using rule 527 (optional_ref)

    optional_ref  go to state 382


State 302

  549 global_let: kwd_let optional_shared optional_public_or_private_variable $@36 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 549 (global_let)


State 303

   88 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 88 (annotation_argument_value_list)


State 304

  647 type_declaration_no_options: "type" . '<' $@47 type_declaration '>' $@48

    '<'  shift, and go to state 383


State 305

  668 type_declaration_no_options: "array" . '<' $@51 type_declaration '>' $@52

    '<'  shift, and go to state 384


State 306

  671 type_declaration_no_options: "table" . '<' $@53 table_type_pair '>' $@54

    '<'  shift, and go to state 385


State 307

  648 type_declaration_no_options: "typedecl" . '(' expr ')'

    '('  shift, and go to state 386


State 308

  674 type_declaration_no_options: "iterator" . '<' $@55 type_declaration '>' $@56

    '<'  shift, and go to state 387


State 309

  664 type_declaration_no_options: "smart_ptr" . '<' $@49 type_declaration '>' $@50

    '<'  shift, and go to state 388


State 310

  592 basic_type_declaration: "bool" .

    $default  reduce using rule 592 (basic_type_declaration)


State 311

  612 basic_type_declaration: "void" .

    $default  reduce using rule 612 (basic_type_declaration)


State 312

  593 basic_type_declaration: "string" .

    $default  reduce using rule 593 (basic_type_declaration)


State 313

  626 auto_type_declaration: "auto" .
  627                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 389

    '('       [reduce using rule 626 (auto_type_declaration)]
    $default  reduce using rule 626 (auto_type_declaration)


State 314

  594 basic_type_declaration: "int" .

    $default  reduce using rule 594 (basic_type_declaration)


State 315

  598 basic_type_declaration: "int2" .

    $default  reduce using rule 598 (basic_type_declaration)


State 316

  599 basic_type_declaration: "int3" .

    $default  reduce using rule 599 (basic_type_declaration)


State 317

  600 basic_type_declaration: "int4" .

    $default  reduce using rule 600 (basic_type_declaration)


State 318

  601 basic_type_declaration: "uint" .

    $default  reduce using rule 601 (basic_type_declaration)


State 319

  618 basic_type_declaration: "bitfield" .
  636 bitfield_type_declaration: "bitfield" . '<' $@45 bitfield_bits '>' $@46

    '<'  shift, and go to state 390

    $default  reduce using rule 618 (basic_type_declaration)


State 320

  605 basic_type_declaration: "uint2" .

    $default  reduce using rule 605 (basic_type_declaration)


State 321

  606 basic_type_declaration: "uint3" .

    $default  reduce using rule 606 (basic_type_declaration)


State 322

  607 basic_type_declaration: "uint4" .

    $default  reduce using rule 607 (basic_type_declaration)


State 323

  608 basic_type_declaration: "float" .

    $default  reduce using rule 608 (basic_type_declaration)


State 324

  609 basic_type_declaration: "float2" .

    $default  reduce using rule 609 (basic_type_declaration)


State 325

  610 basic_type_declaration: "float3" .

    $default  reduce using rule 610 (basic_type_declaration)


State 326

  611 basic_type_declaration: "float4" .

    $default  reduce using rule 611 (basic_type_declaration)


State 327

  613 basic_type_declaration: "range" .

    $default  reduce using rule 613 (basic_type_declaration)


State 328

  614 basic_type_declaration: "urange" .

    $default  reduce using rule 614 (basic_type_declaration)


State 329

  615 basic_type_declaration: "range64" .

    $default  reduce using rule 615 (basic_type_declaration)


State 330

  616 basic_type_declaration: "urange64" .

    $default  reduce using rule 616 (basic_type_declaration)


State 331

  675 type_declaration_no_options: "block" .
  678                            | "block" . '<' $@57 type_declaration '>' $@58
  681                            | "block" . '<' $@59 optional_function_argument_list optional_function_type '>' $@60

    '<'  shift, and go to state 391

    $default  reduce using rule 675 (type_declaration_no_options)


State 332

  597 basic_type_declaration: "int64" .

    $default  reduce using rule 597 (basic_type_declaration)


State 333

  604 basic_type_declaration: "uint64" .

    $default  reduce using rule 604 (basic_type_declaration)


State 334

  617 basic_type_declaration: "double" .

    $default  reduce using rule 617 (basic_type_declaration)


State 335

  682 type_declaration_no_options: "function" .
  685                            | "function" . '<' $@61 type_declaration '>' $@62
  688                            | "function" . '<' $@63 optional_function_argument_list optional_function_type '>' $@64

    '<'  shift, and go to state 392

    $default  reduce using rule 682 (type_declaration_no_options)


State 336

  689 type_declaration_no_options: "lambda" .
  692                            | "lambda" . '<' $@65 type_declaration '>' $@66
  695                            | "lambda" . '<' $@67 optional_function_argument_list optional_function_type '>' $@68

    '<'  shift, and go to state 393

    $default  reduce using rule 689 (type_declaration_no_options)


State 337

  595 basic_type_declaration: "int8" .

    $default  reduce using rule 595 (basic_type_declaration)


State 338

  602 basic_type_declaration: "uint8" .

    $default  reduce using rule 602 (basic_type_declaration)


State 339

  596 basic_type_declaration: "int16" .

    $default  reduce using rule 596 (basic_type_declaration)


State 340

  603 basic_type_declaration: "uint16" .

    $default  reduce using rule 603 (basic_type_declaration)


State 341

  698 type_declaration_no_options: "tuple" . '<' $@69 tuple_type_list '>' $@70

    '<'  shift, and go to state 394


State 342

  701 type_declaration_no_options: "variant" . '<' $@71 variant_type_list '>' $@72

    '<'  shift, and go to state 395


State 343

  628 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 396


State 344

  649 type_declaration_no_options: '$' . name_in_namespace '(' optional_expr_list ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 397


State 345

  625 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 625 (structure_type_declaration)


State 346

  639 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 639 (type_declaration_no_options)


State 347

  642 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 642 (type_declaration_no_options)


State 348

  640 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 640 (type_declaration_no_options)


State 349

  641 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 641 (type_declaration_no_options)


State 350

  643 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  644                            | type_declaration_no_options . '[' ']'
  650                            | type_declaration_no_options . '-' '[' ']'
  651                            | type_declaration_no_options . "explicit"
  652                            | type_declaration_no_options . "const"
  653                            | type_declaration_no_options . '-' "const"
  654                            | type_declaration_no_options . '&'
  655                            | type_declaration_no_options . '-' '&'
  656                            | type_declaration_no_options . '#'
  657                            | type_declaration_no_options . "implicit"
  658                            | type_declaration_no_options . '-' '#'
  659                            | type_declaration_no_options . "==" "const"
  660                            | type_declaration_no_options . "==" '&'
  661                            | type_declaration_no_options . '?'
  665                            | type_declaration_no_options . "??"
  702 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 398
    "implicit"  shift, and go to state 399
    "explicit"  shift, and go to state 400
    "=="        shift, and go to state 401
    "??"        shift, and go to state 402
    '?'         shift, and go to state 403
    '&'         shift, and go to state 404
    '-'         shift, and go to state 405
    '['         shift, and go to state 406
    '#'         shift, and go to state 407

    $default  reduce using rule 702 (type_declaration)


State 351

  558 single_alias: optional_public_or_private_alias "name" $@37 '=' type_declaration .
  703 type_declaration: type_declaration . '|' type_declaration_no_options
  704                 | type_declaration . '|' '#'

    '|'  shift, and go to state 408

    $default  reduce using rule 558 (single_alias)


State 352

  719 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@81 "name" $@82 '{' $@83 . bitfield_alias_bits $@84 '}'

    $default  reduce using rule 631 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 409


State 353

  709 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@73 "name" $@74 '{' $@75 . tuple_alias_type_list $@76 '}'

    $default  reduce using rule 507 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 410


State 354

  714 variant_alias_declaration: "variant" optional_public_or_private_alias $@77 "name" $@78 '{' $@79 . variant_alias_type_list $@80 '}'

    $default  reduce using rule 513 (variant_alias_type_list)

    variant_alias_type_list  go to state 411


State 355

  179 function_name: "operator" "is" "name" .

    $default  reduce using rule 179 (function_name)


State 356

  180 function_name: "operator" "as" "name" .

    $default  reduce using rule 180 (function_name)


State 357

  173 function_name: "operator" "?." "name" .

    $default  reduce using rule 173 (function_name)


State 358

  168 function_name: "operator" "?[" ']' .

    $default  reduce using rule 168 (function_name)


State 359

  181 function_name: "operator" '?' "as" .
  182              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 412

    $default  reduce using rule 181 (function_name)


State 360

  171 function_name: "operator" '.' "name" .
  172              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 413

    $default  reduce using rule 171 (function_name)


State 361

  167 function_name: "operator" '[' ']' .

    $default  reduce using rule 167 (function_name)


State 362

  500 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 414


State 363

  119 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 119 (optional_function_argument_list)


State 364

  498 function_argument_declaration: optional_field_annotation . variable_declaration
  499                              | optional_field_annotation . "var" variable_declaration

    "var"   shift, and go to state 415
    "$i"    shift, and go to state 416
    "name"  shift, and go to state 417

    variable_declaration         go to state 418
    variable_name_with_pos_list  go to state 419


State 365

  501 function_argument_list: function_argument_declaration .

    $default  reduce using rule 501 (function_argument_list)


State 366

  120 optional_function_argument_list: '(' function_argument_list . ')'
  502 function_argument_list: function_argument_list . ';' function_argument_declaration

    ')'  shift, and go to state 420
    ';'  shift, and go to state 421


State 367

  122 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 422


State 368

  212 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 212 (function_declaration_header)


State 369

  215 expression_block: '{' expressions . '}'
  216                 | '{' expressions . '}' "finally" '{' expressions '}'
  239 expressions: expressions . expression_any
  240            | expressions . error

    error                             shift, and go to state 423
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 424
    "if"                              shift, and go to state 425
    "static_if"                       shift, and go to state 426
    "for"                             shift, and go to state 427
    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "return"                          shift, and go to state 434
    "null"                            shift, and go to state 435
    "break"                           shift, and go to state 436
    "try"                             shift, and go to state 437
    "table"                           shift, and go to state 438
    "delete"                          shift, and go to state 439
    "deref"                           shift, and go to state 440
    "with"                            shift, and go to state 441
    "assume"                          shift, and go to state 442
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 445
    "continue"                        shift, and go to state 446
    "pass"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 448
    "label"                           shift, and go to state 449
    "goto"                            shift, and go to state 450
    "unsafe"                          shift, and go to state 451
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "yield"                           shift, and go to state 456
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "$ <|"                            shift, and go to state 459
    "@ <|"                            shift, and go to state 460
    "@@ <|"                           shift, and go to state 461
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 479
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    ';'                               shift, and go to state 490
    '{'                               shift, and go to state 284
    '}'                               shift, and go to state 491

    string_builder             go to state 492
    expr_reader                go to state 493
    expression_label           go to state 494
    expression_goto            go to state 495
    if_or_static_if            go to state 496
    expression_if_one_liner    go to state 497
    expression_if_then_else    go to state 498
    expression_for_loop        go to state 499
    expression_unsafe          go to state 500
    expression_while_loop      go to state 501
    expression_with            go to state 502
    expression_with_alias      go to state 503
    expression_block           go to state 504
    expression_any             go to state 505
    expr_keyword               go to state 506
    expression_keyword         go to state 507
    expr_pipe                  go to state 508
    name_in_namespace          go to state 509
    expression_delete          go to state 510
    expr_new                   go to state 511
    expression_break           go to state 512
    expression_continue        go to state 513
    expression_return_no_pipe  go to state 514
    expression_return          go to state 515
    expression_yield_no_pipe   go to state 516
    expression_yield           go to state 517
    expression_try_catch       go to state 518
    kwd_let                    go to state 519
    expression_let             go to state 520
    expr_cast                  go to state 521
    expr_type_decl             go to state 522
    expr_type_info             go to state 523
    block_or_lambda            go to state 524
    expr_block                 go to state 525
    expr_numeric_const         go to state 526
    expr_assign                go to state 527
    expr_assign_pipe           go to state 528
    expr_named_call            go to state 529
    expr_method_call           go to state 530
    func_addr_expr             go to state 531
    expr_field                 go to state 532
    expr                       go to state 533
    expr_mtag                  go to state 534
    basic_type_declaration     go to state 535
    make_decl                  go to state 536
    make_struct_decl           go to state 537
    make_tuple_call            go to state 538
    make_dim_decl              go to state 539
    make_table_decl            go to state 540
    array_comprehension        go to state 541


State 370

  573 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' . $@41 enum_list $@42 '}'

    $default  reduce using rule 571 ($@41)

    $@41  go to state 542


State 371

  551 enum_list: enum_list . ';'
  552          | enum_list . "name" ';'
  553          | enum_list . "name" '=' expr ';'
  570 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@39 enum_list . $@40 '}'

    "name"  shift, and go to state 543
    ';'     shift, and go to state 544

    $default  reduce using rule 569 ($@40)

    $@40  go to state 545


State 372

  575 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 546


State 373

  578 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 578 (structure_name)


State 374

  586 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@43 structure_name $@44 '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 490 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 547


State 375

  541 global_variable_declaration_list: global_variable_declaration_list $@35 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 299
    "name"  shift, and go to state 300

    let_variable_name_with_pos_list  go to state 301
    let_variable_declaration         go to state 548


State 376

  478 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 549


State 377

  530 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 552
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 378

  531 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 553


State 379

  532 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  533                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 554


State 380

  534 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options ';'
  535                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr ';'
  536                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 555


State 381

  528 optional_ref: '&' .

    $default  reduce using rule 528 (optional_ref)


State 382

  537 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr ';'
  538                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 556
    ":="  shift, and go to state 557
    '='   shift, and go to state 558

    copy_or_move_or_clone  go to state 559


State 383

  647 type_declaration_no_options: "type" '<' . $@47 type_declaration '>' $@48

    $default  reduce using rule 645 ($@47)

    $@47  go to state 560


State 384

  668 type_declaration_no_options: "array" '<' . $@51 type_declaration '>' $@52

    $default  reduce using rule 666 ($@51)

    $@51  go to state 561


State 385

  671 type_declaration_no_options: "table" '<' . $@53 table_type_pair '>' $@54

    $default  reduce using rule 669 ($@53)

    $@53  go to state 562


State 386

  648 type_declaration_no_options: "typedecl" '(' . expr ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 563
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 387

  674 type_declaration_no_options: "iterator" '<' . $@55 type_declaration '>' $@56

    $default  reduce using rule 672 ($@55)

    $@55  go to state 564


State 388

  664 type_declaration_no_options: "smart_ptr" '<' . $@49 type_declaration '>' $@50

    $default  reduce using rule 662 ($@49)

    $@49  go to state 565


State 389

  627 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 566


State 390

  636 bitfield_type_declaration: "bitfield" '<' . $@45 bitfield_bits '>' $@46

    $default  reduce using rule 634 ($@45)

    $@45  go to state 567


State 391

  678 type_declaration_no_options: "block" '<' . $@57 type_declaration '>' $@58
  681                            | "block" '<' . $@59 optional_function_argument_list optional_function_type '>' $@60

    ':'       reduce using rule 679 ($@59)
    '>'       reduce using rule 679 ($@59)
    '('       reduce using rule 679 ($@59)
    $default  reduce using rule 676 ($@57)

    $@57  go to state 568
    $@59  go to state 569


State 392

  685 type_declaration_no_options: "function" '<' . $@61 type_declaration '>' $@62
  688                            | "function" '<' . $@63 optional_function_argument_list optional_function_type '>' $@64

    ':'       reduce using rule 686 ($@63)
    '>'       reduce using rule 686 ($@63)
    '('       reduce using rule 686 ($@63)
    $default  reduce using rule 683 ($@61)

    $@61  go to state 570
    $@63  go to state 571


State 393

  692 type_declaration_no_options: "lambda" '<' . $@65 type_declaration '>' $@66
  695                            | "lambda" '<' . $@67 optional_function_argument_list optional_function_type '>' $@68

    ':'       reduce using rule 693 ($@67)
    '>'       reduce using rule 693 ($@67)
    '('       reduce using rule 693 ($@67)
    $default  reduce using rule 690 ($@65)

    $@65  go to state 572
    $@67  go to state 573


State 394

  698 type_declaration_no_options: "tuple" '<' . $@69 tuple_type_list '>' $@70

    $default  reduce using rule 696 ($@69)

    $@69  go to state 574


State 395

  701 type_declaration_no_options: "variant" '<' . $@71 variant_type_list '>' $@72

    $default  reduce using rule 699 ($@71)

    $@71  go to state 575


State 396

  628 auto_type_declaration: "$t" '(' . expr ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 576
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 397

  649 type_declaration_no_options: '$' name_in_namespace . '(' optional_expr_list ')'

    '('  shift, and go to state 577


State 398

  652 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 652 (type_declaration_no_options)


State 399

  657 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 657 (type_declaration_no_options)


State 400

  651 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 651 (type_declaration_no_options)


State 401

  659 type_declaration_no_options: type_declaration_no_options "==" . "const"
  660                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 578
    '&'      shift, and go to state 579


State 402

  665 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 665 (type_declaration_no_options)


State 403

  661 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 661 (type_declaration_no_options)


State 404

  654 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 654 (type_declaration_no_options)


State 405

  650 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  653                            | type_declaration_no_options '-' . "const"
  655                            | type_declaration_no_options '-' . '&'
  658                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 580
    '&'      shift, and go to state 581
    '['      shift, and go to state 582
    '#'      shift, and go to state 583


State 406

  643 type_declaration_no_options: type_declaration_no_options '[' . expr ']'
  644                            | type_declaration_no_options '[' . ']'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    ']'                               shift, and go to state 584
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 585
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 407

  656 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 656 (type_declaration_no_options)


State 408

  703 type_declaration: type_declaration '|' . type_declaration_no_options
  704                 | type_declaration '|' . '#'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344
    '#'          shift, and go to state 586

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 587


State 409

  632 bitfield_alias_bits: bitfield_alias_bits . ';'
  633                    | bitfield_alias_bits . "name" ';'
  719 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@81 "name" $@82 '{' $@83 bitfield_alias_bits . $@84 '}'

    "name"  shift, and go to state 588
    ';'     shift, and go to state 589

    $default  reduce using rule 718 ($@84)

    $@84  go to state 590


State 410

  508 tuple_alias_type_list: tuple_alias_type_list . ';'
  509                      | tuple_alias_type_list . tuple_type ';'
  709 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@73 "name" $@74 '{' $@75 tuple_alias_type_list . $@76 '}'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 591
    '$'          shift, and go to state 344
    ';'          shift, and go to state 592

    $default  reduce using rule 708 ($@76)

    name_in_namespace            go to state 345
    tuple_type                   go to state 593
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 594
    $@76                         go to state 595


State 411

  514 variant_alias_type_list: variant_alias_type_list . ';'
  515                        | variant_alias_type_list . variant_type ';'
  714 variant_alias_declaration: "variant" optional_public_or_private_alias $@77 "name" $@78 '{' $@79 variant_alias_type_list . $@80 '}'

    "name"  shift, and go to state 596
    ';'     shift, and go to state 597

    $default  reduce using rule 713 ($@80)

    variant_type  go to state 598
    $@80          go to state 599


State 412

  182 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 182 (function_name)


State 413

  172 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 172 (function_name)


State 414

  500 function_argument_declaration: "$a" '(' . expr ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 600
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 415

  499 function_argument_declaration: optional_field_annotation "var" . variable_declaration

    "$i"    shift, and go to state 416
    "name"  shift, and go to state 417

    variable_declaration         go to state 601
    variable_name_with_pos_list  go to state 419


State 416

  588 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 602


State 417

  587 variable_name_with_pos_list: "name" .
  589                            | "name" . "aka" "name"

    "aka"  shift, and go to state 603

    $default  reduce using rule 587 (variable_name_with_pos_list)


State 418

  498 function_argument_declaration: optional_field_annotation variable_declaration .

    $default  reduce using rule 498 (function_argument_declaration)


State 419

  518 variable_declaration: variable_name_with_pos_list .
  519                     | variable_name_with_pos_list . '&'
  520                     | variable_name_with_pos_list . ':' type_declaration
  521                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  522                     | variable_name_with_pos_list . copy_or_move expr
  523                     | variable_name_with_pos_list . copy_or_move expr_pipe
  590 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  591                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 604
    ','   shift, and go to state 605
    '='   shift, and go to state 606
    ':'   shift, and go to state 607
    '&'   shift, and go to state 608

    $default  reduce using rule 518 (variable_declaration)

    copy_or_move  go to state 609


State 420

  120 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 120 (optional_function_argument_list)


State 421

  502 function_argument_list: function_argument_list ';' . function_argument_declaration

    "$a"  shift, and go to state 362
    "[["  shift, and go to state 218

    $default  reduce using rule 477 (optional_field_annotation)

    optional_field_annotation      go to state 364
    function_argument_declaration  go to state 610


State 422

  122 optional_function_type: ':' type_declaration .
  703 type_declaration: type_declaration . '|' type_declaration_no_options
  704                 | type_declaration . '|' '#'

    '|'  shift, and go to state 408

    $default  reduce using rule 122 (optional_function_type)


State 423

  240 expressions: expressions error .

    $default  reduce using rule 240 (expressions)


State 424

   77 expression_while_loop: "while" . expr expression_block

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 611
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 425

   62 if_or_static_if: "if" .

    $default  reduce using rule 62 (if_or_static_if)


State 426

   63 if_or_static_if: "static_if" .

    $default  reduce using rule 63 (if_or_static_if)


State 427

   75 expression_for_loop: "for" . variable_name_with_pos_list "in" expr_list ';' expression_block

    "$i"    shift, and go to state 416
    "name"  shift, and go to state 417

    variable_name_with_pos_list  go to state 612


State 428

  380 expr: "true" .

    $default  reduce using rule 380 (expr)


State 429

  381 expr: "false" .

    $default  reduce using rule 381 (expr)


State 430

  263 expr_new: "new" . new_type_declaration
  264         | "new" . new_type_declaration '(' ')'
  265         | "new" . new_type_declaration '(' expr_list ')'
  266         | "new" . make_decl

    "array"        shift, and go to state 433
    "table"        shift, and go to state 438
    "fixed_array"  shift, and go to state 452
    "tuple"        shift, and go to state 454
    "::"           shift, and go to state 58
    "[["           shift, and go to state 469
    "[{"           shift, and go to state 470
    "{{"           shift, and go to state 471
    "name"         shift, and go to state 59
    '<'            shift, and go to state 613

    name_in_namespace           go to state 345
    new_type_declaration        go to state 614
    structure_type_declaration  go to state 615
    make_decl                   go to state 616
    make_struct_decl            go to state 537
    make_tuple_call             go to state 538
    make_dim_decl               go to state 539
    make_table_decl             go to state 540
    array_comprehension         go to state 541


State 431

  303 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  304               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  305               | "typeinfo" . '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

    '('  shift, and go to state 617


State 432

  302 expr_type_decl: "type" . '<' $@18 type_declaration '>' $@19

    '<'  shift, and go to state 618


State 433

  765 make_dim_decl: "array" . '(' expr_list ')'
  768              | "array" . '<' $@85 type_declaration_no_options '>' $@86 '(' expr_list ')'

    '<'  shift, and go to state 619
    '('  shift, and go to state 620


State 434

  269 expression_return_no_pipe: "return" .
  270                          | "return" . expr_list
  271                          | "return" . "<-" expr_list
  273 expression_return: "return" . expr_pipe
  274                  | "return" . "<-" expr_pipe

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "<-"                              shift, and go to state 621
    "$ <|"                            shift, and go to state 459
    "@ <|"                            shift, and go to state 460
    "@@ <|"                           shift, and go to state 461
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    $default  reduce using rule 269 (expression_return_no_pipe)

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    expr_pipe               go to state 622
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    expr_list               go to state 623
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_assign             go to state 624
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 625
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 435

  374 expr: "null" .

    $default  reduce using rule 374 (expr)


State 436

  267 expression_break: "break" .

    $default  reduce using rule 267 (expression_break)


State 437

  280 expression_try_catch: "try" . expression_block "recover" expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 626


State 438

  778 make_table_decl: "table" . '(' expr_map_tuple_list ')'
  779                | "table" . '<' type_declaration_no_options '>' '(' expr_map_tuple_list ')'
  780                | "table" . '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list ')'

    '<'  shift, and go to state 627
    '('  shift, and go to state 628


State 439

  257 expression_delete: "delete" . expr
  258                  | "delete" . "explicit" expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "explicit"                        shift, and go to state 629
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 630
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 440

  427 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 631


State 441

   78 expression_with: "with" . expr expression_block

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 632
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 442

   80 expression_with_alias: "assume" . "name" '=' $@4 expr

    "name"  shift, and go to state 633


State 443

  293 expr_cast: "cast" . '<' $@12 type_declaration_no_options '>' $@13 expr

    '<'  shift, and go to state 634


State 444

  296 expr_cast: "upcast" . '<' $@14 type_declaration_no_options '>' $@15 expr

    '<'  shift, and go to state 635


State 445

  428 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 636


State 446

  268 expression_continue: "continue" .

    $default  reduce using rule 268 (expression_continue)


State 447

  237 expression_any: "pass" . ';'

    ';'  shift, and go to state 637


State 448

  299 expr_cast: "reinterpret" . '<' $@16 type_declaration_no_options '>' $@17 expr

    '<'  shift, and go to state 638


State 449

   54 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 639


State 450

   55 expression_goto: "goto" . "label" "integer constant"
   56                | "goto" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "label"                           shift, and go to state 640
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 641
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 451

   76 expression_unsafe: "unsafe" . expression_block
  459 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 642
    '{'  shift, and go to state 284

    expression_block  go to state 643


State 452

  769 make_dim_decl: "fixed_array" . '(' expr_list ')'
  772              | "fixed_array" . '<' $@87 type_declaration_no_options '>' $@88 '(' expr_list ')'

    '<'  shift, and go to state 644
    '('  shift, and go to state 645


State 453

  618 basic_type_declaration: "bitfield" .

    $default  reduce using rule 618 (basic_type_declaration)


State 454

  760 make_tuple_call: "tuple" . '(' expr_list ')'

    '('  shift, and go to state 646


State 455

  429 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  430     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 647


State 456

  275 expression_yield_no_pipe: "yield" . expr
  276                         | "yield" . "<-" expr
  278 expression_yield: "yield" . expr_pipe
  279                 | "yield" . "<-" expr_pipe

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "<-"                              shift, and go to state 648
    "$ <|"                            shift, and go to state 459
    "@ <|"                            shift, and go to state 460
    "@@ <|"                           shift, and go to state 461
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    expr_pipe               go to state 649
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_assign             go to state 624
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 650
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 457

  410 expr: "++" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 651
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 458

  411 expr: "--" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 652
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 459

  253 expr_pipe: "$ <|" . expr_block

    '$'  shift, and go to state 488
    '@'  shift, and go to state 653
    '{'  shift, and go to state 284

    expression_block  go to state 504
    block_or_lambda   go to state 524
    expr_block        go to state 654


State 460

  251 expr_pipe: "@ <|" . expr_block

    '$'  shift, and go to state 488
    '@'  shift, and go to state 653
    '{'  shift, and go to state 284

    expression_block  go to state 504
    block_or_lambda   go to state 524
    expr_block        go to state 655


State 461

  252 expr_pipe: "@@ <|" . expr_block

    '$'  shift, and go to state 488
    '@'  shift, and go to state 653
    '{'  shift, and go to state 284

    expression_block  go to state 504
    block_or_lambda   go to state 524
    expr_block        go to state 656


State 462

  461 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 657


State 463

  462 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 658


State 464

  463 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 659


State 465

  464 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 660


State 466

  465 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 661


State 467

  467 expr_mtag: "$c" . '(' expr ')' '(' ')'
  468          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 662


State 468

  466 expr_mtag: "..." .

    $default  reduce using rule 466 (expr_mtag)


State 469

  749 make_struct_decl: "[[" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  750                 | "[[" . type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  751                 | "[[" . type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  752                 | "[[" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  763 make_dim_decl: "[[" . type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  783 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 663
    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 664


State 470

  753 make_struct_decl: "[{" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  754                 | "[{" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  764 make_dim_decl: "[{" . type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  784 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "for"        shift, and go to state 665
    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 666


State 471

  777 make_table_decl: "{{" . make_table optional_trailing_semicolon_cur_cur

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 667
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_map_tuple          go to state 668
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table              go to state 669
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 472

  324 expr_numeric_const: "integer constant" .

    $default  reduce using rule 324 (expr_numeric_const)


State 473

  326 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 326 (expr_numeric_const)


State 474

  325 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 325 (expr_numeric_const)


State 475

  327 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 327 (expr_numeric_const)


State 476

  328 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 328 (expr_numeric_const)


State 477

  329 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 329 (expr_numeric_const)


State 478

  330 expr_numeric_const: "double constant" .

    $default  reduce using rule 330 (expr_numeric_const)


State 479

  241 expr_keyword: "keyword" . expr expression_block
  246 expression_keyword: "keyword" . '<' $@6 type_declaration_no_options '>' $@7 expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '<'                               shift, and go to state 670
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 671
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 480

  249 expression_keyword: "type function" . '<' $@8 type_declaration_no_options '>' $@9 '(' optional_expr_list ')'

    '<'  shift, and go to state 672


State 481

   31 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 28 (string_builder_body)

    string_builder_body  go to state 673


State 482

  387 expr: '-' . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 674
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 483

  386 expr: '+' . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 675
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 484

  426 expr: '*' . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 676
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 485

  385 expr: '~' . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 677
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 486

  384 expr: '!' . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 678
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 487

  414 expr: '(' . expr ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 679
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 488

  311 block_or_lambda: '$' .

    $default  reduce using rule 311 (block_or_lambda)


State 489

  312 block_or_lambda: '@' .
  313                | '@' . '@'
  362 func_addr_expr: '@' . '@' func_addr_name
  365               | '@' . '@' '<' $@20 type_declaration_no_options '>' $@21 func_addr_name
  368               | '@' . '@' '<' $@22 optional_function_argument_list optional_function_type '>' $@23 func_addr_name
  476 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 680

    $default  reduce using rule 312 (block_or_lambda)


State 490

  217 expression_any: ';' .

    $default  reduce using rule 217 (expression_any)


State 491

  215 expression_block: '{' expressions '}' .
  216                 | '{' expressions '}' . "finally" '{' expressions '}'

    "finally"  shift, and go to state 681

    $default  reduce using rule 215 (expression_block)


State 492

  378 expr: string_builder .

    $default  reduce using rule 378 (expr)


State 493

  377 expr: expr_reader .

    $default  reduce using rule 377 (expr)


State 494

  235 expression_any: expression_label . ';'

    ';'  shift, and go to state 682


State 495

  236 expression_any: expression_goto . ';'

    ';'  shift, and go to state 683


State 496

   72 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 684
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 497

   74 expression_if_then_else: expression_if_one_liner . "if" $@3 expr expression_else_one_liner ';'

    "if"  shift, and go to state 685


State 498

  233 expression_any: expression_if_then_else .

    $default  reduce using rule 233 (expression_any)


State 499

  228 expression_any: expression_for_loop .

    $default  reduce using rule 228 (expression_any)


State 500

  225 expression_any: expression_unsafe .

    $default  reduce using rule 225 (expression_any)


State 501

  224 expression_any: expression_while_loop .

    $default  reduce using rule 224 (expression_any)


State 502

  226 expression_any: expression_with .

    $default  reduce using rule 226 (expression_any)


State 503

  227 expression_any: expression_with_alias .

    $default  reduce using rule 227 (expression_any)


State 504

  322 expr_block: expression_block .

    $default  reduce using rule 322 (expr_block)


State 505

  239 expressions: expressions expression_any .

    $default  reduce using rule 239 (expressions)


State 506

  219 expression_any: expr_keyword .

    $default  reduce using rule 219 (expression_any)


State 507

  460 expr: expression_keyword .

    $default  reduce using rule 460 (expr)


State 508

  218 expression_any: expr_pipe .

    $default  reduce using rule 218 (expression_any)


State 509

  356 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  357                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  375 expr: name_in_namespace .
  422     | name_in_namespace . '(' ')'
  423     | name_in_namespace . '(' expr_list ')'
  458     | name_in_namespace . "name"

    "name"  shift, and go to state 686
    '('     shift, and go to state 687

    "name"    [reduce using rule 375 (expr)]
    '('       [reduce using rule 375 (expr)]
    $default  reduce using rule 375 (expr)


State 510

  222 expression_any: expression_delete . ';'

    ';'  shift, and go to state 688


State 511

  451 expr: expr_new .

    $default  reduce using rule 451 (expr)


State 512

   70 expression_if_one_liner: expression_break .
  229 expression_any: expression_break . ';'

    ';'  shift, and go to state 689

    $default  reduce using rule 70 (expression_if_one_liner)


State 513

   71 expression_if_one_liner: expression_continue .
  230 expression_any: expression_continue . ';'

    ';'  shift, and go to state 690

    $default  reduce using rule 71 (expression_if_one_liner)


State 514

   68 expression_if_one_liner: expression_return_no_pipe .
  272 expression_return: expression_return_no_pipe . ';'

    ';'  shift, and go to state 691

    $default  reduce using rule 68 (expression_if_one_liner)


State 515

  231 expression_any: expression_return .

    $default  reduce using rule 231 (expression_any)


State 516

   69 expression_if_one_liner: expression_yield_no_pipe .
  277 expression_yield: expression_yield_no_pipe . ';'

    ';'  shift, and go to state 692

    $default  reduce using rule 69 (expression_if_one_liner)


State 517

  232 expression_any: expression_yield .

    $default  reduce using rule 232 (expression_any)


State 518

  234 expression_any: expression_try_catch .

    $default  reduce using rule 234 (expression_any)


State 519

  289 expression_let: kwd_let . optional_in_scope let_variable_declaration
  290               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 693

    $default  reduce using rule 284 (optional_in_scope)

    optional_in_scope  go to state 694


State 520

  223 expression_any: expression_let .

    $default  reduce using rule 223 (expression_any)


State 521

  450 expr: expr_cast .

    $default  reduce using rule 450 (expr)


State 522

  449 expr: expr_type_decl .

    $default  reduce using rule 449 (expr)


State 523

  448 expr: expr_type_info .

    $default  reduce using rule 448 (expr)


State 524

  323 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 14

    $default  reduce using rule 116 (optional_annotation_list)

    optional_annotation_list  go to state 695


State 525

  454 expr: expr_block .

    $default  reduce using rule 454 (expr)


State 526

  376 expr: expr_numeric_const .

    $default  reduce using rule 376 (expr)


State 527

  221 expression_any: expr_assign . ';'
  250 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 696
    ';'    shift, and go to state 697


State 528

  220 expression_any: expr_assign_pipe .

    $default  reduce using rule 220 (expression_any)


State 529

  453 expr: expr_named_call .

    $default  reduce using rule 453 (expr)


State 530

  452 expr: expr_method_call .

    $default  reduce using rule 452 (expr)


State 531

  421 expr: func_addr_expr .

    $default  reduce using rule 421 (expr)


State 532

  382 expr: expr_field .

    $default  reduce using rule 382 (expr)


State 533

   67 expression_if_one_liner: expr .
  331 expr_assign: expr .
  332            | expr . '=' expr
  333            | expr . "<-" expr
  334            | expr . ":=" expr
  335            | expr . "&=" expr
  336            | expr . "|=" expr
  337            | expr . "^=" expr
  338            | expr . "&&=" expr
  339            | expr . "||=" expr
  340            | expr . "^^=" expr
  341            | expr . "+=" expr
  342            | expr . "-=" expr
  343            | expr . "*=" expr
  344            | expr . "/=" expr
  345            | expr . "%=" expr
  346            | expr . "<<=" expr
  347            | expr . ">>=" expr
  348            | expr . "<<<=" expr
  349            | expr . ">>>=" expr
  350 expr_assign_pipe: expr . '=' "@ <|" expr_block
  351                 | expr . '=' "@@ <|" expr_block
  352                 | expr . '=' "$ <|" expr_block
  353                 | expr . "<-" "@ <|" expr_block
  354                 | expr . "<-" "@@ <|" expr_block
  355                 | expr . "<-" "$ <|" expr_block
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 698
    "as"    shift, and go to state 699
    "+="    shift, and go to state 700
    "-="    shift, and go to state 701
    "/="    shift, and go to state 702
    "*="    shift, and go to state 703
    "%="    shift, and go to state 704
    "&="    shift, and go to state 705
    "|="    shift, and go to state 706
    "^="    shift, and go to state 707
    "<<"    shift, and go to state 708
    ">>"    shift, and go to state 709
    "++"    shift, and go to state 710
    "--"    shift, and go to state 711
    "<="    shift, and go to state 712
    "<<="   shift, and go to state 713
    ">>="   shift, and go to state 714
    ">="    shift, and go to state 715
    "=="    shift, and go to state 716
    "!="    shift, and go to state 717
    "->"    shift, and go to state 718
    "<-"    shift, and go to state 719
    "??"    shift, and go to state 720
    "?."    shift, and go to state 721
    "?["    shift, and go to state 722
    "<|"    shift, and go to state 723
    "|>"    shift, and go to state 724
    ":="    shift, and go to state 725
    "<<<"   shift, and go to state 726
    ">>>"   shift, and go to state 727
    "<<<="  shift, and go to state 728
    ">>>="  shift, and go to state 729
    "&&"    shift, and go to state 730
    "||"    shift, and go to state 731
    "^^"    shift, and go to state 732
    "&&="   shift, and go to state 733
    "||="   shift, and go to state 734
    "^^="   shift, and go to state 735
    ".."    shift, and go to state 736
    '='     shift, and go to state 737
    '?'     shift, and go to state 738
    '|'     shift, and go to state 739
    '^'     shift, and go to state 740
    '&'     shift, and go to state 741
    '<'     shift, and go to state 742
    '>'     shift, and go to state 743
    '-'     shift, and go to state 744
    '+'     shift, and go to state 745
    '*'     shift, and go to state 746
    '/'     shift, and go to state 747
    '%'     shift, and go to state 748
    '.'     shift, and go to state 749
    '['     shift, and go to state 750

    "if"      reduce using rule 67 (expression_if_one_liner)
    $default  reduce using rule 331 (expr_assign)


State 534

  383 expr: expr_mtag .

    $default  reduce using rule 383 (expr)


State 535

  424 expr: basic_type_declaration . '(' ')'
  425     | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 751


State 536

  379 expr: make_decl .

    $default  reduce using rule 379 (expr)


State 537

  720 make_decl: make_struct_decl .

    $default  reduce using rule 720 (make_decl)


State 538

  724 make_decl: make_tuple_call .

    $default  reduce using rule 724 (make_decl)


State 539

  721 make_decl: make_dim_decl .

    $default  reduce using rule 721 (make_decl)


State 540

  722 make_decl: make_table_decl .

    $default  reduce using rule 722 (make_decl)


State 541

  723 make_decl: array_comprehension .

    $default  reduce using rule 723 (make_decl)


State 542

  573 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@41 . enum_list $@42 '}'

    $default  reduce using rule 550 (enum_list)

    enum_list  go to state 752


State 543

  552 enum_list: enum_list "name" . ';'
  553          | enum_list "name" . '=' expr ';'

    '='  shift, and go to state 753
    ';'  shift, and go to state 754


State 544

  551 enum_list: enum_list ';' .

    $default  reduce using rule 551 (enum_list)


State 545

  570 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@39 enum_list $@40 . '}'

    '}'  shift, and go to state 755


State 546

  575 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 575 (optional_structure_parent)


State 547

  492 struct_variable_declaration_list: struct_variable_declaration_list . $@32 structure_variable_declaration ';'
  494                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@33 function_declaration_header ';'
  496                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@34 function_declaration_header expression_block
  497                                 | struct_variable_declaration_list . '[' annotation_list ']' ';'
  586 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@43 structure_name $@44 '{' struct_variable_declaration_list . '}'

    '['  shift, and go to state 756
    '}'  shift, and go to state 757

    "def"     reduce using rule 116 (optional_annotation_list)
    $default  reduce using rule 491 ($@32)

    optional_annotation_list  go to state 758
    $@32                      go to state 759


State 548

  541 global_variable_declaration_list: global_variable_declaration_list $@35 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 541 (global_variable_declaration_list)


State 549

  478 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 478 (optional_field_annotation)


State 550

  459 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 642


State 551

  246 expression_keyword: "keyword" . '<' $@6 type_declaration_no_options '>' $@7 expr

    '<'  shift, and go to state 670


State 552

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'
  530 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ')'    shift, and go to state 760


State 553

  531 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 531 (let_variable_name_with_pos_list)


State 554

  532 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  533                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 761

    $default  reduce using rule 532 (let_variable_name_with_pos_list)


State 555

  534 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . ';'
  535                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr ';'
  536                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  643 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  644                            | type_declaration_no_options . '[' ']'
  650                            | type_declaration_no_options . '-' '[' ']'
  651                            | type_declaration_no_options . "explicit"
  652                            | type_declaration_no_options . "const"
  653                            | type_declaration_no_options . '-' "const"
  654                            | type_declaration_no_options . '&'
  655                            | type_declaration_no_options . '-' '&'
  656                            | type_declaration_no_options . '#'
  657                            | type_declaration_no_options . "implicit"
  658                            | type_declaration_no_options . '-' '#'
  659                            | type_declaration_no_options . "==" "const"
  660                            | type_declaration_no_options . "==" '&'
  661                            | type_declaration_no_options . '?'
  665                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 398
    "implicit"  shift, and go to state 399
    "explicit"  shift, and go to state 400
    "=="        shift, and go to state 401
    "<-"        shift, and go to state 556
    "??"        shift, and go to state 402
    ":="        shift, and go to state 557
    '='         shift, and go to state 558
    '?'         shift, and go to state 403
    '&'         shift, and go to state 404
    '-'         shift, and go to state 405
    '['         shift, and go to state 406
    ';'         shift, and go to state 762
    '#'         shift, and go to state 407

    copy_or_move_or_clone  go to state 763


State 556

  525 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 525 (copy_or_move_or_clone)


State 557

  526 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 526 (copy_or_move_or_clone)


State 558

  524 copy_or_move_or_clone: '=' .

    $default  reduce using rule 524 (copy_or_move_or_clone)


State 559

  537 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr ';'
  538                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "$ <|"                            shift, and go to state 459
    "@ <|"                            shift, and go to state 460
    "@@ <|"                           shift, and go to state 461
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    expr_pipe               go to state 764
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_assign             go to state 624
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 765
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 560

  647 type_declaration_no_options: "type" '<' $@47 . type_declaration '>' $@48

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 766


State 561

  668 type_declaration_no_options: "array" '<' $@51 . type_declaration '>' $@52

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 767


State 562

  671 type_declaration_no_options: "table" '<' $@53 . table_type_pair '>' $@54

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    table_type_pair              go to state 768
    type_declaration_no_options  go to state 350
    type_declaration             go to state 769


State 563

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'
  648 type_declaration_no_options: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ')'    shift, and go to state 770


State 564

  674 type_declaration_no_options: "iterator" '<' $@55 . type_declaration '>' $@56

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 771


State 565

  664 type_declaration_no_options: "smart_ptr" '<' $@49 . type_declaration '>' $@50

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 772


State 566

  627 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 773


State 567

  636 bitfield_type_declaration: "bitfield" '<' $@45 . bitfield_bits '>' $@46

    "name"  shift, and go to state 774

    bitfield_bits  go to state 775


State 568

  678 type_declaration_no_options: "block" '<' $@57 . type_declaration '>' $@58

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 776


State 569

  681 type_declaration_no_options: "block" '<' $@59 . optional_function_argument_list optional_function_type '>' $@60

    '('  shift, and go to state 282

    $default  reduce using rule 118 (optional_function_argument_list)

    optional_function_argument_list  go to state 777


State 570

  685 type_declaration_no_options: "function" '<' $@61 . type_declaration '>' $@62

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 778


State 571

  688 type_declaration_no_options: "function" '<' $@63 . optional_function_argument_list optional_function_type '>' $@64

    '('  shift, and go to state 282

    $default  reduce using rule 118 (optional_function_argument_list)

    optional_function_argument_list  go to state 779


State 572

  692 type_declaration_no_options: "lambda" '<' $@65 . type_declaration '>' $@66

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 780


State 573

  695 type_declaration_no_options: "lambda" '<' $@67 . optional_function_argument_list optional_function_type '>' $@68

    '('  shift, and go to state 282

    $default  reduce using rule 118 (optional_function_argument_list)

    optional_function_argument_list  go to state 781


State 574

  698 type_declaration_no_options: "tuple" '<' $@69 . tuple_type_list '>' $@70

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 591
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    tuple_type                   go to state 782
    tuple_type_list              go to state 783
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 594


State 575

  701 type_declaration_no_options: "variant" '<' $@71 . variant_type_list '>' $@72

    "name"  shift, and go to state 596

    variant_type       go to state 784
    variant_type_list  go to state 785


State 576

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'
  628 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ')'    shift, and go to state 786


State 577

  649 type_declaration_no_options: '$' name_in_namespace '(' . optional_expr_list ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    $default  reduce using rule 242 (optional_expr_list)

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    optional_expr_list      go to state 787
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    expr_list               go to state 788
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 789
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 578

  659 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 659 (type_declaration_no_options)


State 579

  660 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 660 (type_declaration_no_options)


State 580

  653 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 653 (type_declaration_no_options)


State 581

  655 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 655 (type_declaration_no_options)


State 582

  650 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 790


State 583

  658 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 658 (type_declaration_no_options)


State 584

  644 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 644 (type_declaration_no_options)


State 585

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'
  643 type_declaration_no_options: type_declaration_no_options '[' expr . ']'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ']'    shift, and go to state 791


State 586

  704 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 704 (type_declaration)


State 587

  643 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  644                            | type_declaration_no_options . '[' ']'
  650                            | type_declaration_no_options . '-' '[' ']'
  651                            | type_declaration_no_options . "explicit"
  652                            | type_declaration_no_options . "const"
  653                            | type_declaration_no_options . '-' "const"
  654                            | type_declaration_no_options . '&'
  655                            | type_declaration_no_options . '-' '&'
  656                            | type_declaration_no_options . '#'
  657                            | type_declaration_no_options . "implicit"
  658                            | type_declaration_no_options . '-' '#'
  659                            | type_declaration_no_options . "==" "const"
  660                            | type_declaration_no_options . "==" '&'
  661                            | type_declaration_no_options . '?'
  665                            | type_declaration_no_options . "??"
  703 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 398
    "implicit"  shift, and go to state 399
    "explicit"  shift, and go to state 400
    "=="        shift, and go to state 401
    "??"        shift, and go to state 402
    '?'         shift, and go to state 403
    '&'         shift, and go to state 404
    '-'         shift, and go to state 405
    '['         shift, and go to state 406
    '#'         shift, and go to state 407

    $default  reduce using rule 703 (type_declaration)


State 588

  633 bitfield_alias_bits: bitfield_alias_bits "name" . ';'

    ';'  shift, and go to state 792


State 589

  632 bitfield_alias_bits: bitfield_alias_bits ';' .

    $default  reduce using rule 632 (bitfield_alias_bits)


State 590

  719 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@81 "name" $@82 '{' $@83 bitfield_alias_bits $@84 . '}'

    '}'  shift, and go to state 793


State 591

  254 name_in_namespace: "name" .
  255                  | "name" . "::" "name"
  504 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 98
    ':'   shift, and go to state 794

    $default  reduce using rule 254 (name_in_namespace)


State 592

  508 tuple_alias_type_list: tuple_alias_type_list ';' .

    $default  reduce using rule 508 (tuple_alias_type_list)


State 593

  509 tuple_alias_type_list: tuple_alias_type_list tuple_type . ';'

    ';'  shift, and go to state 795


State 594

  503 tuple_type: type_declaration .
  703 type_declaration: type_declaration . '|' type_declaration_no_options
  704                 | type_declaration . '|' '#'

    '|'  shift, and go to state 408

    $default  reduce using rule 503 (tuple_type)


State 595

  709 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@73 "name" $@74 '{' $@75 tuple_alias_type_list $@76 . '}'

    '}'  shift, and go to state 796


State 596

  510 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 797


State 597

  514 variant_alias_type_list: variant_alias_type_list ';' .

    $default  reduce using rule 514 (variant_alias_type_list)


State 598

  515 variant_alias_type_list: variant_alias_type_list variant_type . ';'

    ';'  shift, and go to state 798


State 599

  714 variant_alias_declaration: "variant" optional_public_or_private_alias $@77 "name" $@78 '{' $@79 variant_alias_type_list $@80 . '}'

    '}'  shift, and go to state 799


State 600

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'
  500 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ')'    shift, and go to state 800


State 601

  499 function_argument_declaration: optional_field_annotation "var" variable_declaration .

    $default  reduce using rule 499 (function_argument_declaration)


State 602

  588 variable_name_with_pos_list: "$i" '(' . expr ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 801
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 603

  589 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 802


State 604

  517 copy_or_move: "<-" .

    $default  reduce using rule 517 (copy_or_move)


State 605

  590 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  591                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 803


State 606

  516 copy_or_move: '=' .

    $default  reduce using rule 516 (copy_or_move)


State 607

  520 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  521                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 804


State 608

  519 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 519 (variable_declaration)


State 609

  522 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  523                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "$ <|"                            shift, and go to state 459
    "@ <|"                            shift, and go to state 460
    "@@ <|"                           shift, and go to state 461
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    expr_pipe               go to state 805
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_assign             go to state 624
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 806
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 610

  502 function_argument_list: function_argument_list ';' function_argument_declaration .

    $default  reduce using rule 502 (function_argument_list)


State 611

   77 expression_while_loop: "while" expr . expression_block
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    '{'    shift, and go to state 284

    expression_block  go to state 807


State 612

   75 expression_for_loop: "for" variable_name_with_pos_list . "in" expr_list ';' expression_block
  590 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  591                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 808
    ','   shift, and go to state 605


State 613

  261 new_type_declaration: '<' . $@10 type_declaration '>' $@11

    $default  reduce using rule 259 ($@10)

    $@10  go to state 809


State 614

  263 expr_new: "new" new_type_declaration .
  264         | "new" new_type_declaration . '(' ')'
  265         | "new" new_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 810

    '('       [reduce using rule 263 (expr_new)]
    $default  reduce using rule 263 (expr_new)


State 615

  262 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 262 (new_type_declaration)


State 616

  266 expr_new: "new" make_decl .

    $default  reduce using rule 266 (expr_new)


State 617

  303 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  304               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  305               | "typeinfo" '(' . name_in_namespace '<' "name" ';' "name" '>' expr ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 811


State 618

  302 expr_type_decl: "type" '<' . $@18 type_declaration '>' $@19

    $default  reduce using rule 300 ($@18)

    $@18  go to state 812


State 619

  768 make_dim_decl: "array" '<' . $@85 type_declaration_no_options '>' $@86 '(' expr_list ')'

    $default  reduce using rule 766 ($@85)

    $@85  go to state 813


State 620

  765 make_dim_decl: "array" '(' . expr_list ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    expr_list               go to state 814
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 789
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 621

  271 expression_return_no_pipe: "return" "<-" . expr_list
  274 expression_return: "return" "<-" . expr_pipe

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "$ <|"                            shift, and go to state 459
    "@ <|"                            shift, and go to state 460
    "@@ <|"                           shift, and go to state 461
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    expr_pipe               go to state 815
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    expr_list               go to state 816
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_assign             go to state 624
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 625
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 622

  273 expression_return: "return" expr_pipe .

    $default  reduce using rule 273 (expression_return)


State 623

  270 expression_return_no_pipe: "return" expr_list .
  307 expr_list: expr_list . ',' expr

    ','  shift, and go to state 817

    $default  reduce using rule 270 (expression_return_no_pipe)


State 624

  250 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 696


State 625

  306 expr_list: expr .
  331 expr_assign: expr .
  332            | expr . '=' expr
  333            | expr . "<-" expr
  334            | expr . ":=" expr
  335            | expr . "&=" expr
  336            | expr . "|=" expr
  337            | expr . "^=" expr
  338            | expr . "&&=" expr
  339            | expr . "||=" expr
  340            | expr . "^^=" expr
  341            | expr . "+=" expr
  342            | expr . "-=" expr
  343            | expr . "*=" expr
  344            | expr . "/=" expr
  345            | expr . "%=" expr
  346            | expr . "<<=" expr
  347            | expr . ">>=" expr
  348            | expr . "<<<=" expr
  349            | expr . ">>>=" expr
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 698
    "as"    shift, and go to state 699
    "+="    shift, and go to state 700
    "-="    shift, and go to state 701
    "/="    shift, and go to state 702
    "*="    shift, and go to state 703
    "%="    shift, and go to state 704
    "&="    shift, and go to state 705
    "|="    shift, and go to state 706
    "^="    shift, and go to state 707
    "<<"    shift, and go to state 708
    ">>"    shift, and go to state 709
    "++"    shift, and go to state 710
    "--"    shift, and go to state 711
    "<="    shift, and go to state 712
    "<<="   shift, and go to state 713
    ">>="   shift, and go to state 714
    ">="    shift, and go to state 715
    "=="    shift, and go to state 716
    "!="    shift, and go to state 717
    "->"    shift, and go to state 718
    "<-"    shift, and go to state 818
    "??"    shift, and go to state 720
    "?."    shift, and go to state 721
    "?["    shift, and go to state 722
    "<|"    shift, and go to state 723
    "|>"    shift, and go to state 724
    ":="    shift, and go to state 725
    "<<<"   shift, and go to state 726
    ">>>"   shift, and go to state 727
    "<<<="  shift, and go to state 728
    ">>>="  shift, and go to state 729
    "&&"    shift, and go to state 730
    "||"    shift, and go to state 731
    "^^"    shift, and go to state 732
    "&&="   shift, and go to state 733
    "||="   shift, and go to state 734
    "^^="   shift, and go to state 735
    ".."    shift, and go to state 736
    '='     shift, and go to state 819
    '?'     shift, and go to state 738
    '|'     shift, and go to state 739
    '^'     shift, and go to state 740
    '&'     shift, and go to state 741
    '<'     shift, and go to state 742
    '>'     shift, and go to state 743
    '-'     shift, and go to state 744
    '+'     shift, and go to state 745
    '*'     shift, and go to state 746
    '/'     shift, and go to state 747
    '%'     shift, and go to state 748
    '.'     shift, and go to state 749
    '['     shift, and go to state 750

    " <|"     reduce using rule 331 (expr_assign)
    $default  reduce using rule 306 (expr_list)


State 626

  280 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 820


State 627

  779 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' expr_map_tuple_list ')'
  780                | "table" '<' . type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 821


State 628

  778 make_table_decl: "table" '(' . expr_map_tuple_list ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 667
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_map_tuple          go to state 822
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    expr_map_tuple_list     go to state 823
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 629

  258 expression_delete: "delete" "explicit" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 824
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 630

  257 expression_delete: "delete" expr .
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 257 (expression_delete)


State 631

  427 expr: "deref" '(' . expr ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 825
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 632

   78 expression_with: "with" expr . expression_block
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    '{'    shift, and go to state 284

    expression_block  go to state 826


State 633

   80 expression_with_alias: "assume" "name" . '=' $@4 expr

    '='  shift, and go to state 827


State 634

  293 expr_cast: "cast" '<' . $@12 type_declaration_no_options '>' $@13 expr

    $default  reduce using rule 291 ($@12)

    $@12  go to state 828


State 635

  296 expr_cast: "upcast" '<' . $@14 type_declaration_no_options '>' $@15 expr

    $default  reduce using rule 294 ($@14)

    $@14  go to state 829


State 636

  428 expr: "addr" '(' . expr ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 830
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 637

  237 expression_any: "pass" ';' .

    $default  reduce using rule 237 (expression_any)


State 638

  299 expr_cast: "reinterpret" '<' . $@16 type_declaration_no_options '>' $@17 expr

    $default  reduce using rule 297 ($@16)

    $@16  go to state 831


State 639

   54 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 832


State 640

   55 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 833


State 641

   56 expression_goto: "goto" expr .
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 56 (expression_goto)


State 642

  459 expr: "unsafe" '(' . expr ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 834
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 643

   76 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 76 (expression_unsafe)


State 644

  772 make_dim_decl: "fixed_array" '<' . $@87 type_declaration_no_options '>' $@88 '(' expr_list ')'

    $default  reduce using rule 770 ($@87)

    $@87  go to state 835


State 645

  769 make_dim_decl: "fixed_array" '(' . expr_list ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    expr_list               go to state 836
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 789
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 646

  760 make_tuple_call: "tuple" '(' . expr_list ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    expr_list               go to state 837
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 789
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 647

  429 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  430     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 838


State 648

  276 expression_yield_no_pipe: "yield" "<-" . expr
  279 expression_yield: "yield" "<-" . expr_pipe

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "$ <|"                            shift, and go to state 459
    "@ <|"                            shift, and go to state 460
    "@@ <|"                           shift, and go to state 461
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    expr_pipe               go to state 839
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_assign             go to state 624
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 840
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 649

  278 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 278 (expression_yield)


State 650

  275 expression_yield_no_pipe: "yield" expr .
  331 expr_assign: expr .
  332            | expr . '=' expr
  333            | expr . "<-" expr
  334            | expr . ":=" expr
  335            | expr . "&=" expr
  336            | expr . "|=" expr
  337            | expr . "^=" expr
  338            | expr . "&&=" expr
  339            | expr . "||=" expr
  340            | expr . "^^=" expr
  341            | expr . "+=" expr
  342            | expr . "-=" expr
  343            | expr . "*=" expr
  344            | expr . "/=" expr
  345            | expr . "%=" expr
  346            | expr . "<<=" expr
  347            | expr . ">>=" expr
  348            | expr . "<<<=" expr
  349            | expr . ">>>=" expr
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 698
    "as"    shift, and go to state 699
    "+="    shift, and go to state 700
    "-="    shift, and go to state 701
    "/="    shift, and go to state 702
    "*="    shift, and go to state 703
    "%="    shift, and go to state 704
    "&="    shift, and go to state 705
    "|="    shift, and go to state 706
    "^="    shift, and go to state 707
    "<<"    shift, and go to state 708
    ">>"    shift, and go to state 709
    "++"    shift, and go to state 710
    "--"    shift, and go to state 711
    "<="    shift, and go to state 712
    "<<="   shift, and go to state 713
    ">>="   shift, and go to state 714
    ">="    shift, and go to state 715
    "=="    shift, and go to state 716
    "!="    shift, and go to state 717
    "->"    shift, and go to state 718
    "<-"    shift, and go to state 818
    "??"    shift, and go to state 720
    "?."    shift, and go to state 721
    "?["    shift, and go to state 722
    "<|"    shift, and go to state 723
    "|>"    shift, and go to state 724
    ":="    shift, and go to state 725
    "<<<"   shift, and go to state 726
    ">>>"   shift, and go to state 727
    "<<<="  shift, and go to state 728
    ">>>="  shift, and go to state 729
    "&&"    shift, and go to state 730
    "||"    shift, and go to state 731
    "^^"    shift, and go to state 732
    "&&="   shift, and go to state 733
    "||="   shift, and go to state 734
    "^^="   shift, and go to state 735
    ".."    shift, and go to state 736
    '='     shift, and go to state 819
    '?'     shift, and go to state 738
    '|'     shift, and go to state 739
    '^'     shift, and go to state 740
    '&'     shift, and go to state 741
    '<'     shift, and go to state 742
    '>'     shift, and go to state 743
    '-'     shift, and go to state 744
    '+'     shift, and go to state 745
    '*'     shift, and go to state 746
    '/'     shift, and go to state 747
    '%'     shift, and go to state 748
    '.'     shift, and go to state 749
    '['     shift, and go to state 750

    " <|"     reduce using rule 331 (expr_assign)
    $default  reduce using rule 275 (expression_yield_no_pipe)


State 651

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  410     | "++" expr .
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 698
    "as"  shift, and go to state 699
    "++"  shift, and go to state 710
    "--"  shift, and go to state 711
    "->"  shift, and go to state 718
    "?."  shift, and go to state 721
    "?["  shift, and go to state 722
    "<|"  shift, and go to state 723
    "|>"  shift, and go to state 724
    '.'   shift, and go to state 749
    '['   shift, and go to state 750

    $default  reduce using rule 410 (expr)


State 652

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  411     | "--" expr .
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 698
    "as"  shift, and go to state 699
    "++"  shift, and go to state 710
    "--"  shift, and go to state 711
    "->"  shift, and go to state 718
    "?."  shift, and go to state 721
    "?["  shift, and go to state 722
    "<|"  shift, and go to state 723
    "|>"  shift, and go to state 724
    '.'   shift, and go to state 749
    '['   shift, and go to state 750

    $default  reduce using rule 411 (expr)


State 653

  312 block_or_lambda: '@' .
  313                | '@' . '@'

    '@'  shift, and go to state 841

    $default  reduce using rule 312 (block_or_lambda)


State 654

  253 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 253 (expr_pipe)


State 655

  251 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 251 (expr_pipe)


State 656

  252 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 252 (expr_pipe)


State 657

  461 expr_mtag: "$$" '(' . expr ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 842
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 658

  462 expr_mtag: "$i" '(' . expr ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 843
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 659

  463 expr_mtag: "$v" '(' . expr ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 844
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 660

  464 expr_mtag: "$b" '(' . expr ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 845
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 661

  465 expr_mtag: "$a" '(' . expr ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 846
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 662

  467 expr_mtag: "$c" '(' . expr ')' '(' ')'
  468          | "$c" '(' . expr ')' '(' expr_list ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 847
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 663

  783 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 416
    "name"  shift, and go to state 417

    variable_name_with_pos_list  go to state 848


State 664

  643 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  644                            | type_declaration_no_options . '[' ']'
  650                            | type_declaration_no_options . '-' '[' ']'
  651                            | type_declaration_no_options . "explicit"
  652                            | type_declaration_no_options . "const"
  653                            | type_declaration_no_options . '-' "const"
  654                            | type_declaration_no_options . '&'
  655                            | type_declaration_no_options . '-' '&'
  656                            | type_declaration_no_options . '#'
  657                            | type_declaration_no_options . "implicit"
  658                            | type_declaration_no_options . '-' '#'
  659                            | type_declaration_no_options . "==" "const"
  660                            | type_declaration_no_options . "==" '&'
  661                            | type_declaration_no_options . '?'
  665                            | type_declaration_no_options . "??"
  749 make_struct_decl: "[[" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  750                 | "[[" type_declaration_no_options . optional_block optional_trailing_delim_sqr_sqr
  751                 | "[[" type_declaration_no_options . '(' ')' optional_block optional_trailing_delim_sqr_sqr
  752                 | "[[" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  763 make_dim_decl: "[[" type_declaration_no_options . make_dim optional_trailing_semicolon_sqr_sqr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "const"                           shift, and go to state 398
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "where"                           shift, and go to state 849
    "reinterpret"                     shift, and go to state 448
    "implicit"                        shift, and go to state 399
    "explicit"                        shift, and go to state 400
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "=="                              shift, and go to state 401
    "??"                              shift, and go to state 402
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "$f"                              shift, and go to state 850
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 851
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '?'                               shift, and go to state 403
    '&'                               shift, and go to state 404
    '-'                               shift, and go to state 852
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '['                               shift, and go to state 406
    '('                               shift, and go to state 853
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284
    '#'                               shift, and go to state 407

    $default  reduce using rule 735 (optional_block)

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 854
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_fields      go to state 855
    make_struct_dim         go to state 856
    optional_block          go to state 857
    make_struct_decl        go to state 537
    make_tuple              go to state 858
    make_tuple_call         go to state 538
    make_dim                go to state 859
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 665

  784 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "$i"    shift, and go to state 416
    "name"  shift, and go to state 417

    variable_name_with_pos_list  go to state 860


State 666

  643 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  644                            | type_declaration_no_options . '[' ']'
  650                            | type_declaration_no_options . '-' '[' ']'
  651                            | type_declaration_no_options . "explicit"
  652                            | type_declaration_no_options . "const"
  653                            | type_declaration_no_options . '-' "const"
  654                            | type_declaration_no_options . '&'
  655                            | type_declaration_no_options . '-' '&'
  656                            | type_declaration_no_options . '#'
  657                            | type_declaration_no_options . "implicit"
  658                            | type_declaration_no_options . '-' '#'
  659                            | type_declaration_no_options . "==" "const"
  660                            | type_declaration_no_options . "==" '&'
  661                            | type_declaration_no_options . '?'
  665                            | type_declaration_no_options . "??"
  753 make_struct_decl: "[{" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_cur_sqr
  754                 | "[{" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  764 make_dim_decl: "[{" type_declaration_no_options . make_dim optional_trailing_semicolon_cur_sqr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "const"                           shift, and go to state 398
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "implicit"                        shift, and go to state 399
    "explicit"                        shift, and go to state 400
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "=="                              shift, and go to state 401
    "??"                              shift, and go to state 402
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "$f"                              shift, and go to state 850
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 851
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '?'                               shift, and go to state 403
    '&'                               shift, and go to state 404
    '-'                               shift, and go to state 852
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '['                               shift, and go to state 406
    '('                               shift, and go to state 861
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284
    '#'                               shift, and go to state 407

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 854
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_fields      go to state 855
    make_struct_dim         go to state 862
    make_struct_decl        go to state 537
    make_tuple              go to state 858
    make_tuple_call         go to state 538
    make_dim                go to state 863
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 667

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'
  758 make_map_tuple: expr . "=>" expr
  759               | expr .

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "=>"   shift, and go to state 864
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 759 (make_map_tuple)


State 668

  773 make_table: make_map_tuple .

    $default  reduce using rule 773 (make_table)


State 669

  774 make_table: make_table . ';' make_map_tuple
  777 make_table_decl: "{{" make_table . optional_trailing_semicolon_cur_cur

    ";}}"  shift, and go to state 865
    ';'    shift, and go to state 866
    '}'    shift, and go to state 867

    optional_trailing_semicolon_cur_cur  go to state 868


State 670

  246 expression_keyword: "keyword" '<' . $@6 type_declaration_no_options '>' $@7 expr

    $default  reduce using rule 244 ($@6)

    $@6  go to state 869


State 671

  241 expr_keyword: "keyword" expr . expression_block
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    '{'    shift, and go to state 284

    expression_block  go to state 870


State 672

  249 expression_keyword: "type function" '<' . $@8 type_declaration_no_options '>' $@9 '(' optional_expr_list ')'

    $default  reduce using rule 247 ($@8)

    $@8  go to state 871


State 673

   29 string_builder_body: string_builder_body . character_sequence
   30                    | string_builder_body . "{" expr "}"
   31 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163
    "end of the string"   shift, and go to state 872
    "{"                   shift, and go to state 873

    character_sequence  go to state 874


State 674

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  387 expr: '-' expr .
  388     | expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 698
    "as"  shift, and go to state 699
    "++"  shift, and go to state 710
    "--"  shift, and go to state 711
    "->"  shift, and go to state 718
    "?."  shift, and go to state 721
    "?["  shift, and go to state 722
    "<|"  shift, and go to state 723
    "|>"  shift, and go to state 724
    '.'   shift, and go to state 749
    '['   shift, and go to state 750

    $default  reduce using rule 387 (expr)


State 675

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  386 expr: '+' expr .
  388     | expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 698
    "as"  shift, and go to state 699
    "++"  shift, and go to state 710
    "--"  shift, and go to state 711
    "->"  shift, and go to state 718
    "?."  shift, and go to state 721
    "?["  shift, and go to state 722
    "<|"  shift, and go to state 723
    "|>"  shift, and go to state 724
    '.'   shift, and go to state 749
    '['   shift, and go to state 750

    $default  reduce using rule 386 (expr)


State 676

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  426     | '*' expr .
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 721
    "?["  shift, and go to state 722
    '.'   shift, and go to state 749
    '['   shift, and go to state 750

    $default  reduce using rule 426 (expr)


State 677

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  385 expr: '~' expr .
  388     | expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 698
    "as"  shift, and go to state 699
    "++"  shift, and go to state 710
    "--"  shift, and go to state 711
    "->"  shift, and go to state 718
    "?."  shift, and go to state 721
    "?["  shift, and go to state 722
    "<|"  shift, and go to state 723
    "|>"  shift, and go to state 724
    '.'   shift, and go to state 749
    '['   shift, and go to state 750

    $default  reduce using rule 385 (expr)


State 678

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  384 expr: '!' expr .
  388     | expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 698
    "as"  shift, and go to state 699
    "++"  shift, and go to state 710
    "--"  shift, and go to state 711
    "->"  shift, and go to state 718
    "?."  shift, and go to state 721
    "?["  shift, and go to state 722
    "<|"  shift, and go to state 723
    "|>"  shift, and go to state 724
    '.'   shift, and go to state 749
    '['   shift, and go to state 750

    $default  reduce using rule 384 (expr)


State 679

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  414     | '(' expr . ')'
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ')'    shift, and go to state 875


State 680

  313 block_or_lambda: '@' '@' .
  362 func_addr_expr: '@' '@' . func_addr_name
  365               | '@' '@' . '<' $@20 type_declaration_no_options '>' $@21 func_addr_name
  368               | '@' '@' . '<' $@22 optional_function_argument_list optional_function_type '>' $@23 func_addr_name
  476 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 876
    "$c"    shift, and go to state 877
    "name"  shift, and go to state 59
    '<'     shift, and go to state 878

    $default  reduce using rule 313 (block_or_lambda)

    name_in_namespace  go to state 879
    func_addr_name     go to state 880


State 681

  216 expression_block: '{' expressions '}' "finally" . '{' expressions '}'

    '{'  shift, and go to state 881


State 682

  235 expression_any: expression_label ';' .

    $default  reduce using rule 235 (expression_any)


State 683

  236 expression_any: expression_goto ';' .

    $default  reduce using rule 236 (expression_any)


State 684

   72 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    '{'    shift, and go to state 284

    expression_block  go to state 882


State 685

   74 expression_if_then_else: expression_if_one_liner "if" . $@3 expr expression_else_one_liner ';'

    $default  reduce using rule 73 ($@3)

    $@3  go to state 883


State 686

  458 expr: name_in_namespace "name" .

    $default  reduce using rule 458 (expr)


State 687

  356 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  357                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  422 expr: name_in_namespace '(' . ')'
  423     | name_in_namespace '(' . expr_list ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '['                               shift, and go to state 884
    '('                               shift, and go to state 487
    ')'                               shift, and go to state 885
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    expr_list               go to state 886
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 789
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 688

  222 expression_any: expression_delete ';' .

    $default  reduce using rule 222 (expression_any)


State 689

  229 expression_any: expression_break ';' .

    $default  reduce using rule 229 (expression_any)


State 690

  230 expression_any: expression_continue ';' .

    $default  reduce using rule 230 (expression_any)


State 691

  272 expression_return: expression_return_no_pipe ';' .

    $default  reduce using rule 272 (expression_return)


State 692

  277 expression_yield: expression_yield_no_pipe ';' .

    $default  reduce using rule 277 (expression_yield)


State 693

  283 optional_in_scope: "inscope" .

    $default  reduce using rule 283 (optional_in_scope)


State 694

  289 expression_let: kwd_let optional_in_scope . let_variable_declaration
  290               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 299
    "[["    shift, and go to state 887
    "name"  shift, and go to state 300

    tuple_expansion_variable_declaration  go to state 888
    let_variable_name_with_pos_list       go to state 301
    let_variable_declaration              go to state 889


State 695

  323 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 890

    $default  reduce using rule 320 (optional_capture_list)

    optional_capture_list  go to state 891


State 696

  250 expr_pipe: expr_assign " <|" . expr_block

    '$'  shift, and go to state 488
    '@'  shift, and go to state 653
    '{'  shift, and go to state 284

    expression_block  go to state 504
    block_or_lambda   go to state 524
    expr_block        go to state 892


State 697

  221 expression_any: expr_assign ';' .

    $default  reduce using rule 221 (expression_any)


State 698

  435 expr: expr "is" . "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr "is" . basic_type_declaration
  437     | expr "is" . "name"
  475 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 893
    "bool"      shift, and go to state 310
    "void"      shift, and go to state 311
    "string"    shift, and go to state 312
    "int"       shift, and go to state 314
    "int2"      shift, and go to state 315
    "int3"      shift, and go to state 316
    "int4"      shift, and go to state 317
    "uint"      shift, and go to state 318
    "bitfield"  shift, and go to state 453
    "uint2"     shift, and go to state 320
    "uint3"     shift, and go to state 321
    "uint4"     shift, and go to state 322
    "float"     shift, and go to state 323
    "float2"    shift, and go to state 324
    "float3"    shift, and go to state 325
    "float4"    shift, and go to state 326
    "range"     shift, and go to state 327
    "urange"    shift, and go to state 328
    "range64"   shift, and go to state 329
    "urange64"  shift, and go to state 330
    "int64"     shift, and go to state 332
    "uint64"    shift, and go to state 333
    "double"    shift, and go to state 334
    "int8"      shift, and go to state 337
    "uint8"     shift, and go to state 338
    "int16"     shift, and go to state 339
    "uint16"    shift, and go to state 340
    "$f"        shift, and go to state 894
    "name"      shift, and go to state 895

    basic_type_declaration  go to state 896


State 699

  438 expr: expr "as" . "name"
  441     | expr "as" . "type" '<' $@28 type_declaration '>' $@29
  442     | expr "as" . basic_type_declaration
  473 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 897
    "bool"      shift, and go to state 310
    "void"      shift, and go to state 311
    "string"    shift, and go to state 312
    "int"       shift, and go to state 314
    "int2"      shift, and go to state 315
    "int3"      shift, and go to state 316
    "int4"      shift, and go to state 317
    "uint"      shift, and go to state 318
    "bitfield"  shift, and go to state 453
    "uint2"     shift, and go to state 320
    "uint3"     shift, and go to state 321
    "uint4"     shift, and go to state 322
    "float"     shift, and go to state 323
    "float2"    shift, and go to state 324
    "float3"    shift, and go to state 325
    "float4"    shift, and go to state 326
    "range"     shift, and go to state 327
    "urange"    shift, and go to state 328
    "range64"   shift, and go to state 329
    "urange64"  shift, and go to state 330
    "int64"     shift, and go to state 332
    "uint64"    shift, and go to state 333
    "double"    shift, and go to state 334
    "int8"      shift, and go to state 337
    "uint8"     shift, and go to state 338
    "int16"     shift, and go to state 339
    "uint16"    shift, and go to state 340
    "$f"        shift, and go to state 898
    "name"      shift, and go to state 899

    basic_type_declaration  go to state 900


State 700

  341 expr_assign: expr "+=" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 901
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 701

  342 expr_assign: expr "-=" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 902
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 702

  344 expr_assign: expr "/=" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 903
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 703

  343 expr_assign: expr "*=" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 904
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 704

  345 expr_assign: expr "%=" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 905
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 705

  335 expr_assign: expr "&=" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 906
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 706

  336 expr_assign: expr "|=" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 907
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 707

  337 expr_assign: expr "^=" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 908
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 708

  388 expr: expr "<<" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 909
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 709

  389 expr: expr ">>" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 910
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 710

  412 expr: expr "++" .

    $default  reduce using rule 412 (expr)


State 711

  413 expr: expr "--" .

    $default  reduce using rule 413 (expr)


State 712

  401 expr: expr "<=" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 911
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 713

  346 expr_assign: expr "<<=" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 912
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 714

  347 expr_assign: expr ">>=" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 913
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 715

  402 expr: expr ">=" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 914
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 716

  399 expr: expr "==" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 915
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 717

  400 expr: expr "!=" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 916
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 718

  358 expr_method_call: expr "->" . "name" '(' ')'
  359                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 917


State 719

  333 expr_assign: expr "<-" . expr
  353 expr_assign_pipe: expr "<-" . "@ <|" expr_block
  354                 | expr "<-" . "@@ <|" expr_block
  355                 | expr "<-" . "$ <|" expr_block

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "$ <|"                            shift, and go to state 918
    "@ <|"                            shift, and go to state 919
    "@@ <|"                           shift, and go to state 920
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 921
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 720

  431 expr: expr "??" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 922
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 721

  419 expr: expr "?." . "name"
  470 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 923
    "name"  shift, and go to state 924


State 722

  417 expr: expr "?[" . expr ']'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 925
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 723

  455 expr: expr "<|" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 926
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 724

  456 expr: expr "|>" . expr
  457     | expr "|>" . basic_type_declaration

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 927
    expr_mtag               go to state 534
    basic_type_declaration  go to state 928
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 725

  334 expr_assign: expr ":=" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 929
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 726

  390 expr: expr "<<<" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 930
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 727

  391 expr: expr ">>>" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 931
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 728

  348 expr_assign: expr "<<<=" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 932
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 729

  349 expr_assign: expr ">>>=" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 933
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 730

  406 expr: expr "&&" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 934
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 731

  407 expr: expr "||" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 935
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 732

  408 expr: expr "^^" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 936
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 733

  338 expr_assign: expr "&&=" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 937
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 734

  339 expr_assign: expr "||=" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 938
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 735

  340 expr_assign: expr "^^=" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 939
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 736

  409 expr: expr ".." . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 940
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 737

  332 expr_assign: expr '=' . expr
  350 expr_assign_pipe: expr '=' . "@ <|" expr_block
  351                 | expr '=' . "@@ <|" expr_block
  352                 | expr '=' . "$ <|" expr_block

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "$ <|"                            shift, and go to state 941
    "@ <|"                            shift, and go to state 942
    "@@ <|"                           shift, and go to state 943
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 944
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 738

  432 expr: expr '?' . expr ':' expr
  443     | expr '?' . "as" "name"
  446     | expr '?' . "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr '?' . "as" basic_type_declaration
  474 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "as"                              shift, and go to state 945
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 946
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 739

  404 expr: expr '|' . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 947
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 740

  405 expr: expr '^' . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 948
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 741

  403 expr: expr '&' . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 949
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 742

  397 expr: expr '<' . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 950
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 743

  398 expr: expr '>' . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 951
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 744

  393 expr: expr '-' . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 952
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 745

  392 expr: expr '+' . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 953
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 746

  394 expr: expr '*' . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 954
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 747

  395 expr: expr '/' . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 955
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 748

  396 expr: expr '%' . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 956
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 749

  369 expr_field: expr '.' . "name"
  370           | expr '.' . '.' "name"
  373           | expr '.' . $@24 error $@25
  416 expr: expr '.' . '[' expr ']'
  418     | expr '.' . "?[" expr ']'
  420     | expr '.' . "?." "name"
  469 expr_mtag: expr '.' . "$f" '(' expr ')'
  471          | expr '.' . '.' "$f" '(' expr ')'
  472          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 957
    "?["    shift, and go to state 958
    "$f"    shift, and go to state 959
    "name"  shift, and go to state 960
    '.'     shift, and go to state 961
    '['     shift, and go to state 962

    $default  reduce using rule 371 ($@24)

    $@24  go to state 963


State 750

  415 expr: expr '[' . expr ']'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 964
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 751

  424 expr: basic_type_declaration '(' . ')'
  425     | basic_type_declaration '(' . expr_list ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    ')'                               shift, and go to state 965
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    expr_list               go to state 966
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 789
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 752

  551 enum_list: enum_list . ';'
  552          | enum_list . "name" ';'
  553          | enum_list . "name" '=' expr ';'
  573 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@41 enum_list . $@42 '}'

    "name"  shift, and go to state 543
    ';'     shift, and go to state 544

    $default  reduce using rule 572 ($@42)

    $@42  go to state 967


State 753

  553 enum_list: enum_list "name" '=' . expr ';'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 968
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 754

  552 enum_list: enum_list "name" ';' .

    $default  reduce using rule 552 (enum_list)


State 755

  570 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@39 enum_list $@40 '}' .

    $default  reduce using rule 570 (enum_declaration)


State 756

  117 optional_annotation_list: '[' . annotation_list ']'
  497 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' ';'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 969
    name_in_namespace             go to state 70


State 757

  586 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@43 structure_name $@44 '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 586 (structure_declaration)


State 758

  494 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@33 function_declaration_header ';'
  496                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@34 function_declaration_header expression_block

    "def"  shift, and go to state 970


State 759

  492 struct_variable_declaration_list: struct_variable_declaration_list $@32 . structure_variable_declaration ';'

    "[["  shift, and go to state 218

    $default  reduce using rule 477 (optional_field_annotation)

    optional_field_annotation       go to state 971
    structure_variable_declaration  go to state 972


State 760

  530 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 530 (let_variable_name_with_pos_list)


State 761

  533 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 973


State 762

  534 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options ';' .

    $default  reduce using rule 534 (let_variable_declaration)


State 763

  535 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr ';'
  536                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "$ <|"                            shift, and go to state 459
    "@ <|"                            shift, and go to state 460
    "@@ <|"                           shift, and go to state 461
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    expr_pipe               go to state 974
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_assign             go to state 624
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 975
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 764

  538 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 538 (let_variable_declaration)


State 765

  331 expr_assign: expr .
  332            | expr . '=' expr
  333            | expr . "<-" expr
  334            | expr . ":=" expr
  335            | expr . "&=" expr
  336            | expr . "|=" expr
  337            | expr . "^=" expr
  338            | expr . "&&=" expr
  339            | expr . "||=" expr
  340            | expr . "^^=" expr
  341            | expr . "+=" expr
  342            | expr . "-=" expr
  343            | expr . "*=" expr
  344            | expr . "/=" expr
  345            | expr . "%=" expr
  346            | expr . "<<=" expr
  347            | expr . ">>=" expr
  348            | expr . "<<<=" expr
  349            | expr . ">>>=" expr
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'
  537 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 698
    "as"    shift, and go to state 699
    "+="    shift, and go to state 700
    "-="    shift, and go to state 701
    "/="    shift, and go to state 702
    "*="    shift, and go to state 703
    "%="    shift, and go to state 704
    "&="    shift, and go to state 705
    "|="    shift, and go to state 706
    "^="    shift, and go to state 707
    "<<"    shift, and go to state 708
    ">>"    shift, and go to state 709
    "++"    shift, and go to state 710
    "--"    shift, and go to state 711
    "<="    shift, and go to state 712
    "<<="   shift, and go to state 713
    ">>="   shift, and go to state 714
    ">="    shift, and go to state 715
    "=="    shift, and go to state 716
    "!="    shift, and go to state 717
    "->"    shift, and go to state 718
    "<-"    shift, and go to state 818
    "??"    shift, and go to state 720
    "?."    shift, and go to state 721
    "?["    shift, and go to state 722
    "<|"    shift, and go to state 723
    "|>"    shift, and go to state 724
    ":="    shift, and go to state 725
    "<<<"   shift, and go to state 726
    ">>>"   shift, and go to state 727
    "<<<="  shift, and go to state 728
    ">>>="  shift, and go to state 729
    "&&"    shift, and go to state 730
    "||"    shift, and go to state 731
    "^^"    shift, and go to state 732
    "&&="   shift, and go to state 733
    "||="   shift, and go to state 734
    "^^="   shift, and go to state 735
    ".."    shift, and go to state 736
    '='     shift, and go to state 819
    '?'     shift, and go to state 738
    '|'     shift, and go to state 739
    '^'     shift, and go to state 740
    '&'     shift, and go to state 741
    '<'     shift, and go to state 742
    '>'     shift, and go to state 743
    '-'     shift, and go to state 744
    '+'     shift, and go to state 745
    '*'     shift, and go to state 746
    '/'     shift, and go to state 747
    '%'     shift, and go to state 748
    '.'     shift, and go to state 749
    '['     shift, and go to state 750
    ';'     shift, and go to state 976

    $default  reduce using rule 331 (expr_assign)


State 766

  647 type_declaration_no_options: "type" '<' $@47 type_declaration . '>' $@48
  703 type_declaration: type_declaration . '|' type_declaration_no_options
  704                 | type_declaration . '|' '#'

    '|'  shift, and go to state 408
    '>'  shift, and go to state 977


State 767

  668 type_declaration_no_options: "array" '<' $@51 type_declaration . '>' $@52
  703 type_declaration: type_declaration . '|' type_declaration_no_options
  704                 | type_declaration . '|' '#'

    '|'  shift, and go to state 408
    '>'  shift, and go to state 978


State 768

  671 type_declaration_no_options: "table" '<' $@53 table_type_pair . '>' $@54

    '>'  shift, and go to state 979


State 769

  637 table_type_pair: type_declaration .
  638                | type_declaration . ';' type_declaration
  703 type_declaration: type_declaration . '|' type_declaration_no_options
  704                 | type_declaration . '|' '#'

    '|'  shift, and go to state 408
    ';'  shift, and go to state 980

    $default  reduce using rule 637 (table_type_pair)


State 770

  648 type_declaration_no_options: "typedecl" '(' expr ')' .

    $default  reduce using rule 648 (type_declaration_no_options)


State 771

  674 type_declaration_no_options: "iterator" '<' $@55 type_declaration . '>' $@56
  703 type_declaration: type_declaration . '|' type_declaration_no_options
  704                 | type_declaration . '|' '#'

    '|'  shift, and go to state 408
    '>'  shift, and go to state 981


State 772

  664 type_declaration_no_options: "smart_ptr" '<' $@49 type_declaration . '>' $@50
  703 type_declaration: type_declaration . '|' type_declaration_no_options
  704                 | type_declaration . '|' '#'

    '|'  shift, and go to state 408
    '>'  shift, and go to state 982


State 773

  627 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 627 (auto_type_declaration)


State 774

  629 bitfield_bits: "name" .

    $default  reduce using rule 629 (bitfield_bits)


State 775

  630 bitfield_bits: bitfield_bits . ';' "name"
  636 bitfield_type_declaration: "bitfield" '<' $@45 bitfield_bits . '>' $@46

    '>'  shift, and go to state 983
    ';'  shift, and go to state 984


State 776

  678 type_declaration_no_options: "block" '<' $@57 type_declaration . '>' $@58
  703 type_declaration: type_declaration . '|' type_declaration_no_options
  704                 | type_declaration . '|' '#'

    '|'  shift, and go to state 408
    '>'  shift, and go to state 985


State 777

  681 type_declaration_no_options: "block" '<' $@59 optional_function_argument_list . optional_function_type '>' $@60

    ':'  shift, and go to state 367

    $default  reduce using rule 121 (optional_function_type)

    optional_function_type  go to state 986


State 778

  685 type_declaration_no_options: "function" '<' $@61 type_declaration . '>' $@62
  703 type_declaration: type_declaration . '|' type_declaration_no_options
  704                 | type_declaration . '|' '#'

    '|'  shift, and go to state 408
    '>'  shift, and go to state 987


State 779

  688 type_declaration_no_options: "function" '<' $@63 optional_function_argument_list . optional_function_type '>' $@64

    ':'  shift, and go to state 367

    $default  reduce using rule 121 (optional_function_type)

    optional_function_type  go to state 988


State 780

  692 type_declaration_no_options: "lambda" '<' $@65 type_declaration . '>' $@66
  703 type_declaration: type_declaration . '|' type_declaration_no_options
  704                 | type_declaration . '|' '#'

    '|'  shift, and go to state 408
    '>'  shift, and go to state 989


State 781

  695 type_declaration_no_options: "lambda" '<' $@67 optional_function_argument_list . optional_function_type '>' $@68

    ':'  shift, and go to state 367

    $default  reduce using rule 121 (optional_function_type)

    optional_function_type  go to state 990


State 782

  505 tuple_type_list: tuple_type .

    $default  reduce using rule 505 (tuple_type_list)


State 783

  506 tuple_type_list: tuple_type_list . ';' tuple_type
  698 type_declaration_no_options: "tuple" '<' $@69 tuple_type_list . '>' $@70

    '>'  shift, and go to state 991
    ';'  shift, and go to state 992


State 784

  511 variant_type_list: variant_type .

    $default  reduce using rule 511 (variant_type_list)


State 785

  512 variant_type_list: variant_type_list . ';' variant_type
  701 type_declaration_no_options: "variant" '<' $@71 variant_type_list . '>' $@72

    '>'  shift, and go to state 993
    ';'  shift, and go to state 994


State 786

  628 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 628 (auto_type_declaration)


State 787

  649 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 995


State 788

  243 optional_expr_list: expr_list .
  307 expr_list: expr_list . ',' expr

    ','  shift, and go to state 817

    $default  reduce using rule 243 (optional_expr_list)


State 789

  306 expr_list: expr .
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 306 (expr_list)


State 790

  650 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 650 (type_declaration_no_options)


State 791

  643 type_declaration_no_options: type_declaration_no_options '[' expr ']' .

    $default  reduce using rule 643 (type_declaration_no_options)


State 792

  633 bitfield_alias_bits: bitfield_alias_bits "name" ';' .

    $default  reduce using rule 633 (bitfield_alias_bits)


State 793

  719 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@81 "name" $@82 '{' $@83 bitfield_alias_bits $@84 '}' .

    $default  reduce using rule 719 (bitfield_alias_declaration)


State 794

  504 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 996


State 795

  509 tuple_alias_type_list: tuple_alias_type_list tuple_type ';' .

    $default  reduce using rule 509 (tuple_alias_type_list)


State 796

  709 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@73 "name" $@74 '{' $@75 tuple_alias_type_list $@76 '}' .

    $default  reduce using rule 709 (tuple_alias_declaration)


State 797

  510 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 997


State 798

  515 variant_alias_type_list: variant_alias_type_list variant_type ';' .

    $default  reduce using rule 515 (variant_alias_type_list)


State 799

  714 variant_alias_declaration: "variant" optional_public_or_private_alias $@77 "name" $@78 '{' $@79 variant_alias_type_list $@80 '}' .

    $default  reduce using rule 714 (variant_alias_declaration)


State 800

  500 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 500 (function_argument_declaration)


State 801

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'
  588 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ')'    shift, and go to state 998


State 802

  589 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 589 (variable_name_with_pos_list)


State 803

  590 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  591                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 999

    $default  reduce using rule 590 (variable_name_with_pos_list)


State 804

  520 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  521                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  703 type_declaration: type_declaration . '|' type_declaration_no_options
  704                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 604
    '='   shift, and go to state 606
    '|'   shift, and go to state 408

    $default  reduce using rule 520 (variable_declaration)

    copy_or_move  go to state 1000


State 805

  523 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 523 (variable_declaration)


State 806

  331 expr_assign: expr .
  332            | expr . '=' expr
  333            | expr . "<-" expr
  334            | expr . ":=" expr
  335            | expr . "&=" expr
  336            | expr . "|=" expr
  337            | expr . "^=" expr
  338            | expr . "&&=" expr
  339            | expr . "||=" expr
  340            | expr . "^^=" expr
  341            | expr . "+=" expr
  342            | expr . "-=" expr
  343            | expr . "*=" expr
  344            | expr . "/=" expr
  345            | expr . "%=" expr
  346            | expr . "<<=" expr
  347            | expr . ">>=" expr
  348            | expr . "<<<=" expr
  349            | expr . ">>>=" expr
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'
  522 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 698
    "as"    shift, and go to state 699
    "+="    shift, and go to state 700
    "-="    shift, and go to state 701
    "/="    shift, and go to state 702
    "*="    shift, and go to state 703
    "%="    shift, and go to state 704
    "&="    shift, and go to state 705
    "|="    shift, and go to state 706
    "^="    shift, and go to state 707
    "<<"    shift, and go to state 708
    ">>"    shift, and go to state 709
    "++"    shift, and go to state 710
    "--"    shift, and go to state 711
    "<="    shift, and go to state 712
    "<<="   shift, and go to state 713
    ">>="   shift, and go to state 714
    ">="    shift, and go to state 715
    "=="    shift, and go to state 716
    "!="    shift, and go to state 717
    "->"    shift, and go to state 718
    "<-"    shift, and go to state 818
    "??"    shift, and go to state 720
    "?."    shift, and go to state 721
    "?["    shift, and go to state 722
    "<|"    shift, and go to state 723
    "|>"    shift, and go to state 724
    ":="    shift, and go to state 725
    "<<<"   shift, and go to state 726
    ">>>"   shift, and go to state 727
    "<<<="  shift, and go to state 728
    ">>>="  shift, and go to state 729
    "&&"    shift, and go to state 730
    "||"    shift, and go to state 731
    "^^"    shift, and go to state 732
    "&&="   shift, and go to state 733
    "||="   shift, and go to state 734
    "^^="   shift, and go to state 735
    ".."    shift, and go to state 736
    '='     shift, and go to state 819
    '?'     shift, and go to state 738
    '|'     shift, and go to state 739
    '^'     shift, and go to state 740
    '&'     shift, and go to state 741
    '<'     shift, and go to state 742
    '>'     shift, and go to state 743
    '-'     shift, and go to state 744
    '+'     shift, and go to state 745
    '*'     shift, and go to state 746
    '/'     shift, and go to state 747
    '%'     shift, and go to state 748
    '.'     shift, and go to state 749
    '['     shift, and go to state 750

    " <|"     reduce using rule 331 (expr_assign)
    $default  reduce using rule 522 (variable_declaration)


State 807

   77 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 77 (expression_while_loop)


State 808

   75 expression_for_loop: "for" variable_name_with_pos_list "in" . expr_list ';' expression_block

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    expr_list               go to state 1001
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 789
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 809

  261 new_type_declaration: '<' $@10 . type_declaration '>' $@11

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1002


State 810

  264 expr_new: "new" new_type_declaration '(' . ')'
  265         | "new" new_type_declaration '(' . expr_list ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    ')'                               shift, and go to state 1003
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    expr_list               go to state 1004
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 789
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 811

  303 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  304               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  305               | "typeinfo" '(' name_in_namespace . '<' "name" ';' "name" '>' expr ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '<'                               shift, and go to state 1005
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1006
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 812

  302 expr_type_decl: "type" '<' $@18 . type_declaration '>' $@19

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1007


State 813

  768 make_dim_decl: "array" '<' $@85 . type_declaration_no_options '>' $@86 '(' expr_list ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1008


State 814

  307 expr_list: expr_list . ',' expr
  765 make_dim_decl: "array" '(' expr_list . ')'

    ','  shift, and go to state 817
    ')'  shift, and go to state 1009


State 815

  274 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 274 (expression_return)


State 816

  271 expression_return_no_pipe: "return" "<-" expr_list .
  307 expr_list: expr_list . ',' expr

    ','  shift, and go to state 817

    $default  reduce using rule 271 (expression_return_no_pipe)


State 817

  307 expr_list: expr_list ',' . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1010
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 818

  333 expr_assign: expr "<-" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 921
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 819

  332 expr_assign: expr '=' . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 944
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 820

  280 expression_try_catch: "try" expression_block "recover" . expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 1011


State 821

  643 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  644                            | type_declaration_no_options . '[' ']'
  650                            | type_declaration_no_options . '-' '[' ']'
  651                            | type_declaration_no_options . "explicit"
  652                            | type_declaration_no_options . "const"
  653                            | type_declaration_no_options . '-' "const"
  654                            | type_declaration_no_options . '&'
  655                            | type_declaration_no_options . '-' '&'
  656                            | type_declaration_no_options . '#'
  657                            | type_declaration_no_options . "implicit"
  658                            | type_declaration_no_options . '-' '#'
  659                            | type_declaration_no_options . "==" "const"
  660                            | type_declaration_no_options . "==" '&'
  661                            | type_declaration_no_options . '?'
  665                            | type_declaration_no_options . "??"
  779 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' expr_map_tuple_list ')'
  780                | "table" '<' type_declaration_no_options . ';' type_declaration_no_options '>' '(' expr_map_tuple_list ')'

    "const"     shift, and go to state 398
    "implicit"  shift, and go to state 399
    "explicit"  shift, and go to state 400
    "=="        shift, and go to state 401
    "??"        shift, and go to state 402
    '?'         shift, and go to state 403
    '&'         shift, and go to state 404
    '>'         shift, and go to state 1012
    '-'         shift, and go to state 405
    '['         shift, and go to state 406
    ';'         shift, and go to state 1013
    '#'         shift, and go to state 407


State 822

  775 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 775 (expr_map_tuple_list)


State 823

  776 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  778 make_table_decl: "table" '(' expr_map_tuple_list . ')'

    ','  shift, and go to state 1014
    ')'  shift, and go to state 1015


State 824

  258 expression_delete: "delete" "explicit" expr .
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 258 (expression_delete)


State 825

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  427     | "deref" '(' expr . ')'
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ')'    shift, and go to state 1016


State 826

   78 expression_with: "with" expr expression_block .

    $default  reduce using rule 78 (expression_with)


State 827

   80 expression_with_alias: "assume" "name" '=' . $@4 expr

    $default  reduce using rule 79 ($@4)

    $@4  go to state 1017


State 828

  293 expr_cast: "cast" '<' $@12 . type_declaration_no_options '>' $@13 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1018


State 829

  296 expr_cast: "upcast" '<' $@14 . type_declaration_no_options '>' $@15 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1019


State 830

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  428     | "addr" '(' expr . ')'
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ')'    shift, and go to state 1020


State 831

  299 expr_cast: "reinterpret" '<' $@16 . type_declaration_no_options '>' $@17 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1021


State 832

   54 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 54 (expression_label)


State 833

   55 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 55 (expression_goto)


State 834

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  459     | "unsafe" '(' expr . ')'
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ')'    shift, and go to state 1022


State 835

  772 make_dim_decl: "fixed_array" '<' $@87 . type_declaration_no_options '>' $@88 '(' expr_list ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1023


State 836

  307 expr_list: expr_list . ',' expr
  769 make_dim_decl: "fixed_array" '(' expr_list . ')'

    ','  shift, and go to state 817
    ')'  shift, and go to state 1024


State 837

  307 expr_list: expr_list . ',' expr
  760 make_tuple_call: "tuple" '(' expr_list . ')'

    ','  shift, and go to state 817
    ')'  shift, and go to state 1025


State 838

  429 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  430     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  643 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  644                            | type_declaration_no_options . '[' ']'
  650                            | type_declaration_no_options . '-' '[' ']'
  651                            | type_declaration_no_options . "explicit"
  652                            | type_declaration_no_options . "const"
  653                            | type_declaration_no_options . '-' "const"
  654                            | type_declaration_no_options . '&'
  655                            | type_declaration_no_options . '-' '&'
  656                            | type_declaration_no_options . '#'
  657                            | type_declaration_no_options . "implicit"
  658                            | type_declaration_no_options . '-' '#'
  659                            | type_declaration_no_options . "==" "const"
  660                            | type_declaration_no_options . "==" '&'
  661                            | type_declaration_no_options . '?'
  665                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 398
    "implicit"  shift, and go to state 399
    "explicit"  shift, and go to state 400
    "=="        shift, and go to state 401
    "??"        shift, and go to state 402
    '?'         shift, and go to state 403
    '&'         shift, and go to state 404
    '>'         shift, and go to state 1026
    '-'         shift, and go to state 405
    '['         shift, and go to state 406
    '#'         shift, and go to state 407


State 839

  279 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 279 (expression_yield)


State 840

  276 expression_yield_no_pipe: "yield" "<-" expr .
  331 expr_assign: expr .
  332            | expr . '=' expr
  333            | expr . "<-" expr
  334            | expr . ":=" expr
  335            | expr . "&=" expr
  336            | expr . "|=" expr
  337            | expr . "^=" expr
  338            | expr . "&&=" expr
  339            | expr . "||=" expr
  340            | expr . "^^=" expr
  341            | expr . "+=" expr
  342            | expr . "-=" expr
  343            | expr . "*=" expr
  344            | expr . "/=" expr
  345            | expr . "%=" expr
  346            | expr . "<<=" expr
  347            | expr . ">>=" expr
  348            | expr . "<<<=" expr
  349            | expr . ">>>=" expr
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 698
    "as"    shift, and go to state 699
    "+="    shift, and go to state 700
    "-="    shift, and go to state 701
    "/="    shift, and go to state 702
    "*="    shift, and go to state 703
    "%="    shift, and go to state 704
    "&="    shift, and go to state 705
    "|="    shift, and go to state 706
    "^="    shift, and go to state 707
    "<<"    shift, and go to state 708
    ">>"    shift, and go to state 709
    "++"    shift, and go to state 710
    "--"    shift, and go to state 711
    "<="    shift, and go to state 712
    "<<="   shift, and go to state 713
    ">>="   shift, and go to state 714
    ">="    shift, and go to state 715
    "=="    shift, and go to state 716
    "!="    shift, and go to state 717
    "->"    shift, and go to state 718
    "<-"    shift, and go to state 818
    "??"    shift, and go to state 720
    "?."    shift, and go to state 721
    "?["    shift, and go to state 722
    "<|"    shift, and go to state 723
    "|>"    shift, and go to state 724
    ":="    shift, and go to state 725
    "<<<"   shift, and go to state 726
    ">>>"   shift, and go to state 727
    "<<<="  shift, and go to state 728
    ">>>="  shift, and go to state 729
    "&&"    shift, and go to state 730
    "||"    shift, and go to state 731
    "^^"    shift, and go to state 732
    "&&="   shift, and go to state 733
    "||="   shift, and go to state 734
    "^^="   shift, and go to state 735
    ".."    shift, and go to state 736
    '='     shift, and go to state 819
    '?'     shift, and go to state 738
    '|'     shift, and go to state 739
    '^'     shift, and go to state 740
    '&'     shift, and go to state 741
    '<'     shift, and go to state 742
    '>'     shift, and go to state 743
    '-'     shift, and go to state 744
    '+'     shift, and go to state 745
    '*'     shift, and go to state 746
    '/'     shift, and go to state 747
    '%'     shift, and go to state 748
    '.'     shift, and go to state 749
    '['     shift, and go to state 750

    " <|"     reduce using rule 331 (expr_assign)
    $default  reduce using rule 276 (expression_yield_no_pipe)


State 841

  313 block_or_lambda: '@' '@' .

    $default  reduce using rule 313 (block_or_lambda)


State 842

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  461 expr_mtag: "$$" '(' expr . ')'
  469          | expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ')'    shift, and go to state 1027


State 843

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  462 expr_mtag: "$i" '(' expr . ')'
  469          | expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ')'    shift, and go to state 1028


State 844

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  463 expr_mtag: "$v" '(' expr . ')'
  469          | expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ')'    shift, and go to state 1029


State 845

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  464 expr_mtag: "$b" '(' expr . ')'
  469          | expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ')'    shift, and go to state 1030


State 846

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  465 expr_mtag: "$a" '(' expr . ')'
  469          | expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ')'    shift, and go to state 1031


State 847

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  467 expr_mtag: "$c" '(' expr . ')' '(' ')'
  468          | "$c" '(' expr . ')' '(' expr_list ')'
  469          | expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ')'    shift, and go to state 1032


State 848

  590 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  591                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  783 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 1033
    ','   shift, and go to state 605


State 849

  736 optional_block: "where" . expr_block

    '$'  shift, and go to state 488
    '@'  shift, and go to state 653
    '{'  shift, and go to state 284

    expression_block  go to state 504
    block_or_lambda   go to state 524
    expr_block        go to state 1034


State 850

  729 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  730                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1035


State 851

  254 name_in_namespace: "name" .
  255                  | "name" . "::" "name"
  725 make_struct_fields: "name" . copy_or_move expr
  726                   | "name" . ":=" expr

    "<-"  shift, and go to state 604
    ":="  shift, and go to state 1036
    "::"  shift, and go to state 98
    '='   shift, and go to state 606

    $default  reduce using rule 254 (name_in_namespace)

    copy_or_move  go to state 1037


State 852

  387 expr: '-' . expr
  650 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  653                            | type_declaration_no_options '-' . "const"
  655                            | type_declaration_no_options '-' . '&'
  658                            | type_declaration_no_options '-' . '#'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "const"                           shift, and go to state 580
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '&'                               shift, and go to state 581
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '['                               shift, and go to state 582
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284
    '#'                               shift, and go to state 583

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 674
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 853

  414 expr: '(' . expr ')'
  751 make_struct_decl: "[[" type_declaration_no_options '(' . ')' optional_block optional_trailing_delim_sqr_sqr
  752                 | "[[" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    ')'                               shift, and go to state 1038
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 679
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 854

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'
  755 make_tuple: expr .
  756           | expr . "=>" expr

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "=>"   shift, and go to state 1039
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 755 (make_tuple)


State 855

  727 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  728                   | make_struct_fields . ',' "name" ":=" expr
  731                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  732                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  733 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 1040

    $default  reduce using rule 733 (make_struct_dim)


State 856

  734 make_struct_dim: make_struct_dim . ';' make_struct_fields
  749 make_struct_decl: "[[" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 849
    ';'      shift, and go to state 1041

    $default  reduce using rule 735 (optional_block)

    optional_block  go to state 1042


State 857

  750 make_struct_decl: "[[" type_declaration_no_options optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1043
    ",]]"  shift, and go to state 1044
    ']'    shift, and go to state 1045

    optional_trailing_delim_sqr_sqr  go to state 1046


State 858

  757 make_tuple: make_tuple . ',' expr
  761 make_dim: make_tuple .

    ','  shift, and go to state 1047

    $default  reduce using rule 761 (make_dim)


State 859

  762 make_dim: make_dim . ';' make_tuple
  763 make_dim_decl: "[[" type_declaration_no_options make_dim . optional_trailing_semicolon_sqr_sqr

    ";]]"  shift, and go to state 1048
    ']'    shift, and go to state 1049
    ';'    shift, and go to state 1050

    optional_trailing_semicolon_sqr_sqr  go to state 1051


State 860

  590 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  591                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  784 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where '}' ']'

    "in"  shift, and go to state 1052
    ','   shift, and go to state 605


State 861

  414 expr: '(' . expr ')'
  754 make_struct_decl: "[{" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    ')'                               shift, and go to state 1053
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 679
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 862

  734 make_struct_dim: make_struct_dim . ';' make_struct_fields
  753 make_struct_decl: "[{" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"  shift, and go to state 849
    ';'      shift, and go to state 1041

    $default  reduce using rule 735 (optional_block)

    optional_block  go to state 1054


State 863

  762 make_dim: make_dim . ';' make_tuple
  764 make_dim_decl: "[{" type_declaration_no_options make_dim . optional_trailing_semicolon_cur_sqr

    ";}]"  shift, and go to state 1055
    ';'    shift, and go to state 1050
    '}'    shift, and go to state 1056

    optional_trailing_semicolon_cur_sqr  go to state 1057


State 864

  758 make_map_tuple: expr "=>" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1058
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 865

  738 optional_trailing_semicolon_cur_cur: ";}}" .

    $default  reduce using rule 738 (optional_trailing_semicolon_cur_cur)


State 866

  774 make_table: make_table ';' . make_map_tuple

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 667
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_map_tuple          go to state 1059
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 867

  737 optional_trailing_semicolon_cur_cur: '}' . '}'

    '}'  shift, and go to state 1060


State 868

  777 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur .

    $default  reduce using rule 777 (make_table_decl)


State 869

  246 expression_keyword: "keyword" '<' $@6 . type_declaration_no_options '>' $@7 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1061


State 870

  241 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 241 (expr_keyword)


State 871

  249 expression_keyword: "type function" '<' $@8 . type_declaration_no_options '>' $@9 '(' optional_expr_list ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1062


State 872

   31 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 31 (string_builder)


State 873

   30 string_builder_body: string_builder_body "{" . expr "}"

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1063
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 874

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   29 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 220
    STRING_CHARACTER_ESC  shift, and go to state 221

    STRING_CHARACTER      [reduce using rule 29 (string_builder_body)]
    STRING_CHARACTER_ESC  [reduce using rule 29 (string_builder_body)]
    $default              reduce using rule 29 (string_builder_body)


State 875

  414 expr: '(' expr ')' .

    $default  reduce using rule 414 (expr)


State 876

  361 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1064


State 877

  476 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1065


State 878

  365 func_addr_expr: '@' '@' '<' . $@20 type_declaration_no_options '>' $@21 func_addr_name
  368               | '@' '@' '<' . $@22 optional_function_argument_list optional_function_type '>' $@23 func_addr_name

    ':'       reduce using rule 366 ($@22)
    '>'       reduce using rule 366 ($@22)
    '('       reduce using rule 366 ($@22)
    $default  reduce using rule 363 ($@20)

    $@20  go to state 1066
    $@22  go to state 1067


State 879

  360 func_addr_name: name_in_namespace .

    $default  reduce using rule 360 (func_addr_name)


State 880

  362 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 362 (func_addr_expr)


State 881

  216 expression_block: '{' expressions '}' "finally" '{' . expressions '}'

    $default  reduce using rule 238 (expressions)

    expressions  go to state 1068


State 882

   72 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1069
    "elif"         shift, and go to state 1070
    "static_elif"  shift, and go to state 1071

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1072
    expression_else      go to state 1073


State 883

   74 expression_if_then_else: expression_if_one_liner "if" $@3 . expr expression_else_one_liner ';'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1074
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 884

  356 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'

    "$f"    shift, and go to state 850
    "name"  shift, and go to state 1075

    make_struct_fields  go to state 1076


State 885

  422 expr: name_in_namespace '(' ')' .

    $default  reduce using rule 422 (expr)


State 886

  307 expr_list: expr_list . ',' expr
  357 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  423 expr: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1077
    ')'  shift, and go to state 1078


State 887

  287 tuple_expansion_variable_declaration: "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  288                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr ';'

    "name"  shift, and go to state 1079

    tuple_expansion  go to state 1080


State 888

  290 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 290 (expression_let)


State 889

  289 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 289 (expression_let)


State 890

  321 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"  shift, and go to state 1081
    ":="  shift, and go to state 1082
    '='   shift, and go to state 1083
    '&'   shift, and go to state 1084

    capture_entry  go to state 1085
    capture_list   go to state 1086


State 891

  323 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 282

    $default  reduce using rule 118 (optional_function_argument_list)

    optional_function_argument_list  go to state 1087


State 892

  250 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 250 (expr_pipe)


State 893

  435 expr: expr "is" "type" . '<' $@26 type_declaration_no_options '>' $@27

    '<'  shift, and go to state 1088


State 894

  475 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1089


State 895

  437 expr: expr "is" "name" .

    $default  reduce using rule 437 (expr)


State 896

  436 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 436 (expr)


State 897

  441 expr: expr "as" "type" . '<' $@28 type_declaration '>' $@29

    '<'  shift, and go to state 1090


State 898

  473 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1091


State 899

  438 expr: expr "as" "name" .

    $default  reduce using rule 438 (expr)


State 900

  442 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 442 (expr)


State 901

  341 expr_assign: expr "+=" expr .
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 341 (expr_assign)


State 902

  342 expr_assign: expr "-=" expr .
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 342 (expr_assign)


State 903

  344 expr_assign: expr "/=" expr .
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 344 (expr_assign)


State 904

  343 expr_assign: expr "*=" expr .
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 343 (expr_assign)


State 905

  345 expr_assign: expr "%=" expr .
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 345 (expr_assign)


State 906

  335 expr_assign: expr "&=" expr .
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 335 (expr_assign)


State 907

  336 expr_assign: expr "|=" expr .
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 336 (expr_assign)


State 908

  337 expr_assign: expr "^=" expr .
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 337 (expr_assign)


State 909

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  388     | expr "<<" expr .
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 698
    "as"  shift, and go to state 699
    "++"  shift, and go to state 710
    "--"  shift, and go to state 711
    "->"  shift, and go to state 718
    "??"  shift, and go to state 720
    "?."  shift, and go to state 721
    "?["  shift, and go to state 722
    "<|"  shift, and go to state 723
    "|>"  shift, and go to state 724
    '-'   shift, and go to state 744
    '+'   shift, and go to state 745
    '*'   shift, and go to state 746
    '/'   shift, and go to state 747
    '%'   shift, and go to state 748
    '.'   shift, and go to state 749
    '['   shift, and go to state 750

    $default  reduce using rule 388 (expr)


State 910

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  389     | expr ">>" expr .
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 698
    "as"  shift, and go to state 699
    "++"  shift, and go to state 710
    "--"  shift, and go to state 711
    "->"  shift, and go to state 718
    "??"  shift, and go to state 720
    "?."  shift, and go to state 721
    "?["  shift, and go to state 722
    "<|"  shift, and go to state 723
    "|>"  shift, and go to state 724
    '-'   shift, and go to state 744
    '+'   shift, and go to state 745
    '*'   shift, and go to state 746
    '/'   shift, and go to state 747
    '%'   shift, and go to state 748
    '.'   shift, and go to state 749
    '['   shift, and go to state 750

    $default  reduce using rule 389 (expr)


State 911

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  401     | expr "<=" expr .
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 401 (expr)


State 912

  346 expr_assign: expr "<<=" expr .
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 346 (expr_assign)


State 913

  347 expr_assign: expr ">>=" expr .
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 347 (expr_assign)


State 914

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  402     | expr ">=" expr .
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 402 (expr)


State 915

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  399     | expr "==" expr .
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 399 (expr)


State 916

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  400     | expr "!=" expr .
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 400 (expr)


State 917

  358 expr_method_call: expr "->" "name" . '(' ')'
  359                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1092


State 918

  355 expr_assign_pipe: expr "<-" "$ <|" . expr_block

    '$'  shift, and go to state 488
    '@'  shift, and go to state 653
    '{'  shift, and go to state 284

    expression_block  go to state 504
    block_or_lambda   go to state 524
    expr_block        go to state 1093


State 919

  353 expr_assign_pipe: expr "<-" "@ <|" . expr_block

    '$'  shift, and go to state 488
    '@'  shift, and go to state 653
    '{'  shift, and go to state 284

    expression_block  go to state 504
    block_or_lambda   go to state 524
    expr_block        go to state 1094


State 920

  354 expr_assign_pipe: expr "<-" "@@ <|" . expr_block

    '$'  shift, and go to state 488
    '@'  shift, and go to state 653
    '{'  shift, and go to state 284

    expression_block  go to state 504
    block_or_lambda   go to state 524
    expr_block        go to state 1095


State 921

  333 expr_assign: expr "<-" expr .
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 333 (expr_assign)


State 922

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  431     | expr "??" expr .
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 698
    "as"  shift, and go to state 699
    "++"  shift, and go to state 710
    "--"  shift, and go to state 711
    "->"  shift, and go to state 718
    "??"  shift, and go to state 720
    "?."  shift, and go to state 721
    "?["  shift, and go to state 722
    "<|"  shift, and go to state 723
    "|>"  shift, and go to state 724
    '.'   shift, and go to state 749
    '['   shift, and go to state 750

    $default  reduce using rule 431 (expr)


State 923

  470 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1096


State 924

  419 expr: expr "?." "name" .

    $default  reduce using rule 419 (expr)


State 925

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  417     | expr "?[" expr . ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ']'    shift, and go to state 1097


State 926

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  455     | expr "<|" expr .
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 718
    "?."  shift, and go to state 721
    "?["  shift, and go to state 722
    '.'   shift, and go to state 749
    '['   shift, and go to state 750

    $default  reduce using rule 455 (expr)


State 927

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  456     | expr "|>" expr .
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 718
    "?."  shift, and go to state 721
    "?["  shift, and go to state 722
    '.'   shift, and go to state 749
    '['   shift, and go to state 750

    $default  reduce using rule 456 (expr)


State 928

  424 expr: basic_type_declaration . '(' ')'
  425     | basic_type_declaration . '(' expr_list ')'
  457     | expr "|>" basic_type_declaration .

    '('  shift, and go to state 751

    $default  reduce using rule 457 (expr)


State 929

  334 expr_assign: expr ":=" expr .
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 334 (expr_assign)


State 930

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  390     | expr "<<<" expr .
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 698
    "as"  shift, and go to state 699
    "++"  shift, and go to state 710
    "--"  shift, and go to state 711
    "->"  shift, and go to state 718
    "??"  shift, and go to state 720
    "?."  shift, and go to state 721
    "?["  shift, and go to state 722
    "<|"  shift, and go to state 723
    "|>"  shift, and go to state 724
    '-'   shift, and go to state 744
    '+'   shift, and go to state 745
    '*'   shift, and go to state 746
    '/'   shift, and go to state 747
    '%'   shift, and go to state 748
    '.'   shift, and go to state 749
    '['   shift, and go to state 750

    $default  reduce using rule 390 (expr)


State 931

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  391     | expr ">>>" expr .
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 698
    "as"  shift, and go to state 699
    "++"  shift, and go to state 710
    "--"  shift, and go to state 711
    "->"  shift, and go to state 718
    "??"  shift, and go to state 720
    "?."  shift, and go to state 721
    "?["  shift, and go to state 722
    "<|"  shift, and go to state 723
    "|>"  shift, and go to state 724
    '-'   shift, and go to state 744
    '+'   shift, and go to state 745
    '*'   shift, and go to state 746
    '/'   shift, and go to state 747
    '%'   shift, and go to state 748
    '.'   shift, and go to state 749
    '['   shift, and go to state 750

    $default  reduce using rule 391 (expr)


State 932

  348 expr_assign: expr "<<<=" expr .
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 348 (expr_assign)


State 933

  349 expr_assign: expr ">>>=" expr .
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 349 (expr_assign)


State 934

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  406     | expr "&&" expr .
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 406 (expr)


State 935

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  407     | expr "||" expr .
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "^^"   shift, and go to state 732
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 407 (expr)


State 936

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  408     | expr "^^" expr .
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 408 (expr)


State 937

  338 expr_assign: expr "&&=" expr .
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 338 (expr_assign)


State 938

  339 expr_assign: expr "||=" expr .
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 339 (expr_assign)


State 939

  340 expr_assign: expr "^^=" expr .
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 340 (expr_assign)


State 940

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  409     | expr ".." expr .
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    ".."  error (nonassociative)

    $default  reduce using rule 409 (expr)


State 941

  352 expr_assign_pipe: expr '=' "$ <|" . expr_block

    '$'  shift, and go to state 488
    '@'  shift, and go to state 653
    '{'  shift, and go to state 284

    expression_block  go to state 504
    block_or_lambda   go to state 524
    expr_block        go to state 1098


State 942

  350 expr_assign_pipe: expr '=' "@ <|" . expr_block

    '$'  shift, and go to state 488
    '@'  shift, and go to state 653
    '{'  shift, and go to state 284

    expression_block  go to state 504
    block_or_lambda   go to state 524
    expr_block        go to state 1099


State 943

  351 expr_assign_pipe: expr '=' "@@ <|" . expr_block

    '$'  shift, and go to state 488
    '@'  shift, and go to state 653
    '{'  shift, and go to state 284

    expression_block  go to state 504
    block_or_lambda   go to state 524
    expr_block        go to state 1100


State 944

  332 expr_assign: expr '=' expr .
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 332 (expr_assign)


State 945

  443 expr: expr '?' "as" . "name"
  446     | expr '?' "as" . "type" '<' $@30 type_declaration '>' $@31
  447     | expr '?' "as" . basic_type_declaration
  474 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1101
    "bool"      shift, and go to state 310
    "void"      shift, and go to state 311
    "string"    shift, and go to state 312
    "int"       shift, and go to state 314
    "int2"      shift, and go to state 315
    "int3"      shift, and go to state 316
    "int4"      shift, and go to state 317
    "uint"      shift, and go to state 318
    "bitfield"  shift, and go to state 453
    "uint2"     shift, and go to state 320
    "uint3"     shift, and go to state 321
    "uint4"     shift, and go to state 322
    "float"     shift, and go to state 323
    "float2"    shift, and go to state 324
    "float3"    shift, and go to state 325
    "float4"    shift, and go to state 326
    "range"     shift, and go to state 327
    "urange"    shift, and go to state 328
    "range64"   shift, and go to state 329
    "urange64"  shift, and go to state 330
    "int64"     shift, and go to state 332
    "uint64"    shift, and go to state 333
    "double"    shift, and go to state 334
    "int8"      shift, and go to state 337
    "uint8"     shift, and go to state 338
    "int16"     shift, and go to state 339
    "uint16"    shift, and go to state 340
    "$f"        shift, and go to state 1102
    "name"      shift, and go to state 1103

    basic_type_declaration  go to state 1104


State 946

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  432     | expr '?' expr . ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    ':'    shift, and go to state 1105
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750


State 947

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  404     | expr '|' expr .
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 404 (expr)


State 948

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  405     | expr '^' expr .
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 405 (expr)


State 949

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  403     | expr '&' expr .
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 403 (expr)


State 950

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  397     | expr '<' expr .
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 397 (expr)


State 951

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  398     | expr '>' expr .
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 398 (expr)


State 952

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  393     | expr '-' expr .
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 698
    "as"  shift, and go to state 699
    "++"  shift, and go to state 710
    "--"  shift, and go to state 711
    "->"  shift, and go to state 718
    "??"  shift, and go to state 720
    "?."  shift, and go to state 721
    "?["  shift, and go to state 722
    "<|"  shift, and go to state 723
    "|>"  shift, and go to state 724
    '*'   shift, and go to state 746
    '/'   shift, and go to state 747
    '%'   shift, and go to state 748
    '.'   shift, and go to state 749
    '['   shift, and go to state 750

    $default  reduce using rule 393 (expr)


State 953

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  392     | expr '+' expr .
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 698
    "as"  shift, and go to state 699
    "++"  shift, and go to state 710
    "--"  shift, and go to state 711
    "->"  shift, and go to state 718
    "??"  shift, and go to state 720
    "?."  shift, and go to state 721
    "?["  shift, and go to state 722
    "<|"  shift, and go to state 723
    "|>"  shift, and go to state 724
    '*'   shift, and go to state 746
    '/'   shift, and go to state 747
    '%'   shift, and go to state 748
    '.'   shift, and go to state 749
    '['   shift, and go to state 750

    $default  reduce using rule 392 (expr)


State 954

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  394     | expr '*' expr .
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 698
    "as"  shift, and go to state 699
    "++"  shift, and go to state 710
    "--"  shift, and go to state 711
    "->"  shift, and go to state 718
    "??"  shift, and go to state 720
    "?."  shift, and go to state 721
    "?["  shift, and go to state 722
    "<|"  shift, and go to state 723
    "|>"  shift, and go to state 724
    '.'   shift, and go to state 749
    '['   shift, and go to state 750

    $default  reduce using rule 394 (expr)


State 955

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  395     | expr '/' expr .
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 698
    "as"  shift, and go to state 699
    "++"  shift, and go to state 710
    "--"  shift, and go to state 711
    "->"  shift, and go to state 718
    "??"  shift, and go to state 720
    "?."  shift, and go to state 721
    "?["  shift, and go to state 722
    "<|"  shift, and go to state 723
    "|>"  shift, and go to state 724
    '.'   shift, and go to state 749
    '['   shift, and go to state 750

    $default  reduce using rule 395 (expr)


State 956

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  396     | expr '%' expr .
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 698
    "as"  shift, and go to state 699
    "++"  shift, and go to state 710
    "--"  shift, and go to state 711
    "->"  shift, and go to state 718
    "??"  shift, and go to state 720
    "?."  shift, and go to state 721
    "?["  shift, and go to state 722
    "<|"  shift, and go to state 723
    "|>"  shift, and go to state 724
    '.'   shift, and go to state 749
    '['   shift, and go to state 750

    $default  reduce using rule 396 (expr)


State 957

  420 expr: expr '.' "?." . "name"
  472 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1106
    "name"  shift, and go to state 1107


State 958

  418 expr: expr '.' "?[" . expr ']'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1108
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 959

  469 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1109


State 960

  369 expr_field: expr '.' "name" .

    $default  reduce using rule 369 (expr_field)


State 961

  370 expr_field: expr '.' '.' . "name"
  471 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1110
    "name"  shift, and go to state 1111


State 962

  416 expr: expr '.' '[' . expr ']'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1112
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 963

  373 expr_field: expr '.' $@24 . error $@25

    error  shift, and go to state 1113


State 964

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  415     | expr '[' expr . ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ']'    shift, and go to state 1114


State 965

  424 expr: basic_type_declaration '(' ')' .

    $default  reduce using rule 424 (expr)


State 966

  307 expr_list: expr_list . ',' expr
  425 expr: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 817
    ')'  shift, and go to state 1115


State 967

  573 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@41 enum_list $@42 . '}'

    '}'  shift, and go to state 1116


State 968

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'
  553 enum_list: enum_list "name" '=' expr . ';'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ';'    shift, and go to state 1117


State 969

  115 annotation_list: annotation_list . ',' annotation_declaration
  117 optional_annotation_list: '[' annotation_list . ']'
  497 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' ';'

    ','  shift, and go to state 107
    ']'  shift, and go to state 1118


State 970

  494 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@33 function_declaration_header ';'
  496                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@34 function_declaration_header expression_block

    "public"   shift, and go to state 1119
    "private"  shift, and go to state 1120

    $default  reduce using rule 484 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1121


State 971

  489 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1122

    $default  reduce using rule 487 (optional_static_member_variable)

    optional_static_member_variable  go to state 1123


State 972

  492 struct_variable_declaration_list: struct_variable_declaration_list $@32 structure_variable_declaration . ';'

    ';'  shift, and go to state 1124


State 973

  533 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 533 (let_variable_name_with_pos_list)


State 974

  536 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 536 (let_variable_declaration)


State 975

  331 expr_assign: expr .
  332            | expr . '=' expr
  333            | expr . "<-" expr
  334            | expr . ":=" expr
  335            | expr . "&=" expr
  336            | expr . "|=" expr
  337            | expr . "^=" expr
  338            | expr . "&&=" expr
  339            | expr . "||=" expr
  340            | expr . "^^=" expr
  341            | expr . "+=" expr
  342            | expr . "-=" expr
  343            | expr . "*=" expr
  344            | expr . "/=" expr
  345            | expr . "%=" expr
  346            | expr . "<<=" expr
  347            | expr . ">>=" expr
  348            | expr . "<<<=" expr
  349            | expr . ">>>=" expr
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'
  535 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 698
    "as"    shift, and go to state 699
    "+="    shift, and go to state 700
    "-="    shift, and go to state 701
    "/="    shift, and go to state 702
    "*="    shift, and go to state 703
    "%="    shift, and go to state 704
    "&="    shift, and go to state 705
    "|="    shift, and go to state 706
    "^="    shift, and go to state 707
    "<<"    shift, and go to state 708
    ">>"    shift, and go to state 709
    "++"    shift, and go to state 710
    "--"    shift, and go to state 711
    "<="    shift, and go to state 712
    "<<="   shift, and go to state 713
    ">>="   shift, and go to state 714
    ">="    shift, and go to state 715
    "=="    shift, and go to state 716
    "!="    shift, and go to state 717
    "->"    shift, and go to state 718
    "<-"    shift, and go to state 818
    "??"    shift, and go to state 720
    "?."    shift, and go to state 721
    "?["    shift, and go to state 722
    "<|"    shift, and go to state 723
    "|>"    shift, and go to state 724
    ":="    shift, and go to state 725
    "<<<"   shift, and go to state 726
    ">>>"   shift, and go to state 727
    "<<<="  shift, and go to state 728
    ">>>="  shift, and go to state 729
    "&&"    shift, and go to state 730
    "||"    shift, and go to state 731
    "^^"    shift, and go to state 732
    "&&="   shift, and go to state 733
    "||="   shift, and go to state 734
    "^^="   shift, and go to state 735
    ".."    shift, and go to state 736
    '='     shift, and go to state 819
    '?'     shift, and go to state 738
    '|'     shift, and go to state 739
    '^'     shift, and go to state 740
    '&'     shift, and go to state 741
    '<'     shift, and go to state 742
    '>'     shift, and go to state 743
    '-'     shift, and go to state 744
    '+'     shift, and go to state 745
    '*'     shift, and go to state 746
    '/'     shift, and go to state 747
    '%'     shift, and go to state 748
    '.'     shift, and go to state 749
    '['     shift, and go to state 750
    ';'     shift, and go to state 1125

    $default  reduce using rule 331 (expr_assign)


State 976

  537 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 537 (let_variable_declaration)


State 977

  647 type_declaration_no_options: "type" '<' $@47 type_declaration '>' . $@48

    $default  reduce using rule 646 ($@48)

    $@48  go to state 1126


State 978

  668 type_declaration_no_options: "array" '<' $@51 type_declaration '>' . $@52

    $default  reduce using rule 667 ($@52)

    $@52  go to state 1127


State 979

  671 type_declaration_no_options: "table" '<' $@53 table_type_pair '>' . $@54

    $default  reduce using rule 670 ($@54)

    $@54  go to state 1128


State 980

  638 table_type_pair: type_declaration ';' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1129


State 981

  674 type_declaration_no_options: "iterator" '<' $@55 type_declaration '>' . $@56

    $default  reduce using rule 673 ($@56)

    $@56  go to state 1130


State 982

  664 type_declaration_no_options: "smart_ptr" '<' $@49 type_declaration '>' . $@50

    $default  reduce using rule 663 ($@50)

    $@50  go to state 1131


State 983

  636 bitfield_type_declaration: "bitfield" '<' $@45 bitfield_bits '>' . $@46

    $default  reduce using rule 635 ($@46)

    $@46  go to state 1132


State 984

  630 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 1133


State 985

  678 type_declaration_no_options: "block" '<' $@57 type_declaration '>' . $@58

    $default  reduce using rule 677 ($@58)

    $@58  go to state 1134


State 986

  681 type_declaration_no_options: "block" '<' $@59 optional_function_argument_list optional_function_type . '>' $@60

    '>'  shift, and go to state 1135


State 987

  685 type_declaration_no_options: "function" '<' $@61 type_declaration '>' . $@62

    $default  reduce using rule 684 ($@62)

    $@62  go to state 1136


State 988

  688 type_declaration_no_options: "function" '<' $@63 optional_function_argument_list optional_function_type . '>' $@64

    '>'  shift, and go to state 1137


State 989

  692 type_declaration_no_options: "lambda" '<' $@65 type_declaration '>' . $@66

    $default  reduce using rule 691 ($@66)

    $@66  go to state 1138


State 990

  695 type_declaration_no_options: "lambda" '<' $@67 optional_function_argument_list optional_function_type . '>' $@68

    '>'  shift, and go to state 1139


State 991

  698 type_declaration_no_options: "tuple" '<' $@69 tuple_type_list '>' . $@70

    $default  reduce using rule 697 ($@70)

    $@70  go to state 1140


State 992

  506 tuple_type_list: tuple_type_list ';' . tuple_type

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 591
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    tuple_type                   go to state 1141
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 594


State 993

  701 type_declaration_no_options: "variant" '<' $@71 variant_type_list '>' . $@72

    $default  reduce using rule 700 ($@72)

    $@72  go to state 1142


State 994

  512 variant_type_list: variant_type_list ';' . variant_type

    "name"  shift, and go to state 596

    variant_type  go to state 1143


State 995

  649 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 649 (type_declaration_no_options)


State 996

  504 tuple_type: "name" ':' type_declaration .
  703 type_declaration: type_declaration . '|' type_declaration_no_options
  704                 | type_declaration . '|' '#'

    '|'  shift, and go to state 408

    $default  reduce using rule 504 (tuple_type)


State 997

  510 variant_type: "name" ':' type_declaration .
  703 type_declaration: type_declaration . '|' type_declaration_no_options
  704                 | type_declaration . '|' '#'

    '|'  shift, and go to state 408

    $default  reduce using rule 510 (variant_type)


State 998

  588 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 588 (variable_name_with_pos_list)


State 999

  591 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1144


State 1000

  521 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1145
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1001

   75 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list . ';' expression_block
  307 expr_list: expr_list . ',' expr

    ','  shift, and go to state 817
    ';'  shift, and go to state 1146


State 1002

  261 new_type_declaration: '<' $@10 type_declaration . '>' $@11
  703 type_declaration: type_declaration . '|' type_declaration_no_options
  704                 | type_declaration . '|' '#'

    '|'  shift, and go to state 408
    '>'  shift, and go to state 1147


State 1003

  264 expr_new: "new" new_type_declaration '(' ')' .

    $default  reduce using rule 264 (expr_new)


State 1004

  265 expr_new: "new" new_type_declaration '(' expr_list . ')'
  307 expr_list: expr_list . ',' expr

    ','  shift, and go to state 817
    ')'  shift, and go to state 1148


State 1005

  304 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  305               | "typeinfo" '(' name_in_namespace '<' . "name" ';' "name" '>' expr ')'

    "name"  shift, and go to state 1149


State 1006

  303 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ')'    shift, and go to state 1150


State 1007

  302 expr_type_decl: "type" '<' $@18 type_declaration . '>' $@19
  703 type_declaration: type_declaration . '|' type_declaration_no_options
  704                 | type_declaration . '|' '#'

    '|'  shift, and go to state 408
    '>'  shift, and go to state 1151


State 1008

  643 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  644                            | type_declaration_no_options . '[' ']'
  650                            | type_declaration_no_options . '-' '[' ']'
  651                            | type_declaration_no_options . "explicit"
  652                            | type_declaration_no_options . "const"
  653                            | type_declaration_no_options . '-' "const"
  654                            | type_declaration_no_options . '&'
  655                            | type_declaration_no_options . '-' '&'
  656                            | type_declaration_no_options . '#'
  657                            | type_declaration_no_options . "implicit"
  658                            | type_declaration_no_options . '-' '#'
  659                            | type_declaration_no_options . "==" "const"
  660                            | type_declaration_no_options . "==" '&'
  661                            | type_declaration_no_options . '?'
  665                            | type_declaration_no_options . "??"
  768 make_dim_decl: "array" '<' $@85 type_declaration_no_options . '>' $@86 '(' expr_list ')'

    "const"     shift, and go to state 398
    "implicit"  shift, and go to state 399
    "explicit"  shift, and go to state 400
    "=="        shift, and go to state 401
    "??"        shift, and go to state 402
    '?'         shift, and go to state 403
    '&'         shift, and go to state 404
    '>'         shift, and go to state 1152
    '-'         shift, and go to state 405
    '['         shift, and go to state 406
    '#'         shift, and go to state 407


State 1009

  765 make_dim_decl: "array" '(' expr_list ')' .

    $default  reduce using rule 765 (make_dim_decl)


State 1010

  307 expr_list: expr_list ',' expr .
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 307 (expr_list)


State 1011

  280 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 280 (expression_try_catch)


State 1012

  779 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' expr_map_tuple_list ')'

    '('  shift, and go to state 1153


State 1013

  780 make_table_decl: "table" '<' type_declaration_no_options ';' . type_declaration_no_options '>' '(' expr_map_tuple_list ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1154


State 1014

  776 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 667
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_map_tuple          go to state 1155
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1015

  778 make_table_decl: "table" '(' expr_map_tuple_list ')' .

    $default  reduce using rule 778 (make_table_decl)


State 1016

  427 expr: "deref" '(' expr ')' .

    $default  reduce using rule 427 (expr)


State 1017

   80 expression_with_alias: "assume" "name" '=' $@4 . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1156
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1018

  293 expr_cast: "cast" '<' $@12 type_declaration_no_options . '>' $@13 expr
  643 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  644                            | type_declaration_no_options . '[' ']'
  650                            | type_declaration_no_options . '-' '[' ']'
  651                            | type_declaration_no_options . "explicit"
  652                            | type_declaration_no_options . "const"
  653                            | type_declaration_no_options . '-' "const"
  654                            | type_declaration_no_options . '&'
  655                            | type_declaration_no_options . '-' '&'
  656                            | type_declaration_no_options . '#'
  657                            | type_declaration_no_options . "implicit"
  658                            | type_declaration_no_options . '-' '#'
  659                            | type_declaration_no_options . "==" "const"
  660                            | type_declaration_no_options . "==" '&'
  661                            | type_declaration_no_options . '?'
  665                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 398
    "implicit"  shift, and go to state 399
    "explicit"  shift, and go to state 400
    "=="        shift, and go to state 401
    "??"        shift, and go to state 402
    '?'         shift, and go to state 403
    '&'         shift, and go to state 404
    '>'         shift, and go to state 1157
    '-'         shift, and go to state 405
    '['         shift, and go to state 406
    '#'         shift, and go to state 407


State 1019

  296 expr_cast: "upcast" '<' $@14 type_declaration_no_options . '>' $@15 expr
  643 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  644                            | type_declaration_no_options . '[' ']'
  650                            | type_declaration_no_options . '-' '[' ']'
  651                            | type_declaration_no_options . "explicit"
  652                            | type_declaration_no_options . "const"
  653                            | type_declaration_no_options . '-' "const"
  654                            | type_declaration_no_options . '&'
  655                            | type_declaration_no_options . '-' '&'
  656                            | type_declaration_no_options . '#'
  657                            | type_declaration_no_options . "implicit"
  658                            | type_declaration_no_options . '-' '#'
  659                            | type_declaration_no_options . "==" "const"
  660                            | type_declaration_no_options . "==" '&'
  661                            | type_declaration_no_options . '?'
  665                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 398
    "implicit"  shift, and go to state 399
    "explicit"  shift, and go to state 400
    "=="        shift, and go to state 401
    "??"        shift, and go to state 402
    '?'         shift, and go to state 403
    '&'         shift, and go to state 404
    '>'         shift, and go to state 1158
    '-'         shift, and go to state 405
    '['         shift, and go to state 406
    '#'         shift, and go to state 407


State 1020

  428 expr: "addr" '(' expr ')' .

    $default  reduce using rule 428 (expr)


State 1021

  299 expr_cast: "reinterpret" '<' $@16 type_declaration_no_options . '>' $@17 expr
  643 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  644                            | type_declaration_no_options . '[' ']'
  650                            | type_declaration_no_options . '-' '[' ']'
  651                            | type_declaration_no_options . "explicit"
  652                            | type_declaration_no_options . "const"
  653                            | type_declaration_no_options . '-' "const"
  654                            | type_declaration_no_options . '&'
  655                            | type_declaration_no_options . '-' '&'
  656                            | type_declaration_no_options . '#'
  657                            | type_declaration_no_options . "implicit"
  658                            | type_declaration_no_options . '-' '#'
  659                            | type_declaration_no_options . "==" "const"
  660                            | type_declaration_no_options . "==" '&'
  661                            | type_declaration_no_options . '?'
  665                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 398
    "implicit"  shift, and go to state 399
    "explicit"  shift, and go to state 400
    "=="        shift, and go to state 401
    "??"        shift, and go to state 402
    '?'         shift, and go to state 403
    '&'         shift, and go to state 404
    '>'         shift, and go to state 1159
    '-'         shift, and go to state 405
    '['         shift, and go to state 406
    '#'         shift, and go to state 407


State 1022

  459 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 459 (expr)


State 1023

  643 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  644                            | type_declaration_no_options . '[' ']'
  650                            | type_declaration_no_options . '-' '[' ']'
  651                            | type_declaration_no_options . "explicit"
  652                            | type_declaration_no_options . "const"
  653                            | type_declaration_no_options . '-' "const"
  654                            | type_declaration_no_options . '&'
  655                            | type_declaration_no_options . '-' '&'
  656                            | type_declaration_no_options . '#'
  657                            | type_declaration_no_options . "implicit"
  658                            | type_declaration_no_options . '-' '#'
  659                            | type_declaration_no_options . "==" "const"
  660                            | type_declaration_no_options . "==" '&'
  661                            | type_declaration_no_options . '?'
  665                            | type_declaration_no_options . "??"
  772 make_dim_decl: "fixed_array" '<' $@87 type_declaration_no_options . '>' $@88 '(' expr_list ')'

    "const"     shift, and go to state 398
    "implicit"  shift, and go to state 399
    "explicit"  shift, and go to state 400
    "=="        shift, and go to state 401
    "??"        shift, and go to state 402
    '?'         shift, and go to state 403
    '&'         shift, and go to state 404
    '>'         shift, and go to state 1160
    '-'         shift, and go to state 405
    '['         shift, and go to state 406
    '#'         shift, and go to state 407


State 1024

  769 make_dim_decl: "fixed_array" '(' expr_list ')' .

    $default  reduce using rule 769 (make_dim_decl)


State 1025

  760 make_tuple_call: "tuple" '(' expr_list ')' .

    $default  reduce using rule 760 (make_tuple_call)


State 1026

  429 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  430     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "[["  shift, and go to state 890

    $default  reduce using rule 320 (optional_capture_list)

    optional_capture_list  go to state 1161


State 1027

  461 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 461 (expr_mtag)


State 1028

  462 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 462 (expr_mtag)


State 1029

  463 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 463 (expr_mtag)


State 1030

  464 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 464 (expr_mtag)


State 1031

  465 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 465 (expr_mtag)


State 1032

  467 expr_mtag: "$c" '(' expr ')' . '(' ')'
  468          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1162


State 1033

  783 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where ']' ']'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    expr_list               go to state 1163
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 789
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1034

  736 optional_block: "where" expr_block .

    $default  reduce using rule 736 (optional_block)


State 1035

  729 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  730                   | "$f" '(' . expr ')' ":=" expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1164
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1036

  726 make_struct_fields: "name" ":=" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1165
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1037

  725 make_struct_fields: "name" copy_or_move . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1166
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1038

  751 make_struct_decl: "[[" type_declaration_no_options '(' ')' . optional_block optional_trailing_delim_sqr_sqr
  752                 | "[[" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 849
    "$f"     shift, and go to state 850
    "name"   shift, and go to state 1075

    $default  reduce using rule 735 (optional_block)

    make_struct_fields  go to state 855
    make_struct_dim     go to state 1167
    optional_block      go to state 1168


State 1039

  756 make_tuple: expr "=>" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1169
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1040

  727 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  728                   | make_struct_fields ',' . "name" ":=" expr
  731                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  732                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1170
    "name"  shift, and go to state 1171


State 1041

  734 make_struct_dim: make_struct_dim ';' . make_struct_fields

    "$f"    shift, and go to state 850
    "name"  shift, and go to state 1075

    make_struct_fields  go to state 1172


State 1042

  749 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1043
    ",]]"  shift, and go to state 1044
    ']'    shift, and go to state 1045

    optional_trailing_delim_sqr_sqr  go to state 1173


State 1043

  744 optional_trailing_delim_sqr_sqr: ";]]" .

    $default  reduce using rule 744 (optional_trailing_delim_sqr_sqr)


State 1044

  745 optional_trailing_delim_sqr_sqr: ",]]" .

    $default  reduce using rule 745 (optional_trailing_delim_sqr_sqr)


State 1045

  743 optional_trailing_delim_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1174


State 1046

  750 make_struct_decl: "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 750 (make_struct_decl)


State 1047

  757 make_tuple: make_tuple ',' . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1175
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1048

  742 optional_trailing_semicolon_sqr_sqr: ";]]" .

    $default  reduce using rule 742 (optional_trailing_semicolon_sqr_sqr)


State 1049

  741 optional_trailing_semicolon_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1176


State 1050

  762 make_dim: make_dim ';' . make_tuple

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 854
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple              go to state 1177
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1051

  763 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr .

    $default  reduce using rule 763 (make_dim_decl)


State 1052

  784 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where '}' ']'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    expr_list               go to state 1178
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 789
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1053

  754 make_struct_decl: "[{" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "$f"    shift, and go to state 850
    "name"  shift, and go to state 1075

    make_struct_fields  go to state 855
    make_struct_dim     go to state 1179


State 1054

  753 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    ";}]"  shift, and go to state 1180
    ",}]"  shift, and go to state 1181
    '}'    shift, and go to state 1182

    optional_trailing_delim_cur_sqr  go to state 1183


State 1055

  740 optional_trailing_semicolon_cur_sqr: ";}]" .

    $default  reduce using rule 740 (optional_trailing_semicolon_cur_sqr)


State 1056

  739 optional_trailing_semicolon_cur_sqr: '}' . ']'

    ']'  shift, and go to state 1184


State 1057

  764 make_dim_decl: "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr .

    $default  reduce using rule 764 (make_dim_decl)


State 1058

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'
  758 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 758 (make_map_tuple)


State 1059

  774 make_table: make_table ';' make_map_tuple .

    $default  reduce using rule 774 (make_table)


State 1060

  737 optional_trailing_semicolon_cur_cur: '}' '}' .

    $default  reduce using rule 737 (optional_trailing_semicolon_cur_cur)


State 1061

  246 expression_keyword: "keyword" '<' $@6 type_declaration_no_options . '>' $@7 expr
  643 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  644                            | type_declaration_no_options . '[' ']'
  650                            | type_declaration_no_options . '-' '[' ']'
  651                            | type_declaration_no_options . "explicit"
  652                            | type_declaration_no_options . "const"
  653                            | type_declaration_no_options . '-' "const"
  654                            | type_declaration_no_options . '&'
  655                            | type_declaration_no_options . '-' '&'
  656                            | type_declaration_no_options . '#'
  657                            | type_declaration_no_options . "implicit"
  658                            | type_declaration_no_options . '-' '#'
  659                            | type_declaration_no_options . "==" "const"
  660                            | type_declaration_no_options . "==" '&'
  661                            | type_declaration_no_options . '?'
  665                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 398
    "implicit"  shift, and go to state 399
    "explicit"  shift, and go to state 400
    "=="        shift, and go to state 401
    "??"        shift, and go to state 402
    '?'         shift, and go to state 403
    '&'         shift, and go to state 404
    '>'         shift, and go to state 1185
    '-'         shift, and go to state 405
    '['         shift, and go to state 406
    '#'         shift, and go to state 407


State 1062

  249 expression_keyword: "type function" '<' $@8 type_declaration_no_options . '>' $@9 '(' optional_expr_list ')'
  643 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  644                            | type_declaration_no_options . '[' ']'
  650                            | type_declaration_no_options . '-' '[' ']'
  651                            | type_declaration_no_options . "explicit"
  652                            | type_declaration_no_options . "const"
  653                            | type_declaration_no_options . '-' "const"
  654                            | type_declaration_no_options . '&'
  655                            | type_declaration_no_options . '-' '&'
  656                            | type_declaration_no_options . '#'
  657                            | type_declaration_no_options . "implicit"
  658                            | type_declaration_no_options . '-' '#'
  659                            | type_declaration_no_options . "==" "const"
  660                            | type_declaration_no_options . "==" '&'
  661                            | type_declaration_no_options . '?'
  665                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 398
    "implicit"  shift, and go to state 399
    "explicit"  shift, and go to state 400
    "=="        shift, and go to state 401
    "??"        shift, and go to state 402
    '?'         shift, and go to state 403
    '&'         shift, and go to state 404
    '>'         shift, and go to state 1186
    '-'         shift, and go to state 405
    '['         shift, and go to state 406
    '#'         shift, and go to state 407


State 1063

   30 string_builder_body: string_builder_body "{" expr . "}"
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    "}"    shift, and go to state 1187
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750


State 1064

  361 func_addr_name: "$i" '(' . expr ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1188
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1065

  476 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1189
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1066

  365 func_addr_expr: '@' '@' '<' $@20 . type_declaration_no_options '>' $@21 func_addr_name

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1190


State 1067

  368 func_addr_expr: '@' '@' '<' $@22 . optional_function_argument_list optional_function_type '>' $@23 func_addr_name

    '('  shift, and go to state 282

    $default  reduce using rule 118 (optional_function_argument_list)

    optional_function_argument_list  go to state 1191


State 1068

  216 expression_block: '{' expressions '}' "finally" '{' expressions . '}'
  239 expressions: expressions . expression_any
  240            | expressions . error

    error                             shift, and go to state 423
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 424
    "if"                              shift, and go to state 425
    "static_if"                       shift, and go to state 426
    "for"                             shift, and go to state 427
    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "return"                          shift, and go to state 434
    "null"                            shift, and go to state 435
    "break"                           shift, and go to state 436
    "try"                             shift, and go to state 437
    "table"                           shift, and go to state 438
    "delete"                          shift, and go to state 439
    "deref"                           shift, and go to state 440
    "with"                            shift, and go to state 441
    "assume"                          shift, and go to state 442
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 445
    "continue"                        shift, and go to state 446
    "pass"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 448
    "label"                           shift, and go to state 449
    "goto"                            shift, and go to state 450
    "unsafe"                          shift, and go to state 451
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "yield"                           shift, and go to state 456
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "$ <|"                            shift, and go to state 459
    "@ <|"                            shift, and go to state 460
    "@@ <|"                           shift, and go to state 461
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 479
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    ';'                               shift, and go to state 490
    '{'                               shift, and go to state 284
    '}'                               shift, and go to state 1192

    string_builder             go to state 492
    expr_reader                go to state 493
    expression_label           go to state 494
    expression_goto            go to state 495
    if_or_static_if            go to state 496
    expression_if_one_liner    go to state 497
    expression_if_then_else    go to state 498
    expression_for_loop        go to state 499
    expression_unsafe          go to state 500
    expression_while_loop      go to state 501
    expression_with            go to state 502
    expression_with_alias      go to state 503
    expression_block           go to state 504
    expression_any             go to state 505
    expr_keyword               go to state 506
    expression_keyword         go to state 507
    expr_pipe                  go to state 508
    name_in_namespace          go to state 509
    expression_delete          go to state 510
    expr_new                   go to state 511
    expression_break           go to state 512
    expression_continue        go to state 513
    expression_return_no_pipe  go to state 514
    expression_return          go to state 515
    expression_yield_no_pipe   go to state 516
    expression_yield           go to state 517
    expression_try_catch       go to state 518
    kwd_let                    go to state 519
    expression_let             go to state 520
    expr_cast                  go to state 521
    expr_type_decl             go to state 522
    expr_type_info             go to state 523
    block_or_lambda            go to state 524
    expr_block                 go to state 525
    expr_numeric_const         go to state 526
    expr_assign                go to state 527
    expr_assign_pipe           go to state 528
    expr_named_call            go to state 529
    expr_method_call           go to state 530
    func_addr_expr             go to state 531
    expr_field                 go to state 532
    expr                       go to state 533
    expr_mtag                  go to state 534
    basic_type_declaration     go to state 535
    make_decl                  go to state 536
    make_struct_decl           go to state 537
    make_tuple_call            go to state 538
    make_dim_decl              go to state 539
    make_table_decl            go to state 540
    array_comprehension        go to state 541


State 1069

   60 expression_else: "else" . expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 1193


State 1070

   57 elif_or_static_elif: "elif" .

    $default  reduce using rule 57 (elif_or_static_elif)


State 1071

   58 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 58 (elif_or_static_elif)


State 1072

   61 expression_else: elif_or_static_elif . expr expression_block expression_else

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1194
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1073

   72 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 72 (expression_if_then_else)


State 1074

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr . expression_else_one_liner ';'
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1195
    "is"    shift, and go to state 698
    "as"    shift, and go to state 699
    "<<"    shift, and go to state 708
    ">>"    shift, and go to state 709
    "++"    shift, and go to state 710
    "--"    shift, and go to state 711
    "<="    shift, and go to state 712
    ">="    shift, and go to state 715
    "=="    shift, and go to state 716
    "!="    shift, and go to state 717
    "->"    shift, and go to state 718
    "??"    shift, and go to state 720
    "?."    shift, and go to state 721
    "?["    shift, and go to state 722
    "<|"    shift, and go to state 723
    "|>"    shift, and go to state 724
    "<<<"   shift, and go to state 726
    ">>>"   shift, and go to state 727
    "&&"    shift, and go to state 730
    "||"    shift, and go to state 731
    "^^"    shift, and go to state 732
    ".."    shift, and go to state 736
    '?'     shift, and go to state 738
    '|'     shift, and go to state 739
    '^'     shift, and go to state 740
    '&'     shift, and go to state 741
    '<'     shift, and go to state 742
    '>'     shift, and go to state 743
    '-'     shift, and go to state 744
    '+'     shift, and go to state 745
    '*'     shift, and go to state 746
    '/'     shift, and go to state 747
    '%'     shift, and go to state 748
    '.'     shift, and go to state 749
    '['     shift, and go to state 750

    $default  reduce using rule 64 (expression_else_one_liner)

    expression_else_one_liner  go to state 1196


State 1075

  725 make_struct_fields: "name" . copy_or_move expr
  726                   | "name" . ":=" expr

    "<-"  shift, and go to state 604
    ":="  shift, and go to state 1036
    '='   shift, and go to state 606

    copy_or_move  go to state 1037


State 1076

  356 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  727 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  728                   | make_struct_fields . ',' "name" ":=" expr
  731                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  732                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1040
    ']'  shift, and go to state 1197


State 1077

  307 expr_list: expr_list ',' . expr
  357 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '['                               shift, and go to state 1198
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1010
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1078

  423 expr: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 423 (expr)


State 1079

  285 tuple_expansion: "name" .

    $default  reduce using rule 285 (tuple_expansion)


State 1080

  286 tuple_expansion: tuple_expansion . ',' "name"
  287 tuple_expansion_variable_declaration: "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  288                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr ';'

    ','  shift, and go to state 1199
    ']'  shift, and go to state 1200


State 1081

  316 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1201


State 1082

  317 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1202


State 1083

  315 capture_entry: '=' . "name"

    "name"  shift, and go to state 1203


State 1084

  314 capture_entry: '&' . "name"

    "name"  shift, and go to state 1204


State 1085

  318 capture_list: capture_entry .

    $default  reduce using rule 318 (capture_list)


State 1086

  319 capture_list: capture_list . ',' capture_entry
  321 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 1205
    ']'  shift, and go to state 1206


State 1087

  323 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 367

    $default  reduce using rule 121 (optional_function_type)

    optional_function_type  go to state 1207


State 1088

  435 expr: expr "is" "type" '<' . $@26 type_declaration_no_options '>' $@27

    $default  reduce using rule 433 ($@26)

    $@26  go to state 1208


State 1089

  475 expr_mtag: expr "is" "$f" '(' . expr ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1209
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1090

  441 expr: expr "as" "type" '<' . $@28 type_declaration '>' $@29

    $default  reduce using rule 439 ($@28)

    $@28  go to state 1210


State 1091

  473 expr_mtag: expr "as" "$f" '(' . expr ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1211
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1092

  358 expr_method_call: expr "->" "name" '(' . ')'
  359                 | expr "->" "name" '(' . expr_list ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    ')'                               shift, and go to state 1212
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    expr_list               go to state 1213
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 789
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1093

  355 expr_assign_pipe: expr "<-" "$ <|" expr_block .

    $default  reduce using rule 355 (expr_assign_pipe)


State 1094

  353 expr_assign_pipe: expr "<-" "@ <|" expr_block .

    $default  reduce using rule 353 (expr_assign_pipe)


State 1095

  354 expr_assign_pipe: expr "<-" "@@ <|" expr_block .

    $default  reduce using rule 354 (expr_assign_pipe)


State 1096

  470 expr_mtag: expr "?." "$f" '(' . expr ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1214
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1097

  417 expr: expr "?[" expr ']' .

    $default  reduce using rule 417 (expr)


State 1098

  352 expr_assign_pipe: expr '=' "$ <|" expr_block .

    $default  reduce using rule 352 (expr_assign_pipe)


State 1099

  350 expr_assign_pipe: expr '=' "@ <|" expr_block .

    $default  reduce using rule 350 (expr_assign_pipe)


State 1100

  351 expr_assign_pipe: expr '=' "@@ <|" expr_block .

    $default  reduce using rule 351 (expr_assign_pipe)


State 1101

  446 expr: expr '?' "as" "type" . '<' $@30 type_declaration '>' $@31

    '<'  shift, and go to state 1215


State 1102

  474 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1216


State 1103

  443 expr: expr '?' "as" "name" .

    $default  reduce using rule 443 (expr)


State 1104

  447 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 447 (expr)


State 1105

  432 expr: expr '?' expr ':' . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1217
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1106

  472 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1218


State 1107

  420 expr: expr '.' "?." "name" .

    $default  reduce using rule 420 (expr)


State 1108

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  418     | expr '.' "?[" expr . ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ']'    shift, and go to state 1219


State 1109

  469 expr_mtag: expr '.' "$f" '(' . expr ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1220
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1110

  471 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1221


State 1111

  370 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 370 (expr_field)


State 1112

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  416     | expr '.' '[' expr . ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ']'    shift, and go to state 1222


State 1113

  373 expr_field: expr '.' $@24 error . $@25

    $default  reduce using rule 372 ($@25)

    $@25  go to state 1223


State 1114

  415 expr: expr '[' expr ']' .

    $default  reduce using rule 415 (expr)


State 1115

  425 expr: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 425 (expr)


State 1116

  573 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@41 enum_list $@42 '}' .

    $default  reduce using rule 573 (enum_declaration)


State 1117

  553 enum_list: enum_list "name" '=' expr ';' .

    $default  reduce using rule 553 (enum_list)


State 1118

  117 optional_annotation_list: '[' annotation_list ']' .
  497 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . ';'

    ';'  shift, and go to state 1224

    $default  reduce using rule 117 (optional_annotation_list)


State 1119

  485 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 485 (optional_public_or_private_member_variable)


State 1120

  486 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 486 (optional_public_or_private_member_variable)


State 1121

  494 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@33 function_declaration_header ';'
  496                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@34 function_declaration_header expression_block

    "abstract"  shift, and go to state 1225
    "static"    shift, and go to state 1122

    $default  reduce using rule 487 (optional_static_member_variable)

    optional_static_member_variable  go to state 1226


State 1122

  488 optional_static_member_variable: "static" .

    $default  reduce using rule 488 (optional_static_member_variable)


State 1123

  489 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1227
    "sealed"    shift, and go to state 1228

    $default  reduce using rule 479 (optional_override)

    optional_override  go to state 1229


State 1124

  492 struct_variable_declaration_list: struct_variable_declaration_list $@32 structure_variable_declaration ';' .

    $default  reduce using rule 492 (struct_variable_declaration_list)


State 1125

  535 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr ';' .

    $default  reduce using rule 535 (let_variable_declaration)


State 1126

  647 type_declaration_no_options: "type" '<' $@47 type_declaration '>' $@48 .

    $default  reduce using rule 647 (type_declaration_no_options)


State 1127

  668 type_declaration_no_options: "array" '<' $@51 type_declaration '>' $@52 .

    $default  reduce using rule 668 (type_declaration_no_options)


State 1128

  671 type_declaration_no_options: "table" '<' $@53 table_type_pair '>' $@54 .

    $default  reduce using rule 671 (type_declaration_no_options)


State 1129

  638 table_type_pair: type_declaration ';' type_declaration .
  703 type_declaration: type_declaration . '|' type_declaration_no_options
  704                 | type_declaration . '|' '#'

    '|'  shift, and go to state 408

    $default  reduce using rule 638 (table_type_pair)


State 1130

  674 type_declaration_no_options: "iterator" '<' $@55 type_declaration '>' $@56 .

    $default  reduce using rule 674 (type_declaration_no_options)


State 1131

  664 type_declaration_no_options: "smart_ptr" '<' $@49 type_declaration '>' $@50 .

    $default  reduce using rule 664 (type_declaration_no_options)


State 1132

  636 bitfield_type_declaration: "bitfield" '<' $@45 bitfield_bits '>' $@46 .

    $default  reduce using rule 636 (bitfield_type_declaration)


State 1133

  630 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 630 (bitfield_bits)


State 1134

  678 type_declaration_no_options: "block" '<' $@57 type_declaration '>' $@58 .

    $default  reduce using rule 678 (type_declaration_no_options)


State 1135

  681 type_declaration_no_options: "block" '<' $@59 optional_function_argument_list optional_function_type '>' . $@60

    $default  reduce using rule 680 ($@60)

    $@60  go to state 1230


State 1136

  685 type_declaration_no_options: "function" '<' $@61 type_declaration '>' $@62 .

    $default  reduce using rule 685 (type_declaration_no_options)


State 1137

  688 type_declaration_no_options: "function" '<' $@63 optional_function_argument_list optional_function_type '>' . $@64

    $default  reduce using rule 687 ($@64)

    $@64  go to state 1231


State 1138

  692 type_declaration_no_options: "lambda" '<' $@65 type_declaration '>' $@66 .

    $default  reduce using rule 692 (type_declaration_no_options)


State 1139

  695 type_declaration_no_options: "lambda" '<' $@67 optional_function_argument_list optional_function_type '>' . $@68

    $default  reduce using rule 694 ($@68)

    $@68  go to state 1232


State 1140

  698 type_declaration_no_options: "tuple" '<' $@69 tuple_type_list '>' $@70 .

    $default  reduce using rule 698 (type_declaration_no_options)


State 1141

  506 tuple_type_list: tuple_type_list ';' tuple_type .

    $default  reduce using rule 506 (tuple_type_list)


State 1142

  701 type_declaration_no_options: "variant" '<' $@71 variant_type_list '>' $@72 .

    $default  reduce using rule 701 (type_declaration_no_options)


State 1143

  512 variant_type_list: variant_type_list ';' variant_type .

    $default  reduce using rule 512 (variant_type_list)


State 1144

  591 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 591 (variable_name_with_pos_list)


State 1145

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'
  521 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 521 (variable_declaration)


State 1146

   75 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' . expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 1233


State 1147

  261 new_type_declaration: '<' $@10 type_declaration '>' . $@11

    $default  reduce using rule 260 ($@11)

    $@11  go to state 1234


State 1148

  265 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 265 (expr_new)


State 1149

  304 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  305               | "typeinfo" '(' name_in_namespace '<' "name" . ';' "name" '>' expr ')'

    '>'  shift, and go to state 1235
    ';'  shift, and go to state 1236


State 1150

  303 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 303 (expr_type_info)


State 1151

  302 expr_type_decl: "type" '<' $@18 type_declaration '>' . $@19

    $default  reduce using rule 301 ($@19)

    $@19  go to state 1237


State 1152

  768 make_dim_decl: "array" '<' $@85 type_declaration_no_options '>' . $@86 '(' expr_list ')'

    $default  reduce using rule 767 ($@86)

    $@86  go to state 1238


State 1153

  779 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . expr_map_tuple_list ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 667
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_map_tuple          go to state 822
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    expr_map_tuple_list     go to state 1239
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1154

  643 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  644                            | type_declaration_no_options . '[' ']'
  650                            | type_declaration_no_options . '-' '[' ']'
  651                            | type_declaration_no_options . "explicit"
  652                            | type_declaration_no_options . "const"
  653                            | type_declaration_no_options . '-' "const"
  654                            | type_declaration_no_options . '&'
  655                            | type_declaration_no_options . '-' '&'
  656                            | type_declaration_no_options . '#'
  657                            | type_declaration_no_options . "implicit"
  658                            | type_declaration_no_options . '-' '#'
  659                            | type_declaration_no_options . "==" "const"
  660                            | type_declaration_no_options . "==" '&'
  661                            | type_declaration_no_options . '?'
  665                            | type_declaration_no_options . "??"
  780 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options . '>' '(' expr_map_tuple_list ')'

    "const"     shift, and go to state 398
    "implicit"  shift, and go to state 399
    "explicit"  shift, and go to state 400
    "=="        shift, and go to state 401
    "??"        shift, and go to state 402
    '?'         shift, and go to state 403
    '&'         shift, and go to state 404
    '>'         shift, and go to state 1240
    '-'         shift, and go to state 405
    '['         shift, and go to state 406
    '#'         shift, and go to state 407


State 1155

  776 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 776 (expr_map_tuple_list)


State 1156

   80 expression_with_alias: "assume" "name" '=' $@4 expr .
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 80 (expression_with_alias)


State 1157

  293 expr_cast: "cast" '<' $@12 type_declaration_no_options '>' . $@13 expr

    $default  reduce using rule 292 ($@13)

    $@13  go to state 1241


State 1158

  296 expr_cast: "upcast" '<' $@14 type_declaration_no_options '>' . $@15 expr

    $default  reduce using rule 295 ($@15)

    $@15  go to state 1242


State 1159

  299 expr_cast: "reinterpret" '<' $@16 type_declaration_no_options '>' . $@17 expr

    $default  reduce using rule 298 ($@17)

    $@17  go to state 1243


State 1160

  772 make_dim_decl: "fixed_array" '<' $@87 type_declaration_no_options '>' . $@88 '(' expr_list ')'

    $default  reduce using rule 771 ($@88)

    $@88  go to state 1244


State 1161

  429 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  430     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1245


State 1162

  467 expr_mtag: "$c" '(' expr ')' '(' . ')'
  468          | "$c" '(' expr ')' '(' . expr_list ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    ')'                               shift, and go to state 1246
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    expr_list               go to state 1247
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 789
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1163

  307 expr_list: expr_list . ',' expr
  783 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where ']' ']'

    ','  shift, and go to state 817
    ';'  shift, and go to state 1248


State 1164

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'
  729 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  730                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ')'    shift, and go to state 1249


State 1165

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'
  726 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 726 (make_struct_fields)


State 1166

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'
  725 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 725 (make_struct_fields)


State 1167

  734 make_struct_dim: make_struct_dim . ';' make_struct_fields
  752 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 849
    ';'      shift, and go to state 1041

    $default  reduce using rule 735 (optional_block)

    optional_block  go to state 1250


State 1168

  751 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1043
    ",]]"  shift, and go to state 1044
    ']'    shift, and go to state 1045

    optional_trailing_delim_sqr_sqr  go to state 1251


State 1169

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'
  756 make_tuple: expr "=>" expr .

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 756 (make_tuple)


State 1170

  731 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  732                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1252


State 1171

  727 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  728                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 604
    ":="  shift, and go to state 1253
    '='   shift, and go to state 606

    copy_or_move  go to state 1254


State 1172

  727 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  728                   | make_struct_fields . ',' "name" ":=" expr
  731                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  732                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  734 make_struct_dim: make_struct_dim ';' make_struct_fields .

    ','  shift, and go to state 1040

    $default  reduce using rule 734 (make_struct_dim)


State 1173

  749 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 749 (make_struct_decl)


State 1174

  743 optional_trailing_delim_sqr_sqr: ']' ']' .

    $default  reduce using rule 743 (optional_trailing_delim_sqr_sqr)


State 1175

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'
  757 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 757 (make_tuple)


State 1176

  741 optional_trailing_semicolon_sqr_sqr: ']' ']' .

    $default  reduce using rule 741 (optional_trailing_semicolon_sqr_sqr)


State 1177

  757 make_tuple: make_tuple . ',' expr
  762 make_dim: make_dim ';' make_tuple .

    ','  shift, and go to state 1047

    $default  reduce using rule 762 (make_dim)


State 1178

  307 expr_list: expr_list . ',' expr
  784 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where '}' ']'

    ','  shift, and go to state 817
    ';'  shift, and go to state 1255


State 1179

  734 make_struct_dim: make_struct_dim . ';' make_struct_fields
  754 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"  shift, and go to state 849
    ';'      shift, and go to state 1041

    $default  reduce using rule 735 (optional_block)

    optional_block  go to state 1256


State 1180

  747 optional_trailing_delim_cur_sqr: ";}]" .

    $default  reduce using rule 747 (optional_trailing_delim_cur_sqr)


State 1181

  748 optional_trailing_delim_cur_sqr: ",}]" .

    $default  reduce using rule 748 (optional_trailing_delim_cur_sqr)


State 1182

  746 optional_trailing_delim_cur_sqr: '}' . ']'

    ']'  shift, and go to state 1257


State 1183

  753 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 753 (make_struct_decl)


State 1184

  739 optional_trailing_semicolon_cur_sqr: '}' ']' .

    $default  reduce using rule 739 (optional_trailing_semicolon_cur_sqr)


State 1185

  246 expression_keyword: "keyword" '<' $@6 type_declaration_no_options '>' . $@7 expr

    $default  reduce using rule 245 ($@7)

    $@7  go to state 1258


State 1186

  249 expression_keyword: "type function" '<' $@8 type_declaration_no_options '>' . $@9 '(' optional_expr_list ')'

    $default  reduce using rule 248 ($@9)

    $@9  go to state 1259


State 1187

   30 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 30 (string_builder_body)


State 1188

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  361 func_addr_name: "$i" '(' expr . ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ')'    shift, and go to state 1260


State 1189

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'
  476          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ')'    shift, and go to state 1261


State 1190

  365 func_addr_expr: '@' '@' '<' $@20 type_declaration_no_options . '>' $@21 func_addr_name
  643 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  644                            | type_declaration_no_options . '[' ']'
  650                            | type_declaration_no_options . '-' '[' ']'
  651                            | type_declaration_no_options . "explicit"
  652                            | type_declaration_no_options . "const"
  653                            | type_declaration_no_options . '-' "const"
  654                            | type_declaration_no_options . '&'
  655                            | type_declaration_no_options . '-' '&'
  656                            | type_declaration_no_options . '#'
  657                            | type_declaration_no_options . "implicit"
  658                            | type_declaration_no_options . '-' '#'
  659                            | type_declaration_no_options . "==" "const"
  660                            | type_declaration_no_options . "==" '&'
  661                            | type_declaration_no_options . '?'
  665                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 398
    "implicit"  shift, and go to state 399
    "explicit"  shift, and go to state 400
    "=="        shift, and go to state 401
    "??"        shift, and go to state 402
    '?'         shift, and go to state 403
    '&'         shift, and go to state 404
    '>'         shift, and go to state 1262
    '-'         shift, and go to state 405
    '['         shift, and go to state 406
    '#'         shift, and go to state 407


State 1191

  368 func_addr_expr: '@' '@' '<' $@22 optional_function_argument_list . optional_function_type '>' $@23 func_addr_name

    ':'  shift, and go to state 367

    $default  reduce using rule 121 (optional_function_type)

    optional_function_type  go to state 1263


State 1192

  216 expression_block: '{' expressions '}' "finally" '{' expressions '}' .

    $default  reduce using rule 216 (expression_block)


State 1193

   60 expression_else: "else" expression_block .

    $default  reduce using rule 60 (expression_else)


State 1194

   61 expression_else: elif_or_static_elif expr . expression_block expression_else
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    '{'    shift, and go to state 284

    expression_block  go to state 1264


State 1195

   66 expression_else_one_liner: "else" . $@2 expression_if_one_liner

    $default  reduce using rule 65 ($@2)

    $@2  go to state 1265


State 1196

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner . ';'

    ';'  shift, and go to state 1266


State 1197

  356 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1267


State 1198

  357 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'

    "$f"    shift, and go to state 850
    "name"  shift, and go to state 1075

    make_struct_fields  go to state 1268


State 1199

  286 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1269


State 1200

  287 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  288                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr ';'

    ']'  shift, and go to state 1270


State 1201

  316 capture_entry: "<-" "name" .

    $default  reduce using rule 316 (capture_entry)


State 1202

  317 capture_entry: ":=" "name" .

    $default  reduce using rule 317 (capture_entry)


State 1203

  315 capture_entry: '=' "name" .

    $default  reduce using rule 315 (capture_entry)


State 1204

  314 capture_entry: '&' "name" .

    $default  reduce using rule 314 (capture_entry)


State 1205

  319 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 1081
    ":="  shift, and go to state 1082
    '='   shift, and go to state 1083
    '&'   shift, and go to state 1084

    capture_entry  go to state 1271


State 1206

  321 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1272


State 1207

  323 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"  shift, and go to state 1273
    '{'   shift, and go to state 284

    expression_block       go to state 1274
    block_or_simple_block  go to state 1275


State 1208

  435 expr: expr "is" "type" '<' $@26 . type_declaration_no_options '>' $@27

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1276


State 1209

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'
  475          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ')'    shift, and go to state 1277


State 1210

  441 expr: expr "as" "type" '<' $@28 . type_declaration '>' $@29

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1278


State 1211

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  473          | expr "as" "$f" '(' expr . ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ')'    shift, and go to state 1279


State 1212

  358 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 358 (expr_method_call)


State 1213

  307 expr_list: expr_list . ',' expr
  359 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 817
    ')'  shift, and go to state 1280


State 1214

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  470          | expr "?." "$f" '(' expr . ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ')'    shift, and go to state 1281


State 1215

  446 expr: expr '?' "as" "type" '<' . $@30 type_declaration '>' $@31

    $default  reduce using rule 444 ($@30)

    $@30  go to state 1282


State 1216

  474 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1283
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1217

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  432     | expr '?' expr ':' expr .
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 432 (expr)


State 1218

  472 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1284
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1219

  418 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 418 (expr)


State 1220

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  469          | expr '.' "$f" '(' expr . ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ')'    shift, and go to state 1285


State 1221

  471 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1286
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1222

  416 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 416 (expr)


State 1223

  373 expr_field: expr '.' $@24 error $@25 .

    $default  reduce using rule 373 (expr_field)


State 1224

  497 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' ';' .

    $default  reduce using rule 497 (struct_variable_declaration_list)


State 1225

  494 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@33 function_declaration_header ';'

    "const"  shift, and go to state 1287

    $default  reduce using rule 482 (optional_constant)

    optional_constant  go to state 1288


State 1226

  496 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@34 function_declaration_header expression_block

    "override"  shift, and go to state 1227
    "sealed"    shift, and go to state 1228

    $default  reduce using rule 479 (optional_override)

    optional_override  go to state 1289


State 1227

  480 optional_override: "override" .

    $default  reduce using rule 480 (optional_override)


State 1228

  481 optional_override: "sealed" .

    $default  reduce using rule 481 (optional_override)


State 1229

  489 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1119
    "private"  shift, and go to state 1120

    $default  reduce using rule 484 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1290


State 1230

  681 type_declaration_no_options: "block" '<' $@59 optional_function_argument_list optional_function_type '>' $@60 .

    $default  reduce using rule 681 (type_declaration_no_options)


State 1231

  688 type_declaration_no_options: "function" '<' $@63 optional_function_argument_list optional_function_type '>' $@64 .

    $default  reduce using rule 688 (type_declaration_no_options)


State 1232

  695 type_declaration_no_options: "lambda" '<' $@67 optional_function_argument_list optional_function_type '>' $@68 .

    $default  reduce using rule 695 (type_declaration_no_options)


State 1233

   75 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' expression_block .

    $default  reduce using rule 75 (expression_for_loop)


State 1234

  261 new_type_declaration: '<' $@10 type_declaration '>' $@11 .

    $default  reduce using rule 261 (new_type_declaration)


State 1235

  304 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1291
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1236

  305 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' . "name" '>' expr ')'

    "name"  shift, and go to state 1292


State 1237

  302 expr_type_decl: "type" '<' $@18 type_declaration '>' $@19 .

    $default  reduce using rule 302 (expr_type_decl)


State 1238

  768 make_dim_decl: "array" '<' $@85 type_declaration_no_options '>' $@86 . '(' expr_list ')'

    '('  shift, and go to state 1293


State 1239

  776 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  779 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list . ')'

    ','  shift, and go to state 1014
    ')'  shift, and go to state 1294


State 1240

  780 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' . '(' expr_map_tuple_list ')'

    '('  shift, and go to state 1295


State 1241

  293 expr_cast: "cast" '<' $@12 type_declaration_no_options '>' $@13 . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1296
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1242

  296 expr_cast: "upcast" '<' $@14 type_declaration_no_options '>' $@15 . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1297
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1243

  299 expr_cast: "reinterpret" '<' $@16 type_declaration_no_options '>' $@17 . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1298
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1244

  772 make_dim_decl: "fixed_array" '<' $@87 type_declaration_no_options '>' $@88 . '(' expr_list ')'

    '('  shift, and go to state 1299


State 1245

  429 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  430     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    ')'                               shift, and go to state 1300
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1301
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1246

  467 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 467 (expr_mtag)


State 1247

  307 expr_list: expr_list . ',' expr
  468 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 817
    ')'  shift, and go to state 1302


State 1248

  783 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where ']' ']'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1303
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1249

  729 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  730                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 604
    ":="  shift, and go to state 1304
    '='   shift, and go to state 606

    copy_or_move  go to state 1305


State 1250

  752 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1043
    ",]]"  shift, and go to state 1044
    ']'    shift, and go to state 1045

    optional_trailing_delim_sqr_sqr  go to state 1306


State 1251

  751 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 751 (make_struct_decl)


State 1252

  731 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  732                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1307
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1253

  728 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1308
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1254

  727 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1309
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1255

  784 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where '}' ']'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1310
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1256

  754 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    ";}]"  shift, and go to state 1180
    ",}]"  shift, and go to state 1181
    '}'    shift, and go to state 1182

    optional_trailing_delim_cur_sqr  go to state 1311


State 1257

  746 optional_trailing_delim_cur_sqr: '}' ']' .

    $default  reduce using rule 746 (optional_trailing_delim_cur_sqr)


State 1258

  246 expression_keyword: "keyword" '<' $@6 type_declaration_no_options '>' $@7 . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1312
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1259

  249 expression_keyword: "type function" '<' $@8 type_declaration_no_options '>' $@9 . '(' optional_expr_list ')'

    '('  shift, and go to state 1313


State 1260

  361 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 361 (func_addr_name)


State 1261

  476 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 476 (expr_mtag)


State 1262

  365 func_addr_expr: '@' '@' '<' $@20 type_declaration_no_options '>' . $@21 func_addr_name

    $default  reduce using rule 364 ($@21)

    $@21  go to state 1314


State 1263

  368 func_addr_expr: '@' '@' '<' $@22 optional_function_argument_list optional_function_type . '>' $@23 func_addr_name

    '>'  shift, and go to state 1315


State 1264

   61 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1069
    "elif"         shift, and go to state 1070
    "static_elif"  shift, and go to state 1071

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1072
    expression_else      go to state 1316


State 1265

   66 expression_else_one_liner: "else" $@2 . expression_if_one_liner

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "return"                          shift, and go to state 1317
    "null"                            shift, and go to state 435
    "break"                           shift, and go to state 436
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "continue"                        shift, and go to state 446
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "yield"                           shift, and go to state 1318
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder             go to state 492
    expr_reader                go to state 493
    expression_if_one_liner    go to state 1319
    expression_block           go to state 504
    expression_keyword         go to state 507
    name_in_namespace          go to state 509
    expr_new                   go to state 511
    expression_break           go to state 1320
    expression_continue        go to state 1321
    expression_return_no_pipe  go to state 1322
    expression_yield_no_pipe   go to state 1323
    expr_cast                  go to state 521
    expr_type_decl             go to state 522
    expr_type_info             go to state 523
    block_or_lambda            go to state 524
    expr_block                 go to state 525
    expr_numeric_const         go to state 526
    expr_named_call            go to state 529
    expr_method_call           go to state 530
    func_addr_expr             go to state 531
    expr_field                 go to state 532
    expr                       go to state 1324
    expr_mtag                  go to state 534
    basic_type_declaration     go to state 535
    make_decl                  go to state 536
    make_struct_decl           go to state 537
    make_tuple_call            go to state 538
    make_dim_decl              go to state 539
    make_table_decl            go to state 540
    array_comprehension        go to state 541


State 1266

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner ';' .

    $default  reduce using rule 74 (expression_if_then_else)


State 1267

  356 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 356 (expr_named_call)


State 1268

  357 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  727 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  728                   | make_struct_fields . ',' "name" ":=" expr
  731                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  732                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1040
    ']'  shift, and go to state 1325


State 1269

  286 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 286 (tuple_expansion)


State 1270

  287 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  288                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr ';'

    ':'  shift, and go to state 1326
    '&'  shift, and go to state 381

    $default  reduce using rule 527 (optional_ref)

    optional_ref  go to state 1327


State 1271

  319 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 319 (capture_list)


State 1272

  321 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 321 (optional_capture_list)


State 1273

  309 block_or_simple_block: "=>" . expr
  310                      | "=>" . "<-" expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "<-"                              shift, and go to state 1328
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1329
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1274

  308 block_or_simple_block: expression_block .

    $default  reduce using rule 308 (block_or_simple_block)


State 1275

  323 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 323 (expr_block)


State 1276

  435 expr: expr "is" "type" '<' $@26 type_declaration_no_options . '>' $@27
  643 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  644                            | type_declaration_no_options . '[' ']'
  650                            | type_declaration_no_options . '-' '[' ']'
  651                            | type_declaration_no_options . "explicit"
  652                            | type_declaration_no_options . "const"
  653                            | type_declaration_no_options . '-' "const"
  654                            | type_declaration_no_options . '&'
  655                            | type_declaration_no_options . '-' '&'
  656                            | type_declaration_no_options . '#'
  657                            | type_declaration_no_options . "implicit"
  658                            | type_declaration_no_options . '-' '#'
  659                            | type_declaration_no_options . "==" "const"
  660                            | type_declaration_no_options . "==" '&'
  661                            | type_declaration_no_options . '?'
  665                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 398
    "implicit"  shift, and go to state 399
    "explicit"  shift, and go to state 400
    "=="        shift, and go to state 401
    "??"        shift, and go to state 402
    '?'         shift, and go to state 403
    '&'         shift, and go to state 404
    '>'         shift, and go to state 1330
    '-'         shift, and go to state 405
    '['         shift, and go to state 406
    '#'         shift, and go to state 407


State 1277

  475 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 475 (expr_mtag)


State 1278

  441 expr: expr "as" "type" '<' $@28 type_declaration . '>' $@29
  703 type_declaration: type_declaration . '|' type_declaration_no_options
  704                 | type_declaration . '|' '#'

    '|'  shift, and go to state 408
    '>'  shift, and go to state 1331


State 1279

  473 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 473 (expr_mtag)


State 1280

  359 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 359 (expr_method_call)


State 1281

  470 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 470 (expr_mtag)


State 1282

  446 expr: expr '?' "as" "type" '<' $@30 . type_declaration '>' $@31

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1332


State 1283

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  474          | expr '?' "as" "$f" '(' expr . ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ')'    shift, and go to state 1333


State 1284

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  472          | expr '.' "?." "$f" '(' expr . ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ')'    shift, and go to state 1334


State 1285

  469 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 469 (expr_mtag)


State 1286

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  471          | expr '.' '.' "$f" '(' expr . ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ')'    shift, and go to state 1335


State 1287

  483 optional_constant: "const" .

    $default  reduce using rule 483 (optional_constant)


State 1288

  494 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@33 function_declaration_header ';'

    $default  reduce using rule 493 ($@33)

    $@33  go to state 1336


State 1289

  496 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@34 function_declaration_header expression_block

    "const"  shift, and go to state 1287

    $default  reduce using rule 482 (optional_constant)

    optional_constant  go to state 1337


State 1290

  489 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 416
    "name"  shift, and go to state 417

    variable_declaration         go to state 1338
    variable_name_with_pos_list  go to state 419


State 1291

  304 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ')'    shift, and go to state 1339


State 1292

  305 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" . '>' expr ')'

    '>'  shift, and go to state 1340


State 1293

  768 make_dim_decl: "array" '<' $@85 type_declaration_no_options '>' $@86 '(' . expr_list ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    expr_list               go to state 1341
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 789
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1294

  779 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list ')' .

    $default  reduce using rule 779 (make_table_decl)


State 1295

  780 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' . expr_map_tuple_list ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 667
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_map_tuple          go to state 822
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    expr_map_tuple_list     go to state 1342
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1296

  293 expr_cast: "cast" '<' $@12 type_declaration_no_options '>' $@13 expr .
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 293 (expr_cast)


State 1297

  296 expr_cast: "upcast" '<' $@14 type_declaration_no_options '>' $@15 expr .
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 296 (expr_cast)


State 1298

  299 expr_cast: "reinterpret" '<' $@16 type_declaration_no_options '>' $@17 expr .
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 299 (expr_cast)


State 1299

  772 make_dim_decl: "fixed_array" '<' $@87 type_declaration_no_options '>' $@88 '(' . expr_list ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    expr_list               go to state 1343
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 789
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1300

  429 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 429 (expr)


State 1301

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  430     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ')'    shift, and go to state 1344


State 1302

  468 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 468 (expr_mtag)


State 1303

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'
  783 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where ']' ']'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ';'    shift, and go to state 1345

    $default  reduce using rule 781 (array_comprehension_where)

    array_comprehension_where  go to state 1346


State 1304

  730 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1347
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1305

  729 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1348
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1306

  752 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 752 (make_struct_decl)


State 1307

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'
  731 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  732                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ')'    shift, and go to state 1349


State 1308

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'
  728 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 728 (make_struct_fields)


State 1309

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'
  727 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 727 (make_struct_fields)


State 1310

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'
  784 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where '}' ']'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ';'    shift, and go to state 1345

    $default  reduce using rule 781 (array_comprehension_where)

    array_comprehension_where  go to state 1350


State 1311

  754 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 754 (make_struct_decl)


State 1312

  246 expression_keyword: "keyword" '<' $@6 type_declaration_no_options '>' $@7 expr .
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 246 (expression_keyword)


State 1313

  249 expression_keyword: "type function" '<' $@8 type_declaration_no_options '>' $@9 '(' . optional_expr_list ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    $default  reduce using rule 242 (optional_expr_list)

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    optional_expr_list      go to state 1351
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    expr_list               go to state 788
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 789
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1314

  365 func_addr_expr: '@' '@' '<' $@20 type_declaration_no_options '>' $@21 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 876
    "name"  shift, and go to state 59

    name_in_namespace  go to state 879
    func_addr_name     go to state 1352


State 1315

  368 func_addr_expr: '@' '@' '<' $@22 optional_function_argument_list optional_function_type '>' . $@23 func_addr_name

    $default  reduce using rule 367 ($@23)

    $@23  go to state 1353


State 1316

   61 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 61 (expression_else)


State 1317

  269 expression_return_no_pipe: "return" .
  270                          | "return" . expr_list
  271                          | "return" . "<-" expr_list

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "<-"                              shift, and go to state 1354
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    $default  reduce using rule 269 (expression_return_no_pipe)

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    expr_list               go to state 623
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 789
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1318

  275 expression_yield_no_pipe: "yield" . expr
  276                         | "yield" . "<-" expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "<-"                              shift, and go to state 1355
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1356
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1319

   66 expression_else_one_liner: "else" $@2 expression_if_one_liner .

    $default  reduce using rule 66 (expression_else_one_liner)


State 1320

   70 expression_if_one_liner: expression_break .

    $default  reduce using rule 70 (expression_if_one_liner)


State 1321

   71 expression_if_one_liner: expression_continue .

    $default  reduce using rule 71 (expression_if_one_liner)


State 1322

   68 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 68 (expression_if_one_liner)


State 1323

   69 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 69 (expression_if_one_liner)


State 1324

   67 expression_if_one_liner: expr .
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 67 (expression_if_one_liner)


State 1325

  357 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1357


State 1326

  287 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr ';'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1358


State 1327

  288 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr ';'

    "<-"  shift, and go to state 556
    ":="  shift, and go to state 557
    '='   shift, and go to state 558

    copy_or_move_or_clone  go to state 1359


State 1328

  310 block_or_simple_block: "=>" "<-" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1360
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1329

  309 block_or_simple_block: "=>" expr .
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    ".."  error (nonassociative)

    $default  reduce using rule 309 (block_or_simple_block)


State 1330

  435 expr: expr "is" "type" '<' $@26 type_declaration_no_options '>' . $@27

    $default  reduce using rule 434 ($@27)

    $@27  go to state 1361


State 1331

  441 expr: expr "as" "type" '<' $@28 type_declaration '>' . $@29

    $default  reduce using rule 440 ($@29)

    $@29  go to state 1362


State 1332

  446 expr: expr '?' "as" "type" '<' $@30 type_declaration . '>' $@31
  703 type_declaration: type_declaration . '|' type_declaration_no_options
  704                 | type_declaration . '|' '#'

    '|'  shift, and go to state 408
    '>'  shift, and go to state 1363


State 1333

  474 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 474 (expr_mtag)


State 1334

  472 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 472 (expr_mtag)


State 1335

  471 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 471 (expr_mtag)


State 1336

  494 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@33 . function_declaration_header ';'

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1364


State 1337

  496 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@34 function_declaration_header expression_block

    $default  reduce using rule 495 ($@34)

    $@34  go to state 1365


State 1338

  489 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 489 (structure_variable_declaration)


State 1339

  304 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 304 (expr_type_info)


State 1340

  305 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' . expr ')'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1366
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1341

  307 expr_list: expr_list . ',' expr
  768 make_dim_decl: "array" '<' $@85 type_declaration_no_options '>' $@86 '(' expr_list . ')'

    ','  shift, and go to state 817
    ')'  shift, and go to state 1367


State 1342

  776 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  780 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list . ')'

    ','  shift, and go to state 1014
    ')'  shift, and go to state 1368


State 1343

  307 expr_list: expr_list . ',' expr
  772 make_dim_decl: "fixed_array" '<' $@87 type_declaration_no_options '>' $@88 '(' expr_list . ')'

    ','  shift, and go to state 817
    ')'  shift, and go to state 1369


State 1344

  430 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 430 (expr)


State 1345

  782 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1370


State 1346

  783 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1371


State 1347

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'
  730 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 730 (make_struct_fields)


State 1348

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'
  729 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 729 (make_struct_fields)


State 1349

  731 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  732                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 604
    ":="  shift, and go to state 1372
    '='   shift, and go to state 606

    copy_or_move  go to state 1373


State 1350

  784 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . '}' ']'

    '}'  shift, and go to state 1374


State 1351

  249 expression_keyword: "type function" '<' $@8 type_declaration_no_options '>' $@9 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1375


State 1352

  365 func_addr_expr: '@' '@' '<' $@20 type_declaration_no_options '>' $@21 func_addr_name .

    $default  reduce using rule 365 (func_addr_expr)


State 1353

  368 func_addr_expr: '@' '@' '<' $@22 optional_function_argument_list optional_function_type '>' $@23 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 876
    "name"  shift, and go to state 59

    name_in_namespace  go to state 879
    func_addr_name     go to state 1376


State 1354

  271 expression_return_no_pipe: "return" "<-" . expr_list

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    expr_list               go to state 816
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 789
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1355

  276 expression_yield_no_pipe: "yield" "<-" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1377
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1356

  275 expression_yield_no_pipe: "yield" expr .
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 275 (expression_yield_no_pipe)


State 1357

  357 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 357 (expr_named_call)


State 1358

  287 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr ';'
  643 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  644                            | type_declaration_no_options . '[' ']'
  650                            | type_declaration_no_options . '-' '[' ']'
  651                            | type_declaration_no_options . "explicit"
  652                            | type_declaration_no_options . "const"
  653                            | type_declaration_no_options . '-' "const"
  654                            | type_declaration_no_options . '&'
  655                            | type_declaration_no_options . '-' '&'
  656                            | type_declaration_no_options . '#'
  657                            | type_declaration_no_options . "implicit"
  658                            | type_declaration_no_options . '-' '#'
  659                            | type_declaration_no_options . "==" "const"
  660                            | type_declaration_no_options . "==" '&'
  661                            | type_declaration_no_options . '?'
  665                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 398
    "implicit"  shift, and go to state 399
    "explicit"  shift, and go to state 400
    "=="        shift, and go to state 401
    "<-"        shift, and go to state 556
    "??"        shift, and go to state 402
    ":="        shift, and go to state 557
    '='         shift, and go to state 558
    '?'         shift, and go to state 403
    '&'         shift, and go to state 404
    '-'         shift, and go to state 405
    '['         shift, and go to state 406
    '#'         shift, and go to state 407

    copy_or_move_or_clone  go to state 1378


State 1359

  288 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr ';'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1379
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1360

  310 block_or_simple_block: "=>" "<-" expr .
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 310 (block_or_simple_block)


State 1361

  435 expr: expr "is" "type" '<' $@26 type_declaration_no_options '>' $@27 .

    $default  reduce using rule 435 (expr)


State 1362

  441 expr: expr "as" "type" '<' $@28 type_declaration '>' $@29 .

    $default  reduce using rule 441 (expr)


State 1363

  446 expr: expr '?' "as" "type" '<' $@30 type_declaration '>' . $@31

    $default  reduce using rule 445 ($@31)

    $@31  go to state 1380


State 1364

  494 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@33 function_declaration_header . ';'

    ';'  shift, and go to state 1381


State 1365

  496 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@34 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1382


State 1366

  305 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr . ')'
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ')'    shift, and go to state 1383


State 1367

  768 make_dim_decl: "array" '<' $@85 type_declaration_no_options '>' $@86 '(' expr_list ')' .

    $default  reduce using rule 768 (make_dim_decl)


State 1368

  780 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list ')' .

    $default  reduce using rule 780 (make_table_decl)


State 1369

  772 make_dim_decl: "fixed_array" '<' $@87 type_declaration_no_options '>' $@88 '(' expr_list ')' .

    $default  reduce using rule 772 (make_dim_decl)


State 1370

  782 array_comprehension_where: ';' "where" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1384
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1371

  783 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1385


State 1372

  732 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1386
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1373

  731 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1387
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1374

  784 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' . ']'

    ']'  shift, and go to state 1388


State 1375

  249 expression_keyword: "type function" '<' $@8 type_declaration_no_options '>' $@9 '(' optional_expr_list ')' .

    $default  reduce using rule 249 (expression_keyword)


State 1376

  368 func_addr_expr: '@' '@' '<' $@22 optional_function_argument_list optional_function_type '>' $@23 func_addr_name .

    $default  reduce using rule 368 (func_addr_expr)


State 1377

  276 expression_yield_no_pipe: "yield" "<-" expr .
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 276 (expression_yield_no_pipe)


State 1378

  287 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr ';'

    "true"                            shift, and go to state 428
    "false"                           shift, and go to state 429
    "new"                             shift, and go to state 430
    "typeinfo"                        shift, and go to state 431
    "type"                            shift, and go to state 432
    "array"                           shift, and go to state 433
    "null"                            shift, and go to state 435
    "table"                           shift, and go to state 438
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 443
    "upcast"                          shift, and go to state 444
    "addr"                            shift, and go to state 445
    "reinterpret"                     shift, and go to state 448
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 452
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 453
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 454
    "generator"                       shift, and go to state 455
    "++"                              shift, and go to state 457
    "--"                              shift, and go to state 458
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 462
    "$i"                              shift, and go to state 463
    "$v"                              shift, and go to state 464
    "$b"                              shift, and go to state 465
    "$a"                              shift, and go to state 466
    "$c"                              shift, and go to state 467
    "..."                             shift, and go to state 468
    "[["                              shift, and go to state 469
    "[{"                              shift, and go to state 470
    "{{"                              shift, and go to state 471
    "integer constant"                shift, and go to state 472
    "long integer constant"           shift, and go to state 473
    "unsigned integer constant"       shift, and go to state 474
    "unsigned long integer constant"  shift, and go to state 475
    "unsigned int8 constant"          shift, and go to state 476
    "floating point constant"         shift, and go to state 477
    "double constant"                 shift, and go to state 478
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 480
    "start of the string"             shift, and go to state 481
    '-'                               shift, and go to state 482
    '+'                               shift, and go to state 483
    '*'                               shift, and go to state 484
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 485
    '!'                               shift, and go to state 486
    '('                               shift, and go to state 487
    '$'                               shift, and go to state 488
    '@'                               shift, and go to state 489
    '{'                               shift, and go to state 284

    string_builder          go to state 492
    expr_reader             go to state 493
    expression_block        go to state 504
    expression_keyword      go to state 507
    name_in_namespace       go to state 509
    expr_new                go to state 511
    expr_cast               go to state 521
    expr_type_decl          go to state 522
    expr_type_info          go to state 523
    block_or_lambda         go to state 524
    expr_block              go to state 525
    expr_numeric_const      go to state 526
    expr_named_call         go to state 529
    expr_method_call        go to state 530
    func_addr_expr          go to state 531
    expr_field              go to state 532
    expr                    go to state 1389
    expr_mtag               go to state 534
    basic_type_declaration  go to state 535
    make_decl               go to state 536
    make_struct_decl        go to state 537
    make_tuple_call         go to state 538
    make_dim_decl           go to state 539
    make_table_decl         go to state 540
    array_comprehension     go to state 541


State 1379

  288 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr . ';'
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ';'    shift, and go to state 1390


State 1380

  446 expr: expr '?' "as" "type" '<' $@30 type_declaration '>' $@31 .

    $default  reduce using rule 446 (expr)


State 1381

  494 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@33 function_declaration_header ';' .

    $default  reduce using rule 494 (struct_variable_declaration_list)


State 1382

  496 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@34 function_declaration_header . expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 1391


State 1383

  305 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')' .

    $default  reduce using rule 305 (expr_type_info)


State 1384

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'
  782 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 782 (array_comprehension_where)


State 1385

  783 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']' .

    $default  reduce using rule 783 (array_comprehension)


State 1386

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'
  732 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 732 (make_struct_fields)


State 1387

  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'
  731 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750

    $default  reduce using rule 731 (make_struct_fields)


State 1388

  784 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']' .

    $default  reduce using rule 784 (array_comprehension)


State 1389

  287 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr . ';'
  358 expr_method_call: expr . "->" "name" '(' ')'
  359                 | expr . "->" "name" '(' expr_list ')'
  369 expr_field: expr . '.' "name"
  370           | expr . '.' '.' "name"
  373           | expr . '.' $@24 error $@25
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  431     | expr . "??" expr
  432     | expr . '?' expr ':' expr
  435     | expr . "is" "type" '<' $@26 type_declaration_no_options '>' $@27
  436     | expr . "is" basic_type_declaration
  437     | expr . "is" "name"
  438     | expr . "as" "name"
  441     | expr . "as" "type" '<' $@28 type_declaration '>' $@29
  442     | expr . "as" basic_type_declaration
  443     | expr . '?' "as" "name"
  446     | expr . '?' "as" "type" '<' $@30 type_declaration '>' $@31
  447     | expr . '?' "as" basic_type_declaration
  455     | expr . "<|" expr
  456     | expr . "|>" expr
  457     | expr . "|>" basic_type_declaration
  469 expr_mtag: expr . '.' "$f" '(' expr ')'
  470          | expr . "?." "$f" '(' expr ')'
  471          | expr . '.' '.' "$f" '(' expr ')'
  472          | expr . '.' "?." "$f" '(' expr ')'
  473          | expr . "as" "$f" '(' expr ')'
  474          | expr . '?' "as" "$f" '(' expr ')'
  475          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 698
    "as"   shift, and go to state 699
    "<<"   shift, and go to state 708
    ">>"   shift, and go to state 709
    "++"   shift, and go to state 710
    "--"   shift, and go to state 711
    "<="   shift, and go to state 712
    ">="   shift, and go to state 715
    "=="   shift, and go to state 716
    "!="   shift, and go to state 717
    "->"   shift, and go to state 718
    "??"   shift, and go to state 720
    "?."   shift, and go to state 721
    "?["   shift, and go to state 722
    "<|"   shift, and go to state 723
    "|>"   shift, and go to state 724
    "<<<"  shift, and go to state 726
    ">>>"  shift, and go to state 727
    "&&"   shift, and go to state 730
    "||"   shift, and go to state 731
    "^^"   shift, and go to state 732
    ".."   shift, and go to state 736
    '?'    shift, and go to state 738
    '|'    shift, and go to state 739
    '^'    shift, and go to state 740
    '&'    shift, and go to state 741
    '<'    shift, and go to state 742
    '>'    shift, and go to state 743
    '-'    shift, and go to state 744
    '+'    shift, and go to state 745
    '*'    shift, and go to state 746
    '/'    shift, and go to state 747
    '%'    shift, and go to state 748
    '.'    shift, and go to state 749
    '['    shift, and go to state 750
    ';'    shift, and go to state 1392


State 1390

  288 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 288 (tuple_expansion_variable_declaration)


State 1391

  496 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@34 function_declaration_header expression_block .

    $default  reduce using rule 496 (struct_variable_declaration_list)


State 1392

  287 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';' .

    $default  reduce using rule 287 (tuple_expansion_variable_declaration)

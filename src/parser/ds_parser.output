Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 51 conflicts: 1 shift/reduce
State 148 conflicts: 1 shift/reduce
State 154 conflicts: 1 shift/reduce
State 164 conflicts: 1 shift/reduce
State 168 conflicts: 1 shift/reduce
State 169 conflicts: 1 shift/reduce
State 364 conflicts: 2 shift/reduce
State 436 conflicts: 7 shift/reduce
State 616 conflicts: 3 reduce/reduce
State 633 conflicts: 2 shift/reduce
State 957 conflicts: 6 shift/reduce
State 959 conflicts: 6 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program bitfield_alias_declaration
   13        | program ';'

   14 optional_public_or_private_module: %empty
   15                                  | "public"
   16                                  | "private"

   17 module_name: '$'
   18            | "name"

   19 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   20 character_sequence: STRING_CHARACTER
   21                   | STRING_CHARACTER_ESC
   22                   | character_sequence STRING_CHARACTER
   23                   | character_sequence STRING_CHARACTER_ESC

   24 string_constant: "start of the string" character_sequence "end of the string"

   25 string_builder_body: %empty
   26                    | string_builder_body character_sequence
   27                    | string_builder_body "{" expr "}"

   28 string_builder: "start of the string" string_builder_body "end of the string"

   29 reader_character_sequence: STRING_CHARACTER
   30                          | reader_character_sequence STRING_CHARACTER

   31 $@1: %empty

   32 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   33 options_declaration: "options" annotation_argument_list

   34 require_declaration: "require" require_module

   35 require_module_name: "name"
   36                    | '%' require_module_name
   37                    | require_module_name '.' "name"
   38                    | require_module_name '/' "name"

   39 require_module: require_module_name is_public_module
   40               | require_module_name "as" "name" is_public_module

   41 is_public_module: %empty
   42                 | "public"

   43 expect_declaration: "expect" expect_list

   44 expect_list: expect_error
   45            | expect_list ',' expect_error

   46 expect_error: "integer constant"
   47             | "integer constant" ':' "integer constant"

   48 expression_label: "label" "integer constant" ':'

   49 expression_goto: "goto" "label" "integer constant"
   50                | "goto" expr

   51 elif_or_static_elif: "elif"
   52                    | "static_elif"

   53 expression_else: %empty
   54                | "else" expression_block
   55                | elif_or_static_elif expr expression_block expression_else

   56 if_or_static_if: "if"
   57                | "static_if"

   58 expression_if_then_else: if_or_static_if expr expression_block expression_else

   59 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' expression_block

   60 expression_unsafe: "unsafe" expression_block

   61 expression_while_loop: "while" expr expression_block

   62 expression_with: "with" expr expression_block

   63 $@2: %empty

   64 expression_with_alias: "assume" "name" '=' $@2 expr

   65 annotation_argument_value: string_constant
   66                          | "name"
   67                          | "integer constant"
   68                          | "floating point constant"
   69                          | "true"
   70                          | "false"

   71 annotation_argument_value_list: annotation_argument_value
   72                               | annotation_argument_value_list ',' annotation_argument_value

   73 annotation_argument_name: "name"
   74                         | "type"
   75                         | "in"

   76 annotation_argument: annotation_argument_name '=' string_constant
   77                    | annotation_argument_name '=' "name"
   78                    | annotation_argument_name '=' "integer constant"
   79                    | annotation_argument_name '=' "floating point constant"
   80                    | annotation_argument_name '=' "true"
   81                    | annotation_argument_name '=' "false"
   82                    | annotation_argument_name
   83                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

   84 annotation_argument_list: annotation_argument
   85                         | annotation_argument_list ',' annotation_argument

   86 annotation_declaration_name: name_in_namespace
   87                            | "require"
   88                            | "private"

   89 annotation_declaration: annotation_declaration_name
   90                       | annotation_declaration_name '(' annotation_argument_list ')'

   91 annotation_list: annotation_declaration
   92                | annotation_list ',' annotation_declaration

   93 optional_annotation_list: %empty
   94                         | '[' annotation_list ']'

   95 optional_function_argument_list: %empty
   96                                | '(' ')'
   97                                | '(' function_argument_list ')'

   98 optional_function_type: %empty
   99                       | ':' type_declaration

  100 function_name: "name"
  101              | "operator" '!'
  102              | "operator" '~'
  103              | "operator" "+="
  104              | "operator" "-="
  105              | "operator" "*="
  106              | "operator" "/="
  107              | "operator" "%="
  108              | "operator" "&="
  109              | "operator" "|="
  110              | "operator" "^="
  111              | "operator" "&&="
  112              | "operator" "||="
  113              | "operator" "^^="
  114              | "operator" "&&"
  115              | "operator" "||"
  116              | "operator" "^^"
  117              | "operator" '+'
  118              | "operator" '-'
  119              | "operator" '*'
  120              | "operator" '/'
  121              | "operator" '%'
  122              | "operator" '<'
  123              | "operator" '>'
  124              | "operator" ".."
  125              | "operator" "=="
  126              | "operator" "!="
  127              | "operator" "<="
  128              | "operator" ">="
  129              | "operator" '&'
  130              | "operator" '|'
  131              | "operator" '^'
  132              | "++" "operator"
  133              | "--" "operator"
  134              | "operator" "++"
  135              | "operator" "--"
  136              | "operator" "<<"
  137              | "operator" ">>"
  138              | "operator" "<<="
  139              | "operator" ">>="
  140              | "operator" "<<<"
  141              | "operator" ">>>"
  142              | "operator" "<<<="
  143              | "operator" ">>>="
  144              | "operator" '[' ']'
  145              | "operator" "?[" ']'
  146              | "operator" '.'
  147              | "operator" "?."
  148              | "operator" ":="
  149              | "operator" "delete"
  150              | "operator" "??"
  151              | "operator" "is"
  152              | "operator" "as"
  153              | "operator" '?' "as"

  154 global_function_declaration: optional_annotation_list "def" function_declaration

  155 optional_public_or_private_function: %empty
  156                                    | "private"
  157                                    | "public"

  158 function_declaration_header: function_name optional_function_argument_list optional_function_type

  159 $@3: %empty

  160 function_declaration: optional_public_or_private_function $@3 function_declaration_header expression_block

  161 expression_block: '{' expressions '}'
  162                 | '{' expressions '}' "finally" '{' expressions '}'

  163 expression_any: ';'
  164               | expr_pipe
  165               | expr_assign_pipe
  166               | expr_assign ';'
  167               | expression_delete ';'
  168               | expression_let
  169               | expression_while_loop
  170               | expression_unsafe
  171               | expression_with
  172               | expression_with_alias
  173               | expression_for_loop
  174               | expression_break ';'
  175               | expression_continue ';'
  176               | expression_return
  177               | expression_yield
  178               | expression_if_then_else
  179               | expression_try_catch
  180               | expression_label ';'
  181               | expression_goto ';'
  182               | "pass" ';'

  183 expressions: %empty
  184            | expressions expression_any
  185            | expressions error

  186 expr_pipe: expr_assign " <|" expr_block
  187          | "@ <|" expr_block
  188          | "@@ <|" expr_block

  189 name_in_namespace: "name"
  190                  | "name" "::" "name"
  191                  | "::" "name"

  192 expression_delete: "delete" expr

  193 expr_new: "new" type_declaration
  194         | "new" type_declaration '(' ')'
  195         | "new" type_declaration '(' expr_list ')'
  196         | "new" make_decl

  197 expression_break: "break"

  198 expression_continue: "continue"

  199 expression_return: "return" ';'
  200                  | "return" expr ';'
  201                  | "return" "<-" expr ';'
  202                  | "return" expr_pipe
  203                  | "return" "<-" expr_pipe

  204 expression_yield: "yield" expr ';'
  205                 | "yield" "<-" expr ';'
  206                 | "yield" expr_pipe
  207                 | "yield" "<-" expr_pipe

  208 expression_try_catch: "try" expression_block "recover" expression_block

  209 kwd_let: "let"
  210        | "var"

  211 expression_let: kwd_let let_variable_declaration

  212 $@4: %empty

  213 $@5: %empty

  214 expr_cast: "cast" '<' $@4 type_declaration '>' $@5 expr

  215 $@6: %empty

  216 $@7: %empty

  217 expr_cast: "upcast" '<' $@6 type_declaration '>' $@7 expr

  218 $@8: %empty

  219 $@9: %empty

  220 expr_cast: "reinterpret" '<' $@8 type_declaration '>' $@9 expr

  221 $@10: %empty

  222 $@11: %empty

  223 expr_type_decl: "type" '<' $@10 type_declaration '>' $@11

  224 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  225               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  226               | "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

  227 expr_list: expr
  228          | expr_list ',' expr

  229 block_or_simple_block: expression_block
  230                      | "=>" expr
  231                      | "=>" "<-" expr

  232 block_or_lambda: '$'
  233                | '@'
  234                | '@' '@'

  235 capture_entry: '&' "name"
  236              | '=' "name"
  237              | "<-" "name"
  238              | ":=" "name"

  239 capture_list: capture_entry
  240             | capture_list ',' capture_entry

  241 optional_capture_list: %empty
  242                      | "[[" capture_list ']' ']'

  243 expr_block: expression_block
  244           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  245 expr_numeric_const: "integer constant"
  246                   | "unsigned integer constant"
  247                   | "long integer constant"
  248                   | "unsigned long integer constant"
  249                   | "floating point constant"
  250                   | "double constant"

  251 expr_assign: expr
  252            | expr '=' expr
  253            | expr "<-" expr
  254            | expr ":=" expr
  255            | expr "&=" expr
  256            | expr "|=" expr
  257            | expr "^=" expr
  258            | expr "&&=" expr
  259            | expr "||=" expr
  260            | expr "^^=" expr
  261            | expr "+=" expr
  262            | expr "-=" expr
  263            | expr "*=" expr
  264            | expr "/=" expr
  265            | expr "%=" expr
  266            | expr "<<=" expr
  267            | expr ">>=" expr
  268            | expr "<<<=" expr
  269            | expr ">>>=" expr

  270 expr_assign_pipe: expr '=' "@ <|" expr
  271                 | expr '=' "@@ <|" expr
  272                 | expr "<-" "@ <|" expr
  273                 | expr "<-" "@@ <|" expr

  274 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'

  275 expr_method_call: expr "->" "name" '(' ')'
  276                 | expr "->" "name" '(' expr_list ')'

  277 func_addr_expr: '@' '@' name_in_namespace

  278 $@12: %empty

  279 $@13: %empty

  280 func_addr_expr: '@' '@' '<' $@12 type_declaration '>' $@13 name_in_namespace

  281 $@14: %empty

  282 $@15: %empty

  283 func_addr_expr: '@' '@' '<' $@14 optional_function_argument_list optional_function_type '>' $@15 name_in_namespace

  284 expr_field: expr '.' "name"
  285           | expr '.' '.' "name"

  286 $@16: %empty

  287 $@17: %empty

  288 expr_field: expr '.' $@16 error $@17

  289 expr: "null"
  290     | name_in_namespace
  291     | expr_numeric_const
  292     | expr_reader
  293     | string_builder
  294     | make_decl
  295     | "true"
  296     | "false"
  297     | expr_field
  298     | expr_mtag
  299     | '!' expr
  300     | '~' expr
  301     | '+' expr
  302     | '-' expr
  303     | expr "<<" expr
  304     | expr ">>" expr
  305     | expr "<<<" expr
  306     | expr ">>>" expr
  307     | expr '+' expr
  308     | expr '-' expr
  309     | expr '*' expr
  310     | expr '/' expr
  311     | expr '%' expr
  312     | expr '<' expr
  313     | expr '>' expr
  314     | expr "==" expr
  315     | expr "!=" expr
  316     | expr "<=" expr
  317     | expr ">=" expr
  318     | expr '&' expr
  319     | expr '|' expr
  320     | expr '^' expr
  321     | expr "&&" expr
  322     | expr "||" expr
  323     | expr "^^" expr
  324     | expr ".." expr
  325     | "++" expr
  326     | "--" expr
  327     | expr "++"
  328     | expr "--"
  329     | '(' expr ')'
  330     | expr '[' expr ']'
  331     | expr '.' '[' expr ']'
  332     | expr "?[" expr ']'
  333     | expr '.' "?[" expr ']'
  334     | expr "?." "name"
  335     | expr '.' "?." "name"
  336     | func_addr_expr
  337     | name_in_namespace '(' ')'
  338     | name_in_namespace '(' expr_list ')'
  339     | basic_type_declaration '(' ')'
  340     | basic_type_declaration '(' expr_list ')'
  341     | '*' expr
  342     | "deref" '(' expr ')'
  343     | "addr" '(' expr ')'
  344     | "generator" '<' type_declaration '>' optional_capture_list '(' ')'
  345     | "generator" '<' type_declaration '>' optional_capture_list '(' expr ')'
  346     | expr "??" expr
  347     | expr '?' expr ':' expr

  348 $@18: %empty

  349 $@19: %empty

  350 expr: expr "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr "is" basic_type_declaration
  352     | expr "is" "name"
  353     | expr "as" "name"

  354 $@20: %empty

  355 $@21: %empty

  356 expr: expr "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr "as" basic_type_declaration
  358     | expr '?' "as" "name"

  359 $@22: %empty

  360 $@23: %empty

  361 expr: expr '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr '?' "as" basic_type_declaration
  363     | expr_type_info
  364     | expr_type_decl
  365     | expr_cast
  366     | expr_new
  367     | expr_method_call
  368     | expr_named_call
  369     | expr_block
  370     | expr "<|" expr
  371     | expr "|>" expr
  372     | name_in_namespace "name"
  373     | "unsafe" '(' expr ')'

  374 expr_mtag: "$$" '(' expr ')'
  375          | "$i" '(' expr ')'
  376          | "$v" '(' expr ')'
  377          | "$b" '(' expr ')'
  378          | "$a" '(' expr ')'

  379 optional_field_annotation: %empty
  380                          | "[[" annotation_argument_list ']' ']'

  381 optional_override: %empty
  382                  | "override"
  383                  | "sealed"

  384 optional_constant: %empty
  385                  | "const"

  386 optional_public_or_private_member_variable: %empty
  387                                           | "public"
  388                                           | "private"

  389 structure_variable_declaration: optional_field_annotation optional_override optional_public_or_private_member_variable variable_declaration

  390 struct_variable_declaration_list: %empty

  391 $@24: %empty

  392 struct_variable_declaration_list: struct_variable_declaration_list $@24 structure_variable_declaration ';'

  393 $@25: %empty

  394 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" $@25 function_declaration_header ';'

  395 $@26: %empty

  396 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant $@26 function_declaration_header expression_block
  397                                 | struct_variable_declaration_list '[' annotation_list ']' ';'

  398 function_argument_declaration: optional_field_annotation variable_declaration
  399                              | optional_field_annotation "var" variable_declaration

  400 function_argument_list: function_argument_declaration
  401                       | function_argument_list ';' function_argument_declaration

  402 tuple_type: type_declaration
  403           | "name" ':' type_declaration

  404 tuple_type_list: tuple_type
  405                | tuple_type_list ';' tuple_type

  406 variant_type: "name" ':' type_declaration

  407 variant_type_list: variant_type
  408                  | variant_type_list ';' variant_type

  409 copy_or_move: '='
  410             | "<-"

  411 variable_declaration: variable_name_with_pos_list
  412                     | variable_name_with_pos_list '&'
  413                     | variable_name_with_pos_list ':' type_declaration
  414                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  415                     | variable_name_with_pos_list copy_or_move expr
  416                     | variable_name_with_pos_list copy_or_move expr_pipe

  417 copy_or_move_or_clone: '='
  418                      | "<-"
  419                      | ":="

  420 optional_ref: %empty
  421             | '&'

  422 let_variable_declaration: variable_name_with_pos_list ':' type_declaration ';'
  423                         | variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone expr ';'
  424                         | variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone expr_pipe
  425                         | variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';'
  426                         | variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  427 global_variable_declaration_list: %empty

  428 $@27: %empty

  429 global_variable_declaration_list: global_variable_declaration_list $@27 optional_field_annotation let_variable_declaration

  430 optional_shared: %empty
  431                | "shared"

  432 optional_public_or_private_variable: %empty
  433                                    | "private"
  434                                    | "public"

  435 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  436 $@28: %empty

  437 global_let: kwd_let optional_shared optional_public_or_private_variable $@28 optional_field_annotation let_variable_declaration

  438 enum_list: %empty
  439          | enum_list "name" ';'
  440          | enum_list "name" '=' expr ';'

  441 $@29: %empty

  442 single_alias: "name" $@29 '=' type_declaration

  443 alias_list: single_alias ';'
  444           | alias_list single_alias ';'

  445 alias_declaration: "typedef" '{' alias_list '}'
  446                  | "typedef" single_alias

  447 optional_public_or_private_enum: %empty
  448                                | "private"
  449                                | "public"

  450 enum_name: "name"

  451 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' enum_list '}'
  452                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list '}'

  453 optional_structure_parent: %empty
  454                          | ':' name_in_namespace

  455 optional_sealed: %empty
  456                | "sealed"

  457 structure_name: optional_sealed "name" optional_structure_parent

  458 class_or_struct: "class"
  459                | "struct"

  460 optional_public_or_private_structure: %empty
  461                                     | "private"
  462                                     | "public"

  463 $@30: %empty

  464 $@31: %empty

  465 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@30 structure_name $@31 '{' struct_variable_declaration_list '}'

  466 variable_name_with_pos_list: "name"
  467                            | "name" "aka" "name"
  468                            | variable_name_with_pos_list ',' "name"
  469                            | variable_name_with_pos_list ',' "name" "aka" "name"

  470 basic_type_declaration: "bool"
  471                       | "string"
  472                       | "int"
  473                       | "int8"
  474                       | "int16"
  475                       | "int64"
  476                       | "int2"
  477                       | "int3"
  478                       | "int4"
  479                       | "uint"
  480                       | "uint8"
  481                       | "uint16"
  482                       | "uint64"
  483                       | "uint2"
  484                       | "uint3"
  485                       | "uint4"
  486                       | "float"
  487                       | "float2"
  488                       | "float3"
  489                       | "float4"
  490                       | "void"
  491                       | "range"
  492                       | "urange"
  493                       | "double"
  494                       | "bitfield"

  495 enum_basic_type_declaration: "int"
  496                            | "int8"
  497                            | "int16"
  498                            | "uint"
  499                            | "uint8"
  500                            | "uint16"

  501 structure_type_declaration: name_in_namespace

  502 auto_type_declaration: "auto"
  503                      | "auto" '(' "name" ')'
  504                      | "$t" '(' expr ')'

  505 bitfield_bits: "name"
  506              | bitfield_bits ';' "name"

  507 $@32: %empty

  508 $@33: %empty

  509 bitfield_type_declaration: "bitfield" '<' $@32 bitfield_bits '>' $@33

  510 table_type_pair: type_declaration
  511                | type_declaration ';' type_declaration

  512 type_declaration: basic_type_declaration
  513                 | auto_type_declaration
  514                 | bitfield_type_declaration
  515                 | structure_type_declaration
  516                 | type_declaration '[' expr ']'
  517                 | type_declaration '[' ']'
  518                 | type_declaration '-' '[' ']'
  519                 | type_declaration "explicit"
  520                 | type_declaration "const"
  521                 | type_declaration '-' "const"
  522                 | type_declaration '&'
  523                 | type_declaration '-' '&'
  524                 | type_declaration '#'
  525                 | type_declaration "implicit"
  526                 | type_declaration '-' '#'
  527                 | type_declaration '=' "const"
  528                 | type_declaration '?'

  529 $@34: %empty

  530 $@35: %empty

  531 type_declaration: "smart_ptr" '<' $@34 type_declaration '>' $@35
  532                 | type_declaration "??"

  533 $@36: %empty

  534 $@37: %empty

  535 type_declaration: "array" '<' $@36 type_declaration '>' $@37

  536 $@38: %empty

  537 $@39: %empty

  538 type_declaration: "table" '<' $@38 table_type_pair '>' $@39

  539 $@40: %empty

  540 $@41: %empty

  541 type_declaration: "iterator" '<' $@40 type_declaration '>' $@41
  542                 | "block"

  543 $@42: %empty

  544 $@43: %empty

  545 type_declaration: "block" '<' $@42 type_declaration '>' $@43

  546 $@44: %empty

  547 $@45: %empty

  548 type_declaration: "block" '<' $@44 optional_function_argument_list optional_function_type '>' $@45
  549                 | "function"

  550 $@46: %empty

  551 $@47: %empty

  552 type_declaration: "function" '<' $@46 type_declaration '>' $@47

  553 $@48: %empty

  554 $@49: %empty

  555 type_declaration: "function" '<' $@48 optional_function_argument_list optional_function_type '>' $@49
  556                 | "lambda"

  557 $@50: %empty

  558 $@51: %empty

  559 type_declaration: "lambda" '<' $@50 type_declaration '>' $@51

  560 $@52: %empty

  561 $@53: %empty

  562 type_declaration: "lambda" '<' $@52 optional_function_argument_list optional_function_type '>' $@53

  563 $@54: %empty

  564 $@55: %empty

  565 type_declaration: "tuple" '<' $@54 tuple_type_list '>' $@55

  566 $@56: %empty

  567 $@57: %empty

  568 type_declaration: "variant" '<' $@56 variant_type_list '>' $@57

  569 $@58: %empty

  570 $@59: %empty

  571 variant_alias_declaration: "variant" $@58 "name" $@59 '{' variant_type_list ';' '}'

  572 $@60: %empty

  573 bitfield_alias_declaration: "bitfield" $@60 "name" '{' bitfield_bits ';' '}'

  574 make_decl: make_struct_decl
  575          | make_dim_decl
  576          | make_table_decl
  577          | array_comprehension

  578 make_struct_fields: "name" copy_or_move expr
  579                   | "name" ":=" expr
  580                   | make_struct_fields ',' "name" copy_or_move expr
  581                   | make_struct_fields ',' "name" ":=" expr

  582 make_struct_dim: make_struct_fields
  583                | make_struct_dim ';' make_struct_fields

  584 optional_block: %empty
  585               | "where" expr_block

  586 make_struct_decl: "[[" type_declaration make_struct_dim optional_block ']' ']'
  587                 | "[[" type_declaration optional_block ']' ']'
  588                 | "[[" type_declaration '(' ')' optional_block ']' ']'
  589                 | "[[" type_declaration '(' ')' make_struct_dim optional_block ']' ']'
  590                 | "[{" type_declaration make_struct_dim optional_block '}' ']'
  591                 | "[{" type_declaration '(' ')' make_struct_dim optional_block '}' ']'

  592 make_tuple: expr
  593           | make_tuple ',' expr

  594 make_map_tuple: expr "=>" expr
  595               | expr

  596 make_any_tuple: make_tuple
  597               | make_map_tuple

  598 make_dim: make_any_tuple
  599         | make_dim ';' make_any_tuple

  600 make_dim_decl: "[[" type_declaration make_dim ']' ']'
  601              | "[{" type_declaration make_dim '}' ']'

  602 make_table: make_map_tuple
  603           | make_table ';' make_map_tuple

  604 make_table_decl: "{{" make_table '}' '}'

  605 array_comprehension_where: %empty
  606                          | ';' "where" expr

  607 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'
  608                    | "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 101 299
    '#' (35) 524 526
    '$' (36) 17 232
    '%' (37) 32 36 121 311
    '&' (38) 129 235 318 412 421 522 523
    '(' (40) 83 90 96 97 194 195 224 225 226 274 275 276 329 337 338 339 340 342 343 344 345 373 374 375 376 377 378 503 504 588 589 591
    ')' (41) 83 90 96 97 194 195 224 225 226 274 275 276 329 337 338 339 340 342 343 344 345 373 374 375 376 377 378 503 504 588 589 591
    '*' (42) 119 309 341
    '+' (43) 117 301 307
    ',' (44) 45 72 85 92 228 240 468 469 580 581 593
    '-' (45) 118 302 308 518 521 523 526
    '.' (46) 37 146 284 285 288 331 333 335
    '/' (47) 38 120 310
    ':' (58) 47 48 99 347 403 406 413 414 422 423 424 452 454
    ';' (59) 13 59 163 166 167 174 175 180 181 182 199 200 201 204 205 226 392 394 397 401 405 408 422 423 425 439 440 443 444 506 511 571 573 583 599 603 606 607 608
    '<' (60) 122 214 217 220 223 225 226 280 283 312 344 345 350 356 361 509 531 535 538 541 545 548 552 555 559 562 565 568
    '=' (61) 64 76 77 78 79 80 81 83 236 252 270 271 409 417 440 442 527
    '>' (62) 123 214 217 220 223 225 226 280 283 313 344 345 350 356 361 509 531 535 538 541 545 548 552 555 559 562 565 568
    '?' (63) 153 347 358 361 362 528
    '@' (64) 233 234 277 280 283
    '[' (91) 94 144 274 330 331 397 516 517 518
    ']' (93) 94 144 145 242 274 330 331 332 333 380 397 516 517 518 586 587 588 589 590 591 600 601 607 608
    '^' (94) 131 320
    '{' (123) 161 162 435 445 451 452 465 571 573
    '|' (124) 130 319
    '}' (125) 161 162 435 445 451 452 465 571 573 590 591 601 604 608
    '~' (126) 102 300
    error (256) 185 288
    "lexer error" (258)
    "struct" (259) 459
    "class" (260) 458
    "let" (261) 209
    "def" (262) 154 394 396
    "while" (263) 61
    "if" (264) 56
    "static_if" (265) 57
    "else" (266) 54
    "for" (267) 59 607 608
    "recover" (268) 208
    "true" (269) 69 80 295
    "false" (270) 70 81 296
    "new" (271) 193 194 195 196
    "typeinfo" (272) 224 225 226
    "type" (273) 74 223 350 356 361
    "in" (274) 59 75 607 608
    "is" (275) 151 350 351 352
    "as" (276) 40 152 153 353 356 357 358 361 362
    "elif" (277) 51
    "static_elif" (278) 52
    "array" (279) 535
    "return" (280) 199 200 201 202 203
    "null" (281) 289
    "break" (282) 197
    "try" (283) 208
    "options" (284) 33
    "table" (285) 538
    "expect" (286) 43
    "const" (287) 385 520 521 527
    "require" (288) 34 87
    "operator" (289) 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153
    "enum" (290) 451 452
    "finally" (291) 162
    "delete" (292) 149 192
    "deref" (293) 342
    "typedef" (294) 445 446
    "with" (295) 62
    "aka" (296) 467 469
    "assume" (297) 64
    "cast" (298) 214
    "override" (299) 382
    "abstract" (300) 394
    "upcast" (301) 217
    "iterator" (302) 541
    "var" (303) 210 399
    "addr" (304) 343
    "continue" (305) 198
    "where" (306) 585 606
    "pass" (307) 182
    "reinterpret" (308) 220
    "module" (309) 19
    "public" (310) 15 42 157 387 434 449 462
    "label" (311) 48 49
    "goto" (312) 49 50
    "implicit" (313) 525
    "explicit" (314) 519
    "shared" (315) 431
    "private" (316) 16 88 156 388 433 448 461
    "smart_ptr" (317) 531
    "unsafe" (318) 60 373
    "bool" (319) 470
    "void" (320) 490
    "string" (321) 471
    "auto" (322) 502 503
    "int" (323) 472 495
    "int2" (324) 476
    "int3" (325) 477
    "int4" (326) 478
    "uint" (327) 479 498
    "bitfield" (328) 494 509 573
    "uint2" (329) 483
    "uint3" (330) 484
    "uint4" (331) 485
    "float" (332) 486
    "float2" (333) 487
    "float3" (334) 488
    "float4" (335) 489
    "range" (336) 491
    "urange" (337) 492
    "block" (338) 542 545 548
    "int64" (339) 475
    "uint64" (340) 482
    "double" (341) 493
    "function" (342) 549 552 555
    "lambda" (343) 556 559 562
    "int8" (344) 473 496
    "uint8" (345) 480 499
    "int16" (346) 474 497
    "uint16" (347) 481 500
    "tuple" (348) 565
    "variant" (349) 568 571
    "generator" (350) 344 345
    "yield" (351) 204 205 206 207
    "sealed" (352) 383 456
    "+=" (353) 103 261
    "-=" (354) 104 262
    "/=" (355) 106 264
    "*=" (356) 105 263
    "%=" (357) 107 265
    "&=" (358) 108 255
    "|=" (359) 109 256
    "^=" (360) 110 257
    "<<" (361) 136 303
    ">>" (362) 137 304
    "++" (363) 132 134 325 327
    "--" (364) 133 135 326 328
    "<=" (365) 127 316
    "<<=" (366) 138 266
    ">>=" (367) 139 267
    ">=" (368) 128 317
    "==" (369) 125 314
    "!=" (370) 126 315
    "->" (371) 275 276
    "<-" (372) 201 203 205 207 231 237 253 272 273 410 418
    "??" (373) 150 346 532
    "?." (374) 147 334 335
    "?[" (375) 145 332 333
    "<|" (376) 370
    " <|" (377) 186
    "@ <|" (378) 187 270 272
    "@@ <|" (379) 188 271 273
    "|>" (380) 371
    ":=" (381) 148 238 254 419 579 581
    "<<<" (382) 140 305
    ">>>" (383) 141 306
    "<<<=" (384) 142 268
    ">>>=" (385) 143 269
    "=>" (386) 230 231 594
    "::" (387) 190 191
    "&&" (388) 114 321
    "||" (389) 115 322
    "^^" (390) 116 323
    "&&=" (391) 111 258
    "||=" (392) 112 259
    "^^=" (393) 113 260
    ".." (394) 124 324
    "$$" (395) 374
    "$i" (396) 375
    "$v" (397) 376
    "$b" (398) 377
    "$a" (399) 378
    "$t" (400) 504
    "[[" (401) 242 380 586 587 588 589 600 607
    "[{" (402) 590 591 601 608
    "{{" (403) 604
    "integer constant" <i> (404) 46 47 48 49 67 78 245
    "long integer constant" <i64> (405) 247
    "unsigned integer constant" <ui> (406) 246
    "unsigned long integer constant" <ui64> (407) 248
    "floating point constant" <fd> (408) 68 79 249
    "double constant" <d> (409) 250
    "name" <s> (410) 18 35 37 38 40 64 66 73 77 100 189 190 191 225 226 235 236 237 238 275 276 284 285 334 335 352 353 358 372 403 406 439 440 442 450 457 466 467 468 469 503 505 506 571 573 578 579 580 581
    "start of the string" (411) 24 28
    STRING_CHARACTER <ch> (412) 20 22 29 30
    STRING_CHARACTER_ESC (413) 21 23
    "end of the string" (414) 24 28
    "{" (415) 27
    "}" (416) 27
    "end of failed eader macro" (417)
    UNARY_MINUS (418)
    UNARY_PLUS (419)
    PRE_INC (420)
    PRE_DEC (421)
    POST_INC (422)
    POST_DEC (423)
    DEREF (424)


Nonterminals, with rules where they appear

    $accept (197)
        on left: 0
    program (198)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13
    optional_public_or_private_module <b> (199)
        on left: 14 15 16
        on right: 19
    module_name <s> (200)
        on left: 17 18
        on right: 19
    module_declaration (201)
        on left: 19
        on right: 2
    character_sequence <s> (202)
        on left: 20 21 22 23
        on right: 22 23 24 26
    string_constant <s> (203)
        on left: 24
        on right: 65 76
    string_builder_body <pExpression> (204)
        on left: 25 26 27
        on right: 26 27 28
    string_builder <pExpression> (205)
        on left: 28
        on right: 293
    reader_character_sequence (206)
        on left: 29 30
        on right: 30 32
    expr_reader <pExpression> (207)
        on left: 32
        on right: 292
    $@1 (208)
        on left: 31
        on right: 32
    options_declaration (209)
        on left: 33
        on right: 9
    require_declaration (210)
        on left: 34
        on right: 8
    require_module_name <s> (211)
        on left: 35 36 37 38
        on right: 36 37 38 39 40
    require_module (212)
        on left: 39 40
        on right: 34
    is_public_module <b> (213)
        on left: 41 42
        on right: 39 40
    expect_declaration (214)
        on left: 43
        on right: 7
    expect_list (215)
        on left: 44 45
        on right: 43 45
    expect_error (216)
        on left: 46 47
        on right: 44 45
    expression_label <pExpression> (217)
        on left: 48
        on right: 180
    expression_goto <pExpression> (218)
        on left: 49 50
        on right: 181
    elif_or_static_elif <b> (219)
        on left: 51 52
        on right: 55
    expression_else <pExpression> (220)
        on left: 53 54 55
        on right: 55 58
    if_or_static_if <b> (221)
        on left: 56 57
        on right: 58
    expression_if_then_else <pExpression> (222)
        on left: 58
        on right: 178
    expression_for_loop <pExpression> (223)
        on left: 59
        on right: 173
    expression_unsafe <pExpression> (224)
        on left: 60
        on right: 170
    expression_while_loop <pExpression> (225)
        on left: 61
        on right: 169
    expression_with <pExpression> (226)
        on left: 62
        on right: 171
    expression_with_alias <pExpression> (227)
        on left: 64
        on right: 172
    $@2 (228)
        on left: 63
        on right: 64
    annotation_argument_value <aa> (229)
        on left: 65 66 67 68 69 70
        on right: 71 72
    annotation_argument_value_list <aaList> (230)
        on left: 71 72
        on right: 72 83
    annotation_argument_name <s> (231)
        on left: 73 74 75
        on right: 76 77 78 79 80 81 82 83
    annotation_argument <aa> (232)
        on left: 76 77 78 79 80 81 82 83
        on right: 84 85
    annotation_argument_list <aaList> (233)
        on left: 84 85
        on right: 33 85 90 380
    annotation_declaration_name <s> (234)
        on left: 86 87 88
        on right: 89 90
    annotation_declaration <fa> (235)
        on left: 89 90
        on right: 91 92
    annotation_list <faList> (236)
        on left: 91 92
        on right: 92 94 397
    optional_annotation_list <faList> (237)
        on left: 93 94
        on right: 154 244 394 396 451 452 465
    optional_function_argument_list <pVarDeclList> (238)
        on left: 95 96 97
        on right: 158 244 283 548 555 562
    optional_function_type <pTypeDecl> (239)
        on left: 98 99
        on right: 158 244 283 548 555 562
    function_name <s> (240)
        on left: 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153
        on right: 158
    global_function_declaration (241)
        on left: 154
        on right: 6
    optional_public_or_private_function <b> (242)
        on left: 155 156 157
        on right: 160
    function_declaration_header <pFuncDecl> (243)
        on left: 158
        on right: 160 394 396
    function_declaration <pFuncDecl> (244)
        on left: 160
        on right: 154
    $@3 (245)
        on left: 159
        on right: 160
    expression_block <pExpression> (246)
        on left: 161 162
        on right: 54 55 58 59 60 61 62 160 208 229 243 396
    expression_any <pExpression> (247)
        on left: 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182
        on right: 184
    expressions <pExpression> (248)
        on left: 183 184 185
        on right: 161 162 184 185
    expr_pipe <pExpression> (249)
        on left: 186 187 188
        on right: 164 202 203 206 207 416 424 426
    name_in_namespace <s> (250)
        on left: 189 190 191
        on right: 32 86 224 225 226 274 277 280 283 290 337 338 372 454 501
    expression_delete <pExpression> (251)
        on left: 192
        on right: 167
    expr_new <pExpression> (252)
        on left: 193 194 195 196
        on right: 366
    expression_break <pExpression> (253)
        on left: 197
        on right: 174
    expression_continue <pExpression> (254)
        on left: 198
        on right: 175
    expression_return <pExpression> (255)
        on left: 199 200 201 202 203
        on right: 176
    expression_yield <pExpression> (256)
        on left: 204 205 206 207
        on right: 177
    expression_try_catch <pExpression> (257)
        on left: 208
        on right: 179
    kwd_let <b> (258)
        on left: 209 210
        on right: 211 435 437
    expression_let <pExpression> (259)
        on left: 211
        on right: 168
    expr_cast <pExpression> (260)
        on left: 214 217 220
        on right: 365
    $@4 (261)
        on left: 212
        on right: 214
    $@5 (262)
        on left: 213
        on right: 214
    $@6 (263)
        on left: 215
        on right: 217
    $@7 (264)
        on left: 216
        on right: 217
    $@8 (265)
        on left: 218
        on right: 220
    $@9 (266)
        on left: 219
        on right: 220
    expr_type_decl <pExpression> (267)
        on left: 223
        on right: 364
    $@10 (268)
        on left: 221
        on right: 223
    $@11 (269)
        on left: 222
        on right: 223
    expr_type_info <pExpression> (270)
        on left: 224 225 226
        on right: 363
    expr_list <pExpression> (271)
        on left: 227 228
        on right: 59 195 228 276 338 340 607 608
    block_or_simple_block <pExpression> (272)
        on left: 229 230 231
        on right: 244
    block_or_lambda <i> (273)
        on left: 232 233 234
        on right: 244
    capture_entry <pCapt> (274)
        on left: 235 236 237 238
        on right: 239 240
    capture_list <pCaptList> (275)
        on left: 239 240
        on right: 240 242
    optional_capture_list <pCaptList> (276)
        on left: 241 242
        on right: 244 344 345
    expr_block <pExpression> (277)
        on left: 243 244
        on right: 186 187 188 369 585
    expr_numeric_const <pExpression> (278)
        on left: 245 246 247 248 249 250
        on right: 291
    expr_assign <pExpression> (279)
        on left: 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269
        on right: 166 186
    expr_assign_pipe <pExpression> (280)
        on left: 270 271 272 273
        on right: 165
    expr_named_call <pExpression> (281)
        on left: 274
        on right: 368
    expr_method_call <pExpression> (282)
        on left: 275 276
        on right: 367
    func_addr_expr <pExpression> (283)
        on left: 277 280 283
        on right: 336
    $@12 (284)
        on left: 278
        on right: 280
    $@13 (285)
        on left: 279
        on right: 280
    $@14 (286)
        on left: 281
        on right: 283
    $@15 (287)
        on left: 282
        on right: 283
    expr_field <pExpression> (288)
        on left: 284 285 288
        on right: 297
    $@16 (289)
        on left: 286
        on right: 288
    $@17 (290)
        on left: 287
        on right: 288
    expr <pExpression> (291)
        on left: 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 350 351 352 353 356 357 358 361 362 363 364 365 366 367 368 369 370 371 372 373
        on right
    $@18 (292)
        on left: 348
        on right: 350
    $@19 (293)
        on left: 349
        on right: 350
    $@20 (294)
        on left: 354
        on right: 356
    $@21 (295)
        on left: 355
        on right: 356
    $@22 (296)
        on left: 359
        on right: 361
    $@23 (297)
        on left: 360
        on right: 361
    expr_mtag <pExpression> (298)
        on left: 374 375 376 377 378
        on right: 298
    optional_field_annotation <aaList> (299)
        on left: 379 380
        on right: 389 398 399 429 437
    optional_override <i> (300)
        on left: 381 382 383
        on right: 389 396
    optional_constant <b> (301)
        on left: 384 385
        on right: 396
    optional_public_or_private_member_variable <b> (302)
        on left: 386 387 388
        on right: 389 394 396
    structure_variable_declaration <pVarDecl> (303)
        on left: 389
        on right: 392
    struct_variable_declaration_list <pVarDeclList> (304)
        on left: 390 392 394 396 397
        on right: 392 394 396 397 465
    $@24 (305)
        on left: 391
        on right: 392
    $@25 (306)
        on left: 393
        on right: 394
    $@26 (307)
        on left: 395
        on right: 396
    function_argument_declaration <pVarDecl> (308)
        on left: 398 399
        on right: 400 401
    function_argument_list <pVarDeclList> (309)
        on left: 400 401
        on right: 97 401
    tuple_type <pVarDecl> (310)
        on left: 402 403
        on right: 404 405
    tuple_type_list <pVarDeclList> (311)
        on left: 404 405
        on right: 405 565
    variant_type <pVarDecl> (312)
        on left: 406
        on right: 407 408
    variant_type_list <pVarDeclList> (313)
        on left: 407 408
        on right: 408 568 571
    copy_or_move <b> (314)
        on left: 409 410
        on right: 414 415 416 578 580
    variable_declaration <pVarDecl> (315)
        on left: 411 412 413 414 415 416
        on right: 389 398 399
    copy_or_move_or_clone <i> (316)
        on left: 417 418 419
        on right: 423 424 425 426
    optional_ref <b> (317)
        on left: 420 421
        on right: 425 426
    let_variable_declaration <pVarDecl> (318)
        on left: 422 423 424 425 426
        on right: 211 429 437
    global_variable_declaration_list <pVarDeclList> (319)
        on left: 427 429
        on right: 429 435
    $@27 (320)
        on left: 428
        on right: 429
    optional_shared <b> (321)
        on left: 430 431
        on right: 19 435 437
    optional_public_or_private_variable <b> (322)
        on left: 432 433 434
        on right: 435 437
    global_let (323)
        on left: 435 437
        on right: 5
    $@28 (324)
        on left: 436
        on right: 437
    enum_list <pEnum> (325)
        on left: 438 439 440
        on right: 439 440 451 452
    single_alias (326)
        on left: 442
        on right: 443 444 446
    $@29 (327)
        on left: 441
        on right: 442
    alias_list (328)
        on left: 443 444
        on right: 444 445
    alias_declaration (329)
        on left: 445 446
        on right: 10
    optional_public_or_private_enum <b> (330)
        on left: 447 448 449
        on right: 451 452
    enum_name <s> (331)
        on left: 450
        on right: 451 452
    enum_declaration (332)
        on left: 451 452
        on right: 4
    optional_structure_parent <s> (333)
        on left: 453 454
        on right: 457
    optional_sealed <b> (334)
        on left: 455 456
        on right: 457
    structure_name <pStructure> (335)
        on left: 457
        on right: 465
    class_or_struct <b> (336)
        on left: 458 459
        on right: 465
    optional_public_or_private_structure <b> (337)
        on left: 460 461 462
        on right: 465
    structure_declaration (338)
        on left: 465
        on right: 3
    $@30 (339)
        on left: 463
        on right: 465
    $@31 (340)
        on left: 464
        on right: 465
    variable_name_with_pos_list <pNameWithPosList> (341)
        on left: 466 467 468 469
        on right: 59 411 412 413 414 415 416 422 423 424 425 426 468 469 607 608
    basic_type_declaration <type> (342)
        on left: 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494
        on right: 339 340 351 357 362 512
    enum_basic_type_declaration <type> (343)
        on left: 495 496 497 498 499 500
        on right: 452
    structure_type_declaration <pTypeDecl> (344)
        on left: 501
        on right: 515
    auto_type_declaration <pTypeDecl> (345)
        on left: 502 503 504
        on right: 513
    bitfield_bits <pNameList> (346)
        on left: 505 506
        on right: 506 509 573
    bitfield_type_declaration <pTypeDecl> (347)
        on left: 509
        on right: 514
    $@32 (348)
        on left: 507
        on right: 509
    $@33 (349)
        on left: 508
        on right: 509
    table_type_pair <aTypePair> (350)
        on left: 510 511
        on right: 538
    type_declaration <pTypeDecl> (351)
        on left: 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 531 532 535 538 541 542 545 548 549 552 555 556 559 562 565 568
        on right: 99 193 194 195 214 217 220 223 280 344 345 350 356 361 402 403 406 413 414 422 423 424 442 510 511 516 517 518 519 520 521 522 523 524 525 526 527 528 531 532 535 541 545 552 559 586 587 588 589 590 591 600 601
    $@34 (352)
        on left: 529
        on right: 531
    $@35 (353)
        on left: 530
        on right: 531
    $@36 (354)
        on left: 533
        on right: 535
    $@37 (355)
        on left: 534
        on right: 535
    $@38 (356)
        on left: 536
        on right: 538
    $@39 (357)
        on left: 537
        on right: 538
    $@40 (358)
        on left: 539
        on right: 541
    $@41 (359)
        on left: 540
        on right: 541
    $@42 (360)
        on left: 543
        on right: 545
    $@43 (361)
        on left: 544
        on right: 545
    $@44 (362)
        on left: 546
        on right: 548
    $@45 (363)
        on left: 547
        on right: 548
    $@46 (364)
        on left: 550
        on right: 552
    $@47 (365)
        on left: 551
        on right: 552
    $@48 (366)
        on left: 553
        on right: 555
    $@49 (367)
        on left: 554
        on right: 555
    $@50 (368)
        on left: 557
        on right: 559
    $@51 (369)
        on left: 558
        on right: 559
    $@52 (370)
        on left: 560
        on right: 562
    $@53 (371)
        on left: 561
        on right: 562
    $@54 (372)
        on left: 563
        on right: 565
    $@55 (373)
        on left: 564
        on right: 565
    $@56 (374)
        on left: 566
        on right: 568
    $@57 (375)
        on left: 567
        on right: 568
    variant_alias_declaration (376)
        on left: 571
        on right: 11
    $@58 (377)
        on left: 569
        on right: 571
    $@59 (378)
        on left: 570
        on right: 571
    bitfield_alias_declaration (379)
        on left: 573
        on right: 12
    $@60 (380)
        on left: 572
        on right: 573
    make_decl <pExpression> (381)
        on left: 574 575 576 577
        on right: 196 294
    make_struct_fields <pMakeStruct> (382)
        on left: 578 579 580 581
        on right: 274 580 581 582 583
    make_struct_dim <pExpression> (383)
        on left: 582 583
        on right: 583 586 589 590 591
    optional_block <pExpression> (384)
        on left: 584 585
        on right: 586 587 588 589 590 591
    make_struct_decl <pExpression> (385)
        on left: 586 587 588 589 590 591
        on right: 574
    make_tuple <pExpression> (386)
        on left: 592 593
        on right: 593 596
    make_map_tuple <pExpression> (387)
        on left: 594 595
        on right: 597 602 603
    make_any_tuple <pExpression> (388)
        on left: 596 597
        on right: 598 599
    make_dim <pExpression> (389)
        on left: 598 599
        on right: 599 600 601
    make_dim_decl <pExpression> (390)
        on left: 600 601
        on right: 575
    make_table <pExpression> (391)
        on left: 602 603
        on right: 603 604
    make_table_decl <pExpression> (392)
        on left: 604
        on right: 576
    array_comprehension_where <pExpression> (393)
        on left: 605 606
        on right: 607 608
    array_comprehension <pExpression> (394)
        on left: 607 608
        on right: 577


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . bitfield_alias_declaration
   13        | program . ';'

    $end        shift, and go to state 2
    "let"       shift, and go to state 3
    "options"   shift, and go to state 4
    "expect"    shift, and go to state 5
    "require"   shift, and go to state 6
    "typedef"   shift, and go to state 7
    "var"       shift, and go to state 8
    "module"    shift, and go to state 9
    "bitfield"  shift, and go to state 10
    "variant"   shift, and go to state 11
    '['         shift, and go to state 12
    ';'         shift, and go to state 13

    $default  reduce using rule 93 (optional_annotation_list)

    module_declaration           go to state 14
    options_declaration          go to state 15
    require_declaration          go to state 16
    expect_declaration           go to state 17
    optional_annotation_list     go to state 18
    global_function_declaration  go to state 19
    kwd_let                      go to state 20
    global_let                   go to state 21
    alias_declaration            go to state 22
    enum_declaration             go to state 23
    structure_declaration        go to state 24
    variant_alias_declaration    go to state 25
    bitfield_alias_declaration   go to state 26


State 2

    0 $accept: program $end .

    $default  accept


State 3

  209 kwd_let: "let" .

    $default  reduce using rule 209 (kwd_let)


State 4

   33 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 27
    "in"    shift, and go to state 28
    "name"  shift, and go to state 29

    annotation_argument_name  go to state 30
    annotation_argument       go to state 31
    annotation_argument_list  go to state 32


State 5

   43 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 33

    expect_list   go to state 34
    expect_error  go to state 35


State 6

   34 require_declaration: "require" . require_module

    "name"  shift, and go to state 36
    '%'     shift, and go to state 37

    require_module_name  go to state 38
    require_module       go to state 39


State 7

  445 alias_declaration: "typedef" . '{' alias_list '}'
  446                  | "typedef" . single_alias

    "name"  shift, and go to state 40
    '{'     shift, and go to state 41

    single_alias  go to state 42


State 8

  210 kwd_let: "var" .

    $default  reduce using rule 210 (kwd_let)


State 9

   19 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 43
    '$'     shift, and go to state 44

    module_name  go to state 45


State 10

  573 bitfield_alias_declaration: "bitfield" . $@60 "name" '{' bitfield_bits ';' '}'

    $default  reduce using rule 572 ($@60)

    $@60  go to state 46


State 11

  571 variant_alias_declaration: "variant" . $@58 "name" $@59 '{' variant_type_list ';' '}'

    $default  reduce using rule 569 ($@58)

    $@58  go to state 47


State 12

   94 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 48
    "private"  shift, and go to state 49
    "::"       shift, and go to state 50
    "name"     shift, and go to state 51

    annotation_declaration_name  go to state 52
    annotation_declaration       go to state 53
    annotation_list              go to state 54
    name_in_namespace            go to state 55


State 13

   13 program: program ';' .

    $default  reduce using rule 13 (program)


State 14

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 15

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 16

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 17

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 18

  154 global_function_declaration: optional_annotation_list . "def" function_declaration
  451 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name '{' enum_list '}'
  452                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list '}'
  465 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@30 structure_name $@31 '{' struct_variable_declaration_list '}'

    "struct"  shift, and go to state 56
    "class"   shift, and go to state 57
    "def"     shift, and go to state 58
    "enum"    shift, and go to state 59

    class_or_struct  go to state 60


State 19

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 20

  435 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  437           | kwd_let . optional_shared optional_public_or_private_variable $@28 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 61

    $default  reduce using rule 430 (optional_shared)

    optional_shared  go to state 62


State 21

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 22

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 23

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 24

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 25

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 26

   12 program: program bitfield_alias_declaration .

    $default  reduce using rule 12 (program)


State 27

   74 annotation_argument_name: "type" .

    $default  reduce using rule 74 (annotation_argument_name)


State 28

   75 annotation_argument_name: "in" .

    $default  reduce using rule 75 (annotation_argument_name)


State 29

   73 annotation_argument_name: "name" .

    $default  reduce using rule 73 (annotation_argument_name)


State 30

   76 annotation_argument: annotation_argument_name . '=' string_constant
   77                    | annotation_argument_name . '=' "name"
   78                    | annotation_argument_name . '=' "integer constant"
   79                    | annotation_argument_name . '=' "floating point constant"
   80                    | annotation_argument_name . '=' "true"
   81                    | annotation_argument_name . '=' "false"
   82                    | annotation_argument_name .
   83                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 63

    $default  reduce using rule 82 (annotation_argument)


State 31

   84 annotation_argument_list: annotation_argument .

    $default  reduce using rule 84 (annotation_argument_list)


State 32

   33 options_declaration: "options" annotation_argument_list .
   85 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 64

    $default  reduce using rule 33 (options_declaration)


State 33

   46 expect_error: "integer constant" .
   47             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 65

    $default  reduce using rule 46 (expect_error)


State 34

   43 expect_declaration: "expect" expect_list .
   45 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 66

    $default  reduce using rule 43 (expect_declaration)


State 35

   44 expect_list: expect_error .

    $default  reduce using rule 44 (expect_list)


State 36

   35 require_module_name: "name" .

    $default  reduce using rule 35 (require_module_name)


State 37

   36 require_module_name: '%' . require_module_name

    "name"  shift, and go to state 36
    '%'     shift, and go to state 37

    require_module_name  go to state 67


State 38

   37 require_module_name: require_module_name . '.' "name"
   38                    | require_module_name . '/' "name"
   39 require_module: require_module_name . is_public_module
   40               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 68
    "public"  shift, and go to state 69
    '/'       shift, and go to state 70
    '.'       shift, and go to state 71

    $default  reduce using rule 41 (is_public_module)

    is_public_module  go to state 72


State 39

   34 require_declaration: "require" require_module .

    $default  reduce using rule 34 (require_declaration)


State 40

  442 single_alias: "name" . $@29 '=' type_declaration

    $default  reduce using rule 441 ($@29)

    $@29  go to state 73


State 41

  445 alias_declaration: "typedef" '{' . alias_list '}'

    "name"  shift, and go to state 40

    single_alias  go to state 74
    alias_list    go to state 75


State 42

  446 alias_declaration: "typedef" single_alias .

    $default  reduce using rule 446 (alias_declaration)


State 43

   18 module_name: "name" .

    $default  reduce using rule 18 (module_name)


State 44

   17 module_name: '$' .

    $default  reduce using rule 17 (module_name)


State 45

   19 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 61

    $default  reduce using rule 430 (optional_shared)

    optional_shared  go to state 76


State 46

  573 bitfield_alias_declaration: "bitfield" $@60 . "name" '{' bitfield_bits ';' '}'

    "name"  shift, and go to state 77


State 47

  571 variant_alias_declaration: "variant" $@58 . "name" $@59 '{' variant_type_list ';' '}'

    "name"  shift, and go to state 78


State 48

   87 annotation_declaration_name: "require" .

    $default  reduce using rule 87 (annotation_declaration_name)


State 49

   88 annotation_declaration_name: "private" .

    $default  reduce using rule 88 (annotation_declaration_name)


State 50

  191 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 79


State 51

  189 name_in_namespace: "name" .
  190                  | "name" . "::" "name"

    "::"  shift, and go to state 80

    "::"      [reduce using rule 189 (name_in_namespace)]
    $default  reduce using rule 189 (name_in_namespace)


State 52

   89 annotation_declaration: annotation_declaration_name .
   90                       | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 81

    $default  reduce using rule 89 (annotation_declaration)


State 53

   91 annotation_list: annotation_declaration .

    $default  reduce using rule 91 (annotation_list)


State 54

   92 annotation_list: annotation_list . ',' annotation_declaration
   94 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 82
    ']'  shift, and go to state 83


State 55

   86 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 86 (annotation_declaration_name)


State 56

  459 class_or_struct: "struct" .

    $default  reduce using rule 459 (class_or_struct)


State 57

  458 class_or_struct: "class" .

    $default  reduce using rule 458 (class_or_struct)


State 58

  154 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 84
    "private"  shift, and go to state 85

    $default  reduce using rule 155 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 86
    function_declaration                 go to state 87


State 59

  451 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name '{' enum_list '}'
  452                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list '}'

    "public"   shift, and go to state 88
    "private"  shift, and go to state 89

    $default  reduce using rule 447 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 90


State 60

  465 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@30 structure_name $@31 '{' struct_variable_declaration_list '}'

    "public"   shift, and go to state 91
    "private"  shift, and go to state 92

    $default  reduce using rule 460 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 93


State 61

  431 optional_shared: "shared" .

    $default  reduce using rule 431 (optional_shared)


State 62

  435 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  437           | kwd_let optional_shared . optional_public_or_private_variable $@28 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 94
    "private"  shift, and go to state 95

    $default  reduce using rule 432 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 96


State 63

   76 annotation_argument: annotation_argument_name '=' . string_constant
   77                    | annotation_argument_name '=' . "name"
   78                    | annotation_argument_name '=' . "integer constant"
   79                    | annotation_argument_name '=' . "floating point constant"
   80                    | annotation_argument_name '=' . "true"
   81                    | annotation_argument_name '=' . "false"
   83                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 97
    "false"                    shift, and go to state 98
    "integer constant"         shift, and go to state 99
    "floating point constant"  shift, and go to state 100
    "name"                     shift, and go to state 101
    "start of the string"      shift, and go to state 102
    '('                        shift, and go to state 103

    string_constant  go to state 104


State 64

   85 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 27
    "in"    shift, and go to state 28
    "name"  shift, and go to state 29

    annotation_argument_name  go to state 30
    annotation_argument       go to state 105


State 65

   47 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 106


State 66

   45 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 33

    expect_error  go to state 107


State 67

   36 require_module_name: '%' require_module_name .
   37                    | require_module_name . '.' "name"
   38                    | require_module_name . '/' "name"

    '.'  shift, and go to state 71

    $default  reduce using rule 36 (require_module_name)


State 68

   40 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 108


State 69

   42 is_public_module: "public" .

    $default  reduce using rule 42 (is_public_module)


State 70

   38 require_module_name: require_module_name '/' . "name"

    "name"  shift, and go to state 109


State 71

   37 require_module_name: require_module_name '.' . "name"

    "name"  shift, and go to state 110


State 72

   39 require_module: require_module_name is_public_module .

    $default  reduce using rule 39 (require_module)


State 73

  442 single_alias: "name" $@29 . '=' type_declaration

    '='  shift, and go to state 111


State 74

  443 alias_list: single_alias . ';'

    ';'  shift, and go to state 112


State 75

  444 alias_list: alias_list . single_alias ';'
  445 alias_declaration: "typedef" '{' alias_list . '}'

    "name"  shift, and go to state 40
    '}'     shift, and go to state 113

    single_alias  go to state 114


State 76

   19 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 115
    "private"  shift, and go to state 116

    $default  reduce using rule 14 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 117


State 77

  573 bitfield_alias_declaration: "bitfield" $@60 "name" . '{' bitfield_bits ';' '}'

    '{'  shift, and go to state 118


State 78

  571 variant_alias_declaration: "variant" $@58 "name" . $@59 '{' variant_type_list ';' '}'

    $default  reduce using rule 570 ($@59)

    $@59  go to state 119


State 79

  191 name_in_namespace: "::" "name" .

    $default  reduce using rule 191 (name_in_namespace)


State 80

  190 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 120


State 81

   90 annotation_declaration: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 27
    "in"    shift, and go to state 28
    "name"  shift, and go to state 29

    annotation_argument_name  go to state 30
    annotation_argument       go to state 31
    annotation_argument_list  go to state 121


State 82

   92 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 48
    "private"  shift, and go to state 49
    "::"       shift, and go to state 50
    "name"     shift, and go to state 51

    annotation_declaration_name  go to state 52
    annotation_declaration       go to state 122
    name_in_namespace            go to state 55


State 83

   94 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 94 (optional_annotation_list)


State 84

  157 optional_public_or_private_function: "public" .

    $default  reduce using rule 157 (optional_public_or_private_function)


State 85

  156 optional_public_or_private_function: "private" .

    $default  reduce using rule 156 (optional_public_or_private_function)


State 86

  160 function_declaration: optional_public_or_private_function . $@3 function_declaration_header expression_block

    $default  reduce using rule 159 ($@3)

    $@3  go to state 123


State 87

  154 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 154 (global_function_declaration)


State 88

  449 optional_public_or_private_enum: "public" .

    $default  reduce using rule 449 (optional_public_or_private_enum)


State 89

  448 optional_public_or_private_enum: "private" .

    $default  reduce using rule 448 (optional_public_or_private_enum)


State 90

  451 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name '{' enum_list '}'
  452                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration '{' enum_list '}'

    "name"  shift, and go to state 124

    enum_name  go to state 125


State 91

  462 optional_public_or_private_structure: "public" .

    $default  reduce using rule 462 (optional_public_or_private_structure)


State 92

  461 optional_public_or_private_structure: "private" .

    $default  reduce using rule 461 (optional_public_or_private_structure)


State 93

  465 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@30 structure_name $@31 '{' struct_variable_declaration_list '}'

    $default  reduce using rule 463 ($@30)

    $@30  go to state 126


State 94

  434 optional_public_or_private_variable: "public" .

    $default  reduce using rule 434 (optional_public_or_private_variable)


State 95

  433 optional_public_or_private_variable: "private" .

    $default  reduce using rule 433 (optional_public_or_private_variable)


State 96

  435 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  437           | kwd_let optional_shared optional_public_or_private_variable . $@28 optional_field_annotation let_variable_declaration

    '{'  shift, and go to state 127

    $default  reduce using rule 436 ($@28)

    $@28  go to state 128


State 97

   80 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 80 (annotation_argument)


State 98

   81 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 81 (annotation_argument)


State 99

   78 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 78 (annotation_argument)


State 100

   79 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 79 (annotation_argument)


State 101

   77 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 77 (annotation_argument)


State 102

   24 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 129
    STRING_CHARACTER_ESC  shift, and go to state 130

    character_sequence  go to state 131


State 103

   83 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 132
    "false"                    shift, and go to state 133
    "integer constant"         shift, and go to state 134
    "floating point constant"  shift, and go to state 135
    "name"                     shift, and go to state 136
    "start of the string"      shift, and go to state 102

    string_constant                 go to state 137
    annotation_argument_value       go to state 138
    annotation_argument_value_list  go to state 139


State 104

   76 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 76 (annotation_argument)


State 105

   85 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 85 (annotation_argument_list)


State 106

   47 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 47 (expect_error)


State 107

   45 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 45 (expect_list)


State 108

   40 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 69

    $default  reduce using rule 41 (is_public_module)

    is_public_module  go to state 140


State 109

   38 require_module_name: require_module_name '/' "name" .

    $default  reduce using rule 38 (require_module_name)


State 110

   37 require_module_name: require_module_name '.' "name" .

    $default  reduce using rule 37 (require_module_name)


State 111

  442 single_alias: "name" $@29 '=' . type_declaration

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 182


State 112

  443 alias_list: single_alias ';' .

    $default  reduce using rule 443 (alias_list)


State 113

  445 alias_declaration: "typedef" '{' alias_list '}' .

    $default  reduce using rule 445 (alias_declaration)


State 114

  444 alias_list: alias_list single_alias . ';'

    ';'  shift, and go to state 183


State 115

   15 optional_public_or_private_module: "public" .

    $default  reduce using rule 15 (optional_public_or_private_module)


State 116

   16 optional_public_or_private_module: "private" .

    $default  reduce using rule 16 (optional_public_or_private_module)


State 117

   19 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 19 (module_declaration)


State 118

  573 bitfield_alias_declaration: "bitfield" $@60 "name" '{' . bitfield_bits ';' '}'

    "name"  shift, and go to state 184

    bitfield_bits  go to state 185


State 119

  571 variant_alias_declaration: "variant" $@58 "name" $@59 . '{' variant_type_list ';' '}'

    '{'  shift, and go to state 186


State 120

  190 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 190 (name_in_namespace)


State 121

   85 annotation_argument_list: annotation_argument_list . ',' annotation_argument
   90 annotation_declaration: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 64
    ')'  shift, and go to state 187


State 122

   92 annotation_list: annotation_list ',' annotation_declaration .

    $default  reduce using rule 92 (annotation_list)


State 123

  160 function_declaration: optional_public_or_private_function $@3 . function_declaration_header expression_block

    "operator"  shift, and go to state 188
    "++"        shift, and go to state 189
    "--"        shift, and go to state 190
    "name"      shift, and go to state 191

    function_name                go to state 192
    function_declaration_header  go to state 193


State 124

  450 enum_name: "name" .

    $default  reduce using rule 450 (enum_name)


State 125

  451 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . '{' enum_list '}'
  452                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration '{' enum_list '}'

    ':'  shift, and go to state 194
    '{'  shift, and go to state 195


State 126

  465 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@30 . structure_name $@31 '{' struct_variable_declaration_list '}'

    "sealed"  shift, and go to state 196

    $default  reduce using rule 455 (optional_sealed)

    optional_sealed  go to state 197
    structure_name   go to state 198


State 127

  435 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 427 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 199


State 128

  437 global_let: kwd_let optional_shared optional_public_or_private_variable $@28 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 200

    $default  reduce using rule 379 (optional_field_annotation)

    optional_field_annotation  go to state 201


State 129

   20 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 20 (character_sequence)


State 130

   21 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 21 (character_sequence)


State 131

   22 character_sequence: character_sequence . STRING_CHARACTER
   23                   | character_sequence . STRING_CHARACTER_ESC
   24 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 202
    STRING_CHARACTER_ESC  shift, and go to state 203
    "end of the string"   shift, and go to state 204


State 132

   69 annotation_argument_value: "true" .

    $default  reduce using rule 69 (annotation_argument_value)


State 133

   70 annotation_argument_value: "false" .

    $default  reduce using rule 70 (annotation_argument_value)


State 134

   67 annotation_argument_value: "integer constant" .

    $default  reduce using rule 67 (annotation_argument_value)


State 135

   68 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 68 (annotation_argument_value)


State 136

   66 annotation_argument_value: "name" .

    $default  reduce using rule 66 (annotation_argument_value)


State 137

   65 annotation_argument_value: string_constant .

    $default  reduce using rule 65 (annotation_argument_value)


State 138

   71 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 71 (annotation_argument_value_list)


State 139

   72 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
   83 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 205
    ')'  shift, and go to state 206


State 140

   40 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 40 (require_module)


State 141

  535 type_declaration: "array" . '<' $@36 type_declaration '>' $@37

    '<'  shift, and go to state 207


State 142

  538 type_declaration: "table" . '<' $@38 table_type_pair '>' $@39

    '<'  shift, and go to state 208


State 143

  541 type_declaration: "iterator" . '<' $@40 type_declaration '>' $@41

    '<'  shift, and go to state 209


State 144

  531 type_declaration: "smart_ptr" . '<' $@34 type_declaration '>' $@35

    '<'  shift, and go to state 210


State 145

  470 basic_type_declaration: "bool" .

    $default  reduce using rule 470 (basic_type_declaration)


State 146

  490 basic_type_declaration: "void" .

    $default  reduce using rule 490 (basic_type_declaration)


State 147

  471 basic_type_declaration: "string" .

    $default  reduce using rule 471 (basic_type_declaration)


State 148

  502 auto_type_declaration: "auto" .
  503                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 211

    '('       [reduce using rule 502 (auto_type_declaration)]
    $default  reduce using rule 502 (auto_type_declaration)


State 149

  472 basic_type_declaration: "int" .

    $default  reduce using rule 472 (basic_type_declaration)


State 150

  476 basic_type_declaration: "int2" .

    $default  reduce using rule 476 (basic_type_declaration)


State 151

  477 basic_type_declaration: "int3" .

    $default  reduce using rule 477 (basic_type_declaration)


State 152

  478 basic_type_declaration: "int4" .

    $default  reduce using rule 478 (basic_type_declaration)


State 153

  479 basic_type_declaration: "uint" .

    $default  reduce using rule 479 (basic_type_declaration)


State 154

  494 basic_type_declaration: "bitfield" .
  509 bitfield_type_declaration: "bitfield" . '<' $@32 bitfield_bits '>' $@33

    '<'  shift, and go to state 212

    '<'       [reduce using rule 494 (basic_type_declaration)]
    $default  reduce using rule 494 (basic_type_declaration)


State 155

  483 basic_type_declaration: "uint2" .

    $default  reduce using rule 483 (basic_type_declaration)


State 156

  484 basic_type_declaration: "uint3" .

    $default  reduce using rule 484 (basic_type_declaration)


State 157

  485 basic_type_declaration: "uint4" .

    $default  reduce using rule 485 (basic_type_declaration)


State 158

  486 basic_type_declaration: "float" .

    $default  reduce using rule 486 (basic_type_declaration)


State 159

  487 basic_type_declaration: "float2" .

    $default  reduce using rule 487 (basic_type_declaration)


State 160

  488 basic_type_declaration: "float3" .

    $default  reduce using rule 488 (basic_type_declaration)


State 161

  489 basic_type_declaration: "float4" .

    $default  reduce using rule 489 (basic_type_declaration)


State 162

  491 basic_type_declaration: "range" .

    $default  reduce using rule 491 (basic_type_declaration)


State 163

  492 basic_type_declaration: "urange" .

    $default  reduce using rule 492 (basic_type_declaration)


State 164

  542 type_declaration: "block" .
  545                 | "block" . '<' $@42 type_declaration '>' $@43
  548                 | "block" . '<' $@44 optional_function_argument_list optional_function_type '>' $@45

    '<'  shift, and go to state 213

    '<'       [reduce using rule 542 (type_declaration)]
    $default  reduce using rule 542 (type_declaration)


State 165

  475 basic_type_declaration: "int64" .

    $default  reduce using rule 475 (basic_type_declaration)


State 166

  482 basic_type_declaration: "uint64" .

    $default  reduce using rule 482 (basic_type_declaration)


State 167

  493 basic_type_declaration: "double" .

    $default  reduce using rule 493 (basic_type_declaration)


State 168

  549 type_declaration: "function" .
  552                 | "function" . '<' $@46 type_declaration '>' $@47
  555                 | "function" . '<' $@48 optional_function_argument_list optional_function_type '>' $@49

    '<'  shift, and go to state 214

    '<'       [reduce using rule 549 (type_declaration)]
    $default  reduce using rule 549 (type_declaration)


State 169

  556 type_declaration: "lambda" .
  559                 | "lambda" . '<' $@50 type_declaration '>' $@51
  562                 | "lambda" . '<' $@52 optional_function_argument_list optional_function_type '>' $@53

    '<'  shift, and go to state 215

    '<'       [reduce using rule 556 (type_declaration)]
    $default  reduce using rule 556 (type_declaration)


State 170

  473 basic_type_declaration: "int8" .

    $default  reduce using rule 473 (basic_type_declaration)


State 171

  480 basic_type_declaration: "uint8" .

    $default  reduce using rule 480 (basic_type_declaration)


State 172

  474 basic_type_declaration: "int16" .

    $default  reduce using rule 474 (basic_type_declaration)


State 173

  481 basic_type_declaration: "uint16" .

    $default  reduce using rule 481 (basic_type_declaration)


State 174

  565 type_declaration: "tuple" . '<' $@54 tuple_type_list '>' $@55

    '<'  shift, and go to state 216


State 175

  568 type_declaration: "variant" . '<' $@56 variant_type_list '>' $@57

    '<'  shift, and go to state 217


State 176

  504 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 218


State 177

  501 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 501 (structure_type_declaration)


State 178

  512 type_declaration: basic_type_declaration .

    $default  reduce using rule 512 (type_declaration)


State 179

  515 type_declaration: structure_type_declaration .

    $default  reduce using rule 515 (type_declaration)


State 180

  513 type_declaration: auto_type_declaration .

    $default  reduce using rule 513 (type_declaration)


State 181

  514 type_declaration: bitfield_type_declaration .

    $default  reduce using rule 514 (type_declaration)


State 182

  442 single_alias: "name" $@29 '=' type_declaration .
  516 type_declaration: type_declaration . '[' expr ']'
  517                 | type_declaration . '[' ']'
  518                 | type_declaration . '-' '[' ']'
  519                 | type_declaration . "explicit"
  520                 | type_declaration . "const"
  521                 | type_declaration . '-' "const"
  522                 | type_declaration . '&'
  523                 | type_declaration . '-' '&'
  524                 | type_declaration . '#'
  525                 | type_declaration . "implicit"
  526                 | type_declaration . '-' '#'
  527                 | type_declaration . '=' "const"
  528                 | type_declaration . '?'
  532                 | type_declaration . "??"

    "const"     shift, and go to state 219
    "implicit"  shift, and go to state 220
    "explicit"  shift, and go to state 221
    "??"        shift, and go to state 222
    '='         shift, and go to state 223
    '?'         shift, and go to state 224
    '&'         shift, and go to state 225
    '-'         shift, and go to state 226
    '['         shift, and go to state 227
    '#'         shift, and go to state 228

    $default  reduce using rule 442 (single_alias)


State 183

  444 alias_list: alias_list single_alias ';' .

    $default  reduce using rule 444 (alias_list)


State 184

  505 bitfield_bits: "name" .

    $default  reduce using rule 505 (bitfield_bits)


State 185

  506 bitfield_bits: bitfield_bits . ';' "name"
  573 bitfield_alias_declaration: "bitfield" $@60 "name" '{' bitfield_bits . ';' '}'

    ';'  shift, and go to state 229


State 186

  571 variant_alias_declaration: "variant" $@58 "name" $@59 '{' . variant_type_list ';' '}'

    "name"  shift, and go to state 230

    variant_type       go to state 231
    variant_type_list  go to state 232


State 187

   90 annotation_declaration: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 90 (annotation_declaration)


State 188

  101 function_name: "operator" . '!'
  102              | "operator" . '~'
  103              | "operator" . "+="
  104              | "operator" . "-="
  105              | "operator" . "*="
  106              | "operator" . "/="
  107              | "operator" . "%="
  108              | "operator" . "&="
  109              | "operator" . "|="
  110              | "operator" . "^="
  111              | "operator" . "&&="
  112              | "operator" . "||="
  113              | "operator" . "^^="
  114              | "operator" . "&&"
  115              | "operator" . "||"
  116              | "operator" . "^^"
  117              | "operator" . '+'
  118              | "operator" . '-'
  119              | "operator" . '*'
  120              | "operator" . '/'
  121              | "operator" . '%'
  122              | "operator" . '<'
  123              | "operator" . '>'
  124              | "operator" . ".."
  125              | "operator" . "=="
  126              | "operator" . "!="
  127              | "operator" . "<="
  128              | "operator" . ">="
  129              | "operator" . '&'
  130              | "operator" . '|'
  131              | "operator" . '^'
  134              | "operator" . "++"
  135              | "operator" . "--"
  136              | "operator" . "<<"
  137              | "operator" . ">>"
  138              | "operator" . "<<="
  139              | "operator" . ">>="
  140              | "operator" . "<<<"
  141              | "operator" . ">>>"
  142              | "operator" . "<<<="
  143              | "operator" . ">>>="
  144              | "operator" . '[' ']'
  145              | "operator" . "?[" ']'
  146              | "operator" . '.'
  147              | "operator" . "?."
  148              | "operator" . ":="
  149              | "operator" . "delete"
  150              | "operator" . "??"
  151              | "operator" . "is"
  152              | "operator" . "as"
  153              | "operator" . '?' "as"

    "is"      shift, and go to state 233
    "as"      shift, and go to state 234
    "delete"  shift, and go to state 235
    "+="      shift, and go to state 236
    "-="      shift, and go to state 237
    "/="      shift, and go to state 238
    "*="      shift, and go to state 239
    "%="      shift, and go to state 240
    "&="      shift, and go to state 241
    "|="      shift, and go to state 242
    "^="      shift, and go to state 243
    "<<"      shift, and go to state 244
    ">>"      shift, and go to state 245
    "++"      shift, and go to state 246
    "--"      shift, and go to state 247
    "<="      shift, and go to state 248
    "<<="     shift, and go to state 249
    ">>="     shift, and go to state 250
    ">="      shift, and go to state 251
    "=="      shift, and go to state 252
    "!="      shift, and go to state 253
    "??"      shift, and go to state 254
    "?."      shift, and go to state 255
    "?["      shift, and go to state 256
    ":="      shift, and go to state 257
    "<<<"     shift, and go to state 258
    ">>>"     shift, and go to state 259
    "<<<="    shift, and go to state 260
    ">>>="    shift, and go to state 261
    "&&"      shift, and go to state 262
    "||"      shift, and go to state 263
    "^^"      shift, and go to state 264
    "&&="     shift, and go to state 265
    "||="     shift, and go to state 266
    "^^="     shift, and go to state 267
    ".."      shift, and go to state 268
    '?'       shift, and go to state 269
    '|'       shift, and go to state 270
    '^'       shift, and go to state 271
    '&'       shift, and go to state 272
    '<'       shift, and go to state 273
    '>'       shift, and go to state 274
    '-'       shift, and go to state 275
    '+'       shift, and go to state 276
    '*'       shift, and go to state 277
    '/'       shift, and go to state 278
    '%'       shift, and go to state 279
    '~'       shift, and go to state 280
    '!'       shift, and go to state 281
    '.'       shift, and go to state 282
    '['       shift, and go to state 283


State 189

  132 function_name: "++" . "operator"

    "operator"  shift, and go to state 284


State 190

  133 function_name: "--" . "operator"

    "operator"  shift, and go to state 285


State 191

  100 function_name: "name" .

    $default  reduce using rule 100 (function_name)


State 192

  158 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 286

    $default  reduce using rule 95 (optional_function_argument_list)

    optional_function_argument_list  go to state 287


State 193

  160 function_declaration: optional_public_or_private_function $@3 function_declaration_header . expression_block

    '{'  shift, and go to state 288

    expression_block  go to state 289


State 194

  452 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration '{' enum_list '}'

    "int"     shift, and go to state 290
    "uint"    shift, and go to state 291
    "int8"    shift, and go to state 292
    "uint8"   shift, and go to state 293
    "int16"   shift, and go to state 294
    "uint16"  shift, and go to state 295

    enum_basic_type_declaration  go to state 296


State 195

  451 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' . enum_list '}'

    $default  reduce using rule 438 (enum_list)

    enum_list  go to state 297


State 196

  456 optional_sealed: "sealed" .

    $default  reduce using rule 456 (optional_sealed)


State 197

  457 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 298


State 198

  465 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@30 structure_name . $@31 '{' struct_variable_declaration_list '}'

    $default  reduce using rule 464 ($@31)

    $@31  go to state 299


State 199

  429 global_variable_declaration_list: global_variable_declaration_list . $@27 optional_field_annotation let_variable_declaration
  435 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    '}'  shift, and go to state 300

    $default  reduce using rule 428 ($@27)

    $@27  go to state 301


State 200

  380 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 27
    "in"    shift, and go to state 28
    "name"  shift, and go to state 29

    annotation_argument_name  go to state 30
    annotation_argument       go to state 31
    annotation_argument_list  go to state 302


State 201

  437 global_let: kwd_let optional_shared optional_public_or_private_variable $@28 optional_field_annotation . let_variable_declaration

    "name"  shift, and go to state 303

    let_variable_declaration     go to state 304
    variable_name_with_pos_list  go to state 305


State 202

   22 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 22 (character_sequence)


State 203

   23 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 23 (character_sequence)


State 204

   24 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 24 (string_constant)


State 205

   72 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 132
    "false"                    shift, and go to state 133
    "integer constant"         shift, and go to state 134
    "floating point constant"  shift, and go to state 135
    "name"                     shift, and go to state 136
    "start of the string"      shift, and go to state 102

    string_constant            go to state 137
    annotation_argument_value  go to state 306


State 206

   83 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 83 (annotation_argument)


State 207

  535 type_declaration: "array" '<' . $@36 type_declaration '>' $@37

    $default  reduce using rule 533 ($@36)

    $@36  go to state 307


State 208

  538 type_declaration: "table" '<' . $@38 table_type_pair '>' $@39

    $default  reduce using rule 536 ($@38)

    $@38  go to state 308


State 209

  541 type_declaration: "iterator" '<' . $@40 type_declaration '>' $@41

    $default  reduce using rule 539 ($@40)

    $@40  go to state 309


State 210

  531 type_declaration: "smart_ptr" '<' . $@34 type_declaration '>' $@35

    $default  reduce using rule 529 ($@34)

    $@34  go to state 310


State 211

  503 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 311


State 212

  509 bitfield_type_declaration: "bitfield" '<' . $@32 bitfield_bits '>' $@33

    $default  reduce using rule 507 ($@32)

    $@32  go to state 312


State 213

  545 type_declaration: "block" '<' . $@42 type_declaration '>' $@43
  548                 | "block" '<' . $@44 optional_function_argument_list optional_function_type '>' $@45

    ':'       reduce using rule 546 ($@44)
    '>'       reduce using rule 546 ($@44)
    '('       reduce using rule 546 ($@44)
    $default  reduce using rule 543 ($@42)

    $@42  go to state 313
    $@44  go to state 314


State 214

  552 type_declaration: "function" '<' . $@46 type_declaration '>' $@47
  555                 | "function" '<' . $@48 optional_function_argument_list optional_function_type '>' $@49

    ':'       reduce using rule 553 ($@48)
    '>'       reduce using rule 553 ($@48)
    '('       reduce using rule 553 ($@48)
    $default  reduce using rule 550 ($@46)

    $@46  go to state 315
    $@48  go to state 316


State 215

  559 type_declaration: "lambda" '<' . $@50 type_declaration '>' $@51
  562                 | "lambda" '<' . $@52 optional_function_argument_list optional_function_type '>' $@53

    ':'       reduce using rule 560 ($@52)
    '>'       reduce using rule 560 ($@52)
    '('       reduce using rule 560 ($@52)
    $default  reduce using rule 557 ($@50)

    $@50  go to state 317
    $@52  go to state 318


State 216

  565 type_declaration: "tuple" '<' . $@54 tuple_type_list '>' $@55

    $default  reduce using rule 563 ($@54)

    $@54  go to state 319


State 217

  568 type_declaration: "variant" '<' . $@56 variant_type_list '>' $@57

    $default  reduce using rule 566 ($@56)

    $@56  go to state 320


State 218

  504 auto_type_declaration: "$t" '(' . expr ')'

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 376
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 219

  520 type_declaration: type_declaration "const" .

    $default  reduce using rule 520 (type_declaration)


State 220

  525 type_declaration: type_declaration "implicit" .

    $default  reduce using rule 525 (type_declaration)


State 221

  519 type_declaration: type_declaration "explicit" .

    $default  reduce using rule 519 (type_declaration)


State 222

  532 type_declaration: type_declaration "??" .

    $default  reduce using rule 532 (type_declaration)


State 223

  527 type_declaration: type_declaration '=' . "const"

    "const"  shift, and go to state 384


State 224

  528 type_declaration: type_declaration '?' .

    $default  reduce using rule 528 (type_declaration)


State 225

  522 type_declaration: type_declaration '&' .

    $default  reduce using rule 522 (type_declaration)


State 226

  518 type_declaration: type_declaration '-' . '[' ']'
  521                 | type_declaration '-' . "const"
  523                 | type_declaration '-' . '&'
  526                 | type_declaration '-' . '#'

    "const"  shift, and go to state 385
    '&'      shift, and go to state 386
    '['      shift, and go to state 387
    '#'      shift, and go to state 388


State 227

  516 type_declaration: type_declaration '[' . expr ']'
  517                 | type_declaration '[' . ']'

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    ']'                               shift, and go to state 389
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 390
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 228

  524 type_declaration: type_declaration '#' .

    $default  reduce using rule 524 (type_declaration)


State 229

  506 bitfield_bits: bitfield_bits ';' . "name"
  573 bitfield_alias_declaration: "bitfield" $@60 "name" '{' bitfield_bits ';' . '}'

    "name"  shift, and go to state 391
    '}'     shift, and go to state 392


State 230

  406 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 393


State 231

  407 variant_type_list: variant_type .

    $default  reduce using rule 407 (variant_type_list)


State 232

  408 variant_type_list: variant_type_list . ';' variant_type
  571 variant_alias_declaration: "variant" $@58 "name" $@59 '{' variant_type_list . ';' '}'

    ';'  shift, and go to state 394


State 233

  151 function_name: "operator" "is" .

    $default  reduce using rule 151 (function_name)


State 234

  152 function_name: "operator" "as" .

    $default  reduce using rule 152 (function_name)


State 235

  149 function_name: "operator" "delete" .

    $default  reduce using rule 149 (function_name)


State 236

  103 function_name: "operator" "+=" .

    $default  reduce using rule 103 (function_name)


State 237

  104 function_name: "operator" "-=" .

    $default  reduce using rule 104 (function_name)


State 238

  106 function_name: "operator" "/=" .

    $default  reduce using rule 106 (function_name)


State 239

  105 function_name: "operator" "*=" .

    $default  reduce using rule 105 (function_name)


State 240

  107 function_name: "operator" "%=" .

    $default  reduce using rule 107 (function_name)


State 241

  108 function_name: "operator" "&=" .

    $default  reduce using rule 108 (function_name)


State 242

  109 function_name: "operator" "|=" .

    $default  reduce using rule 109 (function_name)


State 243

  110 function_name: "operator" "^=" .

    $default  reduce using rule 110 (function_name)


State 244

  136 function_name: "operator" "<<" .

    $default  reduce using rule 136 (function_name)


State 245

  137 function_name: "operator" ">>" .

    $default  reduce using rule 137 (function_name)


State 246

  134 function_name: "operator" "++" .

    $default  reduce using rule 134 (function_name)


State 247

  135 function_name: "operator" "--" .

    $default  reduce using rule 135 (function_name)


State 248

  127 function_name: "operator" "<=" .

    $default  reduce using rule 127 (function_name)


State 249

  138 function_name: "operator" "<<=" .

    $default  reduce using rule 138 (function_name)


State 250

  139 function_name: "operator" ">>=" .

    $default  reduce using rule 139 (function_name)


State 251

  128 function_name: "operator" ">=" .

    $default  reduce using rule 128 (function_name)


State 252

  125 function_name: "operator" "==" .

    $default  reduce using rule 125 (function_name)


State 253

  126 function_name: "operator" "!=" .

    $default  reduce using rule 126 (function_name)


State 254

  150 function_name: "operator" "??" .

    $default  reduce using rule 150 (function_name)


State 255

  147 function_name: "operator" "?." .

    $default  reduce using rule 147 (function_name)


State 256

  145 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 395


State 257

  148 function_name: "operator" ":=" .

    $default  reduce using rule 148 (function_name)


State 258

  140 function_name: "operator" "<<<" .

    $default  reduce using rule 140 (function_name)


State 259

  141 function_name: "operator" ">>>" .

    $default  reduce using rule 141 (function_name)


State 260

  142 function_name: "operator" "<<<=" .

    $default  reduce using rule 142 (function_name)


State 261

  143 function_name: "operator" ">>>=" .

    $default  reduce using rule 143 (function_name)


State 262

  114 function_name: "operator" "&&" .

    $default  reduce using rule 114 (function_name)


State 263

  115 function_name: "operator" "||" .

    $default  reduce using rule 115 (function_name)


State 264

  116 function_name: "operator" "^^" .

    $default  reduce using rule 116 (function_name)


State 265

  111 function_name: "operator" "&&=" .

    $default  reduce using rule 111 (function_name)


State 266

  112 function_name: "operator" "||=" .

    $default  reduce using rule 112 (function_name)


State 267

  113 function_name: "operator" "^^=" .

    $default  reduce using rule 113 (function_name)


State 268

  124 function_name: "operator" ".." .

    $default  reduce using rule 124 (function_name)


State 269

  153 function_name: "operator" '?' . "as"

    "as"  shift, and go to state 396


State 270

  130 function_name: "operator" '|' .

    $default  reduce using rule 130 (function_name)


State 271

  131 function_name: "operator" '^' .

    $default  reduce using rule 131 (function_name)


State 272

  129 function_name: "operator" '&' .

    $default  reduce using rule 129 (function_name)


State 273

  122 function_name: "operator" '<' .

    $default  reduce using rule 122 (function_name)


State 274

  123 function_name: "operator" '>' .

    $default  reduce using rule 123 (function_name)


State 275

  118 function_name: "operator" '-' .

    $default  reduce using rule 118 (function_name)


State 276

  117 function_name: "operator" '+' .

    $default  reduce using rule 117 (function_name)


State 277

  119 function_name: "operator" '*' .

    $default  reduce using rule 119 (function_name)


State 278

  120 function_name: "operator" '/' .

    $default  reduce using rule 120 (function_name)


State 279

  121 function_name: "operator" '%' .

    $default  reduce using rule 121 (function_name)


State 280

  102 function_name: "operator" '~' .

    $default  reduce using rule 102 (function_name)


State 281

  101 function_name: "operator" '!' .

    $default  reduce using rule 101 (function_name)


State 282

  146 function_name: "operator" '.' .

    $default  reduce using rule 146 (function_name)


State 283

  144 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 397


State 284

  132 function_name: "++" "operator" .

    $default  reduce using rule 132 (function_name)


State 285

  133 function_name: "--" "operator" .

    $default  reduce using rule 133 (function_name)


State 286

   96 optional_function_argument_list: '(' . ')'
   97                                | '(' . function_argument_list ')'

    "[["  shift, and go to state 200
    ')'   shift, and go to state 398

    $default  reduce using rule 379 (optional_field_annotation)

    optional_field_annotation      go to state 399
    function_argument_declaration  go to state 400
    function_argument_list         go to state 401


State 287

  158 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 402

    $default  reduce using rule 98 (optional_function_type)

    optional_function_type  go to state 403


State 288

  161 expression_block: '{' . expressions '}'
  162                 | '{' . expressions '}' "finally" '{' expressions '}'

    $default  reduce using rule 183 (expressions)

    expressions  go to state 404


State 289

  160 function_declaration: optional_public_or_private_function $@3 function_declaration_header expression_block .

    $default  reduce using rule 160 (function_declaration)


State 290

  495 enum_basic_type_declaration: "int" .

    $default  reduce using rule 495 (enum_basic_type_declaration)


State 291

  498 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 498 (enum_basic_type_declaration)


State 292

  496 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 496 (enum_basic_type_declaration)


State 293

  499 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 499 (enum_basic_type_declaration)


State 294

  497 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 497 (enum_basic_type_declaration)


State 295

  500 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 500 (enum_basic_type_declaration)


State 296

  452 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . '{' enum_list '}'

    '{'  shift, and go to state 405


State 297

  439 enum_list: enum_list . "name" ';'
  440          | enum_list . "name" '=' expr ';'
  451 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' enum_list . '}'

    "name"  shift, and go to state 406
    '}'     shift, and go to state 407


State 298

  457 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 408

    $default  reduce using rule 453 (optional_structure_parent)

    optional_structure_parent  go to state 409


State 299

  465 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@30 structure_name $@31 . '{' struct_variable_declaration_list '}'

    '{'  shift, and go to state 410


State 300

  435 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 435 (global_let)


State 301

  429 global_variable_declaration_list: global_variable_declaration_list $@27 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 200

    $default  reduce using rule 379 (optional_field_annotation)

    optional_field_annotation  go to state 411


State 302

   85 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  380 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 64
    ']'  shift, and go to state 412


State 303

  466 variable_name_with_pos_list: "name" .
  467                            | "name" . "aka" "name"

    "aka"  shift, and go to state 413

    $default  reduce using rule 466 (variable_name_with_pos_list)


State 304

  437 global_let: kwd_let optional_shared optional_public_or_private_variable $@28 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 437 (global_let)


State 305

  422 let_variable_declaration: variable_name_with_pos_list . ':' type_declaration ';'
  423                         | variable_name_with_pos_list . ':' type_declaration copy_or_move_or_clone expr ';'
  424                         | variable_name_with_pos_list . ':' type_declaration copy_or_move_or_clone expr_pipe
  425                         | variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr ';'
  426                         | variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe
  468 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  469                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    ','  shift, and go to state 414
    ':'  shift, and go to state 415
    '&'  shift, and go to state 416

    $default  reduce using rule 420 (optional_ref)

    optional_ref  go to state 417


State 306

   72 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 72 (annotation_argument_value_list)


State 307

  535 type_declaration: "array" '<' $@36 . type_declaration '>' $@37

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 418


State 308

  538 type_declaration: "table" '<' $@38 . table_type_pair '>' $@39

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    table_type_pair             go to state 419
    type_declaration            go to state 420


State 309

  541 type_declaration: "iterator" '<' $@40 . type_declaration '>' $@41

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 421


State 310

  531 type_declaration: "smart_ptr" '<' $@34 . type_declaration '>' $@35

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 422


State 311

  503 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 423


State 312

  509 bitfield_type_declaration: "bitfield" '<' $@32 . bitfield_bits '>' $@33

    "name"  shift, and go to state 184

    bitfield_bits  go to state 424


State 313

  545 type_declaration: "block" '<' $@42 . type_declaration '>' $@43

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 425


State 314

  548 type_declaration: "block" '<' $@44 . optional_function_argument_list optional_function_type '>' $@45

    '('  shift, and go to state 286

    $default  reduce using rule 95 (optional_function_argument_list)

    optional_function_argument_list  go to state 426


State 315

  552 type_declaration: "function" '<' $@46 . type_declaration '>' $@47

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 427


State 316

  555 type_declaration: "function" '<' $@48 . optional_function_argument_list optional_function_type '>' $@49

    '('  shift, and go to state 286

    $default  reduce using rule 95 (optional_function_argument_list)

    optional_function_argument_list  go to state 428


State 317

  559 type_declaration: "lambda" '<' $@50 . type_declaration '>' $@51

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 429


State 318

  562 type_declaration: "lambda" '<' $@52 . optional_function_argument_list optional_function_type '>' $@53

    '('  shift, and go to state 286

    $default  reduce using rule 95 (optional_function_argument_list)

    optional_function_argument_list  go to state 430


State 319

  565 type_declaration: "tuple" '<' $@54 . tuple_type_list '>' $@55

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 431

    name_in_namespace           go to state 177
    tuple_type                  go to state 432
    tuple_type_list             go to state 433
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 434


State 320

  568 type_declaration: "variant" '<' $@56 . variant_type_list '>' $@57

    "name"  shift, and go to state 230

    variant_type       go to state 231
    variant_type_list  go to state 435


State 321

  295 expr: "true" .

    $default  reduce using rule 295 (expr)


State 322

  296 expr: "false" .

    $default  reduce using rule 296 (expr)


State 323

  193 expr_new: "new" . type_declaration
  194         | "new" . type_declaration '(' ')'
  195         | "new" . type_declaration '(' expr_list ')'
  196         | "new" . make_decl

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "[["         shift, and go to state 342
    "[{"         shift, and go to state 343
    "{{"         shift, and go to state 344
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 436
    make_decl                   go to state 437
    make_struct_decl            go to state 380
    make_dim_decl               go to state 381
    make_table_decl             go to state 382
    array_comprehension         go to state 383


State 324

  224 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  225               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  226               | "typeinfo" . '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

    '('  shift, and go to state 438


State 325

  223 expr_type_decl: "type" . '<' $@10 type_declaration '>' $@11

    '<'  shift, and go to state 439


State 326

  289 expr: "null" .

    $default  reduce using rule 289 (expr)


State 327

  342 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 440


State 328

  214 expr_cast: "cast" . '<' $@4 type_declaration '>' $@5 expr

    '<'  shift, and go to state 441


State 329

  217 expr_cast: "upcast" . '<' $@6 type_declaration '>' $@7 expr

    '<'  shift, and go to state 442


State 330

  343 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 443


State 331

  220 expr_cast: "reinterpret" . '<' $@8 type_declaration '>' $@9 expr

    '<'  shift, and go to state 444


State 332

  373 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 445


State 333

  494 basic_type_declaration: "bitfield" .

    $default  reduce using rule 494 (basic_type_declaration)


State 334

  344 expr: "generator" . '<' type_declaration '>' optional_capture_list '(' ')'
  345     | "generator" . '<' type_declaration '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 446


State 335

  325 expr: "++" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 447
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 336

  326 expr: "--" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 448
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 337

  374 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 449


State 338

  375 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 450


State 339

  376 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 451


State 340

  377 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 452


State 341

  378 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 453


State 342

  586 make_struct_decl: "[[" . type_declaration make_struct_dim optional_block ']' ']'
  587                 | "[[" . type_declaration optional_block ']' ']'
  588                 | "[[" . type_declaration '(' ')' optional_block ']' ']'
  589                 | "[[" . type_declaration '(' ')' make_struct_dim optional_block ']' ']'
  600 make_dim_decl: "[[" . type_declaration make_dim ']' ']'
  607 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 454
    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 455


State 343

  590 make_struct_decl: "[{" . type_declaration make_struct_dim optional_block '}' ']'
  591                 | "[{" . type_declaration '(' ')' make_struct_dim optional_block '}' ']'
  601 make_dim_decl: "[{" . type_declaration make_dim '}' ']'
  608 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "for"        shift, and go to state 456
    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 457


State 344

  604 make_table_decl: "{{" . make_table '}' '}'

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 458
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_map_tuple          go to state 459
    make_dim_decl           go to state 381
    make_table              go to state 460
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 345

  245 expr_numeric_const: "integer constant" .

    $default  reduce using rule 245 (expr_numeric_const)


State 346

  247 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 247 (expr_numeric_const)


State 347

  246 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 246 (expr_numeric_const)


State 348

  248 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 248 (expr_numeric_const)


State 349

  249 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 249 (expr_numeric_const)


State 350

  250 expr_numeric_const: "double constant" .

    $default  reduce using rule 250 (expr_numeric_const)


State 351

   28 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 25 (string_builder_body)

    string_builder_body  go to state 461


State 352

  302 expr: '-' . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 462
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 353

  301 expr: '+' . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 463
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 354

  341 expr: '*' . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 464
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 355

   32 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 50
    "name"  shift, and go to state 51

    name_in_namespace  go to state 465


State 356

  300 expr: '~' . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 466
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 357

  299 expr: '!' . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 467
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 358

  329 expr: '(' . expr ')'

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 468
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 359

  232 block_or_lambda: '$' .

    $default  reduce using rule 232 (block_or_lambda)


State 360

  233 block_or_lambda: '@' .
  234                | '@' . '@'
  277 func_addr_expr: '@' . '@' name_in_namespace
  280               | '@' . '@' '<' $@12 type_declaration '>' $@13 name_in_namespace
  283               | '@' . '@' '<' $@14 optional_function_argument_list optional_function_type '>' $@15 name_in_namespace

    '@'  shift, and go to state 469

    $default  reduce using rule 233 (block_or_lambda)


State 361

  293 expr: string_builder .

    $default  reduce using rule 293 (expr)


State 362

  292 expr: expr_reader .

    $default  reduce using rule 292 (expr)


State 363

  243 expr_block: expression_block .

    $default  reduce using rule 243 (expr_block)


State 364

  274 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  290 expr: name_in_namespace .
  337     | name_in_namespace . '(' ')'
  338     | name_in_namespace . '(' expr_list ')'
  372     | name_in_namespace . "name"

    "name"  shift, and go to state 470
    '('     shift, and go to state 471

    "name"    [reduce using rule 290 (expr)]
    '('       [reduce using rule 290 (expr)]
    $default  reduce using rule 290 (expr)


State 365

  366 expr: expr_new .

    $default  reduce using rule 366 (expr)


State 366

  365 expr: expr_cast .

    $default  reduce using rule 365 (expr)


State 367

  364 expr: expr_type_decl .

    $default  reduce using rule 364 (expr)


State 368

  363 expr: expr_type_info .

    $default  reduce using rule 363 (expr)


State 369

  244 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 12

    $default  reduce using rule 93 (optional_annotation_list)

    optional_annotation_list  go to state 472


State 370

  369 expr: expr_block .

    $default  reduce using rule 369 (expr)


State 371

  291 expr: expr_numeric_const .

    $default  reduce using rule 291 (expr)


State 372

  368 expr: expr_named_call .

    $default  reduce using rule 368 (expr)


State 373

  367 expr: expr_method_call .

    $default  reduce using rule 367 (expr)


State 374

  336 expr: func_addr_expr .

    $default  reduce using rule 336 (expr)


State 375

  297 expr: expr_field .

    $default  reduce using rule 297 (expr)


State 376

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr
  504 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507
    ')'    shift, and go to state 508


State 377

  298 expr: expr_mtag .

    $default  reduce using rule 298 (expr)


State 378

  339 expr: basic_type_declaration . '(' ')'
  340     | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 509


State 379

  294 expr: make_decl .

    $default  reduce using rule 294 (expr)


State 380

  574 make_decl: make_struct_decl .

    $default  reduce using rule 574 (make_decl)


State 381

  575 make_decl: make_dim_decl .

    $default  reduce using rule 575 (make_decl)


State 382

  576 make_decl: make_table_decl .

    $default  reduce using rule 576 (make_decl)


State 383

  577 make_decl: array_comprehension .

    $default  reduce using rule 577 (make_decl)


State 384

  527 type_declaration: type_declaration '=' "const" .

    $default  reduce using rule 527 (type_declaration)


State 385

  521 type_declaration: type_declaration '-' "const" .

    $default  reduce using rule 521 (type_declaration)


State 386

  523 type_declaration: type_declaration '-' '&' .

    $default  reduce using rule 523 (type_declaration)


State 387

  518 type_declaration: type_declaration '-' '[' . ']'

    ']'  shift, and go to state 510


State 388

  526 type_declaration: type_declaration '-' '#' .

    $default  reduce using rule 526 (type_declaration)


State 389

  517 type_declaration: type_declaration '[' ']' .

    $default  reduce using rule 517 (type_declaration)


State 390

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr
  516 type_declaration: type_declaration '[' expr . ']'

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507
    ']'    shift, and go to state 511


State 391

  506 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 506 (bitfield_bits)


State 392

  573 bitfield_alias_declaration: "bitfield" $@60 "name" '{' bitfield_bits ';' '}' .

    $default  reduce using rule 573 (bitfield_alias_declaration)


State 393

  406 variant_type: "name" ':' . type_declaration

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 512


State 394

  408 variant_type_list: variant_type_list ';' . variant_type
  571 variant_alias_declaration: "variant" $@58 "name" $@59 '{' variant_type_list ';' . '}'

    "name"  shift, and go to state 230
    '}'     shift, and go to state 513

    variant_type  go to state 514


State 395

  145 function_name: "operator" "?[" ']' .

    $default  reduce using rule 145 (function_name)


State 396

  153 function_name: "operator" '?' "as" .

    $default  reduce using rule 153 (function_name)


State 397

  144 function_name: "operator" '[' ']' .

    $default  reduce using rule 144 (function_name)


State 398

   96 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 96 (optional_function_argument_list)


State 399

  398 function_argument_declaration: optional_field_annotation . variable_declaration
  399                              | optional_field_annotation . "var" variable_declaration

    "var"   shift, and go to state 515
    "name"  shift, and go to state 303

    variable_declaration         go to state 516
    variable_name_with_pos_list  go to state 517


State 400

  400 function_argument_list: function_argument_declaration .

    $default  reduce using rule 400 (function_argument_list)


State 401

   97 optional_function_argument_list: '(' function_argument_list . ')'
  401 function_argument_list: function_argument_list . ';' function_argument_declaration

    ')'  shift, and go to state 518
    ';'  shift, and go to state 519


State 402

   99 optional_function_type: ':' . type_declaration

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 520


State 403

  158 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 158 (function_declaration_header)


State 404

  161 expression_block: '{' expressions . '}'
  162                 | '{' expressions . '}' "finally" '{' expressions '}'
  184 expressions: expressions . expression_any
  185            | expressions . error

    error                             shift, and go to state 521
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 522
    "if"                              shift, and go to state 523
    "static_if"                       shift, and go to state 524
    "for"                             shift, and go to state 525
    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "return"                          shift, and go to state 526
    "null"                            shift, and go to state 326
    "break"                           shift, and go to state 527
    "try"                             shift, and go to state 528
    "delete"                          shift, and go to state 529
    "deref"                           shift, and go to state 327
    "with"                            shift, and go to state 530
    "assume"                          shift, and go to state 531
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 330
    "continue"                        shift, and go to state 532
    "pass"                            shift, and go to state 533
    "reinterpret"                     shift, and go to state 331
    "label"                           shift, and go to state 534
    "goto"                            shift, and go to state 535
    "unsafe"                          shift, and go to state 536
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "yield"                           shift, and go to state 537
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "@ <|"                            shift, and go to state 538
    "@@ <|"                           shift, and go to state 539
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    ';'                               shift, and go to state 540
    '{'                               shift, and go to state 288
    '}'                               shift, and go to state 541

    string_builder           go to state 361
    expr_reader              go to state 362
    expression_label         go to state 542
    expression_goto          go to state 543
    if_or_static_if          go to state 544
    expression_if_then_else  go to state 545
    expression_for_loop      go to state 546
    expression_unsafe        go to state 547
    expression_while_loop    go to state 548
    expression_with          go to state 549
    expression_with_alias    go to state 550
    expression_block         go to state 363
    expression_any           go to state 551
    expr_pipe                go to state 552
    name_in_namespace        go to state 364
    expression_delete        go to state 553
    expr_new                 go to state 365
    expression_break         go to state 554
    expression_continue      go to state 555
    expression_return        go to state 556
    expression_yield         go to state 557
    expression_try_catch     go to state 558
    kwd_let                  go to state 559
    expression_let           go to state 560
    expr_cast                go to state 366
    expr_type_decl           go to state 367
    expr_type_info           go to state 368
    block_or_lambda          go to state 369
    expr_block               go to state 370
    expr_numeric_const       go to state 371
    expr_assign              go to state 561
    expr_assign_pipe         go to state 562
    expr_named_call          go to state 372
    expr_method_call         go to state 373
    func_addr_expr           go to state 374
    expr_field               go to state 375
    expr                     go to state 563
    expr_mtag                go to state 377
    basic_type_declaration   go to state 378
    make_decl                go to state 379
    make_struct_decl         go to state 380
    make_dim_decl            go to state 381
    make_table_decl          go to state 382
    array_comprehension      go to state 383


State 405

  452 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' . enum_list '}'

    $default  reduce using rule 438 (enum_list)

    enum_list  go to state 564


State 406

  439 enum_list: enum_list "name" . ';'
  440          | enum_list "name" . '=' expr ';'

    '='  shift, and go to state 565
    ';'  shift, and go to state 566


State 407

  451 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' enum_list '}' .

    $default  reduce using rule 451 (enum_declaration)


State 408

  454 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 50
    "name"  shift, and go to state 51

    name_in_namespace  go to state 567


State 409

  457 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 457 (structure_name)


State 410

  465 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@30 structure_name $@31 '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 390 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 568


State 411

  429 global_variable_declaration_list: global_variable_declaration_list $@27 optional_field_annotation . let_variable_declaration

    "name"  shift, and go to state 303

    let_variable_declaration     go to state 569
    variable_name_with_pos_list  go to state 305


State 412

  380 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 570


State 413

  467 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 571


State 414

  468 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  469                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 572


State 415

  422 let_variable_declaration: variable_name_with_pos_list ':' . type_declaration ';'
  423                         | variable_name_with_pos_list ':' . type_declaration copy_or_move_or_clone expr ';'
  424                         | variable_name_with_pos_list ':' . type_declaration copy_or_move_or_clone expr_pipe

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 573


State 416

  421 optional_ref: '&' .

    $default  reduce using rule 421 (optional_ref)


State 417

  425 let_variable_declaration: variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr ';'
  426                         | variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 574
    ":="  shift, and go to state 575
    '='   shift, and go to state 576

    copy_or_move_or_clone  go to state 577


State 418

  516 type_declaration: type_declaration . '[' expr ']'
  517                 | type_declaration . '[' ']'
  518                 | type_declaration . '-' '[' ']'
  519                 | type_declaration . "explicit"
  520                 | type_declaration . "const"
  521                 | type_declaration . '-' "const"
  522                 | type_declaration . '&'
  523                 | type_declaration . '-' '&'
  524                 | type_declaration . '#'
  525                 | type_declaration . "implicit"
  526                 | type_declaration . '-' '#'
  527                 | type_declaration . '=' "const"
  528                 | type_declaration . '?'
  532                 | type_declaration . "??"
  535                 | "array" '<' $@36 type_declaration . '>' $@37

    "const"     shift, and go to state 219
    "implicit"  shift, and go to state 220
    "explicit"  shift, and go to state 221
    "??"        shift, and go to state 222
    '='         shift, and go to state 223
    '?'         shift, and go to state 224
    '&'         shift, and go to state 225
    '>'         shift, and go to state 578
    '-'         shift, and go to state 226
    '['         shift, and go to state 227
    '#'         shift, and go to state 228


State 419

  538 type_declaration: "table" '<' $@38 table_type_pair . '>' $@39

    '>'  shift, and go to state 579


State 420

  510 table_type_pair: type_declaration .
  511                | type_declaration . ';' type_declaration
  516 type_declaration: type_declaration . '[' expr ']'
  517                 | type_declaration . '[' ']'
  518                 | type_declaration . '-' '[' ']'
  519                 | type_declaration . "explicit"
  520                 | type_declaration . "const"
  521                 | type_declaration . '-' "const"
  522                 | type_declaration . '&'
  523                 | type_declaration . '-' '&'
  524                 | type_declaration . '#'
  525                 | type_declaration . "implicit"
  526                 | type_declaration . '-' '#'
  527                 | type_declaration . '=' "const"
  528                 | type_declaration . '?'
  532                 | type_declaration . "??"

    "const"     shift, and go to state 219
    "implicit"  shift, and go to state 220
    "explicit"  shift, and go to state 221
    "??"        shift, and go to state 222
    '='         shift, and go to state 223
    '?'         shift, and go to state 224
    '&'         shift, and go to state 225
    '-'         shift, and go to state 226
    '['         shift, and go to state 227
    ';'         shift, and go to state 580
    '#'         shift, and go to state 228

    $default  reduce using rule 510 (table_type_pair)


State 421

  516 type_declaration: type_declaration . '[' expr ']'
  517                 | type_declaration . '[' ']'
  518                 | type_declaration . '-' '[' ']'
  519                 | type_declaration . "explicit"
  520                 | type_declaration . "const"
  521                 | type_declaration . '-' "const"
  522                 | type_declaration . '&'
  523                 | type_declaration . '-' '&'
  524                 | type_declaration . '#'
  525                 | type_declaration . "implicit"
  526                 | type_declaration . '-' '#'
  527                 | type_declaration . '=' "const"
  528                 | type_declaration . '?'
  532                 | type_declaration . "??"
  541                 | "iterator" '<' $@40 type_declaration . '>' $@41

    "const"     shift, and go to state 219
    "implicit"  shift, and go to state 220
    "explicit"  shift, and go to state 221
    "??"        shift, and go to state 222
    '='         shift, and go to state 223
    '?'         shift, and go to state 224
    '&'         shift, and go to state 225
    '>'         shift, and go to state 581
    '-'         shift, and go to state 226
    '['         shift, and go to state 227
    '#'         shift, and go to state 228


State 422

  516 type_declaration: type_declaration . '[' expr ']'
  517                 | type_declaration . '[' ']'
  518                 | type_declaration . '-' '[' ']'
  519                 | type_declaration . "explicit"
  520                 | type_declaration . "const"
  521                 | type_declaration . '-' "const"
  522                 | type_declaration . '&'
  523                 | type_declaration . '-' '&'
  524                 | type_declaration . '#'
  525                 | type_declaration . "implicit"
  526                 | type_declaration . '-' '#'
  527                 | type_declaration . '=' "const"
  528                 | type_declaration . '?'
  531                 | "smart_ptr" '<' $@34 type_declaration . '>' $@35
  532                 | type_declaration . "??"

    "const"     shift, and go to state 219
    "implicit"  shift, and go to state 220
    "explicit"  shift, and go to state 221
    "??"        shift, and go to state 222
    '='         shift, and go to state 223
    '?'         shift, and go to state 224
    '&'         shift, and go to state 225
    '>'         shift, and go to state 582
    '-'         shift, and go to state 226
    '['         shift, and go to state 227
    '#'         shift, and go to state 228


State 423

  503 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 503 (auto_type_declaration)


State 424

  506 bitfield_bits: bitfield_bits . ';' "name"
  509 bitfield_type_declaration: "bitfield" '<' $@32 bitfield_bits . '>' $@33

    '>'  shift, and go to state 583
    ';'  shift, and go to state 584


State 425

  516 type_declaration: type_declaration . '[' expr ']'
  517                 | type_declaration . '[' ']'
  518                 | type_declaration . '-' '[' ']'
  519                 | type_declaration . "explicit"
  520                 | type_declaration . "const"
  521                 | type_declaration . '-' "const"
  522                 | type_declaration . '&'
  523                 | type_declaration . '-' '&'
  524                 | type_declaration . '#'
  525                 | type_declaration . "implicit"
  526                 | type_declaration . '-' '#'
  527                 | type_declaration . '=' "const"
  528                 | type_declaration . '?'
  532                 | type_declaration . "??"
  545                 | "block" '<' $@42 type_declaration . '>' $@43

    "const"     shift, and go to state 219
    "implicit"  shift, and go to state 220
    "explicit"  shift, and go to state 221
    "??"        shift, and go to state 222
    '='         shift, and go to state 223
    '?'         shift, and go to state 224
    '&'         shift, and go to state 225
    '>'         shift, and go to state 585
    '-'         shift, and go to state 226
    '['         shift, and go to state 227
    '#'         shift, and go to state 228


State 426

  548 type_declaration: "block" '<' $@44 optional_function_argument_list . optional_function_type '>' $@45

    ':'  shift, and go to state 402

    $default  reduce using rule 98 (optional_function_type)

    optional_function_type  go to state 586


State 427

  516 type_declaration: type_declaration . '[' expr ']'
  517                 | type_declaration . '[' ']'
  518                 | type_declaration . '-' '[' ']'
  519                 | type_declaration . "explicit"
  520                 | type_declaration . "const"
  521                 | type_declaration . '-' "const"
  522                 | type_declaration . '&'
  523                 | type_declaration . '-' '&'
  524                 | type_declaration . '#'
  525                 | type_declaration . "implicit"
  526                 | type_declaration . '-' '#'
  527                 | type_declaration . '=' "const"
  528                 | type_declaration . '?'
  532                 | type_declaration . "??"
  552                 | "function" '<' $@46 type_declaration . '>' $@47

    "const"     shift, and go to state 219
    "implicit"  shift, and go to state 220
    "explicit"  shift, and go to state 221
    "??"        shift, and go to state 222
    '='         shift, and go to state 223
    '?'         shift, and go to state 224
    '&'         shift, and go to state 225
    '>'         shift, and go to state 587
    '-'         shift, and go to state 226
    '['         shift, and go to state 227
    '#'         shift, and go to state 228


State 428

  555 type_declaration: "function" '<' $@48 optional_function_argument_list . optional_function_type '>' $@49

    ':'  shift, and go to state 402

    $default  reduce using rule 98 (optional_function_type)

    optional_function_type  go to state 588


State 429

  516 type_declaration: type_declaration . '[' expr ']'
  517                 | type_declaration . '[' ']'
  518                 | type_declaration . '-' '[' ']'
  519                 | type_declaration . "explicit"
  520                 | type_declaration . "const"
  521                 | type_declaration . '-' "const"
  522                 | type_declaration . '&'
  523                 | type_declaration . '-' '&'
  524                 | type_declaration . '#'
  525                 | type_declaration . "implicit"
  526                 | type_declaration . '-' '#'
  527                 | type_declaration . '=' "const"
  528                 | type_declaration . '?'
  532                 | type_declaration . "??"
  559                 | "lambda" '<' $@50 type_declaration . '>' $@51

    "const"     shift, and go to state 219
    "implicit"  shift, and go to state 220
    "explicit"  shift, and go to state 221
    "??"        shift, and go to state 222
    '='         shift, and go to state 223
    '?'         shift, and go to state 224
    '&'         shift, and go to state 225
    '>'         shift, and go to state 589
    '-'         shift, and go to state 226
    '['         shift, and go to state 227
    '#'         shift, and go to state 228


State 430

  562 type_declaration: "lambda" '<' $@52 optional_function_argument_list . optional_function_type '>' $@53

    ':'  shift, and go to state 402

    $default  reduce using rule 98 (optional_function_type)

    optional_function_type  go to state 590


State 431

  189 name_in_namespace: "name" .
  190                  | "name" . "::" "name"
  403 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 80
    ':'   shift, and go to state 591

    $default  reduce using rule 189 (name_in_namespace)


State 432

  404 tuple_type_list: tuple_type .

    $default  reduce using rule 404 (tuple_type_list)


State 433

  405 tuple_type_list: tuple_type_list . ';' tuple_type
  565 type_declaration: "tuple" '<' $@54 tuple_type_list . '>' $@55

    '>'  shift, and go to state 592
    ';'  shift, and go to state 593


State 434

  402 tuple_type: type_declaration .
  516 type_declaration: type_declaration . '[' expr ']'
  517                 | type_declaration . '[' ']'
  518                 | type_declaration . '-' '[' ']'
  519                 | type_declaration . "explicit"
  520                 | type_declaration . "const"
  521                 | type_declaration . '-' "const"
  522                 | type_declaration . '&'
  523                 | type_declaration . '-' '&'
  524                 | type_declaration . '#'
  525                 | type_declaration . "implicit"
  526                 | type_declaration . '-' '#'
  527                 | type_declaration . '=' "const"
  528                 | type_declaration . '?'
  532                 | type_declaration . "??"

    "const"     shift, and go to state 219
    "implicit"  shift, and go to state 220
    "explicit"  shift, and go to state 221
    "??"        shift, and go to state 222
    '='         shift, and go to state 223
    '?'         shift, and go to state 224
    '&'         shift, and go to state 225
    '-'         shift, and go to state 226
    '['         shift, and go to state 227
    '#'         shift, and go to state 228

    $default  reduce using rule 402 (tuple_type)


State 435

  408 variant_type_list: variant_type_list . ';' variant_type
  568 type_declaration: "variant" '<' $@56 variant_type_list . '>' $@57

    '>'  shift, and go to state 594
    ';'  shift, and go to state 595


State 436

  193 expr_new: "new" type_declaration .
  194         | "new" type_declaration . '(' ')'
  195         | "new" type_declaration . '(' expr_list ')'
  516 type_declaration: type_declaration . '[' expr ']'
  517                 | type_declaration . '[' ']'
  518                 | type_declaration . '-' '[' ']'
  519                 | type_declaration . "explicit"
  520                 | type_declaration . "const"
  521                 | type_declaration . '-' "const"
  522                 | type_declaration . '&'
  523                 | type_declaration . '-' '&'
  524                 | type_declaration . '#'
  525                 | type_declaration . "implicit"
  526                 | type_declaration . '-' '#'
  527                 | type_declaration . '=' "const"
  528                 | type_declaration . '?'
  532                 | type_declaration . "??"

    "const"     shift, and go to state 219
    "implicit"  shift, and go to state 220
    "explicit"  shift, and go to state 221
    "??"        shift, and go to state 222
    '='         shift, and go to state 223
    '?'         shift, and go to state 224
    '&'         shift, and go to state 225
    '-'         shift, and go to state 226
    '['         shift, and go to state 227
    '('         shift, and go to state 596
    '#'         shift, and go to state 228

    "??"      [reduce using rule 193 (expr_new)]
    '='       [reduce using rule 193 (expr_new)]
    '?'       [reduce using rule 193 (expr_new)]
    '&'       [reduce using rule 193 (expr_new)]
    '-'       [reduce using rule 193 (expr_new)]
    '['       [reduce using rule 193 (expr_new)]
    '('       [reduce using rule 193 (expr_new)]
    $default  reduce using rule 193 (expr_new)


State 437

  196 expr_new: "new" make_decl .

    $default  reduce using rule 196 (expr_new)


State 438

  224 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  225               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  226               | "typeinfo" '(' . name_in_namespace '<' "name" ';' "name" '>' expr ')'

    "::"    shift, and go to state 50
    "name"  shift, and go to state 51

    name_in_namespace  go to state 597


State 439

  223 expr_type_decl: "type" '<' . $@10 type_declaration '>' $@11

    $default  reduce using rule 221 ($@10)

    $@10  go to state 598


State 440

  342 expr: "deref" '(' . expr ')'

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 599
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 441

  214 expr_cast: "cast" '<' . $@4 type_declaration '>' $@5 expr

    $default  reduce using rule 212 ($@4)

    $@4  go to state 600


State 442

  217 expr_cast: "upcast" '<' . $@6 type_declaration '>' $@7 expr

    $default  reduce using rule 215 ($@6)

    $@6  go to state 601


State 443

  343 expr: "addr" '(' . expr ')'

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 602
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 444

  220 expr_cast: "reinterpret" '<' . $@8 type_declaration '>' $@9 expr

    $default  reduce using rule 218 ($@8)

    $@8  go to state 603


State 445

  373 expr: "unsafe" '(' . expr ')'

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 604
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 446

  344 expr: "generator" '<' . type_declaration '>' optional_capture_list '(' ')'
  345     | "generator" '<' . type_declaration '>' optional_capture_list '(' expr ')'

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 605


State 447

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  325     | "++" expr .
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"  shift, and go to state 473
    "as"  shift, and go to state 474
    "++"  shift, and go to state 477
    "--"  shift, and go to state 478
    "->"  shift, and go to state 483
    "?."  shift, and go to state 485
    "?["  shift, and go to state 486
    "<|"  shift, and go to state 487
    "|>"  shift, and go to state 488
    '.'   shift, and go to state 506
    '['   shift, and go to state 507

    $default  reduce using rule 325 (expr)


State 448

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  326     | "--" expr .
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"  shift, and go to state 473
    "as"  shift, and go to state 474
    "++"  shift, and go to state 477
    "--"  shift, and go to state 478
    "->"  shift, and go to state 483
    "?."  shift, and go to state 485
    "?["  shift, and go to state 486
    "<|"  shift, and go to state 487
    "|>"  shift, and go to state 488
    '.'   shift, and go to state 506
    '['   shift, and go to state 507

    $default  reduce using rule 326 (expr)


State 449

  374 expr_mtag: "$$" '(' . expr ')'

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 606
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 450

  375 expr_mtag: "$i" '(' . expr ')'

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 607
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 451

  376 expr_mtag: "$v" '(' . expr ')'

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 608
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 452

  377 expr_mtag: "$b" '(' . expr ')'

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 609
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 453

  378 expr_mtag: "$a" '(' . expr ')'

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 610
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 454

  607 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "name"  shift, and go to state 303

    variable_name_with_pos_list  go to state 611


State 455

  516 type_declaration: type_declaration . '[' expr ']'
  517                 | type_declaration . '[' ']'
  518                 | type_declaration . '-' '[' ']'
  519                 | type_declaration . "explicit"
  520                 | type_declaration . "const"
  521                 | type_declaration . '-' "const"
  522                 | type_declaration . '&'
  523                 | type_declaration . '-' '&'
  524                 | type_declaration . '#'
  525                 | type_declaration . "implicit"
  526                 | type_declaration . '-' '#'
  527                 | type_declaration . '=' "const"
  528                 | type_declaration . '?'
  532                 | type_declaration . "??"
  586 make_struct_decl: "[[" type_declaration . make_struct_dim optional_block ']' ']'
  587                 | "[[" type_declaration . optional_block ']' ']'
  588                 | "[[" type_declaration . '(' ')' optional_block ']' ']'
  589                 | "[[" type_declaration . '(' ')' make_struct_dim optional_block ']' ']'
  600 make_dim_decl: "[[" type_declaration . make_dim ']' ']'

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "const"                           shift, and go to state 219
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "where"                           shift, and go to state 612
    "reinterpret"                     shift, and go to state 331
    "implicit"                        shift, and go to state 220
    "explicit"                        shift, and go to state 221
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "??"                              shift, and go to state 222
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 613
    "start of the string"             shift, and go to state 351
    '='                               shift, and go to state 223
    '?'                               shift, and go to state 224
    '&'                               shift, and go to state 225
    '-'                               shift, and go to state 614
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '['                               shift, and go to state 227
    '('                               shift, and go to state 615
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288
    '#'                               shift, and go to state 228

    $default  reduce using rule 584 (optional_block)

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 616
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_fields      go to state 617
    make_struct_dim         go to state 618
    optional_block          go to state 619
    make_struct_decl        go to state 380
    make_tuple              go to state 620
    make_map_tuple          go to state 621
    make_any_tuple          go to state 622
    make_dim                go to state 623
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 456

  608 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "name"  shift, and go to state 303

    variable_name_with_pos_list  go to state 624


State 457

  516 type_declaration: type_declaration . '[' expr ']'
  517                 | type_declaration . '[' ']'
  518                 | type_declaration . '-' '[' ']'
  519                 | type_declaration . "explicit"
  520                 | type_declaration . "const"
  521                 | type_declaration . '-' "const"
  522                 | type_declaration . '&'
  523                 | type_declaration . '-' '&'
  524                 | type_declaration . '#'
  525                 | type_declaration . "implicit"
  526                 | type_declaration . '-' '#'
  527                 | type_declaration . '=' "const"
  528                 | type_declaration . '?'
  532                 | type_declaration . "??"
  590 make_struct_decl: "[{" type_declaration . make_struct_dim optional_block '}' ']'
  591                 | "[{" type_declaration . '(' ')' make_struct_dim optional_block '}' ']'
  601 make_dim_decl: "[{" type_declaration . make_dim '}' ']'

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "const"                           shift, and go to state 219
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "implicit"                        shift, and go to state 220
    "explicit"                        shift, and go to state 221
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "??"                              shift, and go to state 222
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 613
    "start of the string"             shift, and go to state 351
    '='                               shift, and go to state 223
    '?'                               shift, and go to state 224
    '&'                               shift, and go to state 225
    '-'                               shift, and go to state 614
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '['                               shift, and go to state 227
    '('                               shift, and go to state 625
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288
    '#'                               shift, and go to state 228

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 616
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_fields      go to state 617
    make_struct_dim         go to state 626
    make_struct_decl        go to state 380
    make_tuple              go to state 620
    make_map_tuple          go to state 621
    make_any_tuple          go to state 622
    make_dim                go to state 627
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 458

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr
  594 make_map_tuple: expr . "=>" expr
  595               | expr .

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "=>"   shift, and go to state 628
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 595 (make_map_tuple)


State 459

  602 make_table: make_map_tuple .

    $default  reduce using rule 602 (make_table)


State 460

  603 make_table: make_table . ';' make_map_tuple
  604 make_table_decl: "{{" make_table . '}' '}'

    ';'  shift, and go to state 629
    '}'  shift, and go to state 630


State 461

   26 string_builder_body: string_builder_body . character_sequence
   27                    | string_builder_body . "{" expr "}"
   28 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 129
    STRING_CHARACTER_ESC  shift, and go to state 130
    "end of the string"   shift, and go to state 631
    "{"                   shift, and go to state 632

    character_sequence  go to state 633


State 462

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  302 expr: '-' expr .
  303     | expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"  shift, and go to state 473
    "as"  shift, and go to state 474
    "++"  shift, and go to state 477
    "--"  shift, and go to state 478
    "->"  shift, and go to state 483
    "?."  shift, and go to state 485
    "?["  shift, and go to state 486
    "<|"  shift, and go to state 487
    "|>"  shift, and go to state 488
    '.'   shift, and go to state 506
    '['   shift, and go to state 507

    $default  reduce using rule 302 (expr)


State 463

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  301 expr: '+' expr .
  303     | expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"  shift, and go to state 473
    "as"  shift, and go to state 474
    "++"  shift, and go to state 477
    "--"  shift, and go to state 478
    "->"  shift, and go to state 483
    "?."  shift, and go to state 485
    "?["  shift, and go to state 486
    "<|"  shift, and go to state 487
    "|>"  shift, and go to state 488
    '.'   shift, and go to state 506
    '['   shift, and go to state 507

    $default  reduce using rule 301 (expr)


State 464

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  341     | '*' expr .
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "?."  shift, and go to state 485
    "?["  shift, and go to state 486
    '.'   shift, and go to state 506
    '['   shift, and go to state 507

    $default  reduce using rule 341 (expr)


State 465

   32 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 31 ($@1)

    $@1  go to state 634


State 466

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  300 expr: '~' expr .
  303     | expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"  shift, and go to state 473
    "as"  shift, and go to state 474
    "++"  shift, and go to state 477
    "--"  shift, and go to state 478
    "->"  shift, and go to state 483
    "?."  shift, and go to state 485
    "?["  shift, and go to state 486
    "<|"  shift, and go to state 487
    "|>"  shift, and go to state 488
    '.'   shift, and go to state 506
    '['   shift, and go to state 507

    $default  reduce using rule 300 (expr)


State 467

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  299 expr: '!' expr .
  303     | expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"  shift, and go to state 473
    "as"  shift, and go to state 474
    "++"  shift, and go to state 477
    "--"  shift, and go to state 478
    "->"  shift, and go to state 483
    "?."  shift, and go to state 485
    "?["  shift, and go to state 486
    "<|"  shift, and go to state 487
    "|>"  shift, and go to state 488
    '.'   shift, and go to state 506
    '['   shift, and go to state 507

    $default  reduce using rule 299 (expr)


State 468

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  329     | '(' expr . ')'
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507
    ')'    shift, and go to state 635


State 469

  234 block_or_lambda: '@' '@' .
  277 func_addr_expr: '@' '@' . name_in_namespace
  280               | '@' '@' . '<' $@12 type_declaration '>' $@13 name_in_namespace
  283               | '@' '@' . '<' $@14 optional_function_argument_list optional_function_type '>' $@15 name_in_namespace

    "::"    shift, and go to state 50
    "name"  shift, and go to state 51
    '<'     shift, and go to state 636

    $default  reduce using rule 234 (block_or_lambda)

    name_in_namespace  go to state 637


State 470

  372 expr: name_in_namespace "name" .

    $default  reduce using rule 372 (expr)


State 471

  274 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  337 expr: name_in_namespace '(' . ')'
  338     | name_in_namespace '(' . expr_list ')'

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '['                               shift, and go to state 638
    '('                               shift, and go to state 358
    ')'                               shift, and go to state 639
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    expr_list               go to state 640
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 641
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 472

  244 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 642

    $default  reduce using rule 241 (optional_capture_list)

    optional_capture_list  go to state 643


State 473

  350 expr: expr "is" . "type" '<' $@18 type_declaration '>' $@19
  351     | expr "is" . basic_type_declaration
  352     | expr "is" . "name"

    "type"      shift, and go to state 644
    "bool"      shift, and go to state 145
    "void"      shift, and go to state 146
    "string"    shift, and go to state 147
    "int"       shift, and go to state 149
    "int2"      shift, and go to state 150
    "int3"      shift, and go to state 151
    "int4"      shift, and go to state 152
    "uint"      shift, and go to state 153
    "bitfield"  shift, and go to state 333
    "uint2"     shift, and go to state 155
    "uint3"     shift, and go to state 156
    "uint4"     shift, and go to state 157
    "float"     shift, and go to state 158
    "float2"    shift, and go to state 159
    "float3"    shift, and go to state 160
    "float4"    shift, and go to state 161
    "range"     shift, and go to state 162
    "urange"    shift, and go to state 163
    "int64"     shift, and go to state 165
    "uint64"    shift, and go to state 166
    "double"    shift, and go to state 167
    "int8"      shift, and go to state 170
    "uint8"     shift, and go to state 171
    "int16"     shift, and go to state 172
    "uint16"    shift, and go to state 173
    "name"      shift, and go to state 645

    basic_type_declaration  go to state 646


State 474

  353 expr: expr "as" . "name"
  356     | expr "as" . "type" '<' $@20 type_declaration '>' $@21
  357     | expr "as" . basic_type_declaration

    "type"      shift, and go to state 647
    "bool"      shift, and go to state 145
    "void"      shift, and go to state 146
    "string"    shift, and go to state 147
    "int"       shift, and go to state 149
    "int2"      shift, and go to state 150
    "int3"      shift, and go to state 151
    "int4"      shift, and go to state 152
    "uint"      shift, and go to state 153
    "bitfield"  shift, and go to state 333
    "uint2"     shift, and go to state 155
    "uint3"     shift, and go to state 156
    "uint4"     shift, and go to state 157
    "float"     shift, and go to state 158
    "float2"    shift, and go to state 159
    "float3"    shift, and go to state 160
    "float4"    shift, and go to state 161
    "range"     shift, and go to state 162
    "urange"    shift, and go to state 163
    "int64"     shift, and go to state 165
    "uint64"    shift, and go to state 166
    "double"    shift, and go to state 167
    "int8"      shift, and go to state 170
    "uint8"     shift, and go to state 171
    "int16"     shift, and go to state 172
    "uint16"    shift, and go to state 173
    "name"      shift, and go to state 648

    basic_type_declaration  go to state 649


State 475

  303 expr: expr "<<" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 650
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 476

  304 expr: expr ">>" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 651
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 477

  327 expr: expr "++" .

    $default  reduce using rule 327 (expr)


State 478

  328 expr: expr "--" .

    $default  reduce using rule 328 (expr)


State 479

  316 expr: expr "<=" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 652
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 480

  317 expr: expr ">=" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 653
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 481

  314 expr: expr "==" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 654
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 482

  315 expr: expr "!=" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 655
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 483

  275 expr_method_call: expr "->" . "name" '(' ')'
  276                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 656


State 484

  346 expr: expr "??" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 657
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 485

  334 expr: expr "?." . "name"

    "name"  shift, and go to state 658


State 486

  332 expr: expr "?[" . expr ']'

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 659
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 487

  370 expr: expr "<|" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 660
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 488

  371 expr: expr "|>" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 661
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 489

  305 expr: expr "<<<" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 662
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 490

  306 expr: expr ">>>" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 663
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 491

  321 expr: expr "&&" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 664
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 492

  322 expr: expr "||" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 665
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 493

  323 expr: expr "^^" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 666
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 494

  324 expr: expr ".." . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 667
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 495

  347 expr: expr '?' . expr ':' expr
  358     | expr '?' . "as" "name"
  361     | expr '?' . "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr '?' . "as" basic_type_declaration

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "as"                              shift, and go to state 668
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 669
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 496

  319 expr: expr '|' . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 670
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 497

  320 expr: expr '^' . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 671
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 498

  318 expr: expr '&' . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 672
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 499

  312 expr: expr '<' . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 673
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 500

  313 expr: expr '>' . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 674
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 501

  308 expr: expr '-' . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 675
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 502

  307 expr: expr '+' . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 676
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 503

  309 expr: expr '*' . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 677
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 504

  310 expr: expr '/' . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 678
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 505

  311 expr: expr '%' . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 679
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 506

  284 expr_field: expr '.' . "name"
  285           | expr '.' . '.' "name"
  288           | expr '.' . $@16 error $@17
  331 expr: expr '.' . '[' expr ']'
  333     | expr '.' . "?[" expr ']'
  335     | expr '.' . "?." "name"

    "?."    shift, and go to state 680
    "?["    shift, and go to state 681
    "name"  shift, and go to state 682
    '.'     shift, and go to state 683
    '['     shift, and go to state 684

    $default  reduce using rule 286 ($@16)

    $@16  go to state 685


State 507

  330 expr: expr '[' . expr ']'

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 686
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 508

  504 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 504 (auto_type_declaration)


State 509

  339 expr: basic_type_declaration '(' . ')'
  340     | basic_type_declaration '(' . expr_list ')'

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    ')'                               shift, and go to state 687
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    expr_list               go to state 688
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 641
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 510

  518 type_declaration: type_declaration '-' '[' ']' .

    $default  reduce using rule 518 (type_declaration)


State 511

  516 type_declaration: type_declaration '[' expr ']' .

    $default  reduce using rule 516 (type_declaration)


State 512

  406 variant_type: "name" ':' type_declaration .
  516 type_declaration: type_declaration . '[' expr ']'
  517                 | type_declaration . '[' ']'
  518                 | type_declaration . '-' '[' ']'
  519                 | type_declaration . "explicit"
  520                 | type_declaration . "const"
  521                 | type_declaration . '-' "const"
  522                 | type_declaration . '&'
  523                 | type_declaration . '-' '&'
  524                 | type_declaration . '#'
  525                 | type_declaration . "implicit"
  526                 | type_declaration . '-' '#'
  527                 | type_declaration . '=' "const"
  528                 | type_declaration . '?'
  532                 | type_declaration . "??"

    "const"     shift, and go to state 219
    "implicit"  shift, and go to state 220
    "explicit"  shift, and go to state 221
    "??"        shift, and go to state 222
    '='         shift, and go to state 223
    '?'         shift, and go to state 224
    '&'         shift, and go to state 225
    '-'         shift, and go to state 226
    '['         shift, and go to state 227
    '#'         shift, and go to state 228

    $default  reduce using rule 406 (variant_type)


State 513

  571 variant_alias_declaration: "variant" $@58 "name" $@59 '{' variant_type_list ';' '}' .

    $default  reduce using rule 571 (variant_alias_declaration)


State 514

  408 variant_type_list: variant_type_list ';' variant_type .

    $default  reduce using rule 408 (variant_type_list)


State 515

  399 function_argument_declaration: optional_field_annotation "var" . variable_declaration

    "name"  shift, and go to state 303

    variable_declaration         go to state 689
    variable_name_with_pos_list  go to state 517


State 516

  398 function_argument_declaration: optional_field_annotation variable_declaration .

    $default  reduce using rule 398 (function_argument_declaration)


State 517

  411 variable_declaration: variable_name_with_pos_list .
  412                     | variable_name_with_pos_list . '&'
  413                     | variable_name_with_pos_list . ':' type_declaration
  414                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  415                     | variable_name_with_pos_list . copy_or_move expr
  416                     | variable_name_with_pos_list . copy_or_move expr_pipe
  468 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  469                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 690
    ','   shift, and go to state 414
    '='   shift, and go to state 691
    ':'   shift, and go to state 692
    '&'   shift, and go to state 693

    $default  reduce using rule 411 (variable_declaration)

    copy_or_move  go to state 694


State 518

   97 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 97 (optional_function_argument_list)


State 519

  401 function_argument_list: function_argument_list ';' . function_argument_declaration

    "[["  shift, and go to state 200

    $default  reduce using rule 379 (optional_field_annotation)

    optional_field_annotation      go to state 399
    function_argument_declaration  go to state 695


State 520

   99 optional_function_type: ':' type_declaration .
  516 type_declaration: type_declaration . '[' expr ']'
  517                 | type_declaration . '[' ']'
  518                 | type_declaration . '-' '[' ']'
  519                 | type_declaration . "explicit"
  520                 | type_declaration . "const"
  521                 | type_declaration . '-' "const"
  522                 | type_declaration . '&'
  523                 | type_declaration . '-' '&'
  524                 | type_declaration . '#'
  525                 | type_declaration . "implicit"
  526                 | type_declaration . '-' '#'
  527                 | type_declaration . '=' "const"
  528                 | type_declaration . '?'
  532                 | type_declaration . "??"

    "const"     shift, and go to state 219
    "implicit"  shift, and go to state 220
    "explicit"  shift, and go to state 221
    "??"        shift, and go to state 222
    '='         shift, and go to state 223
    '?'         shift, and go to state 224
    '&'         shift, and go to state 225
    '-'         shift, and go to state 226
    '['         shift, and go to state 227
    '#'         shift, and go to state 228

    $default  reduce using rule 99 (optional_function_type)


State 521

  185 expressions: expressions error .

    $default  reduce using rule 185 (expressions)


State 522

   61 expression_while_loop: "while" . expr expression_block

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 696
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 523

   56 if_or_static_if: "if" .

    $default  reduce using rule 56 (if_or_static_if)


State 524

   57 if_or_static_if: "static_if" .

    $default  reduce using rule 57 (if_or_static_if)


State 525

   59 expression_for_loop: "for" . variable_name_with_pos_list "in" expr_list ';' expression_block

    "name"  shift, and go to state 303

    variable_name_with_pos_list  go to state 697


State 526

  199 expression_return: "return" . ';'
  200                  | "return" . expr ';'
  201                  | "return" . "<-" expr ';'
  202                  | "return" . expr_pipe
  203                  | "return" . "<-" expr_pipe

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "<-"                              shift, and go to state 698
    "@ <|"                            shift, and go to state 538
    "@@ <|"                           shift, and go to state 539
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    ';'                               shift, and go to state 699
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    expr_pipe               go to state 700
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_assign             go to state 701
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 702
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 527

  197 expression_break: "break" .

    $default  reduce using rule 197 (expression_break)


State 528

  208 expression_try_catch: "try" . expression_block "recover" expression_block

    '{'  shift, and go to state 288

    expression_block  go to state 703


State 529

  192 expression_delete: "delete" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 704
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 530

   62 expression_with: "with" . expr expression_block

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 705
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 531

   64 expression_with_alias: "assume" . "name" '=' $@2 expr

    "name"  shift, and go to state 706


State 532

  198 expression_continue: "continue" .

    $default  reduce using rule 198 (expression_continue)


State 533

  182 expression_any: "pass" . ';'

    ';'  shift, and go to state 707


State 534

   48 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 708


State 535

   49 expression_goto: "goto" . "label" "integer constant"
   50                | "goto" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "label"                           shift, and go to state 709
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 710
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 536

   60 expression_unsafe: "unsafe" . expression_block
  373 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 445
    '{'  shift, and go to state 288

    expression_block  go to state 711


State 537

  204 expression_yield: "yield" . expr ';'
  205                 | "yield" . "<-" expr ';'
  206                 | "yield" . expr_pipe
  207                 | "yield" . "<-" expr_pipe

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "<-"                              shift, and go to state 712
    "@ <|"                            shift, and go to state 538
    "@@ <|"                           shift, and go to state 539
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    expr_pipe               go to state 713
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_assign             go to state 701
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 714
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 538

  187 expr_pipe: "@ <|" . expr_block

    '$'  shift, and go to state 359
    '@'  shift, and go to state 715
    '{'  shift, and go to state 288

    expression_block  go to state 363
    block_or_lambda   go to state 369
    expr_block        go to state 716


State 539

  188 expr_pipe: "@@ <|" . expr_block

    '$'  shift, and go to state 359
    '@'  shift, and go to state 715
    '{'  shift, and go to state 288

    expression_block  go to state 363
    block_or_lambda   go to state 369
    expr_block        go to state 717


State 540

  163 expression_any: ';' .

    $default  reduce using rule 163 (expression_any)


State 541

  161 expression_block: '{' expressions '}' .
  162                 | '{' expressions '}' . "finally" '{' expressions '}'

    "finally"  shift, and go to state 718

    $default  reduce using rule 161 (expression_block)


State 542

  180 expression_any: expression_label . ';'

    ';'  shift, and go to state 719


State 543

  181 expression_any: expression_goto . ';'

    ';'  shift, and go to state 720


State 544

   58 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 721
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 545

  178 expression_any: expression_if_then_else .

    $default  reduce using rule 178 (expression_any)


State 546

  173 expression_any: expression_for_loop .

    $default  reduce using rule 173 (expression_any)


State 547

  170 expression_any: expression_unsafe .

    $default  reduce using rule 170 (expression_any)


State 548

  169 expression_any: expression_while_loop .

    $default  reduce using rule 169 (expression_any)


State 549

  171 expression_any: expression_with .

    $default  reduce using rule 171 (expression_any)


State 550

  172 expression_any: expression_with_alias .

    $default  reduce using rule 172 (expression_any)


State 551

  184 expressions: expressions expression_any .

    $default  reduce using rule 184 (expressions)


State 552

  164 expression_any: expr_pipe .

    $default  reduce using rule 164 (expression_any)


State 553

  167 expression_any: expression_delete . ';'

    ';'  shift, and go to state 722


State 554

  174 expression_any: expression_break . ';'

    ';'  shift, and go to state 723


State 555

  175 expression_any: expression_continue . ';'

    ';'  shift, and go to state 724


State 556

  176 expression_any: expression_return .

    $default  reduce using rule 176 (expression_any)


State 557

  177 expression_any: expression_yield .

    $default  reduce using rule 177 (expression_any)


State 558

  179 expression_any: expression_try_catch .

    $default  reduce using rule 179 (expression_any)


State 559

  211 expression_let: kwd_let . let_variable_declaration

    "name"  shift, and go to state 303

    let_variable_declaration     go to state 725
    variable_name_with_pos_list  go to state 305


State 560

  168 expression_any: expression_let .

    $default  reduce using rule 168 (expression_any)


State 561

  166 expression_any: expr_assign . ';'
  186 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 726
    ';'    shift, and go to state 727


State 562

  165 expression_any: expr_assign_pipe .

    $default  reduce using rule 165 (expression_any)


State 563

  251 expr_assign: expr .
  252            | expr . '=' expr
  253            | expr . "<-" expr
  254            | expr . ":=" expr
  255            | expr . "&=" expr
  256            | expr . "|=" expr
  257            | expr . "^=" expr
  258            | expr . "&&=" expr
  259            | expr . "||=" expr
  260            | expr . "^^=" expr
  261            | expr . "+=" expr
  262            | expr . "-=" expr
  263            | expr . "*=" expr
  264            | expr . "/=" expr
  265            | expr . "%=" expr
  266            | expr . "<<=" expr
  267            | expr . ">>=" expr
  268            | expr . "<<<=" expr
  269            | expr . ">>>=" expr
  270 expr_assign_pipe: expr . '=' "@ <|" expr
  271                 | expr . '=' "@@ <|" expr
  272                 | expr . "<-" "@ <|" expr
  273                 | expr . "<-" "@@ <|" expr
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"    shift, and go to state 473
    "as"    shift, and go to state 474
    "+="    shift, and go to state 728
    "-="    shift, and go to state 729
    "/="    shift, and go to state 730
    "*="    shift, and go to state 731
    "%="    shift, and go to state 732
    "&="    shift, and go to state 733
    "|="    shift, and go to state 734
    "^="    shift, and go to state 735
    "<<"    shift, and go to state 475
    ">>"    shift, and go to state 476
    "++"    shift, and go to state 477
    "--"    shift, and go to state 478
    "<="    shift, and go to state 479
    "<<="   shift, and go to state 736
    ">>="   shift, and go to state 737
    ">="    shift, and go to state 480
    "=="    shift, and go to state 481
    "!="    shift, and go to state 482
    "->"    shift, and go to state 483
    "<-"    shift, and go to state 738
    "??"    shift, and go to state 484
    "?."    shift, and go to state 485
    "?["    shift, and go to state 486
    "<|"    shift, and go to state 487
    "|>"    shift, and go to state 488
    ":="    shift, and go to state 739
    "<<<"   shift, and go to state 489
    ">>>"   shift, and go to state 490
    "<<<="  shift, and go to state 740
    ">>>="  shift, and go to state 741
    "&&"    shift, and go to state 491
    "||"    shift, and go to state 492
    "^^"    shift, and go to state 493
    "&&="   shift, and go to state 742
    "||="   shift, and go to state 743
    "^^="   shift, and go to state 744
    ".."    shift, and go to state 494
    '='     shift, and go to state 745
    '?'     shift, and go to state 495
    '|'     shift, and go to state 496
    '^'     shift, and go to state 497
    '&'     shift, and go to state 498
    '<'     shift, and go to state 499
    '>'     shift, and go to state 500
    '-'     shift, and go to state 501
    '+'     shift, and go to state 502
    '*'     shift, and go to state 503
    '/'     shift, and go to state 504
    '%'     shift, and go to state 505
    '.'     shift, and go to state 506
    '['     shift, and go to state 507

    $default  reduce using rule 251 (expr_assign)


State 564

  439 enum_list: enum_list . "name" ';'
  440          | enum_list . "name" '=' expr ';'
  452 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list . '}'

    "name"  shift, and go to state 406
    '}'     shift, and go to state 746


State 565

  440 enum_list: enum_list "name" '=' . expr ';'

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 747
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 566

  439 enum_list: enum_list "name" ';' .

    $default  reduce using rule 439 (enum_list)


State 567

  454 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 454 (optional_structure_parent)


State 568

  392 struct_variable_declaration_list: struct_variable_declaration_list . $@24 structure_variable_declaration ';'
  394                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" $@25 function_declaration_header ';'
  396                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant $@26 function_declaration_header expression_block
  397                                 | struct_variable_declaration_list . '[' annotation_list ']' ';'
  465 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@30 structure_name $@31 '{' struct_variable_declaration_list . '}'

    '['  shift, and go to state 748
    '}'  shift, and go to state 749

    "def"     reduce using rule 93 (optional_annotation_list)
    $default  reduce using rule 391 ($@24)

    optional_annotation_list  go to state 750
    $@24                      go to state 751


State 569

  429 global_variable_declaration_list: global_variable_declaration_list $@27 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 429 (global_variable_declaration_list)


State 570

  380 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 380 (optional_field_annotation)


State 571

  467 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 467 (variable_name_with_pos_list)


State 572

  468 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  469                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 752

    $default  reduce using rule 468 (variable_name_with_pos_list)


State 573

  422 let_variable_declaration: variable_name_with_pos_list ':' type_declaration . ';'
  423                         | variable_name_with_pos_list ':' type_declaration . copy_or_move_or_clone expr ';'
  424                         | variable_name_with_pos_list ':' type_declaration . copy_or_move_or_clone expr_pipe
  516 type_declaration: type_declaration . '[' expr ']'
  517                 | type_declaration . '[' ']'
  518                 | type_declaration . '-' '[' ']'
  519                 | type_declaration . "explicit"
  520                 | type_declaration . "const"
  521                 | type_declaration . '-' "const"
  522                 | type_declaration . '&'
  523                 | type_declaration . '-' '&'
  524                 | type_declaration . '#'
  525                 | type_declaration . "implicit"
  526                 | type_declaration . '-' '#'
  527                 | type_declaration . '=' "const"
  528                 | type_declaration . '?'
  532                 | type_declaration . "??"

    "const"     shift, and go to state 219
    "implicit"  shift, and go to state 220
    "explicit"  shift, and go to state 221
    "<-"        shift, and go to state 574
    "??"        shift, and go to state 222
    ":="        shift, and go to state 575
    '='         shift, and go to state 753
    '?'         shift, and go to state 224
    '&'         shift, and go to state 225
    '-'         shift, and go to state 226
    '['         shift, and go to state 227
    ';'         shift, and go to state 754
    '#'         shift, and go to state 228

    copy_or_move_or_clone  go to state 755


State 574

  418 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 418 (copy_or_move_or_clone)


State 575

  419 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 419 (copy_or_move_or_clone)


State 576

  417 copy_or_move_or_clone: '=' .

    $default  reduce using rule 417 (copy_or_move_or_clone)


State 577

  425 let_variable_declaration: variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr ';'
  426                         | variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "@ <|"                            shift, and go to state 538
    "@@ <|"                           shift, and go to state 539
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    expr_pipe               go to state 756
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_assign             go to state 701
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 757
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 578

  535 type_declaration: "array" '<' $@36 type_declaration '>' . $@37

    $default  reduce using rule 534 ($@37)

    $@37  go to state 758


State 579

  538 type_declaration: "table" '<' $@38 table_type_pair '>' . $@39

    $default  reduce using rule 537 ($@39)

    $@39  go to state 759


State 580

  511 table_type_pair: type_declaration ';' . type_declaration

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 760


State 581

  541 type_declaration: "iterator" '<' $@40 type_declaration '>' . $@41

    $default  reduce using rule 540 ($@41)

    $@41  go to state 761


State 582

  531 type_declaration: "smart_ptr" '<' $@34 type_declaration '>' . $@35

    $default  reduce using rule 530 ($@35)

    $@35  go to state 762


State 583

  509 bitfield_type_declaration: "bitfield" '<' $@32 bitfield_bits '>' . $@33

    $default  reduce using rule 508 ($@33)

    $@33  go to state 763


State 584

  506 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 391


State 585

  545 type_declaration: "block" '<' $@42 type_declaration '>' . $@43

    $default  reduce using rule 544 ($@43)

    $@43  go to state 764


State 586

  548 type_declaration: "block" '<' $@44 optional_function_argument_list optional_function_type . '>' $@45

    '>'  shift, and go to state 765


State 587

  552 type_declaration: "function" '<' $@46 type_declaration '>' . $@47

    $default  reduce using rule 551 ($@47)

    $@47  go to state 766


State 588

  555 type_declaration: "function" '<' $@48 optional_function_argument_list optional_function_type . '>' $@49

    '>'  shift, and go to state 767


State 589

  559 type_declaration: "lambda" '<' $@50 type_declaration '>' . $@51

    $default  reduce using rule 558 ($@51)

    $@51  go to state 768


State 590

  562 type_declaration: "lambda" '<' $@52 optional_function_argument_list optional_function_type . '>' $@53

    '>'  shift, and go to state 769


State 591

  403 tuple_type: "name" ':' . type_declaration

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 770


State 592

  565 type_declaration: "tuple" '<' $@54 tuple_type_list '>' . $@55

    $default  reduce using rule 564 ($@55)

    $@55  go to state 771


State 593

  405 tuple_type_list: tuple_type_list ';' . tuple_type

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 431

    name_in_namespace           go to state 177
    tuple_type                  go to state 772
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 434


State 594

  568 type_declaration: "variant" '<' $@56 variant_type_list '>' . $@57

    $default  reduce using rule 567 ($@57)

    $@57  go to state 773


State 595

  408 variant_type_list: variant_type_list ';' . variant_type

    "name"  shift, and go to state 230

    variant_type  go to state 514


State 596

  194 expr_new: "new" type_declaration '(' . ')'
  195         | "new" type_declaration '(' . expr_list ')'

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    ')'                               shift, and go to state 774
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    expr_list               go to state 775
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 641
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 597

  224 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  225               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  226               | "typeinfo" '(' name_in_namespace . '<' "name" ';' "name" '>' expr ')'

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '<'                               shift, and go to state 776
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 777
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 598

  223 expr_type_decl: "type" '<' $@10 . type_declaration '>' $@11

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 778


State 599

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  342     | "deref" '(' expr . ')'
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507
    ')'    shift, and go to state 779


State 600

  214 expr_cast: "cast" '<' $@4 . type_declaration '>' $@5 expr

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 780


State 601

  217 expr_cast: "upcast" '<' $@6 . type_declaration '>' $@7 expr

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 781


State 602

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  343     | "addr" '(' expr . ')'
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507
    ')'    shift, and go to state 782


State 603

  220 expr_cast: "reinterpret" '<' $@8 . type_declaration '>' $@9 expr

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 783


State 604

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr
  373     | "unsafe" '(' expr . ')'

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507
    ')'    shift, and go to state 784


State 605

  344 expr: "generator" '<' type_declaration . '>' optional_capture_list '(' ')'
  345     | "generator" '<' type_declaration . '>' optional_capture_list '(' expr ')'
  516 type_declaration: type_declaration . '[' expr ']'
  517                 | type_declaration . '[' ']'
  518                 | type_declaration . '-' '[' ']'
  519                 | type_declaration . "explicit"
  520                 | type_declaration . "const"
  521                 | type_declaration . '-' "const"
  522                 | type_declaration . '&'
  523                 | type_declaration . '-' '&'
  524                 | type_declaration . '#'
  525                 | type_declaration . "implicit"
  526                 | type_declaration . '-' '#'
  527                 | type_declaration . '=' "const"
  528                 | type_declaration . '?'
  532                 | type_declaration . "??"

    "const"     shift, and go to state 219
    "implicit"  shift, and go to state 220
    "explicit"  shift, and go to state 221
    "??"        shift, and go to state 222
    '='         shift, and go to state 223
    '?'         shift, and go to state 224
    '&'         shift, and go to state 225
    '>'         shift, and go to state 785
    '-'         shift, and go to state 226
    '['         shift, and go to state 227
    '#'         shift, and go to state 228


State 606

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr
  374 expr_mtag: "$$" '(' expr . ')'

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507
    ')'    shift, and go to state 786


State 607

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr
  375 expr_mtag: "$i" '(' expr . ')'

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507
    ')'    shift, and go to state 787


State 608

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr
  376 expr_mtag: "$v" '(' expr . ')'

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507
    ')'    shift, and go to state 788


State 609

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr
  377 expr_mtag: "$b" '(' expr . ')'

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507
    ')'    shift, and go to state 789


State 610

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr
  378 expr_mtag: "$a" '(' expr . ')'

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507
    ')'    shift, and go to state 790


State 611

  468 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  469                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  607 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 791
    ','   shift, and go to state 414


State 612

  585 optional_block: "where" . expr_block

    '$'  shift, and go to state 359
    '@'  shift, and go to state 715
    '{'  shift, and go to state 288

    expression_block  go to state 363
    block_or_lambda   go to state 369
    expr_block        go to state 792


State 613

  189 name_in_namespace: "name" .
  190                  | "name" . "::" "name"
  578 make_struct_fields: "name" . copy_or_move expr
  579                   | "name" . ":=" expr

    "<-"  shift, and go to state 690
    ":="  shift, and go to state 793
    "::"  shift, and go to state 80
    '='   shift, and go to state 691

    $default  reduce using rule 189 (name_in_namespace)

    copy_or_move  go to state 794


State 614

  302 expr: '-' . expr
  518 type_declaration: type_declaration '-' . '[' ']'
  521                 | type_declaration '-' . "const"
  523                 | type_declaration '-' . '&'
  526                 | type_declaration '-' . '#'

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "const"                           shift, and go to state 385
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '&'                               shift, and go to state 386
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '['                               shift, and go to state 387
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288
    '#'                               shift, and go to state 388

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 462
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 615

  329 expr: '(' . expr ')'
  588 make_struct_decl: "[[" type_declaration '(' . ')' optional_block ']' ']'
  589                 | "[[" type_declaration '(' . ')' make_struct_dim optional_block ']' ']'

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    ')'                               shift, and go to state 795
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 468
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 616

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr
  592 make_tuple: expr .
  594 make_map_tuple: expr . "=>" expr
  595               | expr .

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "=>"   shift, and go to state 628
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    ']'       reduce using rule 592 (make_tuple)
    ']'       [reduce using rule 595 (make_map_tuple)]
    ';'       reduce using rule 592 (make_tuple)
    ';'       [reduce using rule 595 (make_map_tuple)]
    '}'       reduce using rule 592 (make_tuple)
    '}'       [reduce using rule 595 (make_map_tuple)]
    $default  reduce using rule 592 (make_tuple)


State 617

  580 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  581                   | make_struct_fields . ',' "name" ":=" expr
  582 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 796

    $default  reduce using rule 582 (make_struct_dim)


State 618

  583 make_struct_dim: make_struct_dim . ';' make_struct_fields
  586 make_struct_decl: "[[" type_declaration make_struct_dim . optional_block ']' ']'

    "where"  shift, and go to state 612
    ';'      shift, and go to state 797

    $default  reduce using rule 584 (optional_block)

    optional_block  go to state 798


State 619

  587 make_struct_decl: "[[" type_declaration optional_block . ']' ']'

    ']'  shift, and go to state 799


State 620

  593 make_tuple: make_tuple . ',' expr
  596 make_any_tuple: make_tuple .

    ','  shift, and go to state 800

    $default  reduce using rule 596 (make_any_tuple)


State 621

  597 make_any_tuple: make_map_tuple .

    $default  reduce using rule 597 (make_any_tuple)


State 622

  598 make_dim: make_any_tuple .

    $default  reduce using rule 598 (make_dim)


State 623

  599 make_dim: make_dim . ';' make_any_tuple
  600 make_dim_decl: "[[" type_declaration make_dim . ']' ']'

    ']'  shift, and go to state 801
    ';'  shift, and go to state 802


State 624

  468 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  469                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  608 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where '}' ']'

    "in"  shift, and go to state 803
    ','   shift, and go to state 414


State 625

  329 expr: '(' . expr ')'
  591 make_struct_decl: "[{" type_declaration '(' . ')' make_struct_dim optional_block '}' ']'

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    ')'                               shift, and go to state 804
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 468
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 626

  583 make_struct_dim: make_struct_dim . ';' make_struct_fields
  590 make_struct_decl: "[{" type_declaration make_struct_dim . optional_block '}' ']'

    "where"  shift, and go to state 612
    ';'      shift, and go to state 797

    $default  reduce using rule 584 (optional_block)

    optional_block  go to state 805


State 627

  599 make_dim: make_dim . ';' make_any_tuple
  601 make_dim_decl: "[{" type_declaration make_dim . '}' ']'

    ';'  shift, and go to state 802
    '}'  shift, and go to state 806


State 628

  594 make_map_tuple: expr "=>" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 807
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 629

  603 make_table: make_table ';' . make_map_tuple

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 458
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_map_tuple          go to state 808
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 630

  604 make_table_decl: "{{" make_table '}' . '}'

    '}'  shift, and go to state 809


State 631

   28 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 28 (string_builder)


State 632

   27 string_builder_body: string_builder_body "{" . expr "}"

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 810
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 633

   22 character_sequence: character_sequence . STRING_CHARACTER
   23                   | character_sequence . STRING_CHARACTER_ESC
   26 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 202
    STRING_CHARACTER_ESC  shift, and go to state 203

    STRING_CHARACTER      [reduce using rule 26 (string_builder_body)]
    STRING_CHARACTER_ESC  [reduce using rule 26 (string_builder_body)]
    $default              reduce using rule 26 (string_builder_body)


State 634

   32 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 811

    reader_character_sequence  go to state 812


State 635

  329 expr: '(' expr ')' .

    $default  reduce using rule 329 (expr)


State 636

  280 func_addr_expr: '@' '@' '<' . $@12 type_declaration '>' $@13 name_in_namespace
  283               | '@' '@' '<' . $@14 optional_function_argument_list optional_function_type '>' $@15 name_in_namespace

    ':'       reduce using rule 281 ($@14)
    '>'       reduce using rule 281 ($@14)
    '('       reduce using rule 281 ($@14)
    $default  reduce using rule 278 ($@12)

    $@12  go to state 813
    $@14  go to state 814


State 637

  277 func_addr_expr: '@' '@' name_in_namespace .

    $default  reduce using rule 277 (func_addr_expr)


State 638

  274 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'

    "name"  shift, and go to state 815

    make_struct_fields  go to state 816


State 639

  337 expr: name_in_namespace '(' ')' .

    $default  reduce using rule 337 (expr)


State 640

  228 expr_list: expr_list . ',' expr
  338 expr: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 817
    ')'  shift, and go to state 818


State 641

  227 expr_list: expr .
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 227 (expr_list)


State 642

  242 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"  shift, and go to state 819
    ":="  shift, and go to state 820
    '='   shift, and go to state 821
    '&'   shift, and go to state 822

    capture_entry  go to state 823
    capture_list   go to state 824


State 643

  244 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 286

    $default  reduce using rule 95 (optional_function_argument_list)

    optional_function_argument_list  go to state 825


State 644

  350 expr: expr "is" "type" . '<' $@18 type_declaration '>' $@19

    '<'  shift, and go to state 826


State 645

  352 expr: expr "is" "name" .

    $default  reduce using rule 352 (expr)


State 646

  351 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 351 (expr)


State 647

  356 expr: expr "as" "type" . '<' $@20 type_declaration '>' $@21

    '<'  shift, and go to state 827


State 648

  353 expr: expr "as" "name" .

    $default  reduce using rule 353 (expr)


State 649

  357 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 357 (expr)


State 650

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  303     | expr "<<" expr .
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"  shift, and go to state 473
    "as"  shift, and go to state 474
    "++"  shift, and go to state 477
    "--"  shift, and go to state 478
    "->"  shift, and go to state 483
    "??"  shift, and go to state 484
    "?."  shift, and go to state 485
    "?["  shift, and go to state 486
    "<|"  shift, and go to state 487
    "|>"  shift, and go to state 488
    '-'   shift, and go to state 501
    '+'   shift, and go to state 502
    '*'   shift, and go to state 503
    '/'   shift, and go to state 504
    '%'   shift, and go to state 505
    '.'   shift, and go to state 506
    '['   shift, and go to state 507

    $default  reduce using rule 303 (expr)


State 651

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  304     | expr ">>" expr .
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"  shift, and go to state 473
    "as"  shift, and go to state 474
    "++"  shift, and go to state 477
    "--"  shift, and go to state 478
    "->"  shift, and go to state 483
    "??"  shift, and go to state 484
    "?."  shift, and go to state 485
    "?["  shift, and go to state 486
    "<|"  shift, and go to state 487
    "|>"  shift, and go to state 488
    '-'   shift, and go to state 501
    '+'   shift, and go to state 502
    '*'   shift, and go to state 503
    '/'   shift, and go to state 504
    '%'   shift, and go to state 505
    '.'   shift, and go to state 506
    '['   shift, and go to state 507

    $default  reduce using rule 304 (expr)


State 652

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  316     | expr "<=" expr .
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 316 (expr)


State 653

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  317     | expr ">=" expr .
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 317 (expr)


State 654

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  314     | expr "==" expr .
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 314 (expr)


State 655

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  315     | expr "!=" expr .
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 315 (expr)


State 656

  275 expr_method_call: expr "->" "name" . '(' ')'
  276                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 828


State 657

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  346     | expr "??" expr .
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"  shift, and go to state 473
    "as"  shift, and go to state 474
    "++"  shift, and go to state 477
    "--"  shift, and go to state 478
    "->"  shift, and go to state 483
    "??"  shift, and go to state 484
    "?."  shift, and go to state 485
    "?["  shift, and go to state 486
    "<|"  shift, and go to state 487
    "|>"  shift, and go to state 488
    '.'   shift, and go to state 506
    '['   shift, and go to state 507

    $default  reduce using rule 346 (expr)


State 658

  334 expr: expr "?." "name" .

    $default  reduce using rule 334 (expr)


State 659

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  332     | expr "?[" expr . ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507
    ']'    shift, and go to state 829


State 660

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  370     | expr "<|" expr .
  371     | expr . "|>" expr

    "->"  shift, and go to state 483
    "?."  shift, and go to state 485
    "?["  shift, and go to state 486
    '.'   shift, and go to state 506
    '['   shift, and go to state 507

    $default  reduce using rule 370 (expr)


State 661

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr
  371     | expr "|>" expr .

    "->"  shift, and go to state 483
    "?."  shift, and go to state 485
    "?["  shift, and go to state 486
    '.'   shift, and go to state 506
    '['   shift, and go to state 507

    $default  reduce using rule 371 (expr)


State 662

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  305     | expr "<<<" expr .
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"  shift, and go to state 473
    "as"  shift, and go to state 474
    "++"  shift, and go to state 477
    "--"  shift, and go to state 478
    "->"  shift, and go to state 483
    "??"  shift, and go to state 484
    "?."  shift, and go to state 485
    "?["  shift, and go to state 486
    "<|"  shift, and go to state 487
    "|>"  shift, and go to state 488
    '-'   shift, and go to state 501
    '+'   shift, and go to state 502
    '*'   shift, and go to state 503
    '/'   shift, and go to state 504
    '%'   shift, and go to state 505
    '.'   shift, and go to state 506
    '['   shift, and go to state 507

    $default  reduce using rule 305 (expr)


State 663

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  306     | expr ">>>" expr .
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"  shift, and go to state 473
    "as"  shift, and go to state 474
    "++"  shift, and go to state 477
    "--"  shift, and go to state 478
    "->"  shift, and go to state 483
    "??"  shift, and go to state 484
    "?."  shift, and go to state 485
    "?["  shift, and go to state 486
    "<|"  shift, and go to state 487
    "|>"  shift, and go to state 488
    '-'   shift, and go to state 501
    '+'   shift, and go to state 502
    '*'   shift, and go to state 503
    '/'   shift, and go to state 504
    '%'   shift, and go to state 505
    '.'   shift, and go to state 506
    '['   shift, and go to state 507

    $default  reduce using rule 306 (expr)


State 664

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  321     | expr "&&" expr .
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 321 (expr)


State 665

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  322     | expr "||" expr .
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "^^"   shift, and go to state 493
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 322 (expr)


State 666

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  323     | expr "^^" expr .
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 323 (expr)


State 667

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  324     | expr ".." expr .
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    ".."  error (nonassociative)

    $default  reduce using rule 324 (expr)


State 668

  358 expr: expr '?' "as" . "name"
  361     | expr '?' "as" . "type" '<' $@22 type_declaration '>' $@23
  362     | expr '?' "as" . basic_type_declaration

    "type"      shift, and go to state 830
    "bool"      shift, and go to state 145
    "void"      shift, and go to state 146
    "string"    shift, and go to state 147
    "int"       shift, and go to state 149
    "int2"      shift, and go to state 150
    "int3"      shift, and go to state 151
    "int4"      shift, and go to state 152
    "uint"      shift, and go to state 153
    "bitfield"  shift, and go to state 333
    "uint2"     shift, and go to state 155
    "uint3"     shift, and go to state 156
    "uint4"     shift, and go to state 157
    "float"     shift, and go to state 158
    "float2"    shift, and go to state 159
    "float3"    shift, and go to state 160
    "float4"    shift, and go to state 161
    "range"     shift, and go to state 162
    "urange"    shift, and go to state 163
    "int64"     shift, and go to state 165
    "uint64"    shift, and go to state 166
    "double"    shift, and go to state 167
    "int8"      shift, and go to state 170
    "uint8"     shift, and go to state 171
    "int16"     shift, and go to state 172
    "uint16"    shift, and go to state 173
    "name"      shift, and go to state 831

    basic_type_declaration  go to state 832


State 669

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  347     | expr '?' expr . ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    ':'    shift, and go to state 833
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507


State 670

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  319     | expr '|' expr .
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 319 (expr)


State 671

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  320     | expr '^' expr .
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 320 (expr)


State 672

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  318     | expr '&' expr .
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 318 (expr)


State 673

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  312     | expr '<' expr .
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 312 (expr)


State 674

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  313     | expr '>' expr .
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 313 (expr)


State 675

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  308     | expr '-' expr .
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"  shift, and go to state 473
    "as"  shift, and go to state 474
    "++"  shift, and go to state 477
    "--"  shift, and go to state 478
    "->"  shift, and go to state 483
    "??"  shift, and go to state 484
    "?."  shift, and go to state 485
    "?["  shift, and go to state 486
    "<|"  shift, and go to state 487
    "|>"  shift, and go to state 488
    '*'   shift, and go to state 503
    '/'   shift, and go to state 504
    '%'   shift, and go to state 505
    '.'   shift, and go to state 506
    '['   shift, and go to state 507

    $default  reduce using rule 308 (expr)


State 676

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  307     | expr '+' expr .
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"  shift, and go to state 473
    "as"  shift, and go to state 474
    "++"  shift, and go to state 477
    "--"  shift, and go to state 478
    "->"  shift, and go to state 483
    "??"  shift, and go to state 484
    "?."  shift, and go to state 485
    "?["  shift, and go to state 486
    "<|"  shift, and go to state 487
    "|>"  shift, and go to state 488
    '*'   shift, and go to state 503
    '/'   shift, and go to state 504
    '%'   shift, and go to state 505
    '.'   shift, and go to state 506
    '['   shift, and go to state 507

    $default  reduce using rule 307 (expr)


State 677

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  309     | expr '*' expr .
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"  shift, and go to state 473
    "as"  shift, and go to state 474
    "++"  shift, and go to state 477
    "--"  shift, and go to state 478
    "->"  shift, and go to state 483
    "??"  shift, and go to state 484
    "?."  shift, and go to state 485
    "?["  shift, and go to state 486
    "<|"  shift, and go to state 487
    "|>"  shift, and go to state 488
    '.'   shift, and go to state 506
    '['   shift, and go to state 507

    $default  reduce using rule 309 (expr)


State 678

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  310     | expr '/' expr .
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"  shift, and go to state 473
    "as"  shift, and go to state 474
    "++"  shift, and go to state 477
    "--"  shift, and go to state 478
    "->"  shift, and go to state 483
    "??"  shift, and go to state 484
    "?."  shift, and go to state 485
    "?["  shift, and go to state 486
    "<|"  shift, and go to state 487
    "|>"  shift, and go to state 488
    '.'   shift, and go to state 506
    '['   shift, and go to state 507

    $default  reduce using rule 310 (expr)


State 679

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  311     | expr '%' expr .
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"  shift, and go to state 473
    "as"  shift, and go to state 474
    "++"  shift, and go to state 477
    "--"  shift, and go to state 478
    "->"  shift, and go to state 483
    "??"  shift, and go to state 484
    "?."  shift, and go to state 485
    "?["  shift, and go to state 486
    "<|"  shift, and go to state 487
    "|>"  shift, and go to state 488
    '.'   shift, and go to state 506
    '['   shift, and go to state 507

    $default  reduce using rule 311 (expr)


State 680

  335 expr: expr '.' "?." . "name"

    "name"  shift, and go to state 834


State 681

  333 expr: expr '.' "?[" . expr ']'

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 835
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 682

  284 expr_field: expr '.' "name" .

    $default  reduce using rule 284 (expr_field)


State 683

  285 expr_field: expr '.' '.' . "name"

    "name"  shift, and go to state 836


State 684

  331 expr: expr '.' '[' . expr ']'

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 837
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 685

  288 expr_field: expr '.' $@16 . error $@17

    error  shift, and go to state 838


State 686

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  330     | expr '[' expr . ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507
    ']'    shift, and go to state 839


State 687

  339 expr: basic_type_declaration '(' ')' .

    $default  reduce using rule 339 (expr)


State 688

  228 expr_list: expr_list . ',' expr
  340 expr: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 817
    ')'  shift, and go to state 840


State 689

  399 function_argument_declaration: optional_field_annotation "var" variable_declaration .

    $default  reduce using rule 399 (function_argument_declaration)


State 690

  410 copy_or_move: "<-" .

    $default  reduce using rule 410 (copy_or_move)


State 691

  409 copy_or_move: '=' .

    $default  reduce using rule 409 (copy_or_move)


State 692

  413 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  414                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 841


State 693

  412 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 412 (variable_declaration)


State 694

  415 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  416                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "@ <|"                            shift, and go to state 538
    "@@ <|"                           shift, and go to state 539
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    expr_pipe               go to state 842
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_assign             go to state 701
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 843
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 695

  401 function_argument_list: function_argument_list ';' function_argument_declaration .

    $default  reduce using rule 401 (function_argument_list)


State 696

   61 expression_while_loop: "while" expr . expression_block
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507
    '{'    shift, and go to state 288

    expression_block  go to state 844


State 697

   59 expression_for_loop: "for" variable_name_with_pos_list . "in" expr_list ';' expression_block
  468 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  469                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 845
    ','   shift, and go to state 414


State 698

  201 expression_return: "return" "<-" . expr ';'
  203                  | "return" "<-" . expr_pipe

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "@ <|"                            shift, and go to state 538
    "@@ <|"                           shift, and go to state 539
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    expr_pipe               go to state 846
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_assign             go to state 701
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 847
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 699

  199 expression_return: "return" ';' .

    $default  reduce using rule 199 (expression_return)


State 700

  202 expression_return: "return" expr_pipe .

    $default  reduce using rule 202 (expression_return)


State 701

  186 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 726


State 702

  200 expression_return: "return" expr . ';'
  251 expr_assign: expr .
  252            | expr . '=' expr
  253            | expr . "<-" expr
  254            | expr . ":=" expr
  255            | expr . "&=" expr
  256            | expr . "|=" expr
  257            | expr . "^=" expr
  258            | expr . "&&=" expr
  259            | expr . "||=" expr
  260            | expr . "^^=" expr
  261            | expr . "+=" expr
  262            | expr . "-=" expr
  263            | expr . "*=" expr
  264            | expr . "/=" expr
  265            | expr . "%=" expr
  266            | expr . "<<=" expr
  267            | expr . ">>=" expr
  268            | expr . "<<<=" expr
  269            | expr . ">>>=" expr
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"    shift, and go to state 473
    "as"    shift, and go to state 474
    "+="    shift, and go to state 728
    "-="    shift, and go to state 729
    "/="    shift, and go to state 730
    "*="    shift, and go to state 731
    "%="    shift, and go to state 732
    "&="    shift, and go to state 733
    "|="    shift, and go to state 734
    "^="    shift, and go to state 735
    "<<"    shift, and go to state 475
    ">>"    shift, and go to state 476
    "++"    shift, and go to state 477
    "--"    shift, and go to state 478
    "<="    shift, and go to state 479
    "<<="   shift, and go to state 736
    ">>="   shift, and go to state 737
    ">="    shift, and go to state 480
    "=="    shift, and go to state 481
    "!="    shift, and go to state 482
    "->"    shift, and go to state 483
    "<-"    shift, and go to state 848
    "??"    shift, and go to state 484
    "?."    shift, and go to state 485
    "?["    shift, and go to state 486
    "<|"    shift, and go to state 487
    "|>"    shift, and go to state 488
    ":="    shift, and go to state 739
    "<<<"   shift, and go to state 489
    ">>>"   shift, and go to state 490
    "<<<="  shift, and go to state 740
    ">>>="  shift, and go to state 741
    "&&"    shift, and go to state 491
    "||"    shift, and go to state 492
    "^^"    shift, and go to state 493
    "&&="   shift, and go to state 742
    "||="   shift, and go to state 743
    "^^="   shift, and go to state 744
    ".."    shift, and go to state 494
    '='     shift, and go to state 849
    '?'     shift, and go to state 495
    '|'     shift, and go to state 496
    '^'     shift, and go to state 497
    '&'     shift, and go to state 498
    '<'     shift, and go to state 499
    '>'     shift, and go to state 500
    '-'     shift, and go to state 501
    '+'     shift, and go to state 502
    '*'     shift, and go to state 503
    '/'     shift, and go to state 504
    '%'     shift, and go to state 505
    '.'     shift, and go to state 506
    '['     shift, and go to state 507
    ';'     shift, and go to state 850

    $default  reduce using rule 251 (expr_assign)


State 703

  208 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 851


State 704

  192 expression_delete: "delete" expr .
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 192 (expression_delete)


State 705

   62 expression_with: "with" expr . expression_block
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507
    '{'    shift, and go to state 288

    expression_block  go to state 852


State 706

   64 expression_with_alias: "assume" "name" . '=' $@2 expr

    '='  shift, and go to state 853


State 707

  182 expression_any: "pass" ';' .

    $default  reduce using rule 182 (expression_any)


State 708

   48 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 854


State 709

   49 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 855


State 710

   50 expression_goto: "goto" expr .
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 50 (expression_goto)


State 711

   60 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 60 (expression_unsafe)


State 712

  205 expression_yield: "yield" "<-" . expr ';'
  207                 | "yield" "<-" . expr_pipe

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "@ <|"                            shift, and go to state 538
    "@@ <|"                           shift, and go to state 539
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    expr_pipe               go to state 856
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_assign             go to state 701
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 857
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 713

  206 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 206 (expression_yield)


State 714

  204 expression_yield: "yield" expr . ';'
  251 expr_assign: expr .
  252            | expr . '=' expr
  253            | expr . "<-" expr
  254            | expr . ":=" expr
  255            | expr . "&=" expr
  256            | expr . "|=" expr
  257            | expr . "^=" expr
  258            | expr . "&&=" expr
  259            | expr . "||=" expr
  260            | expr . "^^=" expr
  261            | expr . "+=" expr
  262            | expr . "-=" expr
  263            | expr . "*=" expr
  264            | expr . "/=" expr
  265            | expr . "%=" expr
  266            | expr . "<<=" expr
  267            | expr . ">>=" expr
  268            | expr . "<<<=" expr
  269            | expr . ">>>=" expr
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"    shift, and go to state 473
    "as"    shift, and go to state 474
    "+="    shift, and go to state 728
    "-="    shift, and go to state 729
    "/="    shift, and go to state 730
    "*="    shift, and go to state 731
    "%="    shift, and go to state 732
    "&="    shift, and go to state 733
    "|="    shift, and go to state 734
    "^="    shift, and go to state 735
    "<<"    shift, and go to state 475
    ">>"    shift, and go to state 476
    "++"    shift, and go to state 477
    "--"    shift, and go to state 478
    "<="    shift, and go to state 479
    "<<="   shift, and go to state 736
    ">>="   shift, and go to state 737
    ">="    shift, and go to state 480
    "=="    shift, and go to state 481
    "!="    shift, and go to state 482
    "->"    shift, and go to state 483
    "<-"    shift, and go to state 848
    "??"    shift, and go to state 484
    "?."    shift, and go to state 485
    "?["    shift, and go to state 486
    "<|"    shift, and go to state 487
    "|>"    shift, and go to state 488
    ":="    shift, and go to state 739
    "<<<"   shift, and go to state 489
    ">>>"   shift, and go to state 490
    "<<<="  shift, and go to state 740
    ">>>="  shift, and go to state 741
    "&&"    shift, and go to state 491
    "||"    shift, and go to state 492
    "^^"    shift, and go to state 493
    "&&="   shift, and go to state 742
    "||="   shift, and go to state 743
    "^^="   shift, and go to state 744
    ".."    shift, and go to state 494
    '='     shift, and go to state 849
    '?'     shift, and go to state 495
    '|'     shift, and go to state 496
    '^'     shift, and go to state 497
    '&'     shift, and go to state 498
    '<'     shift, and go to state 499
    '>'     shift, and go to state 500
    '-'     shift, and go to state 501
    '+'     shift, and go to state 502
    '*'     shift, and go to state 503
    '/'     shift, and go to state 504
    '%'     shift, and go to state 505
    '.'     shift, and go to state 506
    '['     shift, and go to state 507
    ';'     shift, and go to state 858

    $default  reduce using rule 251 (expr_assign)


State 715

  233 block_or_lambda: '@' .
  234                | '@' . '@'

    '@'  shift, and go to state 859

    $default  reduce using rule 233 (block_or_lambda)


State 716

  187 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 187 (expr_pipe)


State 717

  188 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 188 (expr_pipe)


State 718

  162 expression_block: '{' expressions '}' "finally" . '{' expressions '}'

    '{'  shift, and go to state 860


State 719

  180 expression_any: expression_label ';' .

    $default  reduce using rule 180 (expression_any)


State 720

  181 expression_any: expression_goto ';' .

    $default  reduce using rule 181 (expression_any)


State 721

   58 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507
    '{'    shift, and go to state 288

    expression_block  go to state 861


State 722

  167 expression_any: expression_delete ';' .

    $default  reduce using rule 167 (expression_any)


State 723

  174 expression_any: expression_break ';' .

    $default  reduce using rule 174 (expression_any)


State 724

  175 expression_any: expression_continue ';' .

    $default  reduce using rule 175 (expression_any)


State 725

  211 expression_let: kwd_let let_variable_declaration .

    $default  reduce using rule 211 (expression_let)


State 726

  186 expr_pipe: expr_assign " <|" . expr_block

    '$'  shift, and go to state 359
    '@'  shift, and go to state 715
    '{'  shift, and go to state 288

    expression_block  go to state 363
    block_or_lambda   go to state 369
    expr_block        go to state 862


State 727

  166 expression_any: expr_assign ';' .

    $default  reduce using rule 166 (expression_any)


State 728

  261 expr_assign: expr "+=" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 863
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 729

  262 expr_assign: expr "-=" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 864
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 730

  264 expr_assign: expr "/=" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 865
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 731

  263 expr_assign: expr "*=" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 866
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 732

  265 expr_assign: expr "%=" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 867
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 733

  255 expr_assign: expr "&=" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 868
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 734

  256 expr_assign: expr "|=" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 869
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 735

  257 expr_assign: expr "^=" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 870
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 736

  266 expr_assign: expr "<<=" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 871
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 737

  267 expr_assign: expr ">>=" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 872
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 738

  253 expr_assign: expr "<-" . expr
  272 expr_assign_pipe: expr "<-" . "@ <|" expr
  273                 | expr "<-" . "@@ <|" expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "@ <|"                            shift, and go to state 873
    "@@ <|"                           shift, and go to state 874
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 875
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 739

  254 expr_assign: expr ":=" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 876
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 740

  268 expr_assign: expr "<<<=" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 877
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 741

  269 expr_assign: expr ">>>=" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 878
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 742

  258 expr_assign: expr "&&=" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 879
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 743

  259 expr_assign: expr "||=" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 880
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 744

  260 expr_assign: expr "^^=" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 881
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 745

  252 expr_assign: expr '=' . expr
  270 expr_assign_pipe: expr '=' . "@ <|" expr
  271                 | expr '=' . "@@ <|" expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "@ <|"                            shift, and go to state 882
    "@@ <|"                           shift, and go to state 883
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 884
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 746

  452 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list '}' .

    $default  reduce using rule 452 (enum_declaration)


State 747

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr
  440 enum_list: enum_list "name" '=' expr . ';'

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507
    ';'    shift, and go to state 885


State 748

   94 optional_annotation_list: '[' . annotation_list ']'
  397 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' ';'

    "require"  shift, and go to state 48
    "private"  shift, and go to state 49
    "::"       shift, and go to state 50
    "name"     shift, and go to state 51

    annotation_declaration_name  go to state 52
    annotation_declaration       go to state 53
    annotation_list              go to state 886
    name_in_namespace            go to state 55


State 749

  465 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@30 structure_name $@31 '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 465 (structure_declaration)


State 750

  394 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" $@25 function_declaration_header ';'
  396                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_override optional_constant $@26 function_declaration_header expression_block

    "def"  shift, and go to state 887


State 751

  392 struct_variable_declaration_list: struct_variable_declaration_list $@24 . structure_variable_declaration ';'

    "[["  shift, and go to state 200

    $default  reduce using rule 379 (optional_field_annotation)

    optional_field_annotation       go to state 888
    structure_variable_declaration  go to state 889


State 752

  469 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 890


State 753

  417 copy_or_move_or_clone: '=' .
  527 type_declaration: type_declaration '=' . "const"

    "const"  shift, and go to state 384

    $default  reduce using rule 417 (copy_or_move_or_clone)


State 754

  422 let_variable_declaration: variable_name_with_pos_list ':' type_declaration ';' .

    $default  reduce using rule 422 (let_variable_declaration)


State 755

  423 let_variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone . expr ';'
  424                         | variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone . expr_pipe

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "@ <|"                            shift, and go to state 538
    "@@ <|"                           shift, and go to state 539
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    expr_pipe               go to state 891
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_assign             go to state 701
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 892
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 756

  426 let_variable_declaration: variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 426 (let_variable_declaration)


State 757

  251 expr_assign: expr .
  252            | expr . '=' expr
  253            | expr . "<-" expr
  254            | expr . ":=" expr
  255            | expr . "&=" expr
  256            | expr . "|=" expr
  257            | expr . "^=" expr
  258            | expr . "&&=" expr
  259            | expr . "||=" expr
  260            | expr . "^^=" expr
  261            | expr . "+=" expr
  262            | expr . "-=" expr
  263            | expr . "*=" expr
  264            | expr . "/=" expr
  265            | expr . "%=" expr
  266            | expr . "<<=" expr
  267            | expr . ">>=" expr
  268            | expr . "<<<=" expr
  269            | expr . ">>>=" expr
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr
  425 let_variable_declaration: variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 473
    "as"    shift, and go to state 474
    "+="    shift, and go to state 728
    "-="    shift, and go to state 729
    "/="    shift, and go to state 730
    "*="    shift, and go to state 731
    "%="    shift, and go to state 732
    "&="    shift, and go to state 733
    "|="    shift, and go to state 734
    "^="    shift, and go to state 735
    "<<"    shift, and go to state 475
    ">>"    shift, and go to state 476
    "++"    shift, and go to state 477
    "--"    shift, and go to state 478
    "<="    shift, and go to state 479
    "<<="   shift, and go to state 736
    ">>="   shift, and go to state 737
    ">="    shift, and go to state 480
    "=="    shift, and go to state 481
    "!="    shift, and go to state 482
    "->"    shift, and go to state 483
    "<-"    shift, and go to state 848
    "??"    shift, and go to state 484
    "?."    shift, and go to state 485
    "?["    shift, and go to state 486
    "<|"    shift, and go to state 487
    "|>"    shift, and go to state 488
    ":="    shift, and go to state 739
    "<<<"   shift, and go to state 489
    ">>>"   shift, and go to state 490
    "<<<="  shift, and go to state 740
    ">>>="  shift, and go to state 741
    "&&"    shift, and go to state 491
    "||"    shift, and go to state 492
    "^^"    shift, and go to state 493
    "&&="   shift, and go to state 742
    "||="   shift, and go to state 743
    "^^="   shift, and go to state 744
    ".."    shift, and go to state 494
    '='     shift, and go to state 849
    '?'     shift, and go to state 495
    '|'     shift, and go to state 496
    '^'     shift, and go to state 497
    '&'     shift, and go to state 498
    '<'     shift, and go to state 499
    '>'     shift, and go to state 500
    '-'     shift, and go to state 501
    '+'     shift, and go to state 502
    '*'     shift, and go to state 503
    '/'     shift, and go to state 504
    '%'     shift, and go to state 505
    '.'     shift, and go to state 506
    '['     shift, and go to state 507
    ';'     shift, and go to state 893

    $default  reduce using rule 251 (expr_assign)


State 758

  535 type_declaration: "array" '<' $@36 type_declaration '>' $@37 .

    $default  reduce using rule 535 (type_declaration)


State 759

  538 type_declaration: "table" '<' $@38 table_type_pair '>' $@39 .

    $default  reduce using rule 538 (type_declaration)


State 760

  511 table_type_pair: type_declaration ';' type_declaration .
  516 type_declaration: type_declaration . '[' expr ']'
  517                 | type_declaration . '[' ']'
  518                 | type_declaration . '-' '[' ']'
  519                 | type_declaration . "explicit"
  520                 | type_declaration . "const"
  521                 | type_declaration . '-' "const"
  522                 | type_declaration . '&'
  523                 | type_declaration . '-' '&'
  524                 | type_declaration . '#'
  525                 | type_declaration . "implicit"
  526                 | type_declaration . '-' '#'
  527                 | type_declaration . '=' "const"
  528                 | type_declaration . '?'
  532                 | type_declaration . "??"

    "const"     shift, and go to state 219
    "implicit"  shift, and go to state 220
    "explicit"  shift, and go to state 221
    "??"        shift, and go to state 222
    '='         shift, and go to state 223
    '?'         shift, and go to state 224
    '&'         shift, and go to state 225
    '-'         shift, and go to state 226
    '['         shift, and go to state 227
    '#'         shift, and go to state 228

    $default  reduce using rule 511 (table_type_pair)


State 761

  541 type_declaration: "iterator" '<' $@40 type_declaration '>' $@41 .

    $default  reduce using rule 541 (type_declaration)


State 762

  531 type_declaration: "smart_ptr" '<' $@34 type_declaration '>' $@35 .

    $default  reduce using rule 531 (type_declaration)


State 763

  509 bitfield_type_declaration: "bitfield" '<' $@32 bitfield_bits '>' $@33 .

    $default  reduce using rule 509 (bitfield_type_declaration)


State 764

  545 type_declaration: "block" '<' $@42 type_declaration '>' $@43 .

    $default  reduce using rule 545 (type_declaration)


State 765

  548 type_declaration: "block" '<' $@44 optional_function_argument_list optional_function_type '>' . $@45

    $default  reduce using rule 547 ($@45)

    $@45  go to state 894


State 766

  552 type_declaration: "function" '<' $@46 type_declaration '>' $@47 .

    $default  reduce using rule 552 (type_declaration)


State 767

  555 type_declaration: "function" '<' $@48 optional_function_argument_list optional_function_type '>' . $@49

    $default  reduce using rule 554 ($@49)

    $@49  go to state 895


State 768

  559 type_declaration: "lambda" '<' $@50 type_declaration '>' $@51 .

    $default  reduce using rule 559 (type_declaration)


State 769

  562 type_declaration: "lambda" '<' $@52 optional_function_argument_list optional_function_type '>' . $@53

    $default  reduce using rule 561 ($@53)

    $@53  go to state 896


State 770

  403 tuple_type: "name" ':' type_declaration .
  516 type_declaration: type_declaration . '[' expr ']'
  517                 | type_declaration . '[' ']'
  518                 | type_declaration . '-' '[' ']'
  519                 | type_declaration . "explicit"
  520                 | type_declaration . "const"
  521                 | type_declaration . '-' "const"
  522                 | type_declaration . '&'
  523                 | type_declaration . '-' '&'
  524                 | type_declaration . '#'
  525                 | type_declaration . "implicit"
  526                 | type_declaration . '-' '#'
  527                 | type_declaration . '=' "const"
  528                 | type_declaration . '?'
  532                 | type_declaration . "??"

    "const"     shift, and go to state 219
    "implicit"  shift, and go to state 220
    "explicit"  shift, and go to state 221
    "??"        shift, and go to state 222
    '='         shift, and go to state 223
    '?'         shift, and go to state 224
    '&'         shift, and go to state 225
    '-'         shift, and go to state 226
    '['         shift, and go to state 227
    '#'         shift, and go to state 228

    $default  reduce using rule 403 (tuple_type)


State 771

  565 type_declaration: "tuple" '<' $@54 tuple_type_list '>' $@55 .

    $default  reduce using rule 565 (type_declaration)


State 772

  405 tuple_type_list: tuple_type_list ';' tuple_type .

    $default  reduce using rule 405 (tuple_type_list)


State 773

  568 type_declaration: "variant" '<' $@56 variant_type_list '>' $@57 .

    $default  reduce using rule 568 (type_declaration)


State 774

  194 expr_new: "new" type_declaration '(' ')' .

    $default  reduce using rule 194 (expr_new)


State 775

  195 expr_new: "new" type_declaration '(' expr_list . ')'
  228 expr_list: expr_list . ',' expr

    ','  shift, and go to state 817
    ')'  shift, and go to state 897


State 776

  225 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  226               | "typeinfo" '(' name_in_namespace '<' . "name" ';' "name" '>' expr ')'

    "name"  shift, and go to state 898


State 777

  224 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507
    ')'    shift, and go to state 899


State 778

  223 expr_type_decl: "type" '<' $@10 type_declaration . '>' $@11
  516 type_declaration: type_declaration . '[' expr ']'
  517                 | type_declaration . '[' ']'
  518                 | type_declaration . '-' '[' ']'
  519                 | type_declaration . "explicit"
  520                 | type_declaration . "const"
  521                 | type_declaration . '-' "const"
  522                 | type_declaration . '&'
  523                 | type_declaration . '-' '&'
  524                 | type_declaration . '#'
  525                 | type_declaration . "implicit"
  526                 | type_declaration . '-' '#'
  527                 | type_declaration . '=' "const"
  528                 | type_declaration . '?'
  532                 | type_declaration . "??"

    "const"     shift, and go to state 219
    "implicit"  shift, and go to state 220
    "explicit"  shift, and go to state 221
    "??"        shift, and go to state 222
    '='         shift, and go to state 223
    '?'         shift, and go to state 224
    '&'         shift, and go to state 225
    '>'         shift, and go to state 900
    '-'         shift, and go to state 226
    '['         shift, and go to state 227
    '#'         shift, and go to state 228


State 779

  342 expr: "deref" '(' expr ')' .

    $default  reduce using rule 342 (expr)


State 780

  214 expr_cast: "cast" '<' $@4 type_declaration . '>' $@5 expr
  516 type_declaration: type_declaration . '[' expr ']'
  517                 | type_declaration . '[' ']'
  518                 | type_declaration . '-' '[' ']'
  519                 | type_declaration . "explicit"
  520                 | type_declaration . "const"
  521                 | type_declaration . '-' "const"
  522                 | type_declaration . '&'
  523                 | type_declaration . '-' '&'
  524                 | type_declaration . '#'
  525                 | type_declaration . "implicit"
  526                 | type_declaration . '-' '#'
  527                 | type_declaration . '=' "const"
  528                 | type_declaration . '?'
  532                 | type_declaration . "??"

    "const"     shift, and go to state 219
    "implicit"  shift, and go to state 220
    "explicit"  shift, and go to state 221
    "??"        shift, and go to state 222
    '='         shift, and go to state 223
    '?'         shift, and go to state 224
    '&'         shift, and go to state 225
    '>'         shift, and go to state 901
    '-'         shift, and go to state 226
    '['         shift, and go to state 227
    '#'         shift, and go to state 228


State 781

  217 expr_cast: "upcast" '<' $@6 type_declaration . '>' $@7 expr
  516 type_declaration: type_declaration . '[' expr ']'
  517                 | type_declaration . '[' ']'
  518                 | type_declaration . '-' '[' ']'
  519                 | type_declaration . "explicit"
  520                 | type_declaration . "const"
  521                 | type_declaration . '-' "const"
  522                 | type_declaration . '&'
  523                 | type_declaration . '-' '&'
  524                 | type_declaration . '#'
  525                 | type_declaration . "implicit"
  526                 | type_declaration . '-' '#'
  527                 | type_declaration . '=' "const"
  528                 | type_declaration . '?'
  532                 | type_declaration . "??"

    "const"     shift, and go to state 219
    "implicit"  shift, and go to state 220
    "explicit"  shift, and go to state 221
    "??"        shift, and go to state 222
    '='         shift, and go to state 223
    '?'         shift, and go to state 224
    '&'         shift, and go to state 225
    '>'         shift, and go to state 902
    '-'         shift, and go to state 226
    '['         shift, and go to state 227
    '#'         shift, and go to state 228


State 782

  343 expr: "addr" '(' expr ')' .

    $default  reduce using rule 343 (expr)


State 783

  220 expr_cast: "reinterpret" '<' $@8 type_declaration . '>' $@9 expr
  516 type_declaration: type_declaration . '[' expr ']'
  517                 | type_declaration . '[' ']'
  518                 | type_declaration . '-' '[' ']'
  519                 | type_declaration . "explicit"
  520                 | type_declaration . "const"
  521                 | type_declaration . '-' "const"
  522                 | type_declaration . '&'
  523                 | type_declaration . '-' '&'
  524                 | type_declaration . '#'
  525                 | type_declaration . "implicit"
  526                 | type_declaration . '-' '#'
  527                 | type_declaration . '=' "const"
  528                 | type_declaration . '?'
  532                 | type_declaration . "??"

    "const"     shift, and go to state 219
    "implicit"  shift, and go to state 220
    "explicit"  shift, and go to state 221
    "??"        shift, and go to state 222
    '='         shift, and go to state 223
    '?'         shift, and go to state 224
    '&'         shift, and go to state 225
    '>'         shift, and go to state 903
    '-'         shift, and go to state 226
    '['         shift, and go to state 227
    '#'         shift, and go to state 228


State 784

  373 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 373 (expr)


State 785

  344 expr: "generator" '<' type_declaration '>' . optional_capture_list '(' ')'
  345     | "generator" '<' type_declaration '>' . optional_capture_list '(' expr ')'

    "[["  shift, and go to state 642

    $default  reduce using rule 241 (optional_capture_list)

    optional_capture_list  go to state 904


State 786

  374 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 374 (expr_mtag)


State 787

  375 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 375 (expr_mtag)


State 788

  376 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 376 (expr_mtag)


State 789

  377 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 377 (expr_mtag)


State 790

  378 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 378 (expr_mtag)


State 791

  607 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where ']' ']'

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    expr_list               go to state 905
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 641
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 792

  585 optional_block: "where" expr_block .

    $default  reduce using rule 585 (optional_block)


State 793

  579 make_struct_fields: "name" ":=" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 906
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 794

  578 make_struct_fields: "name" copy_or_move . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 907
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 795

  588 make_struct_decl: "[[" type_declaration '(' ')' . optional_block ']' ']'
  589                 | "[[" type_declaration '(' ')' . make_struct_dim optional_block ']' ']'

    "where"  shift, and go to state 612
    "name"   shift, and go to state 815

    $default  reduce using rule 584 (optional_block)

    make_struct_fields  go to state 617
    make_struct_dim     go to state 908
    optional_block      go to state 909


State 796

  580 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  581                   | make_struct_fields ',' . "name" ":=" expr

    "name"  shift, and go to state 910


State 797

  583 make_struct_dim: make_struct_dim ';' . make_struct_fields

    "name"  shift, and go to state 815

    make_struct_fields  go to state 911


State 798

  586 make_struct_decl: "[[" type_declaration make_struct_dim optional_block . ']' ']'

    ']'  shift, and go to state 912


State 799

  587 make_struct_decl: "[[" type_declaration optional_block ']' . ']'

    ']'  shift, and go to state 913


State 800

  593 make_tuple: make_tuple ',' . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 914
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 801

  600 make_dim_decl: "[[" type_declaration make_dim ']' . ']'

    ']'  shift, and go to state 915


State 802

  599 make_dim: make_dim ';' . make_any_tuple

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 616
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_tuple              go to state 620
    make_map_tuple          go to state 621
    make_any_tuple          go to state 916
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 803

  608 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where '}' ']'

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    expr_list               go to state 917
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 641
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 804

  591 make_struct_decl: "[{" type_declaration '(' ')' . make_struct_dim optional_block '}' ']'

    "name"  shift, and go to state 815

    make_struct_fields  go to state 617
    make_struct_dim     go to state 918


State 805

  590 make_struct_decl: "[{" type_declaration make_struct_dim optional_block . '}' ']'

    '}'  shift, and go to state 919


State 806

  601 make_dim_decl: "[{" type_declaration make_dim '}' . ']'

    ']'  shift, and go to state 920


State 807

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr
  594 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 594 (make_map_tuple)


State 808

  603 make_table: make_table ';' make_map_tuple .

    $default  reduce using rule 603 (make_table)


State 809

  604 make_table_decl: "{{" make_table '}' '}' .

    $default  reduce using rule 604 (make_table_decl)


State 810

   27 string_builder_body: string_builder_body "{" expr . "}"
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    "}"    shift, and go to state 921
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507


State 811

   29 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 29 (reader_character_sequence)


State 812

   30 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   32 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 922

    $default  reduce using rule 32 (expr_reader)


State 813

  280 func_addr_expr: '@' '@' '<' $@12 . type_declaration '>' $@13 name_in_namespace

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 923


State 814

  283 func_addr_expr: '@' '@' '<' $@14 . optional_function_argument_list optional_function_type '>' $@15 name_in_namespace

    '('  shift, and go to state 286

    $default  reduce using rule 95 (optional_function_argument_list)

    optional_function_argument_list  go to state 924


State 815

  578 make_struct_fields: "name" . copy_or_move expr
  579                   | "name" . ":=" expr

    "<-"  shift, and go to state 690
    ":="  shift, and go to state 793
    '='   shift, and go to state 691

    copy_or_move  go to state 794


State 816

  274 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  580 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  581                   | make_struct_fields . ',' "name" ":=" expr

    ','  shift, and go to state 796
    ']'  shift, and go to state 925


State 817

  228 expr_list: expr_list ',' . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 926
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 818

  338 expr: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 338 (expr)


State 819

  237 capture_entry: "<-" . "name"

    "name"  shift, and go to state 927


State 820

  238 capture_entry: ":=" . "name"

    "name"  shift, and go to state 928


State 821

  236 capture_entry: '=' . "name"

    "name"  shift, and go to state 929


State 822

  235 capture_entry: '&' . "name"

    "name"  shift, and go to state 930


State 823

  239 capture_list: capture_entry .

    $default  reduce using rule 239 (capture_list)


State 824

  240 capture_list: capture_list . ',' capture_entry
  242 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 931
    ']'  shift, and go to state 932


State 825

  244 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 402

    $default  reduce using rule 98 (optional_function_type)

    optional_function_type  go to state 933


State 826

  350 expr: expr "is" "type" '<' . $@18 type_declaration '>' $@19

    $default  reduce using rule 348 ($@18)

    $@18  go to state 934


State 827

  356 expr: expr "as" "type" '<' . $@20 type_declaration '>' $@21

    $default  reduce using rule 354 ($@20)

    $@20  go to state 935


State 828

  275 expr_method_call: expr "->" "name" '(' . ')'
  276                 | expr "->" "name" '(' . expr_list ')'

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    ')'                               shift, and go to state 936
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    expr_list               go to state 937
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 641
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 829

  332 expr: expr "?[" expr ']' .

    $default  reduce using rule 332 (expr)


State 830

  361 expr: expr '?' "as" "type" . '<' $@22 type_declaration '>' $@23

    '<'  shift, and go to state 938


State 831

  358 expr: expr '?' "as" "name" .

    $default  reduce using rule 358 (expr)


State 832

  362 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 362 (expr)


State 833

  347 expr: expr '?' expr ':' . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 939
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 834

  335 expr: expr '.' "?." "name" .

    $default  reduce using rule 335 (expr)


State 835

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  333     | expr '.' "?[" expr . ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507
    ']'    shift, and go to state 940


State 836

  285 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 285 (expr_field)


State 837

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  331     | expr '.' '[' expr . ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507
    ']'    shift, and go to state 941


State 838

  288 expr_field: expr '.' $@16 error . $@17

    $default  reduce using rule 287 ($@17)

    $@17  go to state 942


State 839

  330 expr: expr '[' expr ']' .

    $default  reduce using rule 330 (expr)


State 840

  340 expr: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 340 (expr)


State 841

  413 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  414                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  516 type_declaration: type_declaration . '[' expr ']'
  517                 | type_declaration . '[' ']'
  518                 | type_declaration . '-' '[' ']'
  519                 | type_declaration . "explicit"
  520                 | type_declaration . "const"
  521                 | type_declaration . '-' "const"
  522                 | type_declaration . '&'
  523                 | type_declaration . '-' '&'
  524                 | type_declaration . '#'
  525                 | type_declaration . "implicit"
  526                 | type_declaration . '-' '#'
  527                 | type_declaration . '=' "const"
  528                 | type_declaration . '?'
  532                 | type_declaration . "??"

    "const"     shift, and go to state 219
    "implicit"  shift, and go to state 220
    "explicit"  shift, and go to state 221
    "<-"        shift, and go to state 690
    "??"        shift, and go to state 222
    '='         shift, and go to state 943
    '?'         shift, and go to state 224
    '&'         shift, and go to state 225
    '-'         shift, and go to state 226
    '['         shift, and go to state 227
    '#'         shift, and go to state 228

    $default  reduce using rule 413 (variable_declaration)

    copy_or_move  go to state 944


State 842

  416 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 416 (variable_declaration)


State 843

  251 expr_assign: expr .
  252            | expr . '=' expr
  253            | expr . "<-" expr
  254            | expr . ":=" expr
  255            | expr . "&=" expr
  256            | expr . "|=" expr
  257            | expr . "^=" expr
  258            | expr . "&&=" expr
  259            | expr . "||=" expr
  260            | expr . "^^=" expr
  261            | expr . "+=" expr
  262            | expr . "-=" expr
  263            | expr . "*=" expr
  264            | expr . "/=" expr
  265            | expr . "%=" expr
  266            | expr . "<<=" expr
  267            | expr . ">>=" expr
  268            | expr . "<<<=" expr
  269            | expr . ">>>=" expr
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr
  415 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 473
    "as"    shift, and go to state 474
    "+="    shift, and go to state 728
    "-="    shift, and go to state 729
    "/="    shift, and go to state 730
    "*="    shift, and go to state 731
    "%="    shift, and go to state 732
    "&="    shift, and go to state 733
    "|="    shift, and go to state 734
    "^="    shift, and go to state 735
    "<<"    shift, and go to state 475
    ">>"    shift, and go to state 476
    "++"    shift, and go to state 477
    "--"    shift, and go to state 478
    "<="    shift, and go to state 479
    "<<="   shift, and go to state 736
    ">>="   shift, and go to state 737
    ">="    shift, and go to state 480
    "=="    shift, and go to state 481
    "!="    shift, and go to state 482
    "->"    shift, and go to state 483
    "<-"    shift, and go to state 848
    "??"    shift, and go to state 484
    "?."    shift, and go to state 485
    "?["    shift, and go to state 486
    "<|"    shift, and go to state 487
    "|>"    shift, and go to state 488
    ":="    shift, and go to state 739
    "<<<"   shift, and go to state 489
    ">>>"   shift, and go to state 490
    "<<<="  shift, and go to state 740
    ">>>="  shift, and go to state 741
    "&&"    shift, and go to state 491
    "||"    shift, and go to state 492
    "^^"    shift, and go to state 493
    "&&="   shift, and go to state 742
    "||="   shift, and go to state 743
    "^^="   shift, and go to state 744
    ".."    shift, and go to state 494
    '='     shift, and go to state 849
    '?'     shift, and go to state 495
    '|'     shift, and go to state 496
    '^'     shift, and go to state 497
    '&'     shift, and go to state 498
    '<'     shift, and go to state 499
    '>'     shift, and go to state 500
    '-'     shift, and go to state 501
    '+'     shift, and go to state 502
    '*'     shift, and go to state 503
    '/'     shift, and go to state 504
    '%'     shift, and go to state 505
    '.'     shift, and go to state 506
    '['     shift, and go to state 507

    " <|"     reduce using rule 251 (expr_assign)
    $default  reduce using rule 415 (variable_declaration)


State 844

   61 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 61 (expression_while_loop)


State 845

   59 expression_for_loop: "for" variable_name_with_pos_list "in" . expr_list ';' expression_block

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    expr_list               go to state 945
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 641
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 846

  203 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 203 (expression_return)


State 847

  201 expression_return: "return" "<-" expr . ';'
  251 expr_assign: expr .
  252            | expr . '=' expr
  253            | expr . "<-" expr
  254            | expr . ":=" expr
  255            | expr . "&=" expr
  256            | expr . "|=" expr
  257            | expr . "^=" expr
  258            | expr . "&&=" expr
  259            | expr . "||=" expr
  260            | expr . "^^=" expr
  261            | expr . "+=" expr
  262            | expr . "-=" expr
  263            | expr . "*=" expr
  264            | expr . "/=" expr
  265            | expr . "%=" expr
  266            | expr . "<<=" expr
  267            | expr . ">>=" expr
  268            | expr . "<<<=" expr
  269            | expr . ">>>=" expr
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"    shift, and go to state 473
    "as"    shift, and go to state 474
    "+="    shift, and go to state 728
    "-="    shift, and go to state 729
    "/="    shift, and go to state 730
    "*="    shift, and go to state 731
    "%="    shift, and go to state 732
    "&="    shift, and go to state 733
    "|="    shift, and go to state 734
    "^="    shift, and go to state 735
    "<<"    shift, and go to state 475
    ">>"    shift, and go to state 476
    "++"    shift, and go to state 477
    "--"    shift, and go to state 478
    "<="    shift, and go to state 479
    "<<="   shift, and go to state 736
    ">>="   shift, and go to state 737
    ">="    shift, and go to state 480
    "=="    shift, and go to state 481
    "!="    shift, and go to state 482
    "->"    shift, and go to state 483
    "<-"    shift, and go to state 848
    "??"    shift, and go to state 484
    "?."    shift, and go to state 485
    "?["    shift, and go to state 486
    "<|"    shift, and go to state 487
    "|>"    shift, and go to state 488
    ":="    shift, and go to state 739
    "<<<"   shift, and go to state 489
    ">>>"   shift, and go to state 490
    "<<<="  shift, and go to state 740
    ">>>="  shift, and go to state 741
    "&&"    shift, and go to state 491
    "||"    shift, and go to state 492
    "^^"    shift, and go to state 493
    "&&="   shift, and go to state 742
    "||="   shift, and go to state 743
    "^^="   shift, and go to state 744
    ".."    shift, and go to state 494
    '='     shift, and go to state 849
    '?'     shift, and go to state 495
    '|'     shift, and go to state 496
    '^'     shift, and go to state 497
    '&'     shift, and go to state 498
    '<'     shift, and go to state 499
    '>'     shift, and go to state 500
    '-'     shift, and go to state 501
    '+'     shift, and go to state 502
    '*'     shift, and go to state 503
    '/'     shift, and go to state 504
    '%'     shift, and go to state 505
    '.'     shift, and go to state 506
    '['     shift, and go to state 507
    ';'     shift, and go to state 946

    $default  reduce using rule 251 (expr_assign)


State 848

  253 expr_assign: expr "<-" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 875
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 849

  252 expr_assign: expr '=' . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 884
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 850

  200 expression_return: "return" expr ';' .

    $default  reduce using rule 200 (expression_return)


State 851

  208 expression_try_catch: "try" expression_block "recover" . expression_block

    '{'  shift, and go to state 288

    expression_block  go to state 947


State 852

   62 expression_with: "with" expr expression_block .

    $default  reduce using rule 62 (expression_with)


State 853

   64 expression_with_alias: "assume" "name" '=' . $@2 expr

    $default  reduce using rule 63 ($@2)

    $@2  go to state 948


State 854

   48 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 48 (expression_label)


State 855

   49 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 49 (expression_goto)


State 856

  207 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 207 (expression_yield)


State 857

  205 expression_yield: "yield" "<-" expr . ';'
  251 expr_assign: expr .
  252            | expr . '=' expr
  253            | expr . "<-" expr
  254            | expr . ":=" expr
  255            | expr . "&=" expr
  256            | expr . "|=" expr
  257            | expr . "^=" expr
  258            | expr . "&&=" expr
  259            | expr . "||=" expr
  260            | expr . "^^=" expr
  261            | expr . "+=" expr
  262            | expr . "-=" expr
  263            | expr . "*=" expr
  264            | expr . "/=" expr
  265            | expr . "%=" expr
  266            | expr . "<<=" expr
  267            | expr . ">>=" expr
  268            | expr . "<<<=" expr
  269            | expr . ">>>=" expr
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"    shift, and go to state 473
    "as"    shift, and go to state 474
    "+="    shift, and go to state 728
    "-="    shift, and go to state 729
    "/="    shift, and go to state 730
    "*="    shift, and go to state 731
    "%="    shift, and go to state 732
    "&="    shift, and go to state 733
    "|="    shift, and go to state 734
    "^="    shift, and go to state 735
    "<<"    shift, and go to state 475
    ">>"    shift, and go to state 476
    "++"    shift, and go to state 477
    "--"    shift, and go to state 478
    "<="    shift, and go to state 479
    "<<="   shift, and go to state 736
    ">>="   shift, and go to state 737
    ">="    shift, and go to state 480
    "=="    shift, and go to state 481
    "!="    shift, and go to state 482
    "->"    shift, and go to state 483
    "<-"    shift, and go to state 848
    "??"    shift, and go to state 484
    "?."    shift, and go to state 485
    "?["    shift, and go to state 486
    "<|"    shift, and go to state 487
    "|>"    shift, and go to state 488
    ":="    shift, and go to state 739
    "<<<"   shift, and go to state 489
    ">>>"   shift, and go to state 490
    "<<<="  shift, and go to state 740
    ">>>="  shift, and go to state 741
    "&&"    shift, and go to state 491
    "||"    shift, and go to state 492
    "^^"    shift, and go to state 493
    "&&="   shift, and go to state 742
    "||="   shift, and go to state 743
    "^^="   shift, and go to state 744
    ".."    shift, and go to state 494
    '='     shift, and go to state 849
    '?'     shift, and go to state 495
    '|'     shift, and go to state 496
    '^'     shift, and go to state 497
    '&'     shift, and go to state 498
    '<'     shift, and go to state 499
    '>'     shift, and go to state 500
    '-'     shift, and go to state 501
    '+'     shift, and go to state 502
    '*'     shift, and go to state 503
    '/'     shift, and go to state 504
    '%'     shift, and go to state 505
    '.'     shift, and go to state 506
    '['     shift, and go to state 507
    ';'     shift, and go to state 949

    $default  reduce using rule 251 (expr_assign)


State 858

  204 expression_yield: "yield" expr ';' .

    $default  reduce using rule 204 (expression_yield)


State 859

  234 block_or_lambda: '@' '@' .

    $default  reduce using rule 234 (block_or_lambda)


State 860

  162 expression_block: '{' expressions '}' "finally" '{' . expressions '}'

    $default  reduce using rule 183 (expressions)

    expressions  go to state 950


State 861

   58 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 951
    "elif"         shift, and go to state 952
    "static_elif"  shift, and go to state 953

    $default  reduce using rule 53 (expression_else)

    elif_or_static_elif  go to state 954
    expression_else      go to state 955


State 862

  186 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 186 (expr_pipe)


State 863

  261 expr_assign: expr "+=" expr .
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 261 (expr_assign)


State 864

  262 expr_assign: expr "-=" expr .
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 262 (expr_assign)


State 865

  264 expr_assign: expr "/=" expr .
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 264 (expr_assign)


State 866

  263 expr_assign: expr "*=" expr .
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 263 (expr_assign)


State 867

  265 expr_assign: expr "%=" expr .
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 265 (expr_assign)


State 868

  255 expr_assign: expr "&=" expr .
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 255 (expr_assign)


State 869

  256 expr_assign: expr "|=" expr .
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 256 (expr_assign)


State 870

  257 expr_assign: expr "^=" expr .
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 257 (expr_assign)


State 871

  266 expr_assign: expr "<<=" expr .
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 266 (expr_assign)


State 872

  267 expr_assign: expr ">>=" expr .
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 267 (expr_assign)


State 873

  272 expr_assign_pipe: expr "<-" "@ <|" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 956
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 874

  273 expr_assign_pipe: expr "<-" "@@ <|" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 957
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 875

  253 expr_assign: expr "<-" expr .
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 253 (expr_assign)


State 876

  254 expr_assign: expr ":=" expr .
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 254 (expr_assign)


State 877

  268 expr_assign: expr "<<<=" expr .
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 268 (expr_assign)


State 878

  269 expr_assign: expr ">>>=" expr .
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 269 (expr_assign)


State 879

  258 expr_assign: expr "&&=" expr .
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 258 (expr_assign)


State 880

  259 expr_assign: expr "||=" expr .
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 259 (expr_assign)


State 881

  260 expr_assign: expr "^^=" expr .
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 260 (expr_assign)


State 882

  270 expr_assign_pipe: expr '=' "@ <|" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 958
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 883

  271 expr_assign_pipe: expr '=' "@@ <|" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 959
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 884

  252 expr_assign: expr '=' expr .
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 252 (expr_assign)


State 885

  440 enum_list: enum_list "name" '=' expr ';' .

    $default  reduce using rule 440 (enum_list)


State 886

   92 annotation_list: annotation_list . ',' annotation_declaration
   94 optional_annotation_list: '[' annotation_list . ']'
  397 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' ';'

    ','  shift, and go to state 82
    ']'  shift, and go to state 960


State 887

  394 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" $@25 function_declaration_header ';'
  396                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_override optional_constant $@26 function_declaration_header expression_block

    "public"   shift, and go to state 961
    "private"  shift, and go to state 962

    $default  reduce using rule 386 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 963


State 888

  389 structure_variable_declaration: optional_field_annotation . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 964
    "sealed"    shift, and go to state 965

    $default  reduce using rule 381 (optional_override)

    optional_override  go to state 966


State 889

  392 struct_variable_declaration_list: struct_variable_declaration_list $@24 structure_variable_declaration . ';'

    ';'  shift, and go to state 967


State 890

  469 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 469 (variable_name_with_pos_list)


State 891

  424 let_variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 424 (let_variable_declaration)


State 892

  251 expr_assign: expr .
  252            | expr . '=' expr
  253            | expr . "<-" expr
  254            | expr . ":=" expr
  255            | expr . "&=" expr
  256            | expr . "|=" expr
  257            | expr . "^=" expr
  258            | expr . "&&=" expr
  259            | expr . "||=" expr
  260            | expr . "^^=" expr
  261            | expr . "+=" expr
  262            | expr . "-=" expr
  263            | expr . "*=" expr
  264            | expr . "/=" expr
  265            | expr . "%=" expr
  266            | expr . "<<=" expr
  267            | expr . ">>=" expr
  268            | expr . "<<<=" expr
  269            | expr . ">>>=" expr
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr
  423 let_variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 473
    "as"    shift, and go to state 474
    "+="    shift, and go to state 728
    "-="    shift, and go to state 729
    "/="    shift, and go to state 730
    "*="    shift, and go to state 731
    "%="    shift, and go to state 732
    "&="    shift, and go to state 733
    "|="    shift, and go to state 734
    "^="    shift, and go to state 735
    "<<"    shift, and go to state 475
    ">>"    shift, and go to state 476
    "++"    shift, and go to state 477
    "--"    shift, and go to state 478
    "<="    shift, and go to state 479
    "<<="   shift, and go to state 736
    ">>="   shift, and go to state 737
    ">="    shift, and go to state 480
    "=="    shift, and go to state 481
    "!="    shift, and go to state 482
    "->"    shift, and go to state 483
    "<-"    shift, and go to state 848
    "??"    shift, and go to state 484
    "?."    shift, and go to state 485
    "?["    shift, and go to state 486
    "<|"    shift, and go to state 487
    "|>"    shift, and go to state 488
    ":="    shift, and go to state 739
    "<<<"   shift, and go to state 489
    ">>>"   shift, and go to state 490
    "<<<="  shift, and go to state 740
    ">>>="  shift, and go to state 741
    "&&"    shift, and go to state 491
    "||"    shift, and go to state 492
    "^^"    shift, and go to state 493
    "&&="   shift, and go to state 742
    "||="   shift, and go to state 743
    "^^="   shift, and go to state 744
    ".."    shift, and go to state 494
    '='     shift, and go to state 849
    '?'     shift, and go to state 495
    '|'     shift, and go to state 496
    '^'     shift, and go to state 497
    '&'     shift, and go to state 498
    '<'     shift, and go to state 499
    '>'     shift, and go to state 500
    '-'     shift, and go to state 501
    '+'     shift, and go to state 502
    '*'     shift, and go to state 503
    '/'     shift, and go to state 504
    '%'     shift, and go to state 505
    '.'     shift, and go to state 506
    '['     shift, and go to state 507
    ';'     shift, and go to state 968

    $default  reduce using rule 251 (expr_assign)


State 893

  425 let_variable_declaration: variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 425 (let_variable_declaration)


State 894

  548 type_declaration: "block" '<' $@44 optional_function_argument_list optional_function_type '>' $@45 .

    $default  reduce using rule 548 (type_declaration)


State 895

  555 type_declaration: "function" '<' $@48 optional_function_argument_list optional_function_type '>' $@49 .

    $default  reduce using rule 555 (type_declaration)


State 896

  562 type_declaration: "lambda" '<' $@52 optional_function_argument_list optional_function_type '>' $@53 .

    $default  reduce using rule 562 (type_declaration)


State 897

  195 expr_new: "new" type_declaration '(' expr_list ')' .

    $default  reduce using rule 195 (expr_new)


State 898

  225 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  226               | "typeinfo" '(' name_in_namespace '<' "name" . ';' "name" '>' expr ')'

    '>'  shift, and go to state 969
    ';'  shift, and go to state 970


State 899

  224 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 224 (expr_type_info)


State 900

  223 expr_type_decl: "type" '<' $@10 type_declaration '>' . $@11

    $default  reduce using rule 222 ($@11)

    $@11  go to state 971


State 901

  214 expr_cast: "cast" '<' $@4 type_declaration '>' . $@5 expr

    $default  reduce using rule 213 ($@5)

    $@5  go to state 972


State 902

  217 expr_cast: "upcast" '<' $@6 type_declaration '>' . $@7 expr

    $default  reduce using rule 216 ($@7)

    $@7  go to state 973


State 903

  220 expr_cast: "reinterpret" '<' $@8 type_declaration '>' . $@9 expr

    $default  reduce using rule 219 ($@9)

    $@9  go to state 974


State 904

  344 expr: "generator" '<' type_declaration '>' optional_capture_list . '(' ')'
  345     | "generator" '<' type_declaration '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 975


State 905

  228 expr_list: expr_list . ',' expr
  607 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where ']' ']'

    ','  shift, and go to state 817
    ';'  shift, and go to state 976


State 906

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr
  579 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 579 (make_struct_fields)


State 907

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr
  578 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 578 (make_struct_fields)


State 908

  583 make_struct_dim: make_struct_dim . ';' make_struct_fields
  589 make_struct_decl: "[[" type_declaration '(' ')' make_struct_dim . optional_block ']' ']'

    "where"  shift, and go to state 612
    ';'      shift, and go to state 797

    $default  reduce using rule 584 (optional_block)

    optional_block  go to state 977


State 909

  588 make_struct_decl: "[[" type_declaration '(' ')' optional_block . ']' ']'

    ']'  shift, and go to state 978


State 910

  580 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  581                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 690
    ":="  shift, and go to state 979
    '='   shift, and go to state 691

    copy_or_move  go to state 980


State 911

  580 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  581                   | make_struct_fields . ',' "name" ":=" expr
  583 make_struct_dim: make_struct_dim ';' make_struct_fields .

    ','  shift, and go to state 796

    $default  reduce using rule 583 (make_struct_dim)


State 912

  586 make_struct_decl: "[[" type_declaration make_struct_dim optional_block ']' . ']'

    ']'  shift, and go to state 981


State 913

  587 make_struct_decl: "[[" type_declaration optional_block ']' ']' .

    $default  reduce using rule 587 (make_struct_decl)


State 914

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr
  593 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 593 (make_tuple)


State 915

  600 make_dim_decl: "[[" type_declaration make_dim ']' ']' .

    $default  reduce using rule 600 (make_dim_decl)


State 916

  599 make_dim: make_dim ';' make_any_tuple .

    $default  reduce using rule 599 (make_dim)


State 917

  228 expr_list: expr_list . ',' expr
  608 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where '}' ']'

    ','  shift, and go to state 817
    ';'  shift, and go to state 982


State 918

  583 make_struct_dim: make_struct_dim . ';' make_struct_fields
  591 make_struct_decl: "[{" type_declaration '(' ')' make_struct_dim . optional_block '}' ']'

    "where"  shift, and go to state 612
    ';'      shift, and go to state 797

    $default  reduce using rule 584 (optional_block)

    optional_block  go to state 983


State 919

  590 make_struct_decl: "[{" type_declaration make_struct_dim optional_block '}' . ']'

    ']'  shift, and go to state 984


State 920

  601 make_dim_decl: "[{" type_declaration make_dim '}' ']' .

    $default  reduce using rule 601 (make_dim_decl)


State 921

   27 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 27 (string_builder_body)


State 922

   30 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 30 (reader_character_sequence)


State 923

  280 func_addr_expr: '@' '@' '<' $@12 type_declaration . '>' $@13 name_in_namespace
  516 type_declaration: type_declaration . '[' expr ']'
  517                 | type_declaration . '[' ']'
  518                 | type_declaration . '-' '[' ']'
  519                 | type_declaration . "explicit"
  520                 | type_declaration . "const"
  521                 | type_declaration . '-' "const"
  522                 | type_declaration . '&'
  523                 | type_declaration . '-' '&'
  524                 | type_declaration . '#'
  525                 | type_declaration . "implicit"
  526                 | type_declaration . '-' '#'
  527                 | type_declaration . '=' "const"
  528                 | type_declaration . '?'
  532                 | type_declaration . "??"

    "const"     shift, and go to state 219
    "implicit"  shift, and go to state 220
    "explicit"  shift, and go to state 221
    "??"        shift, and go to state 222
    '='         shift, and go to state 223
    '?'         shift, and go to state 224
    '&'         shift, and go to state 225
    '>'         shift, and go to state 985
    '-'         shift, and go to state 226
    '['         shift, and go to state 227
    '#'         shift, and go to state 228


State 924

  283 func_addr_expr: '@' '@' '<' $@14 optional_function_argument_list . optional_function_type '>' $@15 name_in_namespace

    ':'  shift, and go to state 402

    $default  reduce using rule 98 (optional_function_type)

    optional_function_type  go to state 986


State 925

  274 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 987


State 926

  228 expr_list: expr_list ',' expr .
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 228 (expr_list)


State 927

  237 capture_entry: "<-" "name" .

    $default  reduce using rule 237 (capture_entry)


State 928

  238 capture_entry: ":=" "name" .

    $default  reduce using rule 238 (capture_entry)


State 929

  236 capture_entry: '=' "name" .

    $default  reduce using rule 236 (capture_entry)


State 930

  235 capture_entry: '&' "name" .

    $default  reduce using rule 235 (capture_entry)


State 931

  240 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 819
    ":="  shift, and go to state 820
    '='   shift, and go to state 821
    '&'   shift, and go to state 822

    capture_entry  go to state 988


State 932

  242 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 989


State 933

  244 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"  shift, and go to state 990
    '{'   shift, and go to state 288

    expression_block       go to state 991
    block_or_simple_block  go to state 992


State 934

  350 expr: expr "is" "type" '<' $@18 . type_declaration '>' $@19

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 993


State 935

  356 expr: expr "as" "type" '<' $@20 . type_declaration '>' $@21

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 994


State 936

  275 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 275 (expr_method_call)


State 937

  228 expr_list: expr_list . ',' expr
  276 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 817
    ')'  shift, and go to state 995


State 938

  361 expr: expr '?' "as" "type" '<' . $@22 type_declaration '>' $@23

    $default  reduce using rule 359 ($@22)

    $@22  go to state 996


State 939

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  347     | expr '?' expr ':' expr .
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 347 (expr)


State 940

  333 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 333 (expr)


State 941

  331 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 331 (expr)


State 942

  288 expr_field: expr '.' $@16 error $@17 .

    $default  reduce using rule 288 (expr_field)


State 943

  409 copy_or_move: '=' .
  527 type_declaration: type_declaration '=' . "const"

    "const"  shift, and go to state 384

    $default  reduce using rule 409 (copy_or_move)


State 944

  414 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 997
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 945

   59 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list . ';' expression_block
  228 expr_list: expr_list . ',' expr

    ','  shift, and go to state 817
    ';'  shift, and go to state 998


State 946

  201 expression_return: "return" "<-" expr ';' .

    $default  reduce using rule 201 (expression_return)


State 947

  208 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 208 (expression_try_catch)


State 948

   64 expression_with_alias: "assume" "name" '=' $@2 . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 999
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 949

  205 expression_yield: "yield" "<-" expr ';' .

    $default  reduce using rule 205 (expression_yield)


State 950

  162 expression_block: '{' expressions '}' "finally" '{' expressions . '}'
  184 expressions: expressions . expression_any
  185            | expressions . error

    error                             shift, and go to state 521
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 522
    "if"                              shift, and go to state 523
    "static_if"                       shift, and go to state 524
    "for"                             shift, and go to state 525
    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "return"                          shift, and go to state 526
    "null"                            shift, and go to state 326
    "break"                           shift, and go to state 527
    "try"                             shift, and go to state 528
    "delete"                          shift, and go to state 529
    "deref"                           shift, and go to state 327
    "with"                            shift, and go to state 530
    "assume"                          shift, and go to state 531
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 330
    "continue"                        shift, and go to state 532
    "pass"                            shift, and go to state 533
    "reinterpret"                     shift, and go to state 331
    "label"                           shift, and go to state 534
    "goto"                            shift, and go to state 535
    "unsafe"                          shift, and go to state 536
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "yield"                           shift, and go to state 537
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "@ <|"                            shift, and go to state 538
    "@@ <|"                           shift, and go to state 539
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    ';'                               shift, and go to state 540
    '{'                               shift, and go to state 288
    '}'                               shift, and go to state 1000

    string_builder           go to state 361
    expr_reader              go to state 362
    expression_label         go to state 542
    expression_goto          go to state 543
    if_or_static_if          go to state 544
    expression_if_then_else  go to state 545
    expression_for_loop      go to state 546
    expression_unsafe        go to state 547
    expression_while_loop    go to state 548
    expression_with          go to state 549
    expression_with_alias    go to state 550
    expression_block         go to state 363
    expression_any           go to state 551
    expr_pipe                go to state 552
    name_in_namespace        go to state 364
    expression_delete        go to state 553
    expr_new                 go to state 365
    expression_break         go to state 554
    expression_continue      go to state 555
    expression_return        go to state 556
    expression_yield         go to state 557
    expression_try_catch     go to state 558
    kwd_let                  go to state 559
    expression_let           go to state 560
    expr_cast                go to state 366
    expr_type_decl           go to state 367
    expr_type_info           go to state 368
    block_or_lambda          go to state 369
    expr_block               go to state 370
    expr_numeric_const       go to state 371
    expr_assign              go to state 561
    expr_assign_pipe         go to state 562
    expr_named_call          go to state 372
    expr_method_call         go to state 373
    func_addr_expr           go to state 374
    expr_field               go to state 375
    expr                     go to state 563
    expr_mtag                go to state 377
    basic_type_declaration   go to state 378
    make_decl                go to state 379
    make_struct_decl         go to state 380
    make_dim_decl            go to state 381
    make_table_decl          go to state 382
    array_comprehension      go to state 383


State 951

   54 expression_else: "else" . expression_block

    '{'  shift, and go to state 288

    expression_block  go to state 1001


State 952

   51 elif_or_static_elif: "elif" .

    $default  reduce using rule 51 (elif_or_static_elif)


State 953

   52 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 52 (elif_or_static_elif)


State 954

   55 expression_else: elif_or_static_elif . expr expression_block expression_else

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 1002
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 955

   58 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 58 (expression_if_then_else)


State 956

  272 expr_assign_pipe: expr "<-" "@ <|" expr .
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '/'    shift, and go to state 504
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 272 (expr_assign_pipe)


State 957

  273 expr_assign_pipe: expr "<-" "@@ <|" expr .
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    "++"      [reduce using rule 273 (expr_assign_pipe)]
    "--"      [reduce using rule 273 (expr_assign_pipe)]
    '-'       [reduce using rule 273 (expr_assign_pipe)]
    '+'       [reduce using rule 273 (expr_assign_pipe)]
    '*'       [reduce using rule 273 (expr_assign_pipe)]
    '%'       [reduce using rule 273 (expr_assign_pipe)]
    $default  reduce using rule 273 (expr_assign_pipe)


State 958

  270 expr_assign_pipe: expr '=' "@ <|" expr .
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '/'    shift, and go to state 504
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 270 (expr_assign_pipe)


State 959

  271 expr_assign_pipe: expr '=' "@@ <|" expr .
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    "++"      [reduce using rule 271 (expr_assign_pipe)]
    "--"      [reduce using rule 271 (expr_assign_pipe)]
    '-'       [reduce using rule 271 (expr_assign_pipe)]
    '+'       [reduce using rule 271 (expr_assign_pipe)]
    '*'       [reduce using rule 271 (expr_assign_pipe)]
    '%'       [reduce using rule 271 (expr_assign_pipe)]
    $default  reduce using rule 271 (expr_assign_pipe)


State 960

   94 optional_annotation_list: '[' annotation_list ']' .
  397 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . ';'

    ';'  shift, and go to state 1003

    $default  reduce using rule 94 (optional_annotation_list)


State 961

  387 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 387 (optional_public_or_private_member_variable)


State 962

  388 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 388 (optional_public_or_private_member_variable)


State 963

  394 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" $@25 function_declaration_header ';'
  396                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_override optional_constant $@26 function_declaration_header expression_block

    "override"  shift, and go to state 964
    "abstract"  shift, and go to state 1004
    "sealed"    shift, and go to state 965

    $default  reduce using rule 381 (optional_override)

    optional_override  go to state 1005


State 964

  382 optional_override: "override" .

    $default  reduce using rule 382 (optional_override)


State 965

  383 optional_override: "sealed" .

    $default  reduce using rule 383 (optional_override)


State 966

  389 structure_variable_declaration: optional_field_annotation optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 961
    "private"  shift, and go to state 962

    $default  reduce using rule 386 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1006


State 967

  392 struct_variable_declaration_list: struct_variable_declaration_list $@24 structure_variable_declaration ';' .

    $default  reduce using rule 392 (struct_variable_declaration_list)


State 968

  423 let_variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone expr ';' .

    $default  reduce using rule 423 (let_variable_declaration)


State 969

  225 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 1007
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 970

  226 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' . "name" '>' expr ')'

    "name"  shift, and go to state 1008


State 971

  223 expr_type_decl: "type" '<' $@10 type_declaration '>' $@11 .

    $default  reduce using rule 223 (expr_type_decl)


State 972

  214 expr_cast: "cast" '<' $@4 type_declaration '>' $@5 . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 1009
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 973

  217 expr_cast: "upcast" '<' $@6 type_declaration '>' $@7 . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 1010
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 974

  220 expr_cast: "reinterpret" '<' $@8 type_declaration '>' $@9 . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 1011
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 975

  344 expr: "generator" '<' type_declaration '>' optional_capture_list '(' . ')'
  345     | "generator" '<' type_declaration '>' optional_capture_list '(' . expr ')'

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    ')'                               shift, and go to state 1012
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 1013
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 976

  607 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where ']' ']'

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 1014
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 977

  589 make_struct_decl: "[[" type_declaration '(' ')' make_struct_dim optional_block . ']' ']'

    ']'  shift, and go to state 1015


State 978

  588 make_struct_decl: "[[" type_declaration '(' ')' optional_block ']' . ']'

    ']'  shift, and go to state 1016


State 979

  581 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 1017
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 980

  580 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 1018
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 981

  586 make_struct_decl: "[[" type_declaration make_struct_dim optional_block ']' ']' .

    $default  reduce using rule 586 (make_struct_decl)


State 982

  608 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where '}' ']'

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 1019
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 983

  591 make_struct_decl: "[{" type_declaration '(' ')' make_struct_dim optional_block . '}' ']'

    '}'  shift, and go to state 1020


State 984

  590 make_struct_decl: "[{" type_declaration make_struct_dim optional_block '}' ']' .

    $default  reduce using rule 590 (make_struct_decl)


State 985

  280 func_addr_expr: '@' '@' '<' $@12 type_declaration '>' . $@13 name_in_namespace

    $default  reduce using rule 279 ($@13)

    $@13  go to state 1021


State 986

  283 func_addr_expr: '@' '@' '<' $@14 optional_function_argument_list optional_function_type . '>' $@15 name_in_namespace

    '>'  shift, and go to state 1022


State 987

  274 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 274 (expr_named_call)


State 988

  240 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 240 (capture_list)


State 989

  242 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 242 (optional_capture_list)


State 990

  230 block_or_simple_block: "=>" . expr
  231                      | "=>" . "<-" expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "<-"                              shift, and go to state 1023
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 1024
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 991

  229 block_or_simple_block: expression_block .

    $default  reduce using rule 229 (block_or_simple_block)


State 992

  244 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 244 (expr_block)


State 993

  350 expr: expr "is" "type" '<' $@18 type_declaration . '>' $@19
  516 type_declaration: type_declaration . '[' expr ']'
  517                 | type_declaration . '[' ']'
  518                 | type_declaration . '-' '[' ']'
  519                 | type_declaration . "explicit"
  520                 | type_declaration . "const"
  521                 | type_declaration . '-' "const"
  522                 | type_declaration . '&'
  523                 | type_declaration . '-' '&'
  524                 | type_declaration . '#'
  525                 | type_declaration . "implicit"
  526                 | type_declaration . '-' '#'
  527                 | type_declaration . '=' "const"
  528                 | type_declaration . '?'
  532                 | type_declaration . "??"

    "const"     shift, and go to state 219
    "implicit"  shift, and go to state 220
    "explicit"  shift, and go to state 221
    "??"        shift, and go to state 222
    '='         shift, and go to state 223
    '?'         shift, and go to state 224
    '&'         shift, and go to state 225
    '>'         shift, and go to state 1025
    '-'         shift, and go to state 226
    '['         shift, and go to state 227
    '#'         shift, and go to state 228


State 994

  356 expr: expr "as" "type" '<' $@20 type_declaration . '>' $@21
  516 type_declaration: type_declaration . '[' expr ']'
  517                 | type_declaration . '[' ']'
  518                 | type_declaration . '-' '[' ']'
  519                 | type_declaration . "explicit"
  520                 | type_declaration . "const"
  521                 | type_declaration . '-' "const"
  522                 | type_declaration . '&'
  523                 | type_declaration . '-' '&'
  524                 | type_declaration . '#'
  525                 | type_declaration . "implicit"
  526                 | type_declaration . '-' '#'
  527                 | type_declaration . '=' "const"
  528                 | type_declaration . '?'
  532                 | type_declaration . "??"

    "const"     shift, and go to state 219
    "implicit"  shift, and go to state 220
    "explicit"  shift, and go to state 221
    "??"        shift, and go to state 222
    '='         shift, and go to state 223
    '?'         shift, and go to state 224
    '&'         shift, and go to state 225
    '>'         shift, and go to state 1026
    '-'         shift, and go to state 226
    '['         shift, and go to state 227
    '#'         shift, and go to state 228


State 995

  276 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 276 (expr_method_call)


State 996

  361 expr: expr '?' "as" "type" '<' $@22 . type_declaration '>' $@23

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 1027


State 997

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr
  414 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 414 (variable_declaration)


State 998

   59 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' . expression_block

    '{'  shift, and go to state 288

    expression_block  go to state 1028


State 999

   64 expression_with_alias: "assume" "name" '=' $@2 expr .
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 64 (expression_with_alias)


State 1000

  162 expression_block: '{' expressions '}' "finally" '{' expressions '}' .

    $default  reduce using rule 162 (expression_block)


State 1001

   54 expression_else: "else" expression_block .

    $default  reduce using rule 54 (expression_else)


State 1002

   55 expression_else: elif_or_static_elif expr . expression_block expression_else
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507
    '{'    shift, and go to state 288

    expression_block  go to state 1029


State 1003

  397 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' ';' .

    $default  reduce using rule 397 (struct_variable_declaration_list)


State 1004

  394 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . $@25 function_declaration_header ';'

    $default  reduce using rule 393 ($@25)

    $@25  go to state 1030


State 1005

  396 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override . optional_constant $@26 function_declaration_header expression_block

    "const"  shift, and go to state 1031

    $default  reduce using rule 384 (optional_constant)

    optional_constant  go to state 1032


State 1006

  389 structure_variable_declaration: optional_field_annotation optional_override optional_public_or_private_member_variable . variable_declaration

    "name"  shift, and go to state 303

    variable_declaration         go to state 1033
    variable_name_with_pos_list  go to state 517


State 1007

  225 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507
    ')'    shift, and go to state 1034


State 1008

  226 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" . '>' expr ')'

    '>'  shift, and go to state 1035


State 1009

  214 expr_cast: "cast" '<' $@4 type_declaration '>' $@5 expr .
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 214 (expr_cast)


State 1010

  217 expr_cast: "upcast" '<' $@6 type_declaration '>' $@7 expr .
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 217 (expr_cast)


State 1011

  220 expr_cast: "reinterpret" '<' $@8 type_declaration '>' $@9 expr .
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 220 (expr_cast)


State 1012

  344 expr: "generator" '<' type_declaration '>' optional_capture_list '(' ')' .

    $default  reduce using rule 344 (expr)


State 1013

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  345     | "generator" '<' type_declaration '>' optional_capture_list '(' expr . ')'
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507
    ')'    shift, and go to state 1036


State 1014

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr
  607 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where ']' ']'

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507
    ';'    shift, and go to state 1037

    $default  reduce using rule 605 (array_comprehension_where)

    array_comprehension_where  go to state 1038


State 1015

  589 make_struct_decl: "[[" type_declaration '(' ')' make_struct_dim optional_block ']' . ']'

    ']'  shift, and go to state 1039


State 1016

  588 make_struct_decl: "[[" type_declaration '(' ')' optional_block ']' ']' .

    $default  reduce using rule 588 (make_struct_decl)


State 1017

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr
  581 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 581 (make_struct_fields)


State 1018

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr
  580 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 580 (make_struct_fields)


State 1019

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr
  608 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where '}' ']'

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507
    ';'    shift, and go to state 1037

    $default  reduce using rule 605 (array_comprehension_where)

    array_comprehension_where  go to state 1040


State 1020

  591 make_struct_decl: "[{" type_declaration '(' ')' make_struct_dim optional_block '}' . ']'

    ']'  shift, and go to state 1041


State 1021

  280 func_addr_expr: '@' '@' '<' $@12 type_declaration '>' $@13 . name_in_namespace

    "::"    shift, and go to state 50
    "name"  shift, and go to state 51

    name_in_namespace  go to state 1042


State 1022

  283 func_addr_expr: '@' '@' '<' $@14 optional_function_argument_list optional_function_type '>' . $@15 name_in_namespace

    $default  reduce using rule 282 ($@15)

    $@15  go to state 1043


State 1023

  231 block_or_simple_block: "=>" "<-" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 1044
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 1024

  230 block_or_simple_block: "=>" expr .
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    ".."  error (nonassociative)

    $default  reduce using rule 230 (block_or_simple_block)


State 1025

  350 expr: expr "is" "type" '<' $@18 type_declaration '>' . $@19

    $default  reduce using rule 349 ($@19)

    $@19  go to state 1045


State 1026

  356 expr: expr "as" "type" '<' $@20 type_declaration '>' . $@21

    $default  reduce using rule 355 ($@21)

    $@21  go to state 1046


State 1027

  361 expr: expr '?' "as" "type" '<' $@22 type_declaration . '>' $@23
  516 type_declaration: type_declaration . '[' expr ']'
  517                 | type_declaration . '[' ']'
  518                 | type_declaration . '-' '[' ']'
  519                 | type_declaration . "explicit"
  520                 | type_declaration . "const"
  521                 | type_declaration . '-' "const"
  522                 | type_declaration . '&'
  523                 | type_declaration . '-' '&'
  524                 | type_declaration . '#'
  525                 | type_declaration . "implicit"
  526                 | type_declaration . '-' '#'
  527                 | type_declaration . '=' "const"
  528                 | type_declaration . '?'
  532                 | type_declaration . "??"

    "const"     shift, and go to state 219
    "implicit"  shift, and go to state 220
    "explicit"  shift, and go to state 221
    "??"        shift, and go to state 222
    '='         shift, and go to state 223
    '?'         shift, and go to state 224
    '&'         shift, and go to state 225
    '>'         shift, and go to state 1047
    '-'         shift, and go to state 226
    '['         shift, and go to state 227
    '#'         shift, and go to state 228


State 1028

   59 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' expression_block .

    $default  reduce using rule 59 (expression_for_loop)


State 1029

   55 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 951
    "elif"         shift, and go to state 952
    "static_elif"  shift, and go to state 953

    $default  reduce using rule 53 (expression_else)

    elif_or_static_elif  go to state 954
    expression_else      go to state 1048


State 1030

  394 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" $@25 . function_declaration_header ';'

    "operator"  shift, and go to state 188
    "++"        shift, and go to state 189
    "--"        shift, and go to state 190
    "name"      shift, and go to state 191

    function_name                go to state 192
    function_declaration_header  go to state 1049


State 1031

  385 optional_constant: "const" .

    $default  reduce using rule 385 (optional_constant)


State 1032

  396 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant . $@26 function_declaration_header expression_block

    $default  reduce using rule 395 ($@26)

    $@26  go to state 1050


State 1033

  389 structure_variable_declaration: optional_field_annotation optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 389 (structure_variable_declaration)


State 1034

  225 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 225 (expr_type_info)


State 1035

  226 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' . expr ')'

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 1051
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 1036

  345 expr: "generator" '<' type_declaration '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 345 (expr)


State 1037

  606 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1052


State 1038

  607 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1053


State 1039

  589 make_struct_decl: "[[" type_declaration '(' ')' make_struct_dim optional_block ']' ']' .

    $default  reduce using rule 589 (make_struct_decl)


State 1040

  608 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . '}' ']'

    '}'  shift, and go to state 1054


State 1041

  591 make_struct_decl: "[{" type_declaration '(' ')' make_struct_dim optional_block '}' ']' .

    $default  reduce using rule 591 (make_struct_decl)


State 1042

  280 func_addr_expr: '@' '@' '<' $@12 type_declaration '>' $@13 name_in_namespace .

    $default  reduce using rule 280 (func_addr_expr)


State 1043

  283 func_addr_expr: '@' '@' '<' $@14 optional_function_argument_list optional_function_type '>' $@15 . name_in_namespace

    "::"    shift, and go to state 50
    "name"  shift, and go to state 51

    name_in_namespace  go to state 1055


State 1044

  231 block_or_simple_block: "=>" "<-" expr .
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 231 (block_or_simple_block)


State 1045

  350 expr: expr "is" "type" '<' $@18 type_declaration '>' $@19 .

    $default  reduce using rule 350 (expr)


State 1046

  356 expr: expr "as" "type" '<' $@20 type_declaration '>' $@21 .

    $default  reduce using rule 356 (expr)


State 1047

  361 expr: expr '?' "as" "type" '<' $@22 type_declaration '>' . $@23

    $default  reduce using rule 360 ($@23)

    $@23  go to state 1056


State 1048

   55 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 55 (expression_else)


State 1049

  394 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" $@25 function_declaration_header . ';'

    ';'  shift, and go to state 1057


State 1050

  396 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant $@26 . function_declaration_header expression_block

    "operator"  shift, and go to state 188
    "++"        shift, and go to state 189
    "--"        shift, and go to state 190
    "name"      shift, and go to state 191

    function_name                go to state 192
    function_declaration_header  go to state 1058


State 1051

  226 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr . ')'
  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507
    ')'    shift, and go to state 1059


State 1052

  606 array_comprehension_where: ';' "where" . expr

    "true"                            shift, and go to state 321
    "false"                           shift, and go to state 322
    "new"                             shift, and go to state 323
    "typeinfo"                        shift, and go to state 324
    "type"                            shift, and go to state 325
    "null"                            shift, and go to state 326
    "deref"                           shift, and go to state 327
    "cast"                            shift, and go to state 328
    "upcast"                          shift, and go to state 329
    "addr"                            shift, and go to state 330
    "reinterpret"                     shift, and go to state 331
    "unsafe"                          shift, and go to state 332
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 333
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 334
    "++"                              shift, and go to state 335
    "--"                              shift, and go to state 336
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 337
    "$i"                              shift, and go to state 338
    "$v"                              shift, and go to state 339
    "$b"                              shift, and go to state 340
    "$a"                              shift, and go to state 341
    "[["                              shift, and go to state 342
    "[{"                              shift, and go to state 343
    "{{"                              shift, and go to state 344
    "integer constant"                shift, and go to state 345
    "long integer constant"           shift, and go to state 346
    "unsigned integer constant"       shift, and go to state 347
    "unsigned long integer constant"  shift, and go to state 348
    "floating point constant"         shift, and go to state 349
    "double constant"                 shift, and go to state 350
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 351
    '-'                               shift, and go to state 352
    '+'                               shift, and go to state 353
    '*'                               shift, and go to state 354
    '%'                               shift, and go to state 355
    '~'                               shift, and go to state 356
    '!'                               shift, and go to state 357
    '('                               shift, and go to state 358
    '$'                               shift, and go to state 359
    '@'                               shift, and go to state 360
    '{'                               shift, and go to state 288

    string_builder          go to state 361
    expr_reader             go to state 362
    expression_block        go to state 363
    name_in_namespace       go to state 364
    expr_new                go to state 365
    expr_cast               go to state 366
    expr_type_decl          go to state 367
    expr_type_info          go to state 368
    block_or_lambda         go to state 369
    expr_block              go to state 370
    expr_numeric_const      go to state 371
    expr_named_call         go to state 372
    expr_method_call        go to state 373
    func_addr_expr          go to state 374
    expr_field              go to state 375
    expr                    go to state 1060
    expr_mtag               go to state 377
    basic_type_declaration  go to state 378
    make_decl               go to state 379
    make_struct_decl        go to state 380
    make_dim_decl           go to state 381
    make_table_decl         go to state 382
    array_comprehension     go to state 383


State 1053

  607 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1061


State 1054

  608 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' . ']'

    ']'  shift, and go to state 1062


State 1055

  283 func_addr_expr: '@' '@' '<' $@14 optional_function_argument_list optional_function_type '>' $@15 name_in_namespace .

    $default  reduce using rule 283 (func_addr_expr)


State 1056

  361 expr: expr '?' "as" "type" '<' $@22 type_declaration '>' $@23 .

    $default  reduce using rule 361 (expr)


State 1057

  394 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" $@25 function_declaration_header ';' .

    $default  reduce using rule 394 (struct_variable_declaration_list)


State 1058

  396 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant $@26 function_declaration_header . expression_block

    '{'  shift, and go to state 288

    expression_block  go to state 1063


State 1059

  226 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')' .

    $default  reduce using rule 226 (expr_type_info)


State 1060

  275 expr_method_call: expr . "->" "name" '(' ')'
  276                 | expr . "->" "name" '(' expr_list ')'
  284 expr_field: expr . '.' "name"
  285           | expr . '.' '.' "name"
  288           | expr . '.' $@16 error $@17
  303 expr: expr . "<<" expr
  304     | expr . ">>" expr
  305     | expr . "<<<" expr
  306     | expr . ">>>" expr
  307     | expr . '+' expr
  308     | expr . '-' expr
  309     | expr . '*' expr
  310     | expr . '/' expr
  311     | expr . '%' expr
  312     | expr . '<' expr
  313     | expr . '>' expr
  314     | expr . "==" expr
  315     | expr . "!=" expr
  316     | expr . "<=" expr
  317     | expr . ">=" expr
  318     | expr . '&' expr
  319     | expr . '|' expr
  320     | expr . '^' expr
  321     | expr . "&&" expr
  322     | expr . "||" expr
  323     | expr . "^^" expr
  324     | expr . ".." expr
  327     | expr . "++"
  328     | expr . "--"
  330     | expr . '[' expr ']'
  331     | expr . '.' '[' expr ']'
  332     | expr . "?[" expr ']'
  333     | expr . '.' "?[" expr ']'
  334     | expr . "?." "name"
  335     | expr . '.' "?." "name"
  346     | expr . "??" expr
  347     | expr . '?' expr ':' expr
  350     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  351     | expr . "is" basic_type_declaration
  352     | expr . "is" "name"
  353     | expr . "as" "name"
  356     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  357     | expr . "as" basic_type_declaration
  358     | expr . '?' "as" "name"
  361     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  362     | expr . '?' "as" basic_type_declaration
  370     | expr . "<|" expr
  371     | expr . "|>" expr
  606 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 473
    "as"   shift, and go to state 474
    "<<"   shift, and go to state 475
    ">>"   shift, and go to state 476
    "++"   shift, and go to state 477
    "--"   shift, and go to state 478
    "<="   shift, and go to state 479
    ">="   shift, and go to state 480
    "=="   shift, and go to state 481
    "!="   shift, and go to state 482
    "->"   shift, and go to state 483
    "??"   shift, and go to state 484
    "?."   shift, and go to state 485
    "?["   shift, and go to state 486
    "<|"   shift, and go to state 487
    "|>"   shift, and go to state 488
    "<<<"  shift, and go to state 489
    ">>>"  shift, and go to state 490
    "&&"   shift, and go to state 491
    "||"   shift, and go to state 492
    "^^"   shift, and go to state 493
    ".."   shift, and go to state 494
    '?'    shift, and go to state 495
    '|'    shift, and go to state 496
    '^'    shift, and go to state 497
    '&'    shift, and go to state 498
    '<'    shift, and go to state 499
    '>'    shift, and go to state 500
    '-'    shift, and go to state 501
    '+'    shift, and go to state 502
    '*'    shift, and go to state 503
    '/'    shift, and go to state 504
    '%'    shift, and go to state 505
    '.'    shift, and go to state 506
    '['    shift, and go to state 507

    $default  reduce using rule 606 (array_comprehension_where)


State 1061

  607 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']' .

    $default  reduce using rule 607 (array_comprehension)


State 1062

  608 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']' .

    $default  reduce using rule 608 (array_comprehension)


State 1063

  396 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant $@26 function_declaration_header expression_block .

    $default  reduce using rule 396 (struct_variable_declaration_list)

Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 55 conflicts: 1 shift/reduce
State 303 conflicts: 1 shift/reduce
State 488 conflicts: 2 shift/reduce
State 584 conflicts: 1 shift/reduce
State 821 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program bitfield_alias_declaration
   13        | program top_level_reader_macro
   14        | program ';'

   15 top_level_reader_macro: expr_reader ';'

   16 optional_public_or_private_module: %empty
   17                                  | "public"
   18                                  | "private"

   19 module_name: '$'
   20            | "name"

   21 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   22 character_sequence: STRING_CHARACTER
   23                   | STRING_CHARACTER_ESC
   24                   | character_sequence STRING_CHARACTER
   25                   | character_sequence STRING_CHARACTER_ESC

   26 string_constant: "start of the string" character_sequence "end of the string"

   27 string_builder_body: %empty
   28                    | string_builder_body character_sequence
   29                    | string_builder_body "{" expr "}"

   30 string_builder: "start of the string" string_builder_body "end of the string"

   31 reader_character_sequence: STRING_CHARACTER
   32                          | reader_character_sequence STRING_CHARACTER

   33 $@1: %empty

   34 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   35 options_declaration: "options" annotation_argument_list

   36 require_declaration: "require" require_module

   37 keyword_or_name: "name"
   38                | "keyword"

   39 require_module_name: keyword_or_name
   40                    | '%' require_module_name
   41                    | require_module_name '.' keyword_or_name
   42                    | require_module_name '/' keyword_or_name

   43 require_module: require_module_name is_public_module
   44               | require_module_name "as" "name" is_public_module

   45 is_public_module: %empty
   46                 | "public"

   47 expect_declaration: "expect" expect_list

   48 expect_list: expect_error
   49            | expect_list ',' expect_error

   50 expect_error: "integer constant"
   51             | "integer constant" ':' "integer constant"

   52 expression_label: "label" "integer constant" ':'

   53 expression_goto: "goto" "label" "integer constant"
   54                | "goto" expr

   55 elif_or_static_elif: "elif"
   56                    | "static_elif"

   57 expression_else: %empty
   58                | "else" expression_block
   59                | elif_or_static_elif expr expression_block expression_else

   60 if_or_static_if: "if"
   61                | "static_if"

   62 expression_else_one_liner: %empty

   63 $@2: %empty

   64 expression_else_one_liner: "else" $@2 expression_if_one_liner

   65 expression_if_one_liner: expr
   66                        | expression_return_no_pipe
   67                        | expression_yield_no_pipe
   68                        | expression_break
   69                        | expression_continue

   70 expression_if_then_else: if_or_static_if expr expression_block expression_else

   71 $@3: %empty

   72 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner ';'

   73 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' expression_block

   74 expression_unsafe: "unsafe" expression_block

   75 expression_while_loop: "while" expr expression_block

   76 expression_with: "with" expr expression_block

   77 $@4: %empty

   78 expression_with_alias: "assume" "name" '=' $@4 expr

   79 annotation_argument_value: string_constant
   80                          | "name"
   81                          | "integer constant"
   82                          | "floating point constant"
   83                          | "true"
   84                          | "false"

   85 annotation_argument_value_list: annotation_argument_value
   86                               | annotation_argument_value_list ',' annotation_argument_value

   87 annotation_argument_name: "name"
   88                         | "type"
   89                         | "in"

   90 annotation_argument: annotation_argument_name '=' string_constant
   91                    | annotation_argument_name '=' "name"
   92                    | annotation_argument_name '=' "integer constant"
   93                    | annotation_argument_name '=' "floating point constant"
   94                    | annotation_argument_name '=' "true"
   95                    | annotation_argument_name '=' "false"
   96                    | annotation_argument_name
   97                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

   98 annotation_argument_list: annotation_argument
   99                         | annotation_argument_list ',' annotation_argument

  100 annotation_declaration_name: name_in_namespace
  101                            | "require"
  102                            | "private"

  103 annotation_declaration_basic: annotation_declaration_name
  104                             | annotation_declaration_name '(' annotation_argument_list ')'

  105 annotation_declaration: annotation_declaration_basic
  106                       | '!' annotation_declaration
  107                       | annotation_declaration "&&" annotation_declaration
  108                       | annotation_declaration "||" annotation_declaration
  109                       | annotation_declaration "^^" annotation_declaration
  110                       | '(' annotation_declaration ')'
  111                       | "|>" annotation_declaration

  112 annotation_list: annotation_declaration
  113                | annotation_list ',' annotation_declaration

  114 optional_annotation_list: %empty
  115                         | '[' annotation_list ']'

  116 optional_function_argument_list: %empty
  117                                | '(' ')'
  118                                | '(' function_argument_list ')'

  119 optional_function_type: %empty
  120                       | ':' type_declaration

  121 function_name: "name"
  122              | "operator" '!'
  123              | "operator" '~'
  124              | "operator" "+="
  125              | "operator" "-="
  126              | "operator" "*="
  127              | "operator" "/="
  128              | "operator" "%="
  129              | "operator" "&="
  130              | "operator" "|="
  131              | "operator" "^="
  132              | "operator" "&&="
  133              | "operator" "||="
  134              | "operator" "^^="
  135              | "operator" "&&"
  136              | "operator" "||"
  137              | "operator" "^^"
  138              | "operator" '+'
  139              | "operator" '-'
  140              | "operator" '*'
  141              | "operator" '/'
  142              | "operator" '%'
  143              | "operator" '<'
  144              | "operator" '>'
  145              | "operator" ".."
  146              | "operator" "=="
  147              | "operator" "!="
  148              | "operator" "<="
  149              | "operator" ">="
  150              | "operator" '&'
  151              | "operator" '|'
  152              | "operator" '^'
  153              | "++" "operator"
  154              | "--" "operator"
  155              | "operator" "++"
  156              | "operator" "--"
  157              | "operator" "<<"
  158              | "operator" ">>"
  159              | "operator" "<<="
  160              | "operator" ">>="
  161              | "operator" "<<<"
  162              | "operator" ">>>"
  163              | "operator" "<<<="
  164              | "operator" ">>>="
  165              | "operator" '[' ']'
  166              | "operator" "?[" ']'
  167              | "operator" '.'
  168              | "operator" "?."
  169              | "operator" '.' "name"
  170              | "operator" '.' "name" ":="
  171              | "operator" "?." "name"
  172              | "operator" ":="
  173              | "operator" "delete"
  174              | "operator" "??"
  175              | "operator" "is"
  176              | "operator" "as"
  177              | "operator" "is" "name"
  178              | "operator" "as" "name"
  179              | "operator" '?' "as"
  180              | "operator" '?' "as" "name"
  181              | "bool"
  182              | "string"
  183              | "int"
  184              | "int2"
  185              | "int3"
  186              | "int4"
  187              | "uint"
  188              | "uint2"
  189              | "uint3"
  190              | "uint4"
  191              | "float"
  192              | "float2"
  193              | "float3"
  194              | "float4"
  195              | "range"
  196              | "urange"
  197              | "range64"
  198              | "urange64"
  199              | "int64"
  200              | "uint64"
  201              | "double"
  202              | "int8"
  203              | "uint8"
  204              | "int16"
  205              | "uint16"

  206 global_function_declaration: optional_annotation_list "def" function_declaration

  207 optional_public_or_private_function: %empty
  208                                    | "private"
  209                                    | "public"

  210 function_declaration_header: function_name optional_function_argument_list optional_function_type

  211 $@5: %empty

  212 function_declaration: optional_public_or_private_function $@5 function_declaration_header expression_block

  213 expression_block: '{' expressions '}'
  214                 | '{' expressions '}' "finally" '{' expressions '}'

  215 expression_any: ';'
  216               | expr_pipe
  217               | expr_keyword
  218               | expr_assign_pipe
  219               | expr_assign ';'
  220               | expression_delete ';'
  221               | expression_let
  222               | expression_while_loop
  223               | expression_unsafe
  224               | expression_with
  225               | expression_with_alias
  226               | expression_for_loop
  227               | expression_break ';'
  228               | expression_continue ';'
  229               | expression_return
  230               | expression_yield
  231               | expression_if_then_else
  232               | expression_try_catch
  233               | expression_label ';'
  234               | expression_goto ';'
  235               | "pass" ';'

  236 expressions: %empty
  237            | expressions expression_any
  238            | expressions error

  239 expr_keyword: "keyword" expr expression_block

  240 $@6: %empty

  241 $@7: %empty

  242 expression_keyword: "keyword" '<' $@6 type_declaration_no_options '>' $@7 expr

  243 expr_pipe: expr_assign " <|" expr_block
  244          | "@ <|" expr_block
  245          | "@@ <|" expr_block
  246          | "$ <|" expr_block

  247 name_in_namespace: "name"
  248                  | "name" "::" "name"
  249                  | "::" "name"

  250 expression_delete: "delete" expr
  251                  | "delete" "explicit" expr

  252 $@8: %empty

  253 $@9: %empty

  254 new_type_declaration: '<' $@8 type_declaration '>' $@9
  255                     | structure_type_declaration

  256 expr_new: "new" new_type_declaration
  257         | "new" new_type_declaration '(' ')'
  258         | "new" new_type_declaration '(' expr_list ')'
  259         | "new" make_decl

  260 expression_break: "break"

  261 expression_continue: "continue"

  262 expression_return_no_pipe: "return"
  263                          | "return" expr_list
  264                          | "return" "<-" expr_list

  265 expression_return: expression_return_no_pipe ';'
  266                  | "return" expr_pipe
  267                  | "return" "<-" expr_pipe

  268 expression_yield_no_pipe: "yield" expr
  269                         | "yield" "<-" expr

  270 expression_yield: expression_yield_no_pipe ';'
  271                 | "yield" expr_pipe
  272                 | "yield" "<-" expr_pipe

  273 expression_try_catch: "try" expression_block "recover" expression_block

  274 kwd_let: "let"
  275        | "var"

  276 optional_in_scope: "inscope"
  277                  | %empty

  278 tuple_expansion: "name"
  279                | tuple_expansion ',' "name"

  280 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  281                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr ';'

  282 expression_let: kwd_let optional_in_scope let_variable_declaration
  283               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  284 $@10: %empty

  285 $@11: %empty

  286 expr_cast: "cast" '<' $@10 type_declaration_no_options '>' $@11 expr

  287 $@12: %empty

  288 $@13: %empty

  289 expr_cast: "upcast" '<' $@12 type_declaration_no_options '>' $@13 expr

  290 $@14: %empty

  291 $@15: %empty

  292 expr_cast: "reinterpret" '<' $@14 type_declaration_no_options '>' $@15 expr

  293 $@16: %empty

  294 $@17: %empty

  295 expr_type_decl: "type" '<' $@16 type_declaration '>' $@17

  296 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  297               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  298               | "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

  299 expr_list: expr
  300          | expr_list ',' expr

  301 block_or_simple_block: expression_block
  302                      | "=>" expr
  303                      | "=>" "<-" expr

  304 block_or_lambda: '$'
  305                | '@'
  306                | '@' '@'

  307 capture_entry: '&' "name"
  308              | '=' "name"
  309              | "<-" "name"
  310              | ":=" "name"

  311 capture_list: capture_entry
  312             | capture_list ',' capture_entry

  313 optional_capture_list: %empty
  314                      | "[[" capture_list ']' ']'

  315 expr_block: expression_block
  316           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  317 expr_numeric_const: "integer constant"
  318                   | "unsigned integer constant"
  319                   | "long integer constant"
  320                   | "unsigned long integer constant"
  321                   | "unsigned int8 constant"
  322                   | "floating point constant"
  323                   | "double constant"

  324 expr_assign: expr
  325            | expr '=' expr
  326            | expr "<-" expr
  327            | expr ":=" expr
  328            | expr "&=" expr
  329            | expr "|=" expr
  330            | expr "^=" expr
  331            | expr "&&=" expr
  332            | expr "||=" expr
  333            | expr "^^=" expr
  334            | expr "+=" expr
  335            | expr "-=" expr
  336            | expr "*=" expr
  337            | expr "/=" expr
  338            | expr "%=" expr
  339            | expr "<<=" expr
  340            | expr ">>=" expr
  341            | expr "<<<=" expr
  342            | expr ">>>=" expr

  343 expr_assign_pipe: expr '=' "@ <|" expr_block
  344                 | expr '=' "@@ <|" expr_block
  345                 | expr '=' "$ <|" expr_block
  346                 | expr "<-" "@ <|" expr_block
  347                 | expr "<-" "@@ <|" expr_block
  348                 | expr "<-" "$ <|" expr_block

  349 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  350                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  351 expr_method_call: expr "->" "name" '(' ')'
  352                 | expr "->" "name" '(' expr_list ')'

  353 func_addr_name: name_in_namespace
  354               | "$i" '(' expr ')'

  355 func_addr_expr: '@' '@' func_addr_name

  356 $@18: %empty

  357 $@19: %empty

  358 func_addr_expr: '@' '@' '<' $@18 type_declaration_no_options '>' $@19 func_addr_name

  359 $@20: %empty

  360 $@21: %empty

  361 func_addr_expr: '@' '@' '<' $@20 optional_function_argument_list optional_function_type '>' $@21 func_addr_name

  362 expr_field: expr '.' "name"
  363           | expr '.' '.' "name"

  364 $@22: %empty

  365 $@23: %empty

  366 expr_field: expr '.' $@22 error $@23

  367 expr: "null"
  368     | name_in_namespace
  369     | expr_numeric_const
  370     | expr_reader
  371     | string_builder
  372     | make_decl
  373     | "true"
  374     | "false"
  375     | expr_field
  376     | expr_mtag
  377     | '!' expr
  378     | '~' expr
  379     | '+' expr
  380     | '-' expr
  381     | expr "<<" expr
  382     | expr ">>" expr
  383     | expr "<<<" expr
  384     | expr ">>>" expr
  385     | expr '+' expr
  386     | expr '-' expr
  387     | expr '*' expr
  388     | expr '/' expr
  389     | expr '%' expr
  390     | expr '<' expr
  391     | expr '>' expr
  392     | expr "==" expr
  393     | expr "!=" expr
  394     | expr "<=" expr
  395     | expr ">=" expr
  396     | expr '&' expr
  397     | expr '|' expr
  398     | expr '^' expr
  399     | expr "&&" expr
  400     | expr "||" expr
  401     | expr "^^" expr
  402     | expr ".." expr
  403     | "++" expr
  404     | "--" expr
  405     | expr "++"
  406     | expr "--"
  407     | '(' expr ')'
  408     | expr '[' expr ']'
  409     | expr '.' '[' expr ']'
  410     | expr "?[" expr ']'
  411     | expr '.' "?[" expr ']'
  412     | expr "?." "name"
  413     | expr '.' "?." "name"
  414     | func_addr_expr
  415     | name_in_namespace '(' ')'
  416     | name_in_namespace '(' expr_list ')'
  417     | basic_type_declaration '(' ')'
  418     | basic_type_declaration '(' expr_list ')'
  419     | '*' expr
  420     | "deref" '(' expr ')'
  421     | "addr" '(' expr ')'
  422     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  423     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  424     | expr "??" expr
  425     | expr '?' expr ':' expr

  426 $@24: %empty

  427 $@25: %empty

  428 expr: expr "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr "is" basic_type_declaration
  430     | expr "is" "name"
  431     | expr "as" "name"

  432 $@26: %empty

  433 $@27: %empty

  434 expr: expr "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr "as" basic_type_declaration
  436     | expr '?' "as" "name"

  437 $@28: %empty

  438 $@29: %empty

  439 expr: expr '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr '?' "as" basic_type_declaration
  441     | expr_type_info
  442     | expr_type_decl
  443     | expr_cast
  444     | expr_new
  445     | expr_method_call
  446     | expr_named_call
  447     | expr_block
  448     | expr "<|" expr
  449     | expr "|>" expr
  450     | name_in_namespace "name"
  451     | "unsafe" '(' expr ')'
  452     | expression_keyword

  453 expr_mtag: "$$" '(' expr ')'
  454          | "$i" '(' expr ')'
  455          | "$v" '(' expr ')'
  456          | "$b" '(' expr ')'
  457          | "$a" '(' expr ')'
  458          | "..."
  459          | "$c" '(' expr ')' '(' ')'
  460          | "$c" '(' expr ')' '(' expr_list ')'
  461          | expr '.' "$f" '(' expr ')'
  462          | expr "?." "$f" '(' expr ')'
  463          | expr '.' '.' "$f" '(' expr ')'
  464          | expr '.' "?." "$f" '(' expr ')'
  465          | expr "as" "$f" '(' expr ')'
  466          | expr '?' "as" "$f" '(' expr ')'
  467          | expr "is" "$f" '(' expr ')'
  468          | '@' '@' "$c" '(' expr ')'

  469 optional_field_annotation: %empty
  470                          | "[[" annotation_argument_list ']' ']'

  471 optional_override: %empty
  472                  | "override"
  473                  | "sealed"

  474 optional_constant: %empty
  475                  | "const"

  476 optional_public_or_private_member_variable: %empty
  477                                           | "public"
  478                                           | "private"

  479 optional_static_member_variable: %empty
  480                                | "static"

  481 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  482 struct_variable_declaration_list: %empty

  483 $@30: %empty

  484 struct_variable_declaration_list: struct_variable_declaration_list $@30 structure_variable_declaration ';'

  485 $@31: %empty

  486 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@31 function_declaration_header ';'

  487 $@32: %empty

  488 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@32 function_declaration_header expression_block
  489                                 | struct_variable_declaration_list '[' annotation_list ']' ';'

  490 function_argument_declaration: optional_field_annotation variable_declaration
  491                              | optional_field_annotation "var" variable_declaration
  492                              | "$a" '(' expr ')'

  493 function_argument_list: function_argument_declaration
  494                       | function_argument_list ';' function_argument_declaration

  495 tuple_type: type_declaration
  496           | "name" ':' type_declaration

  497 tuple_type_list: tuple_type
  498                | tuple_type_list ';' tuple_type

  499 variant_type: "name" ':' type_declaration

  500 variant_type_list: variant_type
  501                  | variant_type_list ';' variant_type

  502 variant_alias_type_list: %empty
  503                        | variant_alias_type_list ';'
  504                        | variant_alias_type_list variant_type ';'

  505 copy_or_move: '='
  506             | "<-"

  507 variable_declaration: variable_name_with_pos_list
  508                     | variable_name_with_pos_list '&'
  509                     | variable_name_with_pos_list ':' type_declaration
  510                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  511                     | variable_name_with_pos_list copy_or_move expr
  512                     | variable_name_with_pos_list copy_or_move expr_pipe

  513 copy_or_move_or_clone: '='
  514                      | "<-"
  515                      | ":="

  516 optional_ref: %empty
  517             | '&'

  518 let_variable_name_with_pos_list: "name"
  519                                | "$i" '(' expr ')'
  520                                | "name" "aka" "name"
  521                                | let_variable_name_with_pos_list ',' "name"
  522                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  523 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options ';'
  524                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  525                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  526                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';'
  527                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  528 global_variable_declaration_list: %empty

  529 $@33: %empty

  530 global_variable_declaration_list: global_variable_declaration_list $@33 optional_field_annotation let_variable_declaration

  531 optional_shared: %empty
  532                | "shared"

  533 optional_public_or_private_variable: %empty
  534                                    | "private"
  535                                    | "public"

  536 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  537 $@34: %empty

  538 global_let: kwd_let optional_shared optional_public_or_private_variable $@34 optional_field_annotation let_variable_declaration

  539 enum_list: %empty
  540          | enum_list ';'
  541          | enum_list "name" ';'
  542          | enum_list "name" '=' expr ';'

  543 optional_public_or_private_alias: %empty
  544                                 | "private"
  545                                 | "public"

  546 $@35: %empty

  547 single_alias: optional_public_or_private_alias "name" $@35 '=' type_declaration

  548 alias_list: single_alias ';'
  549           | alias_list single_alias ';'

  550 alias_declaration: "typedef" '{' alias_list '}'

  551 $@36: %empty

  552 alias_declaration: "typedef" $@36 single_alias ';'

  553 optional_public_or_private_enum: %empty
  554                                | "private"
  555                                | "public"

  556 enum_name: "name"

  557 $@37: %empty

  558 $@38: %empty

  559 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@37 enum_list $@38 '}'

  560 $@39: %empty

  561 $@40: %empty

  562 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@39 enum_list $@40 '}'

  563 optional_structure_parent: %empty
  564                          | ':' name_in_namespace

  565 optional_sealed: %empty
  566                | "sealed"

  567 structure_name: optional_sealed "name" optional_structure_parent

  568 class_or_struct: "class"
  569                | "struct"

  570 optional_public_or_private_structure: %empty
  571                                     | "private"
  572                                     | "public"

  573 $@41: %empty

  574 $@42: %empty

  575 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@41 structure_name $@42 '{' struct_variable_declaration_list '}'

  576 variable_name_with_pos_list: "name"
  577                            | "$i" '(' expr ')'
  578                            | "name" "aka" "name"
  579                            | variable_name_with_pos_list ',' "name"
  580                            | variable_name_with_pos_list ',' "name" "aka" "name"

  581 basic_type_declaration: "bool"
  582                       | "string"
  583                       | "int"
  584                       | "int8"
  585                       | "int16"
  586                       | "int64"
  587                       | "int2"
  588                       | "int3"
  589                       | "int4"
  590                       | "uint"
  591                       | "uint8"
  592                       | "uint16"
  593                       | "uint64"
  594                       | "uint2"
  595                       | "uint3"
  596                       | "uint4"
  597                       | "float"
  598                       | "float2"
  599                       | "float3"
  600                       | "float4"
  601                       | "void"
  602                       | "range"
  603                       | "urange"
  604                       | "range64"
  605                       | "urange64"
  606                       | "double"
  607                       | "bitfield"

  608 enum_basic_type_declaration: "int"
  609                            | "int8"
  610                            | "int16"
  611                            | "uint"
  612                            | "uint8"
  613                            | "uint16"

  614 structure_type_declaration: name_in_namespace

  615 auto_type_declaration: "auto"
  616                      | "auto" '(' "name" ')'
  617                      | "$t" '(' expr ')'

  618 bitfield_bits: "name"
  619              | bitfield_bits ';' "name"

  620 bitfield_alias_bits: %empty
  621                    | bitfield_alias_bits ';'
  622                    | bitfield_alias_bits "name" ';'

  623 $@43: %empty

  624 $@44: %empty

  625 bitfield_type_declaration: "bitfield" '<' $@43 bitfield_bits '>' $@44

  626 table_type_pair: type_declaration
  627                | type_declaration ';' type_declaration

  628 type_declaration_no_options: basic_type_declaration
  629                            | auto_type_declaration
  630                            | bitfield_type_declaration
  631                            | structure_type_declaration
  632                            | type_declaration_no_options '[' expr ']'
  633                            | type_declaration_no_options '[' ']'
  634                            | type_declaration_no_options '-' '[' ']'
  635                            | type_declaration_no_options "explicit"
  636                            | type_declaration_no_options "const"
  637                            | type_declaration_no_options '-' "const"
  638                            | type_declaration_no_options '&'
  639                            | type_declaration_no_options '-' '&'
  640                            | type_declaration_no_options '#'
  641                            | type_declaration_no_options "implicit"
  642                            | type_declaration_no_options '-' '#'
  643                            | type_declaration_no_options "==" "const"
  644                            | type_declaration_no_options "==" '&'
  645                            | type_declaration_no_options '?'

  646 $@45: %empty

  647 $@46: %empty

  648 type_declaration_no_options: "smart_ptr" '<' $@45 type_declaration '>' $@46
  649                            | type_declaration_no_options "??"

  650 $@47: %empty

  651 $@48: %empty

  652 type_declaration_no_options: "array" '<' $@47 type_declaration '>' $@48

  653 $@49: %empty

  654 $@50: %empty

  655 type_declaration_no_options: "table" '<' $@49 table_type_pair '>' $@50

  656 $@51: %empty

  657 $@52: %empty

  658 type_declaration_no_options: "iterator" '<' $@51 type_declaration '>' $@52
  659                            | "block"

  660 $@53: %empty

  661 $@54: %empty

  662 type_declaration_no_options: "block" '<' $@53 type_declaration '>' $@54

  663 $@55: %empty

  664 $@56: %empty

  665 type_declaration_no_options: "block" '<' $@55 optional_function_argument_list optional_function_type '>' $@56
  666                            | "function"

  667 $@57: %empty

  668 $@58: %empty

  669 type_declaration_no_options: "function" '<' $@57 type_declaration '>' $@58

  670 $@59: %empty

  671 $@60: %empty

  672 type_declaration_no_options: "function" '<' $@59 optional_function_argument_list optional_function_type '>' $@60
  673                            | "lambda"

  674 $@61: %empty

  675 $@62: %empty

  676 type_declaration_no_options: "lambda" '<' $@61 type_declaration '>' $@62

  677 $@63: %empty

  678 $@64: %empty

  679 type_declaration_no_options: "lambda" '<' $@63 optional_function_argument_list optional_function_type '>' $@64

  680 $@65: %empty

  681 $@66: %empty

  682 type_declaration_no_options: "tuple" '<' $@65 tuple_type_list '>' $@66

  683 $@67: %empty

  684 $@68: %empty

  685 type_declaration_no_options: "variant" '<' $@67 variant_type_list '>' $@68

  686 type_declaration: type_declaration_no_options
  687                 | type_declaration '|' type_declaration_no_options
  688                 | type_declaration '|' '#'

  689 $@69: %empty

  690 $@70: %empty

  691 $@71: %empty

  692 $@72: %empty

  693 variant_alias_declaration: "variant" optional_public_or_private_alias $@69 "name" $@70 '{' $@71 variant_alias_type_list $@72 '}'

  694 $@73: %empty

  695 $@74: %empty

  696 $@75: %empty

  697 $@76: %empty

  698 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@73 "name" $@74 '{' $@75 bitfield_alias_bits $@76 '}'

  699 make_decl: make_struct_decl
  700          | make_dim_decl
  701          | make_table_decl
  702          | array_comprehension

  703 make_struct_fields: "name" copy_or_move expr
  704                   | "name" ":=" expr
  705                   | make_struct_fields ',' "name" copy_or_move expr
  706                   | make_struct_fields ',' "name" ":=" expr
  707                   | "$f" '(' expr ')' copy_or_move expr
  708                   | "$f" '(' expr ')' ":=" expr
  709                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  710                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  711 make_struct_dim: make_struct_fields
  712                | make_struct_dim ';' make_struct_fields

  713 optional_block: %empty
  714               | "where" expr_block

  715 optional_trailing_semicolon_cur_cur: '}' '}'
  716                                    | ";}}"

  717 optional_trailing_semicolon_cur_sqr: '}' ']'
  718                                    | ";}]"

  719 optional_trailing_semicolon_sqr_sqr: ']' ']'
  720                                    | ";]]"

  721 optional_trailing_delim_sqr_sqr: ']' ']'
  722                                | ";]]"
  723                                | ",]]"

  724 optional_trailing_delim_cur_sqr: '}' ']'
  725                                | ";}]"
  726                                | ",}]"

  727 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  728                 | "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  729                 | "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  730                 | "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  731                 | "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  732                 | "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

  733 make_tuple: expr
  734           | expr "=>" expr
  735           | make_tuple ',' expr

  736 make_map_tuple: expr "=>" expr
  737               | expr

  738 make_dim: make_tuple
  739         | make_dim ';' make_tuple

  740 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  741              | "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr

  742 make_table: make_map_tuple
  743           | make_table ';' make_map_tuple

  744 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur

  745 array_comprehension_where: %empty
  746                          | ';' "where" expr

  747 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'
  748                    | "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 106 122 377
    '#' (35) 640 642 688
    '$' (36) 19 304
    '%' (37) 34 40 142 389
    '&' (38) 150 307 396 508 517 638 639 644
    '(' (40) 97 104 110 117 118 257 258 296 297 298 349 350 351 352 354 407 415 416 417 418 420 421 422 423 451 453 454 455 456 457 459 460 461 462 463 464 465 466 467 468 492 519 577 616 617 707 708 709 710 729 730 732
    ')' (41) 97 104 110 117 118 257 258 296 297 298 349 350 351 352 354 407 415 416 417 418 420 421 422 423 451 453 454 455 456 457 459 460 461 462 463 464 465 466 467 468 492 519 577 616 617 707 708 709 710 729 730 732
    '*' (42) 140 387 419
    '+' (43) 138 379 385
    ',' (44) 49 86 99 113 279 300 312 350 521 522 579 580 705 706 709 710 735
    '-' (45) 139 380 386 634 637 639 642
    '.' (46) 41 167 169 170 362 363 366 409 411 413 461 463 464
    '/' (47) 42 141 388
    ':' (58) 51 52 120 280 425 496 499 509 510 523 524 525 562 564
    ';' (59) 14 15 72 73 215 219 220 227 228 233 234 235 265 270 280 281 298 484 486 489 494 498 501 503 504 523 524 526 540 541 542 548 549 552 619 621 622 627 712 739 743 746 747 748
    '<' (60) 143 242 254 286 289 292 295 297 298 358 361 390 422 423 428 434 439 625 648 652 655 658 662 665 669 672 676 679 682 685
    '=' (61) 78 90 91 92 93 94 95 97 308 325 343 344 345 505 513 542 547
    '>' (62) 144 242 254 286 289 292 295 297 298 358 361 391 422 423 428 434 439 625 648 652 655 658 662 665 669 672 676 679 682 685
    '?' (63) 179 180 425 436 439 440 466 645
    '@' (64) 305 306 355 358 361 468
    '[' (91) 115 165 349 350 408 409 489 632 633 634
    ']' (93) 115 165 166 280 281 314 349 350 408 409 410 411 470 489 632 633 634 717 719 721 724 747 748
    '^' (94) 152 398
    '{' (123) 213 214 536 550 559 562 575 693 698
    '|' (124) 151 397 687 688
    '}' (125) 213 214 536 550 559 562 575 693 698 715 717 724 748
    '~' (126) 123 378
    error (256) 238 366
    "lexer error" (258)
    "struct" (259) 569
    "class" (260) 568
    "let" (261) 274
    "def" (262) 206 486 488
    "while" (263) 75
    "if" (264) 60 72
    "static_if" (265) 61
    "else" (266) 58 64
    "for" (267) 73 747 748
    "recover" (268) 273
    "true" (269) 83 94 373
    "false" (270) 84 95 374
    "new" (271) 256 257 258 259
    "typeinfo" (272) 296 297 298
    "type" (273) 88 295 428 434 439
    "in" (274) 73 89 747 748
    "is" (275) 175 177 428 429 430 467
    "as" (276) 44 176 178 179 180 431 434 435 436 439 440 465 466
    "elif" (277) 55
    "static_elif" (278) 56
    "array" (279) 652
    "return" (280) 262 263 264 266 267
    "null" (281) 367
    "break" (282) 260
    "try" (283) 273
    "options" (284) 35
    "table" (285) 655
    "expect" (286) 47
    "const" (287) 475 636 637 643
    "require" (288) 36 101
    "operator" (289) 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180
    "enum" (290) 559 562
    "finally" (291) 214
    "delete" (292) 173 250 251
    "deref" (293) 420
    "typedef" (294) 550 552
    "with" (295) 76
    "aka" (296) 520 522 578 580
    "assume" (297) 78
    "cast" (298) 286
    "override" (299) 472
    "abstract" (300) 486
    "upcast" (301) 289
    "iterator" (302) 658
    "var" (303) 275 491
    "addr" (304) 421
    "continue" (305) 261
    "where" (306) 714 746
    "pass" (307) 235
    "reinterpret" (308) 292
    "module" (309) 21
    "public" (310) 17 46 209 477 535 545 555 572
    "label" (311) 52 53
    "goto" (312) 53 54
    "implicit" (313) 641
    "explicit" (314) 251 635
    "shared" (315) 532
    "private" (316) 18 102 208 478 534 544 554 571
    "smart_ptr" (317) 648
    "unsafe" (318) 74 451
    "inscope" (319) 276
    "static" (320) 480
    "bool" (321) 181 581
    "void" (322) 601
    "string" (323) 182 582
    "auto" (324) 615 616
    "int" (325) 183 583 608
    "int2" (326) 184 587
    "int3" (327) 185 588
    "int4" (328) 186 589
    "uint" (329) 187 590 611
    "bitfield" (330) 607 625 698
    "uint2" (331) 188 594
    "uint3" (332) 189 595
    "uint4" (333) 190 596
    "float" (334) 191 597
    "float2" (335) 192 598
    "float3" (336) 193 599
    "float4" (337) 194 600
    "range" (338) 195 602
    "urange" (339) 196 603
    "range64" (340) 197 604
    "urange64" (341) 198 605
    "block" (342) 659 662 665
    "int64" (343) 199 586
    "uint64" (344) 200 593
    "double" (345) 201 606
    "function" (346) 666 669 672
    "lambda" (347) 673 676 679
    "int8" (348) 202 584 609
    "uint8" (349) 203 591 612
    "int16" (350) 204 585 610
    "uint16" (351) 205 592 613
    "tuple" (352) 682
    "variant" (353) 685 693
    "generator" (354) 422 423
    "yield" (355) 268 269 271 272
    "sealed" (356) 473 566
    "+=" (357) 124 334
    "-=" (358) 125 335
    "/=" (359) 127 337
    "*=" (360) 126 336
    "%=" (361) 128 338
    "&=" (362) 129 328
    "|=" (363) 130 329
    "^=" (364) 131 330
    "<<" (365) 157 381
    ">>" (366) 158 382
    "++" (367) 153 155 403 405
    "--" (368) 154 156 404 406
    "<=" (369) 148 394
    "<<=" (370) 159 339
    ">>=" (371) 160 340
    ">=" (372) 149 395
    "==" (373) 146 392 643 644
    "!=" (374) 147 393
    "->" (375) 351 352
    "<-" (376) 264 267 269 272 303 309 326 346 347 348 506 514
    "??" (377) 174 424 649
    "?." (378) 168 171 412 413 462 464
    "?[" (379) 166 410 411
    "<|" (380) 448
    " <|" (381) 243
    "$ <|" (382) 246 345 348
    "@ <|" (383) 244 343 346
    "@@ <|" (384) 245 344 347
    "|>" (385) 111 449
    ":=" (386) 170 172 310 327 515 704 706 708 710
    "<<<" (387) 161 383
    ">>>" (388) 162 384
    "<<<=" (389) 163 341
    ">>>=" (390) 164 342
    "=>" (391) 302 303 734 736
    "::" (392) 248 249
    "&&" (393) 107 135 399
    "||" (394) 108 136 400
    "^^" (395) 109 137 401
    "&&=" (396) 132 331
    "||=" (397) 133 332
    "^^=" (398) 134 333
    ".." (399) 145 402
    "$$" (400) 453
    "$i" (401) 354 454 519 577
    "$v" (402) 455
    "$b" (403) 456
    "$a" (404) 457 492
    "$t" (405) 617
    "$c" (406) 459 460 468
    "$f" (407) 461 462 463 464 465 466 467 707 708 709 710
    "..." (408) 458
    "[[" (409) 280 281 314 470 727 728 729 730 740 747
    "[{" (410) 731 732 741 748
    "{{" (411) 744
    "integer constant" <i> (412) 50 51 52 53 81 92 317
    "long integer constant" <i64> (413) 319
    "unsigned integer constant" <ui> (414) 318
    "unsigned long integer constant" <ui64> (415) 320
    "unsigned int8 constant" <ui> (416) 321
    "floating point constant" <fd> (417) 82 93 322
    "double constant" <d> (418) 323
    "name" <s> (419) 20 37 44 78 80 87 91 121 169 170 171 177 178 180 247 248 249 278 279 297 298 307 308 309 310 351 352 362 363 412 413 430 431 436 450 496 499 518 520 521 522 541 542 547 556 567 576 578 579 580 616 618 619 622 693 698 703 704 705 706
    "keyword" <s> (420) 38 239 242
    "start of the string" (421) 26 30
    STRING_CHARACTER <ch> (422) 22 24 31 32
    STRING_CHARACTER_ESC (423) 23 25
    "end of the string" (424) 26 30
    "{" (425) 29
    "}" (426) 29
    "end of failed eader macro" (427)
    ";}}" (428) 716
    ";}]" (429) 718 725
    ";]]" (430) 720 722
    ",]]" (431) 723
    ",}]" (432) 726
    UNARY_MINUS (433)
    UNARY_PLUS (434)
    PRE_INC (435)
    PRE_DEC (436)
    POST_INC (437)
    POST_DEC (438)
    DEREF (439)


Nonterminals, with rules where they appear

    $accept (212)
        on left: 0
    program (213)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14
    top_level_reader_macro (214)
        on left: 15
        on right: 13
    optional_public_or_private_module <b> (215)
        on left: 16 17 18
        on right: 21
    module_name <s> (216)
        on left: 19 20
        on right: 21
    module_declaration (217)
        on left: 21
        on right: 2
    character_sequence <s> (218)
        on left: 22 23 24 25
        on right: 24 25 26 28
    string_constant <s> (219)
        on left: 26
        on right: 79 90
    string_builder_body <pExpression> (220)
        on left: 27 28 29
        on right: 28 29 30
    string_builder <pExpression> (221)
        on left: 30
        on right: 371
    reader_character_sequence (222)
        on left: 31 32
        on right: 32 34
    expr_reader <pExpression> (223)
        on left: 34
        on right: 15 370
    $@1 (224)
        on left: 33
        on right: 34
    options_declaration (225)
        on left: 35
        on right: 9
    require_declaration (226)
        on left: 36
        on right: 8
    keyword_or_name <s> (227)
        on left: 37 38
        on right: 39 41 42
    require_module_name <s> (228)
        on left: 39 40 41 42
        on right: 40 41 42 43 44
    require_module (229)
        on left: 43 44
        on right: 36
    is_public_module <b> (230)
        on left: 45 46
        on right: 43 44
    expect_declaration (231)
        on left: 47
        on right: 7
    expect_list (232)
        on left: 48 49
        on right: 47 49
    expect_error (233)
        on left: 50 51
        on right: 48 49
    expression_label <pExpression> (234)
        on left: 52
        on right: 233
    expression_goto <pExpression> (235)
        on left: 53 54
        on right: 234
    elif_or_static_elif <b> (236)
        on left: 55 56
        on right: 59
    expression_else <pExpression> (237)
        on left: 57 58 59
        on right: 59 70
    if_or_static_if <b> (238)
        on left: 60 61
        on right: 70
    expression_else_one_liner <pExpression> (239)
        on left: 62 64
        on right: 72
    $@2 (240)
        on left: 63
        on right: 64
    expression_if_one_liner <pExpression> (241)
        on left: 65 66 67 68 69
        on right: 64 72
    expression_if_then_else <pExpression> (242)
        on left: 70 72
        on right: 231
    $@3 (243)
        on left: 71
        on right: 72
    expression_for_loop <pExpression> (244)
        on left: 73
        on right: 226
    expression_unsafe <pExpression> (245)
        on left: 74
        on right: 223
    expression_while_loop <pExpression> (246)
        on left: 75
        on right: 222
    expression_with <pExpression> (247)
        on left: 76
        on right: 224
    expression_with_alias <pExpression> (248)
        on left: 78
        on right: 225
    $@4 (249)
        on left: 77
        on right: 78
    annotation_argument_value <aa> (250)
        on left: 79 80 81 82 83 84
        on right: 85 86
    annotation_argument_value_list <aaList> (251)
        on left: 85 86
        on right: 86 97
    annotation_argument_name <s> (252)
        on left: 87 88 89
        on right: 90 91 92 93 94 95 96 97
    annotation_argument <aa> (253)
        on left: 90 91 92 93 94 95 96 97
        on right: 98 99
    annotation_argument_list <aaList> (254)
        on left: 98 99
        on right: 35 99 104 470
    annotation_declaration_name <s> (255)
        on left: 100 101 102
        on right: 103 104
    annotation_declaration_basic <fa> (256)
        on left: 103 104
        on right: 105
    annotation_declaration <fa> (257)
        on left: 105 106 107 108 109 110 111
        on right: 106 107 108 109 110 111 112 113
    annotation_list <faList> (258)
        on left: 112 113
        on right: 113 115 489
    optional_annotation_list <faList> (259)
        on left: 114 115
        on right: 206 316 486 488 559 562 575
    optional_function_argument_list <pVarDeclList> (260)
        on left: 116 117 118
        on right: 210 316 361 665 672 679
    optional_function_type <pTypeDecl> (261)
        on left: 119 120
        on right: 210 316 361 665 672 679
    function_name <s> (262)
        on left: 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205
        on right: 210
    global_function_declaration (263)
        on left: 206
        on right: 6
    optional_public_or_private_function <b> (264)
        on left: 207 208 209
        on right: 212
    function_declaration_header <pFuncDecl> (265)
        on left: 210
        on right: 212 486 488
    function_declaration <pFuncDecl> (266)
        on left: 212
        on right: 206
    $@5 (267)
        on left: 211
        on right: 212
    expression_block <pExpression> (268)
        on left: 213 214
        on right: 58 59 70 73 74 75 76 212 239 273 301 315 488
    expression_any <pExpression> (269)
        on left: 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235
        on right: 237
    expressions <pExpression> (270)
        on left: 236 237 238
        on right: 213 214 237 238
    expr_keyword <pExpression> (271)
        on left: 239
        on right: 217
    expression_keyword <pExpression> (272)
        on left: 242
        on right: 452
    $@6 (273)
        on left: 240
        on right: 242
    $@7 (274)
        on left: 241
        on right: 242
    expr_pipe <pExpression> (275)
        on left: 243 244 245 246
        on right: 216 266 267 271 272 512 525 527
    name_in_namespace <s> (276)
        on left: 247 248 249
        on right: 34 100 296 297 298 349 350 353 368 415 416 450 564 614
    expression_delete <pExpression> (277)
        on left: 250 251
        on right: 220
    new_type_declaration <pTypeDecl> (278)
        on left: 254 255
        on right: 256 257 258
    $@8 (279)
        on left: 252
        on right: 254
    $@9 (280)
        on left: 253
        on right: 254
    expr_new <pExpression> (281)
        on left: 256 257 258 259
        on right: 444
    expression_break <pExpression> (282)
        on left: 260
        on right: 68 227
    expression_continue <pExpression> (283)
        on left: 261
        on right: 69 228
    expression_return_no_pipe <pExpression> (284)
        on left: 262 263 264
        on right: 66 265
    expression_return <pExpression> (285)
        on left: 265 266 267
        on right: 229
    expression_yield_no_pipe <pExpression> (286)
        on left: 268 269
        on right: 67 270
    expression_yield <pExpression> (287)
        on left: 270 271 272
        on right: 230
    expression_try_catch <pExpression> (288)
        on left: 273
        on right: 232
    kwd_let <b> (289)
        on left: 274 275
        on right: 282 283 536 538
    optional_in_scope <b> (290)
        on left: 276 277
        on right: 282 283
    tuple_expansion <pNameList> (291)
        on left: 278 279
        on right: 279 280 281
    tuple_expansion_variable_declaration <pVarDecl> (292)
        on left: 280 281
        on right: 283
    expression_let <pExpression> (293)
        on left: 282 283
        on right: 221
    expr_cast <pExpression> (294)
        on left: 286 289 292
        on right: 443
    $@10 (295)
        on left: 284
        on right: 286
    $@11 (296)
        on left: 285
        on right: 286
    $@12 (297)
        on left: 287
        on right: 289
    $@13 (298)
        on left: 288
        on right: 289
    $@14 (299)
        on left: 290
        on right: 292
    $@15 (300)
        on left: 291
        on right: 292
    expr_type_decl <pExpression> (301)
        on left: 295
        on right: 442
    $@16 (302)
        on left: 293
        on right: 295
    $@17 (303)
        on left: 294
        on right: 295
    expr_type_info <pExpression> (304)
        on left: 296 297 298
        on right: 441
    expr_list <pExpression> (305)
        on left: 299 300
        on right: 73 258 263 264 300 350 352 416 418 460 747 748
    block_or_simple_block <pExpression> (306)
        on left: 301 302 303
        on right: 316
    block_or_lambda <i> (307)
        on left: 304 305 306
        on right: 316
    capture_entry <pCapt> (308)
        on left: 307 308 309 310
        on right: 311 312
    capture_list <pCaptList> (309)
        on left: 311 312
        on right: 312 314
    optional_capture_list <pCaptList> (310)
        on left: 313 314
        on right: 316 422 423
    expr_block <pExpression> (311)
        on left: 315 316
        on right: 243 244 245 246 343 344 345 346 347 348 447 714
    expr_numeric_const <pExpression> (312)
        on left: 317 318 319 320 321 322 323
        on right: 369
    expr_assign <pExpression> (313)
        on left: 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342
        on right: 219 243
    expr_assign_pipe <pExpression> (314)
        on left: 343 344 345 346 347 348
        on right: 218
    expr_named_call <pExpression> (315)
        on left: 349 350
        on right: 446
    expr_method_call <pExpression> (316)
        on left: 351 352
        on right: 445
    func_addr_name <pExpression> (317)
        on left: 353 354
        on right: 355 358 361
    func_addr_expr <pExpression> (318)
        on left: 355 358 361
        on right: 414
    $@18 (319)
        on left: 356
        on right: 358
    $@19 (320)
        on left: 357
        on right: 358
    $@20 (321)
        on left: 359
        on right: 361
    $@21 (322)
        on left: 360
        on right: 361
    expr_field <pExpression> (323)
        on left: 362 363 366
        on right: 375
    $@22 (324)
        on left: 364
        on right: 366
    $@23 (325)
        on left: 365
        on right: 366
    expr <pExpression> (326)
        on left: 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 428 429 430 431 434 435 436 439 440 441 442 443 444 445 446 447 448 449 450 451 452
        on right
    $@24 (327)
        on left: 426
        on right: 428
    $@25 (328)
        on left: 427
        on right: 428
    $@26 (329)
        on left: 432
        on right: 434
    $@27 (330)
        on left: 433
        on right: 434
    $@28 (331)
        on left: 437
        on right: 439
    $@29 (332)
        on left: 438
        on right: 439
    expr_mtag <pExpression> (333)
        on left: 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468
        on right: 376
    optional_field_annotation <aaList> (334)
        on left: 469 470
        on right: 481 490 491 530 538
    optional_override <i> (335)
        on left: 471 472 473
        on right: 481 488
    optional_constant <b> (336)
        on left: 474 475
        on right: 486 488
    optional_public_or_private_member_variable <b> (337)
        on left: 476 477 478
        on right: 481 486 488
    optional_static_member_variable <b> (338)
        on left: 479 480
        on right: 481 488
    structure_variable_declaration <pVarDecl> (339)
        on left: 481
        on right: 484
    struct_variable_declaration_list <pVarDeclList> (340)
        on left: 482 484 486 488 489
        on right: 484 486 488 489 575
    $@30 (341)
        on left: 483
        on right: 484
    $@31 (342)
        on left: 485
        on right: 486
    $@32 (343)
        on left: 487
        on right: 488
    function_argument_declaration <pVarDecl> (344)
        on left: 490 491 492
        on right: 493 494
    function_argument_list <pVarDeclList> (345)
        on left: 493 494
        on right: 118 494
    tuple_type <pVarDecl> (346)
        on left: 495 496
        on right: 497 498
    tuple_type_list <pVarDeclList> (347)
        on left: 497 498
        on right: 498 682
    variant_type <pVarDecl> (348)
        on left: 499
        on right: 500 501 504
    variant_type_list <pVarDeclList> (349)
        on left: 500 501
        on right: 501 685
    variant_alias_type_list <pVarDeclList> (350)
        on left: 502 503 504
        on right: 503 504 693
    copy_or_move <b> (351)
        on left: 505 506
        on right: 510 511 512 703 705 707 709
    variable_declaration <pVarDecl> (352)
        on left: 507 508 509 510 511 512
        on right: 481 490 491
    copy_or_move_or_clone <i> (353)
        on left: 513 514 515
        on right: 280 281 524 525 526 527
    optional_ref <b> (354)
        on left: 516 517
        on right: 281 526 527
    let_variable_name_with_pos_list <pNameWithPosList> (355)
        on left: 518 519 520 521 522
        on right: 521 522 523 524 525 526 527
    let_variable_declaration <pVarDecl> (356)
        on left: 523 524 525 526 527
        on right: 282 530 538
    global_variable_declaration_list <pVarDeclList> (357)
        on left: 528 530
        on right: 530 536
    $@33 (358)
        on left: 529
        on right: 530
    optional_shared <b> (359)
        on left: 531 532
        on right: 21 536 538
    optional_public_or_private_variable <b> (360)
        on left: 533 534 535
        on right: 536 538
    global_let (361)
        on left: 536 538
        on right: 5
    $@34 (362)
        on left: 537
        on right: 538
    enum_list <pEnum> (363)
        on left: 539 540 541 542
        on right: 540 541 542 559 562
    optional_public_or_private_alias <b> (364)
        on left: 543 544 545
        on right: 547 693 698
    single_alias (365)
        on left: 547
        on right: 548 549 552
    $@35 (366)
        on left: 546
        on right: 547
    alias_list (367)
        on left: 548 549
        on right: 549 550
    alias_declaration (368)
        on left: 550 552
        on right: 10
    $@36 (369)
        on left: 551
        on right: 552
    optional_public_or_private_enum <b> (370)
        on left: 553 554 555
        on right: 559 562
    enum_name <pEnum> (371)
        on left: 556
        on right: 559 562
    enum_declaration (372)
        on left: 559 562
        on right: 4
    $@37 (373)
        on left: 557
        on right: 559
    $@38 (374)
        on left: 558
        on right: 559
    $@39 (375)
        on left: 560
        on right: 562
    $@40 (376)
        on left: 561
        on right: 562
    optional_structure_parent <s> (377)
        on left: 563 564
        on right: 567
    optional_sealed <b> (378)
        on left: 565 566
        on right: 567
    structure_name <pStructure> (379)
        on left: 567
        on right: 575
    class_or_struct <b> (380)
        on left: 568 569
        on right: 575
    optional_public_or_private_structure <b> (381)
        on left: 570 571 572
        on right: 575
    structure_declaration (382)
        on left: 575
        on right: 3
    $@41 (383)
        on left: 573
        on right: 575
    $@42 (384)
        on left: 574
        on right: 575
    variable_name_with_pos_list <pNameWithPosList> (385)
        on left: 576 577 578 579 580
        on right: 73 507 508 509 510 511 512 579 580 747 748
    basic_type_declaration <type> (386)
        on left: 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607
        on right: 417 418 429 435 440 628
    enum_basic_type_declaration <type> (387)
        on left: 608 609 610 611 612 613
        on right: 562
    structure_type_declaration <pTypeDecl> (388)
        on left: 614
        on right: 255 631
    auto_type_declaration <pTypeDecl> (389)
        on left: 615 616 617
        on right: 629
    bitfield_bits <pNameList> (390)
        on left: 618 619
        on right: 619 625
    bitfield_alias_bits <pNameList> (391)
        on left: 620 621 622
        on right: 621 622 698
    bitfield_type_declaration <pTypeDecl> (392)
        on left: 625
        on right: 630
    $@43 (393)
        on left: 623
        on right: 625
    $@44 (394)
        on left: 624
        on right: 625
    table_type_pair <aTypePair> (395)
        on left: 626 627
        on right: 655
    type_declaration_no_options <pTypeDecl> (396)
        on left: 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 648 649 652 655 658 659 662 665 666 669 672 673 676 679 682 685
        on right: 242 280 286 289 292 358 422 423 428 523 524 525 632 633 634 635 636 637 638 639 640 641 642 643 644 645 649 686 687 727 728 729 730 731 732 740 741
    $@45 (397)
        on left: 646
        on right: 648
    $@46 (398)
        on left: 647
        on right: 648
    $@47 (399)
        on left: 650
        on right: 652
    $@48 (400)
        on left: 651
        on right: 652
    $@49 (401)
        on left: 653
        on right: 655
    $@50 (402)
        on left: 654
        on right: 655
    $@51 (403)
        on left: 656
        on right: 658
    $@52 (404)
        on left: 657
        on right: 658
    $@53 (405)
        on left: 660
        on right: 662
    $@54 (406)
        on left: 661
        on right: 662
    $@55 (407)
        on left: 663
        on right: 665
    $@56 (408)
        on left: 664
        on right: 665
    $@57 (409)
        on left: 667
        on right: 669
    $@58 (410)
        on left: 668
        on right: 669
    $@59 (411)
        on left: 670
        on right: 672
    $@60 (412)
        on left: 671
        on right: 672
    $@61 (413)
        on left: 674
        on right: 676
    $@62 (414)
        on left: 675
        on right: 676
    $@63 (415)
        on left: 677
        on right: 679
    $@64 (416)
        on left: 678
        on right: 679
    $@65 (417)
        on left: 680
        on right: 682
    $@66 (418)
        on left: 681
        on right: 682
    $@67 (419)
        on left: 683
        on right: 685
    $@68 (420)
        on left: 684
        on right: 685
    type_declaration <pTypeDecl> (421)
        on left: 686 687 688
        on right: 120 254 295 434 439 495 496 499 509 510 547 626 627 648 652 658 662 669 676 687 688
    variant_alias_declaration (422)
        on left: 693
        on right: 11
    $@69 (423)
        on left: 689
        on right: 693
    $@70 (424)
        on left: 690
        on right: 693
    $@71 (425)
        on left: 691
        on right: 693
    $@72 (426)
        on left: 692
        on right: 693
    bitfield_alias_declaration (427)
        on left: 698
        on right: 12
    $@73 (428)
        on left: 694
        on right: 698
    $@74 (429)
        on left: 695
        on right: 698
    $@75 (430)
        on left: 696
        on right: 698
    $@76 (431)
        on left: 697
        on right: 698
    make_decl <pExpression> (432)
        on left: 699 700 701 702
        on right: 259 372
    make_struct_fields <pMakeStruct> (433)
        on left: 703 704 705 706 707 708 709 710
        on right: 349 350 705 706 709 710 711 712
    make_struct_dim <pExpression> (434)
        on left: 711 712
        on right: 712 727 730 731 732
    optional_block <pExpression> (435)
        on left: 713 714
        on right: 727 728 729 730 731 732
    optional_trailing_semicolon_cur_cur (436)
        on left: 715 716
        on right: 744
    optional_trailing_semicolon_cur_sqr (437)
        on left: 717 718
        on right: 741
    optional_trailing_semicolon_sqr_sqr (438)
        on left: 719 720
        on right: 740
    optional_trailing_delim_sqr_sqr (439)
        on left: 721 722 723
        on right: 727 728 729 730
    optional_trailing_delim_cur_sqr (440)
        on left: 724 725 726
        on right: 731 732
    make_struct_decl <pExpression> (441)
        on left: 727 728 729 730 731 732
        on right: 699
    make_tuple <pExpression> (442)
        on left: 733 734 735
        on right: 735 738 739
    make_map_tuple <pExpression> (443)
        on left: 736 737
        on right: 742 743
    make_dim <pExpression> (444)
        on left: 738 739
        on right: 739 740 741
    make_dim_decl <pExpression> (445)
        on left: 740 741
        on right: 700
    make_table <pExpression> (446)
        on left: 742 743
        on right: 743 744
    make_table_decl <pExpression> (447)
        on left: 744
        on right: 701
    array_comprehension_where <pExpression> (448)
        on left: 745 746
        on right: 747 748
    array_comprehension <pExpression> (449)
        on left: 747 748
        on right: 702


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . bitfield_alias_declaration
   13        | program . top_level_reader_macro
   14        | program . ';'

    $end        shift, and go to state 2
    "let"       shift, and go to state 3
    "options"   shift, and go to state 4
    "expect"    shift, and go to state 5
    "require"   shift, and go to state 6
    "typedef"   shift, and go to state 7
    "var"       shift, and go to state 8
    "module"    shift, and go to state 9
    "bitfield"  shift, and go to state 10
    "variant"   shift, and go to state 11
    '%'         shift, and go to state 12
    '['         shift, and go to state 13
    ';'         shift, and go to state 14

    $default  reduce using rule 114 (optional_annotation_list)

    top_level_reader_macro       go to state 15
    module_declaration           go to state 16
    expr_reader                  go to state 17
    options_declaration          go to state 18
    require_declaration          go to state 19
    expect_declaration           go to state 20
    optional_annotation_list     go to state 21
    global_function_declaration  go to state 22
    kwd_let                      go to state 23
    global_let                   go to state 24
    alias_declaration            go to state 25
    enum_declaration             go to state 26
    structure_declaration        go to state 27
    variant_alias_declaration    go to state 28
    bitfield_alias_declaration   go to state 29


State 2

    0 $accept: program $end .

    $default  accept


State 3

  274 kwd_let: "let" .

    $default  reduce using rule 274 (kwd_let)


State 4

   35 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 30
    "in"    shift, and go to state 31
    "name"  shift, and go to state 32

    annotation_argument_name  go to state 33
    annotation_argument       go to state 34
    annotation_argument_list  go to state 35


State 5

   47 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 36

    expect_list   go to state 37
    expect_error  go to state 38


State 6

   36 require_declaration: "require" . require_module

    "name"     shift, and go to state 39
    "keyword"  shift, and go to state 40
    '%'        shift, and go to state 41

    keyword_or_name      go to state 42
    require_module_name  go to state 43
    require_module       go to state 44


State 7

  550 alias_declaration: "typedef" . '{' alias_list '}'
  552                  | "typedef" . $@36 single_alias ';'

    '{'  shift, and go to state 45

    $default  reduce using rule 551 ($@36)

    $@36  go to state 46


State 8

  275 kwd_let: "var" .

    $default  reduce using rule 275 (kwd_let)


State 9

   21 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 47
    '$'     shift, and go to state 48

    module_name  go to state 49


State 10

  698 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias $@73 "name" $@74 '{' $@75 bitfield_alias_bits $@76 '}'

    "public"   shift, and go to state 50
    "private"  shift, and go to state 51

    $default  reduce using rule 543 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 52


State 11

  693 variant_alias_declaration: "variant" . optional_public_or_private_alias $@69 "name" $@70 '{' $@71 variant_alias_type_list $@72 '}'

    "public"   shift, and go to state 50
    "private"  shift, and go to state 51

    $default  reduce using rule 543 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 53


State 12

   34 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 54
    "name"  shift, and go to state 55

    name_in_namespace  go to state 56


State 13

  115 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 57
    "private"  shift, and go to state 58
    "|>"       shift, and go to state 59
    "::"       shift, and go to state 54
    "name"     shift, and go to state 55
    '!'        shift, and go to state 60
    '('        shift, and go to state 61

    annotation_declaration_name   go to state 62
    annotation_declaration_basic  go to state 63
    annotation_declaration        go to state 64
    annotation_list               go to state 65
    name_in_namespace             go to state 66


State 14

   14 program: program ';' .

    $default  reduce using rule 14 (program)


State 15

   13 program: program top_level_reader_macro .

    $default  reduce using rule 13 (program)


State 16

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 17

   15 top_level_reader_macro: expr_reader . ';'

    ';'  shift, and go to state 67


State 18

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 19

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 20

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 21

  206 global_function_declaration: optional_annotation_list . "def" function_declaration
  559 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name '{' $@37 enum_list $@38 '}'
  562                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@39 enum_list $@40 '}'
  575 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@41 structure_name $@42 '{' struct_variable_declaration_list '}'

    "struct"  shift, and go to state 68
    "class"   shift, and go to state 69
    "def"     shift, and go to state 70
    "enum"    shift, and go to state 71

    class_or_struct  go to state 72


State 22

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 23

  536 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  538           | kwd_let . optional_shared optional_public_or_private_variable $@34 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 73

    $default  reduce using rule 531 (optional_shared)

    optional_shared  go to state 74


State 24

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 25

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 26

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 27

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 28

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 29

   12 program: program bitfield_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   88 annotation_argument_name: "type" .

    $default  reduce using rule 88 (annotation_argument_name)


State 31

   89 annotation_argument_name: "in" .

    $default  reduce using rule 89 (annotation_argument_name)


State 32

   87 annotation_argument_name: "name" .

    $default  reduce using rule 87 (annotation_argument_name)


State 33

   90 annotation_argument: annotation_argument_name . '=' string_constant
   91                    | annotation_argument_name . '=' "name"
   92                    | annotation_argument_name . '=' "integer constant"
   93                    | annotation_argument_name . '=' "floating point constant"
   94                    | annotation_argument_name . '=' "true"
   95                    | annotation_argument_name . '=' "false"
   96                    | annotation_argument_name .
   97                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 75

    $default  reduce using rule 96 (annotation_argument)


State 34

   98 annotation_argument_list: annotation_argument .

    $default  reduce using rule 98 (annotation_argument_list)


State 35

   35 options_declaration: "options" annotation_argument_list .
   99 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 76

    $default  reduce using rule 35 (options_declaration)


State 36

   50 expect_error: "integer constant" .
   51             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 77

    $default  reduce using rule 50 (expect_error)


State 37

   47 expect_declaration: "expect" expect_list .
   49 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 78

    $default  reduce using rule 47 (expect_declaration)


State 38

   48 expect_list: expect_error .

    $default  reduce using rule 48 (expect_list)


State 39

   37 keyword_or_name: "name" .

    $default  reduce using rule 37 (keyword_or_name)


State 40

   38 keyword_or_name: "keyword" .

    $default  reduce using rule 38 (keyword_or_name)


State 41

   40 require_module_name: '%' . require_module_name

    "name"     shift, and go to state 39
    "keyword"  shift, and go to state 40
    '%'        shift, and go to state 41

    keyword_or_name      go to state 42
    require_module_name  go to state 79


State 42

   39 require_module_name: keyword_or_name .

    $default  reduce using rule 39 (require_module_name)


State 43

   41 require_module_name: require_module_name . '.' keyword_or_name
   42                    | require_module_name . '/' keyword_or_name
   43 require_module: require_module_name . is_public_module
   44               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 80
    "public"  shift, and go to state 81
    '/'       shift, and go to state 82
    '.'       shift, and go to state 83

    $default  reduce using rule 45 (is_public_module)

    is_public_module  go to state 84


State 44

   36 require_declaration: "require" require_module .

    $default  reduce using rule 36 (require_declaration)


State 45

  550 alias_declaration: "typedef" '{' . alias_list '}'

    "public"   shift, and go to state 50
    "private"  shift, and go to state 51

    $default  reduce using rule 543 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 85
    single_alias                      go to state 86
    alias_list                        go to state 87


State 46

  552 alias_declaration: "typedef" $@36 . single_alias ';'

    "public"   shift, and go to state 50
    "private"  shift, and go to state 51

    $default  reduce using rule 543 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 85
    single_alias                      go to state 88


State 47

   20 module_name: "name" .

    $default  reduce using rule 20 (module_name)


State 48

   19 module_name: '$' .

    $default  reduce using rule 19 (module_name)


State 49

   21 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 73

    $default  reduce using rule 531 (optional_shared)

    optional_shared  go to state 89


State 50

  545 optional_public_or_private_alias: "public" .

    $default  reduce using rule 545 (optional_public_or_private_alias)


State 51

  544 optional_public_or_private_alias: "private" .

    $default  reduce using rule 544 (optional_public_or_private_alias)


State 52

  698 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . $@73 "name" $@74 '{' $@75 bitfield_alias_bits $@76 '}'

    $default  reduce using rule 694 ($@73)

    $@73  go to state 90


State 53

  693 variant_alias_declaration: "variant" optional_public_or_private_alias . $@69 "name" $@70 '{' $@71 variant_alias_type_list $@72 '}'

    $default  reduce using rule 689 ($@69)

    $@69  go to state 91


State 54

  249 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 92


State 55

  247 name_in_namespace: "name" .
  248                  | "name" . "::" "name"

    "::"  shift, and go to state 93

    "::"      [reduce using rule 247 (name_in_namespace)]
    $default  reduce using rule 247 (name_in_namespace)


State 56

   34 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 33 ($@1)

    $@1  go to state 94


State 57

  101 annotation_declaration_name: "require" .

    $default  reduce using rule 101 (annotation_declaration_name)


State 58

  102 annotation_declaration_name: "private" .

    $default  reduce using rule 102 (annotation_declaration_name)


State 59

  111 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 57
    "private"  shift, and go to state 58
    "|>"       shift, and go to state 59
    "::"       shift, and go to state 54
    "name"     shift, and go to state 55
    '!'        shift, and go to state 60
    '('        shift, and go to state 61

    annotation_declaration_name   go to state 62
    annotation_declaration_basic  go to state 63
    annotation_declaration        go to state 95
    name_in_namespace             go to state 66


State 60

  106 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 57
    "private"  shift, and go to state 58
    "|>"       shift, and go to state 59
    "::"       shift, and go to state 54
    "name"     shift, and go to state 55
    '!'        shift, and go to state 60
    '('        shift, and go to state 61

    annotation_declaration_name   go to state 62
    annotation_declaration_basic  go to state 63
    annotation_declaration        go to state 96
    name_in_namespace             go to state 66


State 61

  110 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 57
    "private"  shift, and go to state 58
    "|>"       shift, and go to state 59
    "::"       shift, and go to state 54
    "name"     shift, and go to state 55
    '!'        shift, and go to state 60
    '('        shift, and go to state 61

    annotation_declaration_name   go to state 62
    annotation_declaration_basic  go to state 63
    annotation_declaration        go to state 97
    name_in_namespace             go to state 66


State 62

  103 annotation_declaration_basic: annotation_declaration_name .
  104                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 98

    $default  reduce using rule 103 (annotation_declaration_basic)


State 63

  105 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 105 (annotation_declaration)


State 64

  107 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  108                       | annotation_declaration . "||" annotation_declaration
  109                       | annotation_declaration . "^^" annotation_declaration
  112 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 99
    "||"  shift, and go to state 100
    "^^"  shift, and go to state 101

    $default  reduce using rule 112 (annotation_list)


State 65

  113 annotation_list: annotation_list . ',' annotation_declaration
  115 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 102
    ']'  shift, and go to state 103


State 66

  100 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 100 (annotation_declaration_name)


State 67

   15 top_level_reader_macro: expr_reader ';' .

    $default  reduce using rule 15 (top_level_reader_macro)


State 68

  569 class_or_struct: "struct" .

    $default  reduce using rule 569 (class_or_struct)


State 69

  568 class_or_struct: "class" .

    $default  reduce using rule 568 (class_or_struct)


State 70

  206 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 104
    "private"  shift, and go to state 105

    $default  reduce using rule 207 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 106
    function_declaration                 go to state 107


State 71

  559 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name '{' $@37 enum_list $@38 '}'
  562                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@39 enum_list $@40 '}'

    "public"   shift, and go to state 108
    "private"  shift, and go to state 109

    $default  reduce using rule 553 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 110


State 72

  575 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@41 structure_name $@42 '{' struct_variable_declaration_list '}'

    "public"   shift, and go to state 111
    "private"  shift, and go to state 112

    $default  reduce using rule 570 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 113


State 73

  532 optional_shared: "shared" .

    $default  reduce using rule 532 (optional_shared)


State 74

  536 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  538           | kwd_let optional_shared . optional_public_or_private_variable $@34 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 114
    "private"  shift, and go to state 115

    $default  reduce using rule 533 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 116


State 75

   90 annotation_argument: annotation_argument_name '=' . string_constant
   91                    | annotation_argument_name '=' . "name"
   92                    | annotation_argument_name '=' . "integer constant"
   93                    | annotation_argument_name '=' . "floating point constant"
   94                    | annotation_argument_name '=' . "true"
   95                    | annotation_argument_name '=' . "false"
   97                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 117
    "false"                    shift, and go to state 118
    "integer constant"         shift, and go to state 119
    "floating point constant"  shift, and go to state 120
    "name"                     shift, and go to state 121
    "start of the string"      shift, and go to state 122
    '('                        shift, and go to state 123

    string_constant  go to state 124


State 76

   99 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 30
    "in"    shift, and go to state 31
    "name"  shift, and go to state 32

    annotation_argument_name  go to state 33
    annotation_argument       go to state 125


State 77

   51 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 126


State 78

   49 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 36

    expect_error  go to state 127


State 79

   40 require_module_name: '%' require_module_name .
   41                    | require_module_name . '.' keyword_or_name
   42                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 83

    $default  reduce using rule 40 (require_module_name)


State 80

   44 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 128


State 81

   46 is_public_module: "public" .

    $default  reduce using rule 46 (is_public_module)


State 82

   42 require_module_name: require_module_name '/' . keyword_or_name

    "name"     shift, and go to state 39
    "keyword"  shift, and go to state 40

    keyword_or_name  go to state 129


State 83

   41 require_module_name: require_module_name '.' . keyword_or_name

    "name"     shift, and go to state 39
    "keyword"  shift, and go to state 40

    keyword_or_name  go to state 130


State 84

   43 require_module: require_module_name is_public_module .

    $default  reduce using rule 43 (require_module)


State 85

  547 single_alias: optional_public_or_private_alias . "name" $@35 '=' type_declaration

    "name"  shift, and go to state 131


State 86

  548 alias_list: single_alias . ';'

    ';'  shift, and go to state 132


State 87

  549 alias_list: alias_list . single_alias ';'
  550 alias_declaration: "typedef" '{' alias_list . '}'

    "public"   shift, and go to state 50
    "private"  shift, and go to state 51
    '}'        shift, and go to state 133

    $default  reduce using rule 543 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 85
    single_alias                      go to state 134


State 88

  552 alias_declaration: "typedef" $@36 single_alias . ';'

    ';'  shift, and go to state 135


State 89

   21 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 136
    "private"  shift, and go to state 137

    $default  reduce using rule 16 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 138


State 90

  698 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@73 . "name" $@74 '{' $@75 bitfield_alias_bits $@76 '}'

    "name"  shift, and go to state 139


State 91

  693 variant_alias_declaration: "variant" optional_public_or_private_alias $@69 . "name" $@70 '{' $@71 variant_alias_type_list $@72 '}'

    "name"  shift, and go to state 140


State 92

  249 name_in_namespace: "::" "name" .

    $default  reduce using rule 249 (name_in_namespace)


State 93

  248 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 141


State 94

   34 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 142

    reader_character_sequence  go to state 143


State 95

  107 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  108                       | annotation_declaration . "||" annotation_declaration
  109                       | annotation_declaration . "^^" annotation_declaration
  111                       | "|>" annotation_declaration .

    $default  reduce using rule 111 (annotation_declaration)


State 96

  106 annotation_declaration: '!' annotation_declaration .
  107                       | annotation_declaration . "&&" annotation_declaration
  108                       | annotation_declaration . "||" annotation_declaration
  109                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 106 (annotation_declaration)


State 97

  107 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  108                       | annotation_declaration . "||" annotation_declaration
  109                       | annotation_declaration . "^^" annotation_declaration
  110                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 99
    "||"  shift, and go to state 100
    "^^"  shift, and go to state 101
    ')'   shift, and go to state 144


State 98

  104 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 30
    "in"    shift, and go to state 31
    "name"  shift, and go to state 32

    annotation_argument_name  go to state 33
    annotation_argument       go to state 34
    annotation_argument_list  go to state 145


State 99

  107 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 57
    "private"  shift, and go to state 58
    "|>"       shift, and go to state 59
    "::"       shift, and go to state 54
    "name"     shift, and go to state 55
    '!'        shift, and go to state 60
    '('        shift, and go to state 61

    annotation_declaration_name   go to state 62
    annotation_declaration_basic  go to state 63
    annotation_declaration        go to state 146
    name_in_namespace             go to state 66


State 100

  108 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 57
    "private"  shift, and go to state 58
    "|>"       shift, and go to state 59
    "::"       shift, and go to state 54
    "name"     shift, and go to state 55
    '!'        shift, and go to state 60
    '('        shift, and go to state 61

    annotation_declaration_name   go to state 62
    annotation_declaration_basic  go to state 63
    annotation_declaration        go to state 147
    name_in_namespace             go to state 66


State 101

  109 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 57
    "private"  shift, and go to state 58
    "|>"       shift, and go to state 59
    "::"       shift, and go to state 54
    "name"     shift, and go to state 55
    '!'        shift, and go to state 60
    '('        shift, and go to state 61

    annotation_declaration_name   go to state 62
    annotation_declaration_basic  go to state 63
    annotation_declaration        go to state 148
    name_in_namespace             go to state 66


State 102

  113 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 57
    "private"  shift, and go to state 58
    "|>"       shift, and go to state 59
    "::"       shift, and go to state 54
    "name"     shift, and go to state 55
    '!'        shift, and go to state 60
    '('        shift, and go to state 61

    annotation_declaration_name   go to state 62
    annotation_declaration_basic  go to state 63
    annotation_declaration        go to state 149
    name_in_namespace             go to state 66


State 103

  115 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 115 (optional_annotation_list)


State 104

  209 optional_public_or_private_function: "public" .

    $default  reduce using rule 209 (optional_public_or_private_function)


State 105

  208 optional_public_or_private_function: "private" .

    $default  reduce using rule 208 (optional_public_or_private_function)


State 106

  212 function_declaration: optional_public_or_private_function . $@5 function_declaration_header expression_block

    $default  reduce using rule 211 ($@5)

    $@5  go to state 150


State 107

  206 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 206 (global_function_declaration)


State 108

  555 optional_public_or_private_enum: "public" .

    $default  reduce using rule 555 (optional_public_or_private_enum)


State 109

  554 optional_public_or_private_enum: "private" .

    $default  reduce using rule 554 (optional_public_or_private_enum)


State 110

  559 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name '{' $@37 enum_list $@38 '}'
  562                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration '{' $@39 enum_list $@40 '}'

    "name"  shift, and go to state 151

    enum_name  go to state 152


State 111

  572 optional_public_or_private_structure: "public" .

    $default  reduce using rule 572 (optional_public_or_private_structure)


State 112

  571 optional_public_or_private_structure: "private" .

    $default  reduce using rule 571 (optional_public_or_private_structure)


State 113

  575 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@41 structure_name $@42 '{' struct_variable_declaration_list '}'

    $default  reduce using rule 573 ($@41)

    $@41  go to state 153


State 114

  535 optional_public_or_private_variable: "public" .

    $default  reduce using rule 535 (optional_public_or_private_variable)


State 115

  534 optional_public_or_private_variable: "private" .

    $default  reduce using rule 534 (optional_public_or_private_variable)


State 116

  536 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  538           | kwd_let optional_shared optional_public_or_private_variable . $@34 optional_field_annotation let_variable_declaration

    '{'  shift, and go to state 154

    $default  reduce using rule 537 ($@34)

    $@34  go to state 155


State 117

   94 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 94 (annotation_argument)


State 118

   95 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 95 (annotation_argument)


State 119

   92 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 92 (annotation_argument)


State 120

   93 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 93 (annotation_argument)


State 121

   91 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 91 (annotation_argument)


State 122

   26 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 156
    STRING_CHARACTER_ESC  shift, and go to state 157

    character_sequence  go to state 158


State 123

   97 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 159
    "false"                    shift, and go to state 160
    "integer constant"         shift, and go to state 161
    "floating point constant"  shift, and go to state 162
    "name"                     shift, and go to state 163
    "start of the string"      shift, and go to state 122

    string_constant                 go to state 164
    annotation_argument_value       go to state 165
    annotation_argument_value_list  go to state 166


State 124

   90 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 90 (annotation_argument)


State 125

   99 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 99 (annotation_argument_list)


State 126

   51 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 51 (expect_error)


State 127

   49 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 49 (expect_list)


State 128

   44 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 81

    $default  reduce using rule 45 (is_public_module)

    is_public_module  go to state 167


State 129

   42 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 42 (require_module_name)


State 130

   41 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 41 (require_module_name)


State 131

  547 single_alias: optional_public_or_private_alias "name" . $@35 '=' type_declaration

    $default  reduce using rule 546 ($@35)

    $@35  go to state 168


State 132

  548 alias_list: single_alias ';' .

    $default  reduce using rule 548 (alias_list)


State 133

  550 alias_declaration: "typedef" '{' alias_list '}' .

    $default  reduce using rule 550 (alias_declaration)


State 134

  549 alias_list: alias_list single_alias . ';'

    ';'  shift, and go to state 169


State 135

  552 alias_declaration: "typedef" $@36 single_alias ';' .

    $default  reduce using rule 552 (alias_declaration)


State 136

   17 optional_public_or_private_module: "public" .

    $default  reduce using rule 17 (optional_public_or_private_module)


State 137

   18 optional_public_or_private_module: "private" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 138

   21 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 21 (module_declaration)


State 139

  698 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@73 "name" . $@74 '{' $@75 bitfield_alias_bits $@76 '}'

    $default  reduce using rule 695 ($@74)

    $@74  go to state 170


State 140

  693 variant_alias_declaration: "variant" optional_public_or_private_alias $@69 "name" . $@70 '{' $@71 variant_alias_type_list $@72 '}'

    $default  reduce using rule 690 ($@70)

    $@70  go to state 171


State 141

  248 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 248 (name_in_namespace)


State 142

   31 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 31 (reader_character_sequence)


State 143

   32 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   34 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 172

    $default  reduce using rule 34 (expr_reader)


State 144

  110 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 110 (annotation_declaration)


State 145

   99 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  104 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 76
    ')'  shift, and go to state 173


State 146

  107 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration "&&" annotation_declaration .
  108                       | annotation_declaration . "||" annotation_declaration
  109                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 107 (annotation_declaration)


State 147

  107 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  108                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration "||" annotation_declaration .
  109                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 99
    "^^"  shift, and go to state 101

    $default  reduce using rule 108 (annotation_declaration)


State 148

  107 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  108                       | annotation_declaration . "||" annotation_declaration
  109                       | annotation_declaration . "^^" annotation_declaration
  109                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 99

    $default  reduce using rule 109 (annotation_declaration)


State 149

  107 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  108                       | annotation_declaration . "||" annotation_declaration
  109                       | annotation_declaration . "^^" annotation_declaration
  113 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 99
    "||"  shift, and go to state 100
    "^^"  shift, and go to state 101

    $default  reduce using rule 113 (annotation_list)


State 150

  212 function_declaration: optional_public_or_private_function $@5 . function_declaration_header expression_block

    "operator"  shift, and go to state 174
    "bool"      shift, and go to state 175
    "string"    shift, and go to state 176
    "int"       shift, and go to state 177
    "int2"      shift, and go to state 178
    "int3"      shift, and go to state 179
    "int4"      shift, and go to state 180
    "uint"      shift, and go to state 181
    "uint2"     shift, and go to state 182
    "uint3"     shift, and go to state 183
    "uint4"     shift, and go to state 184
    "float"     shift, and go to state 185
    "float2"    shift, and go to state 186
    "float3"    shift, and go to state 187
    "float4"    shift, and go to state 188
    "range"     shift, and go to state 189
    "urange"    shift, and go to state 190
    "range64"   shift, and go to state 191
    "urange64"  shift, and go to state 192
    "int64"     shift, and go to state 193
    "uint64"    shift, and go to state 194
    "double"    shift, and go to state 195
    "int8"      shift, and go to state 196
    "uint8"     shift, and go to state 197
    "int16"     shift, and go to state 198
    "uint16"    shift, and go to state 199
    "++"        shift, and go to state 200
    "--"        shift, and go to state 201
    "name"      shift, and go to state 202

    function_name                go to state 203
    function_declaration_header  go to state 204


State 151

  556 enum_name: "name" .

    $default  reduce using rule 556 (enum_name)


State 152

  559 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . '{' $@37 enum_list $@38 '}'
  562                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration '{' $@39 enum_list $@40 '}'

    ':'  shift, and go to state 205
    '{'  shift, and go to state 206


State 153

  575 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@41 . structure_name $@42 '{' struct_variable_declaration_list '}'

    "sealed"  shift, and go to state 207

    $default  reduce using rule 565 (optional_sealed)

    optional_sealed  go to state 208
    structure_name   go to state 209


State 154

  536 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 528 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 210


State 155

  538 global_let: kwd_let optional_shared optional_public_or_private_variable $@34 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 211

    $default  reduce using rule 469 (optional_field_annotation)

    optional_field_annotation  go to state 212


State 156

   22 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 22 (character_sequence)


State 157

   23 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 23 (character_sequence)


State 158

   24 character_sequence: character_sequence . STRING_CHARACTER
   25                   | character_sequence . STRING_CHARACTER_ESC
   26 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 213
    STRING_CHARACTER_ESC  shift, and go to state 214
    "end of the string"   shift, and go to state 215


State 159

   83 annotation_argument_value: "true" .

    $default  reduce using rule 83 (annotation_argument_value)


State 160

   84 annotation_argument_value: "false" .

    $default  reduce using rule 84 (annotation_argument_value)


State 161

   81 annotation_argument_value: "integer constant" .

    $default  reduce using rule 81 (annotation_argument_value)


State 162

   82 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 82 (annotation_argument_value)


State 163

   80 annotation_argument_value: "name" .

    $default  reduce using rule 80 (annotation_argument_value)


State 164

   79 annotation_argument_value: string_constant .

    $default  reduce using rule 79 (annotation_argument_value)


State 165

   85 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 85 (annotation_argument_value_list)


State 166

   86 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
   97 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 216
    ')'  shift, and go to state 217


State 167

   44 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 44 (require_module)


State 168

  547 single_alias: optional_public_or_private_alias "name" $@35 . '=' type_declaration

    '='  shift, and go to state 218


State 169

  549 alias_list: alias_list single_alias ';' .

    $default  reduce using rule 549 (alias_list)


State 170

  698 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@73 "name" $@74 . '{' $@75 bitfield_alias_bits $@76 '}'

    '{'  shift, and go to state 219


State 171

  693 variant_alias_declaration: "variant" optional_public_or_private_alias $@69 "name" $@70 . '{' $@71 variant_alias_type_list $@72 '}'

    '{'  shift, and go to state 220


State 172

   32 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 32 (reader_character_sequence)


State 173

  104 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 104 (annotation_declaration_basic)


State 174

  122 function_name: "operator" . '!'
  123              | "operator" . '~'
  124              | "operator" . "+="
  125              | "operator" . "-="
  126              | "operator" . "*="
  127              | "operator" . "/="
  128              | "operator" . "%="
  129              | "operator" . "&="
  130              | "operator" . "|="
  131              | "operator" . "^="
  132              | "operator" . "&&="
  133              | "operator" . "||="
  134              | "operator" . "^^="
  135              | "operator" . "&&"
  136              | "operator" . "||"
  137              | "operator" . "^^"
  138              | "operator" . '+'
  139              | "operator" . '-'
  140              | "operator" . '*'
  141              | "operator" . '/'
  142              | "operator" . '%'
  143              | "operator" . '<'
  144              | "operator" . '>'
  145              | "operator" . ".."
  146              | "operator" . "=="
  147              | "operator" . "!="
  148              | "operator" . "<="
  149              | "operator" . ">="
  150              | "operator" . '&'
  151              | "operator" . '|'
  152              | "operator" . '^'
  155              | "operator" . "++"
  156              | "operator" . "--"
  157              | "operator" . "<<"
  158              | "operator" . ">>"
  159              | "operator" . "<<="
  160              | "operator" . ">>="
  161              | "operator" . "<<<"
  162              | "operator" . ">>>"
  163              | "operator" . "<<<="
  164              | "operator" . ">>>="
  165              | "operator" . '[' ']'
  166              | "operator" . "?[" ']'
  167              | "operator" . '.'
  168              | "operator" . "?."
  169              | "operator" . '.' "name"
  170              | "operator" . '.' "name" ":="
  171              | "operator" . "?." "name"
  172              | "operator" . ":="
  173              | "operator" . "delete"
  174              | "operator" . "??"
  175              | "operator" . "is"
  176              | "operator" . "as"
  177              | "operator" . "is" "name"
  178              | "operator" . "as" "name"
  179              | "operator" . '?' "as"
  180              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 221
    "as"      shift, and go to state 222
    "delete"  shift, and go to state 223
    "+="      shift, and go to state 224
    "-="      shift, and go to state 225
    "/="      shift, and go to state 226
    "*="      shift, and go to state 227
    "%="      shift, and go to state 228
    "&="      shift, and go to state 229
    "|="      shift, and go to state 230
    "^="      shift, and go to state 231
    "<<"      shift, and go to state 232
    ">>"      shift, and go to state 233
    "++"      shift, and go to state 234
    "--"      shift, and go to state 235
    "<="      shift, and go to state 236
    "<<="     shift, and go to state 237
    ">>="     shift, and go to state 238
    ">="      shift, and go to state 239
    "=="      shift, and go to state 240
    "!="      shift, and go to state 241
    "??"      shift, and go to state 242
    "?."      shift, and go to state 243
    "?["      shift, and go to state 244
    ":="      shift, and go to state 245
    "<<<"     shift, and go to state 246
    ">>>"     shift, and go to state 247
    "<<<="    shift, and go to state 248
    ">>>="    shift, and go to state 249
    "&&"      shift, and go to state 250
    "||"      shift, and go to state 251
    "^^"      shift, and go to state 252
    "&&="     shift, and go to state 253
    "||="     shift, and go to state 254
    "^^="     shift, and go to state 255
    ".."      shift, and go to state 256
    '?'       shift, and go to state 257
    '|'       shift, and go to state 258
    '^'       shift, and go to state 259
    '&'       shift, and go to state 260
    '<'       shift, and go to state 261
    '>'       shift, and go to state 262
    '-'       shift, and go to state 263
    '+'       shift, and go to state 264
    '*'       shift, and go to state 265
    '/'       shift, and go to state 266
    '%'       shift, and go to state 267
    '~'       shift, and go to state 268
    '!'       shift, and go to state 269
    '.'       shift, and go to state 270
    '['       shift, and go to state 271


State 175

  181 function_name: "bool" .

    $default  reduce using rule 181 (function_name)


State 176

  182 function_name: "string" .

    $default  reduce using rule 182 (function_name)


State 177

  183 function_name: "int" .

    $default  reduce using rule 183 (function_name)


State 178

  184 function_name: "int2" .

    $default  reduce using rule 184 (function_name)


State 179

  185 function_name: "int3" .

    $default  reduce using rule 185 (function_name)


State 180

  186 function_name: "int4" .

    $default  reduce using rule 186 (function_name)


State 181

  187 function_name: "uint" .

    $default  reduce using rule 187 (function_name)


State 182

  188 function_name: "uint2" .

    $default  reduce using rule 188 (function_name)


State 183

  189 function_name: "uint3" .

    $default  reduce using rule 189 (function_name)


State 184

  190 function_name: "uint4" .

    $default  reduce using rule 190 (function_name)


State 185

  191 function_name: "float" .

    $default  reduce using rule 191 (function_name)


State 186

  192 function_name: "float2" .

    $default  reduce using rule 192 (function_name)


State 187

  193 function_name: "float3" .

    $default  reduce using rule 193 (function_name)


State 188

  194 function_name: "float4" .

    $default  reduce using rule 194 (function_name)


State 189

  195 function_name: "range" .

    $default  reduce using rule 195 (function_name)


State 190

  196 function_name: "urange" .

    $default  reduce using rule 196 (function_name)


State 191

  197 function_name: "range64" .

    $default  reduce using rule 197 (function_name)


State 192

  198 function_name: "urange64" .

    $default  reduce using rule 198 (function_name)


State 193

  199 function_name: "int64" .

    $default  reduce using rule 199 (function_name)


State 194

  200 function_name: "uint64" .

    $default  reduce using rule 200 (function_name)


State 195

  201 function_name: "double" .

    $default  reduce using rule 201 (function_name)


State 196

  202 function_name: "int8" .

    $default  reduce using rule 202 (function_name)


State 197

  203 function_name: "uint8" .

    $default  reduce using rule 203 (function_name)


State 198

  204 function_name: "int16" .

    $default  reduce using rule 204 (function_name)


State 199

  205 function_name: "uint16" .

    $default  reduce using rule 205 (function_name)


State 200

  153 function_name: "++" . "operator"

    "operator"  shift, and go to state 272


State 201

  154 function_name: "--" . "operator"

    "operator"  shift, and go to state 273


State 202

  121 function_name: "name" .

    $default  reduce using rule 121 (function_name)


State 203

  210 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 274

    $default  reduce using rule 116 (optional_function_argument_list)

    optional_function_argument_list  go to state 275


State 204

  212 function_declaration: optional_public_or_private_function $@5 function_declaration_header . expression_block

    '{'  shift, and go to state 276

    expression_block  go to state 277


State 205

  562 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration '{' $@39 enum_list $@40 '}'

    "int"     shift, and go to state 278
    "uint"    shift, and go to state 279
    "int8"    shift, and go to state 280
    "uint8"   shift, and go to state 281
    "int16"   shift, and go to state 282
    "uint16"  shift, and go to state 283

    enum_basic_type_declaration  go to state 284


State 206

  559 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' . $@37 enum_list $@38 '}'

    $default  reduce using rule 557 ($@37)

    $@37  go to state 285


State 207

  566 optional_sealed: "sealed" .

    $default  reduce using rule 566 (optional_sealed)


State 208

  567 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 286


State 209

  575 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@41 structure_name . $@42 '{' struct_variable_declaration_list '}'

    $default  reduce using rule 574 ($@42)

    $@42  go to state 287


State 210

  530 global_variable_declaration_list: global_variable_declaration_list . $@33 optional_field_annotation let_variable_declaration
  536 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    '}'  shift, and go to state 288

    $default  reduce using rule 529 ($@33)

    $@33  go to state 289


State 211

  470 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 30
    "in"    shift, and go to state 31
    "name"  shift, and go to state 32

    annotation_argument_name  go to state 33
    annotation_argument       go to state 34
    annotation_argument_list  go to state 290


State 212

  538 global_let: kwd_let optional_shared optional_public_or_private_variable $@34 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 291
    "name"  shift, and go to state 292

    let_variable_name_with_pos_list  go to state 293
    let_variable_declaration         go to state 294


State 213

   24 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 24 (character_sequence)


State 214

   25 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 25 (character_sequence)


State 215

   26 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 26 (string_constant)


State 216

   86 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 159
    "false"                    shift, and go to state 160
    "integer constant"         shift, and go to state 161
    "floating point constant"  shift, and go to state 162
    "name"                     shift, and go to state 163
    "start of the string"      shift, and go to state 122

    string_constant            go to state 164
    annotation_argument_value  go to state 295


State 217

   97 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 97 (annotation_argument)


State 218

  547 single_alias: optional_public_or_private_alias "name" $@35 '=' . type_declaration

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 339
    type_declaration             go to state 340


State 219

  698 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@73 "name" $@74 '{' . $@75 bitfield_alias_bits $@76 '}'

    $default  reduce using rule 696 ($@75)

    $@75  go to state 341


State 220

  693 variant_alias_declaration: "variant" optional_public_or_private_alias $@69 "name" $@70 '{' . $@71 variant_alias_type_list $@72 '}'

    $default  reduce using rule 691 ($@71)

    $@71  go to state 342


State 221

  175 function_name: "operator" "is" .
  177              | "operator" "is" . "name"

    "name"  shift, and go to state 343

    $default  reduce using rule 175 (function_name)


State 222

  176 function_name: "operator" "as" .
  178              | "operator" "as" . "name"

    "name"  shift, and go to state 344

    $default  reduce using rule 176 (function_name)


State 223

  173 function_name: "operator" "delete" .

    $default  reduce using rule 173 (function_name)


State 224

  124 function_name: "operator" "+=" .

    $default  reduce using rule 124 (function_name)


State 225

  125 function_name: "operator" "-=" .

    $default  reduce using rule 125 (function_name)


State 226

  127 function_name: "operator" "/=" .

    $default  reduce using rule 127 (function_name)


State 227

  126 function_name: "operator" "*=" .

    $default  reduce using rule 126 (function_name)


State 228

  128 function_name: "operator" "%=" .

    $default  reduce using rule 128 (function_name)


State 229

  129 function_name: "operator" "&=" .

    $default  reduce using rule 129 (function_name)


State 230

  130 function_name: "operator" "|=" .

    $default  reduce using rule 130 (function_name)


State 231

  131 function_name: "operator" "^=" .

    $default  reduce using rule 131 (function_name)


State 232

  157 function_name: "operator" "<<" .

    $default  reduce using rule 157 (function_name)


State 233

  158 function_name: "operator" ">>" .

    $default  reduce using rule 158 (function_name)


State 234

  155 function_name: "operator" "++" .

    $default  reduce using rule 155 (function_name)


State 235

  156 function_name: "operator" "--" .

    $default  reduce using rule 156 (function_name)


State 236

  148 function_name: "operator" "<=" .

    $default  reduce using rule 148 (function_name)


State 237

  159 function_name: "operator" "<<=" .

    $default  reduce using rule 159 (function_name)


State 238

  160 function_name: "operator" ">>=" .

    $default  reduce using rule 160 (function_name)


State 239

  149 function_name: "operator" ">=" .

    $default  reduce using rule 149 (function_name)


State 240

  146 function_name: "operator" "==" .

    $default  reduce using rule 146 (function_name)


State 241

  147 function_name: "operator" "!=" .

    $default  reduce using rule 147 (function_name)


State 242

  174 function_name: "operator" "??" .

    $default  reduce using rule 174 (function_name)


State 243

  168 function_name: "operator" "?." .
  171              | "operator" "?." . "name"

    "name"  shift, and go to state 345

    $default  reduce using rule 168 (function_name)


State 244

  166 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 346


State 245

  172 function_name: "operator" ":=" .

    $default  reduce using rule 172 (function_name)


State 246

  161 function_name: "operator" "<<<" .

    $default  reduce using rule 161 (function_name)


State 247

  162 function_name: "operator" ">>>" .

    $default  reduce using rule 162 (function_name)


State 248

  163 function_name: "operator" "<<<=" .

    $default  reduce using rule 163 (function_name)


State 249

  164 function_name: "operator" ">>>=" .

    $default  reduce using rule 164 (function_name)


State 250

  135 function_name: "operator" "&&" .

    $default  reduce using rule 135 (function_name)


State 251

  136 function_name: "operator" "||" .

    $default  reduce using rule 136 (function_name)


State 252

  137 function_name: "operator" "^^" .

    $default  reduce using rule 137 (function_name)


State 253

  132 function_name: "operator" "&&=" .

    $default  reduce using rule 132 (function_name)


State 254

  133 function_name: "operator" "||=" .

    $default  reduce using rule 133 (function_name)


State 255

  134 function_name: "operator" "^^=" .

    $default  reduce using rule 134 (function_name)


State 256

  145 function_name: "operator" ".." .

    $default  reduce using rule 145 (function_name)


State 257

  179 function_name: "operator" '?' . "as"
  180              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 347


State 258

  151 function_name: "operator" '|' .

    $default  reduce using rule 151 (function_name)


State 259

  152 function_name: "operator" '^' .

    $default  reduce using rule 152 (function_name)


State 260

  150 function_name: "operator" '&' .

    $default  reduce using rule 150 (function_name)


State 261

  143 function_name: "operator" '<' .

    $default  reduce using rule 143 (function_name)


State 262

  144 function_name: "operator" '>' .

    $default  reduce using rule 144 (function_name)


State 263

  139 function_name: "operator" '-' .

    $default  reduce using rule 139 (function_name)


State 264

  138 function_name: "operator" '+' .

    $default  reduce using rule 138 (function_name)


State 265

  140 function_name: "operator" '*' .

    $default  reduce using rule 140 (function_name)


State 266

  141 function_name: "operator" '/' .

    $default  reduce using rule 141 (function_name)


State 267

  142 function_name: "operator" '%' .

    $default  reduce using rule 142 (function_name)


State 268

  123 function_name: "operator" '~' .

    $default  reduce using rule 123 (function_name)


State 269

  122 function_name: "operator" '!' .

    $default  reduce using rule 122 (function_name)


State 270

  167 function_name: "operator" '.' .
  169              | "operator" '.' . "name"
  170              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 348

    $default  reduce using rule 167 (function_name)


State 271

  165 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 349


State 272

  153 function_name: "++" "operator" .

    $default  reduce using rule 153 (function_name)


State 273

  154 function_name: "--" "operator" .

    $default  reduce using rule 154 (function_name)


State 274

  117 optional_function_argument_list: '(' . ')'
  118                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 350
    "[["  shift, and go to state 211
    ')'   shift, and go to state 351

    $default  reduce using rule 469 (optional_field_annotation)

    optional_field_annotation      go to state 352
    function_argument_declaration  go to state 353
    function_argument_list         go to state 354


State 275

  210 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 355

    $default  reduce using rule 119 (optional_function_type)

    optional_function_type  go to state 356


State 276

  213 expression_block: '{' . expressions '}'
  214                 | '{' . expressions '}' "finally" '{' expressions '}'

    $default  reduce using rule 236 (expressions)

    expressions  go to state 357


State 277

  212 function_declaration: optional_public_or_private_function $@5 function_declaration_header expression_block .

    $default  reduce using rule 212 (function_declaration)


State 278

  608 enum_basic_type_declaration: "int" .

    $default  reduce using rule 608 (enum_basic_type_declaration)


State 279

  611 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 611 (enum_basic_type_declaration)


State 280

  609 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 609 (enum_basic_type_declaration)


State 281

  612 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 612 (enum_basic_type_declaration)


State 282

  610 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 610 (enum_basic_type_declaration)


State 283

  613 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 613 (enum_basic_type_declaration)


State 284

  562 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . '{' $@39 enum_list $@40 '}'

    '{'  shift, and go to state 358


State 285

  559 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@37 . enum_list $@38 '}'

    $default  reduce using rule 539 (enum_list)

    enum_list  go to state 359


State 286

  567 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 360

    $default  reduce using rule 563 (optional_structure_parent)

    optional_structure_parent  go to state 361


State 287

  575 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@41 structure_name $@42 . '{' struct_variable_declaration_list '}'

    '{'  shift, and go to state 362


State 288

  536 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 536 (global_let)


State 289

  530 global_variable_declaration_list: global_variable_declaration_list $@33 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 211

    $default  reduce using rule 469 (optional_field_annotation)

    optional_field_annotation  go to state 363


State 290

   99 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  470 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 76
    ']'  shift, and go to state 364


State 291

  519 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 365


State 292

  518 let_variable_name_with_pos_list: "name" .
  520                                | "name" . "aka" "name"

    "aka"  shift, and go to state 366

    $default  reduce using rule 518 (let_variable_name_with_pos_list)


State 293

  521 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  522                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  523 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options ';'
  524                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  525                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  526                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr ';'
  527                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 367
    ':'  shift, and go to state 368
    '&'  shift, and go to state 369

    $default  reduce using rule 516 (optional_ref)

    optional_ref  go to state 370


State 294

  538 global_let: kwd_let optional_shared optional_public_or_private_variable $@34 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 538 (global_let)


State 295

   86 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 86 (annotation_argument_value_list)


State 296

  652 type_declaration_no_options: "array" . '<' $@47 type_declaration '>' $@48

    '<'  shift, and go to state 371


State 297

  655 type_declaration_no_options: "table" . '<' $@49 table_type_pair '>' $@50

    '<'  shift, and go to state 372


State 298

  658 type_declaration_no_options: "iterator" . '<' $@51 type_declaration '>' $@52

    '<'  shift, and go to state 373


State 299

  648 type_declaration_no_options: "smart_ptr" . '<' $@45 type_declaration '>' $@46

    '<'  shift, and go to state 374


State 300

  581 basic_type_declaration: "bool" .

    $default  reduce using rule 581 (basic_type_declaration)


State 301

  601 basic_type_declaration: "void" .

    $default  reduce using rule 601 (basic_type_declaration)


State 302

  582 basic_type_declaration: "string" .

    $default  reduce using rule 582 (basic_type_declaration)


State 303

  615 auto_type_declaration: "auto" .
  616                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 375

    '('       [reduce using rule 615 (auto_type_declaration)]
    $default  reduce using rule 615 (auto_type_declaration)


State 304

  583 basic_type_declaration: "int" .

    $default  reduce using rule 583 (basic_type_declaration)


State 305

  587 basic_type_declaration: "int2" .

    $default  reduce using rule 587 (basic_type_declaration)


State 306

  588 basic_type_declaration: "int3" .

    $default  reduce using rule 588 (basic_type_declaration)


State 307

  589 basic_type_declaration: "int4" .

    $default  reduce using rule 589 (basic_type_declaration)


State 308

  590 basic_type_declaration: "uint" .

    $default  reduce using rule 590 (basic_type_declaration)


State 309

  607 basic_type_declaration: "bitfield" .
  625 bitfield_type_declaration: "bitfield" . '<' $@43 bitfield_bits '>' $@44

    '<'  shift, and go to state 376

    $default  reduce using rule 607 (basic_type_declaration)


State 310

  594 basic_type_declaration: "uint2" .

    $default  reduce using rule 594 (basic_type_declaration)


State 311

  595 basic_type_declaration: "uint3" .

    $default  reduce using rule 595 (basic_type_declaration)


State 312

  596 basic_type_declaration: "uint4" .

    $default  reduce using rule 596 (basic_type_declaration)


State 313

  597 basic_type_declaration: "float" .

    $default  reduce using rule 597 (basic_type_declaration)


State 314

  598 basic_type_declaration: "float2" .

    $default  reduce using rule 598 (basic_type_declaration)


State 315

  599 basic_type_declaration: "float3" .

    $default  reduce using rule 599 (basic_type_declaration)


State 316

  600 basic_type_declaration: "float4" .

    $default  reduce using rule 600 (basic_type_declaration)


State 317

  602 basic_type_declaration: "range" .

    $default  reduce using rule 602 (basic_type_declaration)


State 318

  603 basic_type_declaration: "urange" .

    $default  reduce using rule 603 (basic_type_declaration)


State 319

  604 basic_type_declaration: "range64" .

    $default  reduce using rule 604 (basic_type_declaration)


State 320

  605 basic_type_declaration: "urange64" .

    $default  reduce using rule 605 (basic_type_declaration)


State 321

  659 type_declaration_no_options: "block" .
  662                            | "block" . '<' $@53 type_declaration '>' $@54
  665                            | "block" . '<' $@55 optional_function_argument_list optional_function_type '>' $@56

    '<'  shift, and go to state 377

    $default  reduce using rule 659 (type_declaration_no_options)


State 322

  586 basic_type_declaration: "int64" .

    $default  reduce using rule 586 (basic_type_declaration)


State 323

  593 basic_type_declaration: "uint64" .

    $default  reduce using rule 593 (basic_type_declaration)


State 324

  606 basic_type_declaration: "double" .

    $default  reduce using rule 606 (basic_type_declaration)


State 325

  666 type_declaration_no_options: "function" .
  669                            | "function" . '<' $@57 type_declaration '>' $@58
  672                            | "function" . '<' $@59 optional_function_argument_list optional_function_type '>' $@60

    '<'  shift, and go to state 378

    $default  reduce using rule 666 (type_declaration_no_options)


State 326

  673 type_declaration_no_options: "lambda" .
  676                            | "lambda" . '<' $@61 type_declaration '>' $@62
  679                            | "lambda" . '<' $@63 optional_function_argument_list optional_function_type '>' $@64

    '<'  shift, and go to state 379

    $default  reduce using rule 673 (type_declaration_no_options)


State 327

  584 basic_type_declaration: "int8" .

    $default  reduce using rule 584 (basic_type_declaration)


State 328

  591 basic_type_declaration: "uint8" .

    $default  reduce using rule 591 (basic_type_declaration)


State 329

  585 basic_type_declaration: "int16" .

    $default  reduce using rule 585 (basic_type_declaration)


State 330

  592 basic_type_declaration: "uint16" .

    $default  reduce using rule 592 (basic_type_declaration)


State 331

  682 type_declaration_no_options: "tuple" . '<' $@65 tuple_type_list '>' $@66

    '<'  shift, and go to state 380


State 332

  685 type_declaration_no_options: "variant" . '<' $@67 variant_type_list '>' $@68

    '<'  shift, and go to state 381


State 333

  617 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 382


State 334

  614 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 614 (structure_type_declaration)


State 335

  628 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 628 (type_declaration_no_options)


State 336

  631 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 631 (type_declaration_no_options)


State 337

  629 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 629 (type_declaration_no_options)


State 338

  630 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 630 (type_declaration_no_options)


State 339

  632 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  633                            | type_declaration_no_options . '[' ']'
  634                            | type_declaration_no_options . '-' '[' ']'
  635                            | type_declaration_no_options . "explicit"
  636                            | type_declaration_no_options . "const"
  637                            | type_declaration_no_options . '-' "const"
  638                            | type_declaration_no_options . '&'
  639                            | type_declaration_no_options . '-' '&'
  640                            | type_declaration_no_options . '#'
  641                            | type_declaration_no_options . "implicit"
  642                            | type_declaration_no_options . '-' '#'
  643                            | type_declaration_no_options . "==" "const"
  644                            | type_declaration_no_options . "==" '&'
  645                            | type_declaration_no_options . '?'
  649                            | type_declaration_no_options . "??"
  686 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 383
    "implicit"  shift, and go to state 384
    "explicit"  shift, and go to state 385
    "=="        shift, and go to state 386
    "??"        shift, and go to state 387
    '?'         shift, and go to state 388
    '&'         shift, and go to state 389
    '-'         shift, and go to state 390
    '['         shift, and go to state 391
    '#'         shift, and go to state 392

    $default  reduce using rule 686 (type_declaration)


State 340

  547 single_alias: optional_public_or_private_alias "name" $@35 '=' type_declaration .
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    '|'  shift, and go to state 393

    $default  reduce using rule 547 (single_alias)


State 341

  698 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@73 "name" $@74 '{' $@75 . bitfield_alias_bits $@76 '}'

    $default  reduce using rule 620 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 394


State 342

  693 variant_alias_declaration: "variant" optional_public_or_private_alias $@69 "name" $@70 '{' $@71 . variant_alias_type_list $@72 '}'

    $default  reduce using rule 502 (variant_alias_type_list)

    variant_alias_type_list  go to state 395


State 343

  177 function_name: "operator" "is" "name" .

    $default  reduce using rule 177 (function_name)


State 344

  178 function_name: "operator" "as" "name" .

    $default  reduce using rule 178 (function_name)


State 345

  171 function_name: "operator" "?." "name" .

    $default  reduce using rule 171 (function_name)


State 346

  166 function_name: "operator" "?[" ']' .

    $default  reduce using rule 166 (function_name)


State 347

  179 function_name: "operator" '?' "as" .
  180              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 396

    $default  reduce using rule 179 (function_name)


State 348

  169 function_name: "operator" '.' "name" .
  170              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 397

    $default  reduce using rule 169 (function_name)


State 349

  165 function_name: "operator" '[' ']' .

    $default  reduce using rule 165 (function_name)


State 350

  492 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 398


State 351

  117 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 117 (optional_function_argument_list)


State 352

  490 function_argument_declaration: optional_field_annotation . variable_declaration
  491                              | optional_field_annotation . "var" variable_declaration

    "var"   shift, and go to state 399
    "$i"    shift, and go to state 400
    "name"  shift, and go to state 401

    variable_declaration         go to state 402
    variable_name_with_pos_list  go to state 403


State 353

  493 function_argument_list: function_argument_declaration .

    $default  reduce using rule 493 (function_argument_list)


State 354

  118 optional_function_argument_list: '(' function_argument_list . ')'
  494 function_argument_list: function_argument_list . ';' function_argument_declaration

    ')'  shift, and go to state 404
    ';'  shift, and go to state 405


State 355

  120 optional_function_type: ':' . type_declaration

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 339
    type_declaration             go to state 406


State 356

  210 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 210 (function_declaration_header)


State 357

  213 expression_block: '{' expressions . '}'
  214                 | '{' expressions . '}' "finally" '{' expressions '}'
  237 expressions: expressions . expression_any
  238            | expressions . error

    error                             shift, and go to state 407
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 408
    "if"                              shift, and go to state 409
    "static_if"                       shift, and go to state 410
    "for"                             shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "return"                          shift, and go to state 417
    "null"                            shift, and go to state 418
    "break"                           shift, and go to state 419
    "try"                             shift, and go to state 420
    "delete"                          shift, and go to state 421
    "deref"                           shift, and go to state 422
    "with"                            shift, and go to state 423
    "assume"                          shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 427
    "continue"                        shift, and go to state 428
    "pass"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "label"                           shift, and go to state 431
    "goto"                            shift, and go to state 432
    "unsafe"                          shift, and go to state 433
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "yield"                           shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "$ <|"                            shift, and go to state 439
    "@ <|"                            shift, and go to state 440
    "@@ <|"                           shift, and go to state 441
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 459
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    ';'                               shift, and go to state 469
    '{'                               shift, and go to state 276
    '}'                               shift, and go to state 470

    string_builder             go to state 471
    expr_reader                go to state 472
    expression_label           go to state 473
    expression_goto            go to state 474
    if_or_static_if            go to state 475
    expression_if_one_liner    go to state 476
    expression_if_then_else    go to state 477
    expression_for_loop        go to state 478
    expression_unsafe          go to state 479
    expression_while_loop      go to state 480
    expression_with            go to state 481
    expression_with_alias      go to state 482
    expression_block           go to state 483
    expression_any             go to state 484
    expr_keyword               go to state 485
    expression_keyword         go to state 486
    expr_pipe                  go to state 487
    name_in_namespace          go to state 488
    expression_delete          go to state 489
    expr_new                   go to state 490
    expression_break           go to state 491
    expression_continue        go to state 492
    expression_return_no_pipe  go to state 493
    expression_return          go to state 494
    expression_yield_no_pipe   go to state 495
    expression_yield           go to state 496
    expression_try_catch       go to state 497
    kwd_let                    go to state 498
    expression_let             go to state 499
    expr_cast                  go to state 500
    expr_type_decl             go to state 501
    expr_type_info             go to state 502
    block_or_lambda            go to state 503
    expr_block                 go to state 504
    expr_numeric_const         go to state 505
    expr_assign                go to state 506
    expr_assign_pipe           go to state 507
    expr_named_call            go to state 508
    expr_method_call           go to state 509
    func_addr_expr             go to state 510
    expr_field                 go to state 511
    expr                       go to state 512
    expr_mtag                  go to state 513
    basic_type_declaration     go to state 514
    make_decl                  go to state 515
    make_struct_decl           go to state 516
    make_dim_decl              go to state 517
    make_table_decl            go to state 518
    array_comprehension        go to state 519


State 358

  562 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' . $@39 enum_list $@40 '}'

    $default  reduce using rule 560 ($@39)

    $@39  go to state 520


State 359

  540 enum_list: enum_list . ';'
  541          | enum_list . "name" ';'
  542          | enum_list . "name" '=' expr ';'
  559 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@37 enum_list . $@38 '}'

    "name"  shift, and go to state 521
    ';'     shift, and go to state 522

    $default  reduce using rule 558 ($@38)

    $@38  go to state 523


State 360

  564 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 54
    "name"  shift, and go to state 55

    name_in_namespace  go to state 524


State 361

  567 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 567 (structure_name)


State 362

  575 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@41 structure_name $@42 '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 482 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 525


State 363

  530 global_variable_declaration_list: global_variable_declaration_list $@33 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 291
    "name"  shift, and go to state 292

    let_variable_name_with_pos_list  go to state 293
    let_variable_declaration         go to state 526


State 364

  470 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 527


State 365

  519 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 530
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 366

  520 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 531


State 367

  521 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  522                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 532


State 368

  523 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options ';'
  524                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr ';'
  525                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 533


State 369

  517 optional_ref: '&' .

    $default  reduce using rule 517 (optional_ref)


State 370

  526 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr ';'
  527                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 534
    ":="  shift, and go to state 535
    '='   shift, and go to state 536

    copy_or_move_or_clone  go to state 537


State 371

  652 type_declaration_no_options: "array" '<' . $@47 type_declaration '>' $@48

    $default  reduce using rule 650 ($@47)

    $@47  go to state 538


State 372

  655 type_declaration_no_options: "table" '<' . $@49 table_type_pair '>' $@50

    $default  reduce using rule 653 ($@49)

    $@49  go to state 539


State 373

  658 type_declaration_no_options: "iterator" '<' . $@51 type_declaration '>' $@52

    $default  reduce using rule 656 ($@51)

    $@51  go to state 540


State 374

  648 type_declaration_no_options: "smart_ptr" '<' . $@45 type_declaration '>' $@46

    $default  reduce using rule 646 ($@45)

    $@45  go to state 541


State 375

  616 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 542


State 376

  625 bitfield_type_declaration: "bitfield" '<' . $@43 bitfield_bits '>' $@44

    $default  reduce using rule 623 ($@43)

    $@43  go to state 543


State 377

  662 type_declaration_no_options: "block" '<' . $@53 type_declaration '>' $@54
  665                            | "block" '<' . $@55 optional_function_argument_list optional_function_type '>' $@56

    ':'       reduce using rule 663 ($@55)
    '>'       reduce using rule 663 ($@55)
    '('       reduce using rule 663 ($@55)
    $default  reduce using rule 660 ($@53)

    $@53  go to state 544
    $@55  go to state 545


State 378

  669 type_declaration_no_options: "function" '<' . $@57 type_declaration '>' $@58
  672                            | "function" '<' . $@59 optional_function_argument_list optional_function_type '>' $@60

    ':'       reduce using rule 670 ($@59)
    '>'       reduce using rule 670 ($@59)
    '('       reduce using rule 670 ($@59)
    $default  reduce using rule 667 ($@57)

    $@57  go to state 546
    $@59  go to state 547


State 379

  676 type_declaration_no_options: "lambda" '<' . $@61 type_declaration '>' $@62
  679                            | "lambda" '<' . $@63 optional_function_argument_list optional_function_type '>' $@64

    ':'       reduce using rule 677 ($@63)
    '>'       reduce using rule 677 ($@63)
    '('       reduce using rule 677 ($@63)
    $default  reduce using rule 674 ($@61)

    $@61  go to state 548
    $@63  go to state 549


State 380

  682 type_declaration_no_options: "tuple" '<' . $@65 tuple_type_list '>' $@66

    $default  reduce using rule 680 ($@65)

    $@65  go to state 550


State 381

  685 type_declaration_no_options: "variant" '<' . $@67 variant_type_list '>' $@68

    $default  reduce using rule 683 ($@67)

    $@67  go to state 551


State 382

  617 auto_type_declaration: "$t" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 552
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 383

  636 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 636 (type_declaration_no_options)


State 384

  641 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 641 (type_declaration_no_options)


State 385

  635 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 635 (type_declaration_no_options)


State 386

  643 type_declaration_no_options: type_declaration_no_options "==" . "const"
  644                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 553
    '&'      shift, and go to state 554


State 387

  649 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 649 (type_declaration_no_options)


State 388

  645 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 645 (type_declaration_no_options)


State 389

  638 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 638 (type_declaration_no_options)


State 390

  634 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  637                            | type_declaration_no_options '-' . "const"
  639                            | type_declaration_no_options '-' . '&'
  642                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 555
    '&'      shift, and go to state 556
    '['      shift, and go to state 557
    '#'      shift, and go to state 558


State 391

  632 type_declaration_no_options: type_declaration_no_options '[' . expr ']'
  633                            | type_declaration_no_options '[' . ']'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    ']'                               shift, and go to state 559
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 560
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 392

  640 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 640 (type_declaration_no_options)


State 393

  687 type_declaration: type_declaration '|' . type_declaration_no_options
  688                 | type_declaration '|' . '#'

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55
    '#'          shift, and go to state 561

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 562


State 394

  621 bitfield_alias_bits: bitfield_alias_bits . ';'
  622                    | bitfield_alias_bits . "name" ';'
  698 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@73 "name" $@74 '{' $@75 bitfield_alias_bits . $@76 '}'

    "name"  shift, and go to state 563
    ';'     shift, and go to state 564

    $default  reduce using rule 697 ($@76)

    $@76  go to state 565


State 395

  503 variant_alias_type_list: variant_alias_type_list . ';'
  504                        | variant_alias_type_list . variant_type ';'
  693 variant_alias_declaration: "variant" optional_public_or_private_alias $@69 "name" $@70 '{' $@71 variant_alias_type_list . $@72 '}'

    "name"  shift, and go to state 566
    ';'     shift, and go to state 567

    $default  reduce using rule 692 ($@72)

    variant_type  go to state 568
    $@72          go to state 569


State 396

  180 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 180 (function_name)


State 397

  170 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 170 (function_name)


State 398

  492 function_argument_declaration: "$a" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 570
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 399

  491 function_argument_declaration: optional_field_annotation "var" . variable_declaration

    "$i"    shift, and go to state 400
    "name"  shift, and go to state 401

    variable_declaration         go to state 571
    variable_name_with_pos_list  go to state 403


State 400

  577 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 572


State 401

  576 variable_name_with_pos_list: "name" .
  578                            | "name" . "aka" "name"

    "aka"  shift, and go to state 573

    $default  reduce using rule 576 (variable_name_with_pos_list)


State 402

  490 function_argument_declaration: optional_field_annotation variable_declaration .

    $default  reduce using rule 490 (function_argument_declaration)


State 403

  507 variable_declaration: variable_name_with_pos_list .
  508                     | variable_name_with_pos_list . '&'
  509                     | variable_name_with_pos_list . ':' type_declaration
  510                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  511                     | variable_name_with_pos_list . copy_or_move expr
  512                     | variable_name_with_pos_list . copy_or_move expr_pipe
  579 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  580                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 574
    ','   shift, and go to state 575
    '='   shift, and go to state 576
    ':'   shift, and go to state 577
    '&'   shift, and go to state 578

    $default  reduce using rule 507 (variable_declaration)

    copy_or_move  go to state 579


State 404

  118 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 118 (optional_function_argument_list)


State 405

  494 function_argument_list: function_argument_list ';' . function_argument_declaration

    "$a"  shift, and go to state 350
    "[["  shift, and go to state 211

    $default  reduce using rule 469 (optional_field_annotation)

    optional_field_annotation      go to state 352
    function_argument_declaration  go to state 580


State 406

  120 optional_function_type: ':' type_declaration .
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    '|'  shift, and go to state 393

    $default  reduce using rule 120 (optional_function_type)


State 407

  238 expressions: expressions error .

    $default  reduce using rule 238 (expressions)


State 408

   75 expression_while_loop: "while" . expr expression_block

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 581
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 409

   60 if_or_static_if: "if" .

    $default  reduce using rule 60 (if_or_static_if)


State 410

   61 if_or_static_if: "static_if" .

    $default  reduce using rule 61 (if_or_static_if)


State 411

   73 expression_for_loop: "for" . variable_name_with_pos_list "in" expr_list ';' expression_block

    "$i"    shift, and go to state 400
    "name"  shift, and go to state 401

    variable_name_with_pos_list  go to state 582


State 412

  373 expr: "true" .

    $default  reduce using rule 373 (expr)


State 413

  374 expr: "false" .

    $default  reduce using rule 374 (expr)


State 414

  256 expr_new: "new" . new_type_declaration
  257         | "new" . new_type_declaration '(' ')'
  258         | "new" . new_type_declaration '(' expr_list ')'
  259         | "new" . make_decl

    "::"    shift, and go to state 54
    "[["    shift, and go to state 449
    "[{"    shift, and go to state 450
    "{{"    shift, and go to state 451
    "name"  shift, and go to state 55
    '<'     shift, and go to state 583

    name_in_namespace           go to state 334
    new_type_declaration        go to state 584
    structure_type_declaration  go to state 585
    make_decl                   go to state 586
    make_struct_decl            go to state 516
    make_dim_decl               go to state 517
    make_table_decl             go to state 518
    array_comprehension         go to state 519


State 415

  296 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  297               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  298               | "typeinfo" . '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

    '('  shift, and go to state 587


State 416

  295 expr_type_decl: "type" . '<' $@16 type_declaration '>' $@17

    '<'  shift, and go to state 588


State 417

  262 expression_return_no_pipe: "return" .
  263                          | "return" . expr_list
  264                          | "return" . "<-" expr_list
  266 expression_return: "return" . expr_pipe
  267                  | "return" . "<-" expr_pipe

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "<-"                              shift, and go to state 589
    "$ <|"                            shift, and go to state 439
    "@ <|"                            shift, and go to state 440
    "@@ <|"                           shift, and go to state 441
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    $default  reduce using rule 262 (expression_return_no_pipe)

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    expr_pipe               go to state 590
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    expr_list               go to state 591
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_assign             go to state 592
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 593
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 418

  367 expr: "null" .

    $default  reduce using rule 367 (expr)


State 419

  260 expression_break: "break" .

    $default  reduce using rule 260 (expression_break)


State 420

  273 expression_try_catch: "try" . expression_block "recover" expression_block

    '{'  shift, and go to state 276

    expression_block  go to state 594


State 421

  250 expression_delete: "delete" . expr
  251                  | "delete" . "explicit" expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "explicit"                        shift, and go to state 595
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 596
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 422

  420 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 597


State 423

   76 expression_with: "with" . expr expression_block

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 598
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 424

   78 expression_with_alias: "assume" . "name" '=' $@4 expr

    "name"  shift, and go to state 599


State 425

  286 expr_cast: "cast" . '<' $@10 type_declaration_no_options '>' $@11 expr

    '<'  shift, and go to state 600


State 426

  289 expr_cast: "upcast" . '<' $@12 type_declaration_no_options '>' $@13 expr

    '<'  shift, and go to state 601


State 427

  421 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 602


State 428

  261 expression_continue: "continue" .

    $default  reduce using rule 261 (expression_continue)


State 429

  235 expression_any: "pass" . ';'

    ';'  shift, and go to state 603


State 430

  292 expr_cast: "reinterpret" . '<' $@14 type_declaration_no_options '>' $@15 expr

    '<'  shift, and go to state 604


State 431

   52 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 605


State 432

   53 expression_goto: "goto" . "label" "integer constant"
   54                | "goto" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "label"                           shift, and go to state 606
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 607
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 433

   74 expression_unsafe: "unsafe" . expression_block
  451 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 608
    '{'  shift, and go to state 276

    expression_block  go to state 609


State 434

  607 basic_type_declaration: "bitfield" .

    $default  reduce using rule 607 (basic_type_declaration)


State 435

  422 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  423     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 610


State 436

  268 expression_yield_no_pipe: "yield" . expr
  269                         | "yield" . "<-" expr
  271 expression_yield: "yield" . expr_pipe
  272                 | "yield" . "<-" expr_pipe

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "<-"                              shift, and go to state 611
    "$ <|"                            shift, and go to state 439
    "@ <|"                            shift, and go to state 440
    "@@ <|"                           shift, and go to state 441
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    expr_pipe               go to state 612
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_assign             go to state 592
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 613
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 437

  403 expr: "++" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 614
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 438

  404 expr: "--" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 615
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 439

  246 expr_pipe: "$ <|" . expr_block

    '$'  shift, and go to state 467
    '@'  shift, and go to state 616
    '{'  shift, and go to state 276

    expression_block  go to state 483
    block_or_lambda   go to state 503
    expr_block        go to state 617


State 440

  244 expr_pipe: "@ <|" . expr_block

    '$'  shift, and go to state 467
    '@'  shift, and go to state 616
    '{'  shift, and go to state 276

    expression_block  go to state 483
    block_or_lambda   go to state 503
    expr_block        go to state 618


State 441

  245 expr_pipe: "@@ <|" . expr_block

    '$'  shift, and go to state 467
    '@'  shift, and go to state 616
    '{'  shift, and go to state 276

    expression_block  go to state 483
    block_or_lambda   go to state 503
    expr_block        go to state 619


State 442

  453 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 620


State 443

  454 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 621


State 444

  455 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 622


State 445

  456 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 623


State 446

  457 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 624


State 447

  459 expr_mtag: "$c" . '(' expr ')' '(' ')'
  460          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 625


State 448

  458 expr_mtag: "..." .

    $default  reduce using rule 458 (expr_mtag)


State 449

  727 make_struct_decl: "[[" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  728                 | "[[" . type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  729                 | "[[" . type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  730                 | "[[" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  740 make_dim_decl: "[[" . type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  747 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 626
    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 627


State 450

  731 make_struct_decl: "[{" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  732                 | "[{" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  741 make_dim_decl: "[{" . type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  748 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "for"        shift, and go to state 628
    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 629


State 451

  744 make_table_decl: "{{" . make_table optional_trailing_semicolon_cur_cur

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 630
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_map_tuple          go to state 631
    make_dim_decl           go to state 517
    make_table              go to state 632
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 452

  317 expr_numeric_const: "integer constant" .

    $default  reduce using rule 317 (expr_numeric_const)


State 453

  319 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 319 (expr_numeric_const)


State 454

  318 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 318 (expr_numeric_const)


State 455

  320 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 320 (expr_numeric_const)


State 456

  321 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 321 (expr_numeric_const)


State 457

  322 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 322 (expr_numeric_const)


State 458

  323 expr_numeric_const: "double constant" .

    $default  reduce using rule 323 (expr_numeric_const)


State 459

  239 expr_keyword: "keyword" . expr expression_block
  242 expression_keyword: "keyword" . '<' $@6 type_declaration_no_options '>' $@7 expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '<'                               shift, and go to state 633
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 634
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 460

   30 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 27 (string_builder_body)

    string_builder_body  go to state 635


State 461

  380 expr: '-' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 636
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 462

  379 expr: '+' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 637
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 463

  419 expr: '*' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 638
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 464

  378 expr: '~' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 639
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 465

  377 expr: '!' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 640
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 466

  407 expr: '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 641
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 467

  304 block_or_lambda: '$' .

    $default  reduce using rule 304 (block_or_lambda)


State 468

  305 block_or_lambda: '@' .
  306                | '@' . '@'
  355 func_addr_expr: '@' . '@' func_addr_name
  358               | '@' . '@' '<' $@18 type_declaration_no_options '>' $@19 func_addr_name
  361               | '@' . '@' '<' $@20 optional_function_argument_list optional_function_type '>' $@21 func_addr_name
  468 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 642

    $default  reduce using rule 305 (block_or_lambda)


State 469

  215 expression_any: ';' .

    $default  reduce using rule 215 (expression_any)


State 470

  213 expression_block: '{' expressions '}' .
  214                 | '{' expressions '}' . "finally" '{' expressions '}'

    "finally"  shift, and go to state 643

    $default  reduce using rule 213 (expression_block)


State 471

  371 expr: string_builder .

    $default  reduce using rule 371 (expr)


State 472

  370 expr: expr_reader .

    $default  reduce using rule 370 (expr)


State 473

  233 expression_any: expression_label . ';'

    ';'  shift, and go to state 644


State 474

  234 expression_any: expression_goto . ';'

    ';'  shift, and go to state 645


State 475

   70 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 646
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 476

   72 expression_if_then_else: expression_if_one_liner . "if" $@3 expr expression_else_one_liner ';'

    "if"  shift, and go to state 647


State 477

  231 expression_any: expression_if_then_else .

    $default  reduce using rule 231 (expression_any)


State 478

  226 expression_any: expression_for_loop .

    $default  reduce using rule 226 (expression_any)


State 479

  223 expression_any: expression_unsafe .

    $default  reduce using rule 223 (expression_any)


State 480

  222 expression_any: expression_while_loop .

    $default  reduce using rule 222 (expression_any)


State 481

  224 expression_any: expression_with .

    $default  reduce using rule 224 (expression_any)


State 482

  225 expression_any: expression_with_alias .

    $default  reduce using rule 225 (expression_any)


State 483

  315 expr_block: expression_block .

    $default  reduce using rule 315 (expr_block)


State 484

  237 expressions: expressions expression_any .

    $default  reduce using rule 237 (expressions)


State 485

  217 expression_any: expr_keyword .

    $default  reduce using rule 217 (expression_any)


State 486

  452 expr: expression_keyword .

    $default  reduce using rule 452 (expr)


State 487

  216 expression_any: expr_pipe .

    $default  reduce using rule 216 (expression_any)


State 488

  349 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  350                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  368 expr: name_in_namespace .
  415     | name_in_namespace . '(' ')'
  416     | name_in_namespace . '(' expr_list ')'
  450     | name_in_namespace . "name"

    "name"  shift, and go to state 648
    '('     shift, and go to state 649

    "name"    [reduce using rule 368 (expr)]
    '('       [reduce using rule 368 (expr)]
    $default  reduce using rule 368 (expr)


State 489

  220 expression_any: expression_delete . ';'

    ';'  shift, and go to state 650


State 490

  444 expr: expr_new .

    $default  reduce using rule 444 (expr)


State 491

   68 expression_if_one_liner: expression_break .
  227 expression_any: expression_break . ';'

    ';'  shift, and go to state 651

    $default  reduce using rule 68 (expression_if_one_liner)


State 492

   69 expression_if_one_liner: expression_continue .
  228 expression_any: expression_continue . ';'

    ';'  shift, and go to state 652

    $default  reduce using rule 69 (expression_if_one_liner)


State 493

   66 expression_if_one_liner: expression_return_no_pipe .
  265 expression_return: expression_return_no_pipe . ';'

    ';'  shift, and go to state 653

    $default  reduce using rule 66 (expression_if_one_liner)


State 494

  229 expression_any: expression_return .

    $default  reduce using rule 229 (expression_any)


State 495

   67 expression_if_one_liner: expression_yield_no_pipe .
  270 expression_yield: expression_yield_no_pipe . ';'

    ';'  shift, and go to state 654

    $default  reduce using rule 67 (expression_if_one_liner)


State 496

  230 expression_any: expression_yield .

    $default  reduce using rule 230 (expression_any)


State 497

  232 expression_any: expression_try_catch .

    $default  reduce using rule 232 (expression_any)


State 498

  282 expression_let: kwd_let . optional_in_scope let_variable_declaration
  283               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 655

    $default  reduce using rule 277 (optional_in_scope)

    optional_in_scope  go to state 656


State 499

  221 expression_any: expression_let .

    $default  reduce using rule 221 (expression_any)


State 500

  443 expr: expr_cast .

    $default  reduce using rule 443 (expr)


State 501

  442 expr: expr_type_decl .

    $default  reduce using rule 442 (expr)


State 502

  441 expr: expr_type_info .

    $default  reduce using rule 441 (expr)


State 503

  316 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 13

    $default  reduce using rule 114 (optional_annotation_list)

    optional_annotation_list  go to state 657


State 504

  447 expr: expr_block .

    $default  reduce using rule 447 (expr)


State 505

  369 expr: expr_numeric_const .

    $default  reduce using rule 369 (expr)


State 506

  219 expression_any: expr_assign . ';'
  243 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 658
    ';'    shift, and go to state 659


State 507

  218 expression_any: expr_assign_pipe .

    $default  reduce using rule 218 (expression_any)


State 508

  446 expr: expr_named_call .

    $default  reduce using rule 446 (expr)


State 509

  445 expr: expr_method_call .

    $default  reduce using rule 445 (expr)


State 510

  414 expr: func_addr_expr .

    $default  reduce using rule 414 (expr)


State 511

  375 expr: expr_field .

    $default  reduce using rule 375 (expr)


State 512

   65 expression_if_one_liner: expr .
  324 expr_assign: expr .
  325            | expr . '=' expr
  326            | expr . "<-" expr
  327            | expr . ":=" expr
  328            | expr . "&=" expr
  329            | expr . "|=" expr
  330            | expr . "^=" expr
  331            | expr . "&&=" expr
  332            | expr . "||=" expr
  333            | expr . "^^=" expr
  334            | expr . "+=" expr
  335            | expr . "-=" expr
  336            | expr . "*=" expr
  337            | expr . "/=" expr
  338            | expr . "%=" expr
  339            | expr . "<<=" expr
  340            | expr . ">>=" expr
  341            | expr . "<<<=" expr
  342            | expr . ">>>=" expr
  343 expr_assign_pipe: expr . '=' "@ <|" expr_block
  344                 | expr . '=' "@@ <|" expr_block
  345                 | expr . '=' "$ <|" expr_block
  346                 | expr . "<-" "@ <|" expr_block
  347                 | expr . "<-" "@@ <|" expr_block
  348                 | expr . "<-" "$ <|" expr_block
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 660
    "as"    shift, and go to state 661
    "+="    shift, and go to state 662
    "-="    shift, and go to state 663
    "/="    shift, and go to state 664
    "*="    shift, and go to state 665
    "%="    shift, and go to state 666
    "&="    shift, and go to state 667
    "|="    shift, and go to state 668
    "^="    shift, and go to state 669
    "<<"    shift, and go to state 670
    ">>"    shift, and go to state 671
    "++"    shift, and go to state 672
    "--"    shift, and go to state 673
    "<="    shift, and go to state 674
    "<<="   shift, and go to state 675
    ">>="   shift, and go to state 676
    ">="    shift, and go to state 677
    "=="    shift, and go to state 678
    "!="    shift, and go to state 679
    "->"    shift, and go to state 680
    "<-"    shift, and go to state 681
    "??"    shift, and go to state 682
    "?."    shift, and go to state 683
    "?["    shift, and go to state 684
    "<|"    shift, and go to state 685
    "|>"    shift, and go to state 686
    ":="    shift, and go to state 687
    "<<<"   shift, and go to state 688
    ">>>"   shift, and go to state 689
    "<<<="  shift, and go to state 690
    ">>>="  shift, and go to state 691
    "&&"    shift, and go to state 692
    "||"    shift, and go to state 693
    "^^"    shift, and go to state 694
    "&&="   shift, and go to state 695
    "||="   shift, and go to state 696
    "^^="   shift, and go to state 697
    ".."    shift, and go to state 698
    '='     shift, and go to state 699
    '?'     shift, and go to state 700
    '|'     shift, and go to state 701
    '^'     shift, and go to state 702
    '&'     shift, and go to state 703
    '<'     shift, and go to state 704
    '>'     shift, and go to state 705
    '-'     shift, and go to state 706
    '+'     shift, and go to state 707
    '*'     shift, and go to state 708
    '/'     shift, and go to state 709
    '%'     shift, and go to state 710
    '.'     shift, and go to state 711
    '['     shift, and go to state 712

    "if"      reduce using rule 65 (expression_if_one_liner)
    $default  reduce using rule 324 (expr_assign)


State 513

  376 expr: expr_mtag .

    $default  reduce using rule 376 (expr)


State 514

  417 expr: basic_type_declaration . '(' ')'
  418     | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 713


State 515

  372 expr: make_decl .

    $default  reduce using rule 372 (expr)


State 516

  699 make_decl: make_struct_decl .

    $default  reduce using rule 699 (make_decl)


State 517

  700 make_decl: make_dim_decl .

    $default  reduce using rule 700 (make_decl)


State 518

  701 make_decl: make_table_decl .

    $default  reduce using rule 701 (make_decl)


State 519

  702 make_decl: array_comprehension .

    $default  reduce using rule 702 (make_decl)


State 520

  562 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@39 . enum_list $@40 '}'

    $default  reduce using rule 539 (enum_list)

    enum_list  go to state 714


State 521

  541 enum_list: enum_list "name" . ';'
  542          | enum_list "name" . '=' expr ';'

    '='  shift, and go to state 715
    ';'  shift, and go to state 716


State 522

  540 enum_list: enum_list ';' .

    $default  reduce using rule 540 (enum_list)


State 523

  559 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@37 enum_list $@38 . '}'

    '}'  shift, and go to state 717


State 524

  564 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 564 (optional_structure_parent)


State 525

  484 struct_variable_declaration_list: struct_variable_declaration_list . $@30 structure_variable_declaration ';'
  486                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@31 function_declaration_header ';'
  488                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@32 function_declaration_header expression_block
  489                                 | struct_variable_declaration_list . '[' annotation_list ']' ';'
  575 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@41 structure_name $@42 '{' struct_variable_declaration_list . '}'

    '['  shift, and go to state 718
    '}'  shift, and go to state 719

    "def"     reduce using rule 114 (optional_annotation_list)
    $default  reduce using rule 483 ($@30)

    optional_annotation_list  go to state 720
    $@30                      go to state 721


State 526

  530 global_variable_declaration_list: global_variable_declaration_list $@33 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 530 (global_variable_declaration_list)


State 527

  470 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 470 (optional_field_annotation)


State 528

  451 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 608


State 529

  242 expression_keyword: "keyword" . '<' $@6 type_declaration_no_options '>' $@7 expr

    '<'  shift, and go to state 633


State 530

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  519 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ')'    shift, and go to state 722


State 531

  520 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 520 (let_variable_name_with_pos_list)


State 532

  521 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  522                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 723

    $default  reduce using rule 521 (let_variable_name_with_pos_list)


State 533

  523 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . ';'
  524                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr ';'
  525                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  632 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  633                            | type_declaration_no_options . '[' ']'
  634                            | type_declaration_no_options . '-' '[' ']'
  635                            | type_declaration_no_options . "explicit"
  636                            | type_declaration_no_options . "const"
  637                            | type_declaration_no_options . '-' "const"
  638                            | type_declaration_no_options . '&'
  639                            | type_declaration_no_options . '-' '&'
  640                            | type_declaration_no_options . '#'
  641                            | type_declaration_no_options . "implicit"
  642                            | type_declaration_no_options . '-' '#'
  643                            | type_declaration_no_options . "==" "const"
  644                            | type_declaration_no_options . "==" '&'
  645                            | type_declaration_no_options . '?'
  649                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 383
    "implicit"  shift, and go to state 384
    "explicit"  shift, and go to state 385
    "=="        shift, and go to state 386
    "<-"        shift, and go to state 534
    "??"        shift, and go to state 387
    ":="        shift, and go to state 535
    '='         shift, and go to state 536
    '?'         shift, and go to state 388
    '&'         shift, and go to state 389
    '-'         shift, and go to state 390
    '['         shift, and go to state 391
    ';'         shift, and go to state 724
    '#'         shift, and go to state 392

    copy_or_move_or_clone  go to state 725


State 534

  514 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 514 (copy_or_move_or_clone)


State 535

  515 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 515 (copy_or_move_or_clone)


State 536

  513 copy_or_move_or_clone: '=' .

    $default  reduce using rule 513 (copy_or_move_or_clone)


State 537

  526 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr ';'
  527                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "$ <|"                            shift, and go to state 439
    "@ <|"                            shift, and go to state 440
    "@@ <|"                           shift, and go to state 441
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    expr_pipe               go to state 726
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_assign             go to state 592
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 727
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 538

  652 type_declaration_no_options: "array" '<' $@47 . type_declaration '>' $@48

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 339
    type_declaration             go to state 728


State 539

  655 type_declaration_no_options: "table" '<' $@49 . table_type_pair '>' $@50

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    table_type_pair              go to state 729
    type_declaration_no_options  go to state 339
    type_declaration             go to state 730


State 540

  658 type_declaration_no_options: "iterator" '<' $@51 . type_declaration '>' $@52

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 339
    type_declaration             go to state 731


State 541

  648 type_declaration_no_options: "smart_ptr" '<' $@45 . type_declaration '>' $@46

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 339
    type_declaration             go to state 732


State 542

  616 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 733


State 543

  625 bitfield_type_declaration: "bitfield" '<' $@43 . bitfield_bits '>' $@44

    "name"  shift, and go to state 734

    bitfield_bits  go to state 735


State 544

  662 type_declaration_no_options: "block" '<' $@53 . type_declaration '>' $@54

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 339
    type_declaration             go to state 736


State 545

  665 type_declaration_no_options: "block" '<' $@55 . optional_function_argument_list optional_function_type '>' $@56

    '('  shift, and go to state 274

    $default  reduce using rule 116 (optional_function_argument_list)

    optional_function_argument_list  go to state 737


State 546

  669 type_declaration_no_options: "function" '<' $@57 . type_declaration '>' $@58

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 339
    type_declaration             go to state 738


State 547

  672 type_declaration_no_options: "function" '<' $@59 . optional_function_argument_list optional_function_type '>' $@60

    '('  shift, and go to state 274

    $default  reduce using rule 116 (optional_function_argument_list)

    optional_function_argument_list  go to state 739


State 548

  676 type_declaration_no_options: "lambda" '<' $@61 . type_declaration '>' $@62

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 339
    type_declaration             go to state 740


State 549

  679 type_declaration_no_options: "lambda" '<' $@63 . optional_function_argument_list optional_function_type '>' $@64

    '('  shift, and go to state 274

    $default  reduce using rule 116 (optional_function_argument_list)

    optional_function_argument_list  go to state 741


State 550

  682 type_declaration_no_options: "tuple" '<' $@65 . tuple_type_list '>' $@66

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 742

    name_in_namespace            go to state 334
    tuple_type                   go to state 743
    tuple_type_list              go to state 744
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 339
    type_declaration             go to state 745


State 551

  685 type_declaration_no_options: "variant" '<' $@67 . variant_type_list '>' $@68

    "name"  shift, and go to state 566

    variant_type       go to state 746
    variant_type_list  go to state 747


State 552

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  617 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ')'    shift, and go to state 748


State 553

  643 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 643 (type_declaration_no_options)


State 554

  644 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 644 (type_declaration_no_options)


State 555

  637 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 637 (type_declaration_no_options)


State 556

  639 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 639 (type_declaration_no_options)


State 557

  634 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 749


State 558

  642 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 642 (type_declaration_no_options)


State 559

  633 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 633 (type_declaration_no_options)


State 560

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  632 type_declaration_no_options: type_declaration_no_options '[' expr . ']'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ']'    shift, and go to state 750


State 561

  688 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 688 (type_declaration)


State 562

  632 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  633                            | type_declaration_no_options . '[' ']'
  634                            | type_declaration_no_options . '-' '[' ']'
  635                            | type_declaration_no_options . "explicit"
  636                            | type_declaration_no_options . "const"
  637                            | type_declaration_no_options . '-' "const"
  638                            | type_declaration_no_options . '&'
  639                            | type_declaration_no_options . '-' '&'
  640                            | type_declaration_no_options . '#'
  641                            | type_declaration_no_options . "implicit"
  642                            | type_declaration_no_options . '-' '#'
  643                            | type_declaration_no_options . "==" "const"
  644                            | type_declaration_no_options . "==" '&'
  645                            | type_declaration_no_options . '?'
  649                            | type_declaration_no_options . "??"
  687 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 383
    "implicit"  shift, and go to state 384
    "explicit"  shift, and go to state 385
    "=="        shift, and go to state 386
    "??"        shift, and go to state 387
    '?'         shift, and go to state 388
    '&'         shift, and go to state 389
    '-'         shift, and go to state 390
    '['         shift, and go to state 391
    '#'         shift, and go to state 392

    $default  reduce using rule 687 (type_declaration)


State 563

  622 bitfield_alias_bits: bitfield_alias_bits "name" . ';'

    ';'  shift, and go to state 751


State 564

  621 bitfield_alias_bits: bitfield_alias_bits ';' .

    $default  reduce using rule 621 (bitfield_alias_bits)


State 565

  698 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@73 "name" $@74 '{' $@75 bitfield_alias_bits $@76 . '}'

    '}'  shift, and go to state 752


State 566

  499 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 753


State 567

  503 variant_alias_type_list: variant_alias_type_list ';' .

    $default  reduce using rule 503 (variant_alias_type_list)


State 568

  504 variant_alias_type_list: variant_alias_type_list variant_type . ';'

    ';'  shift, and go to state 754


State 569

  693 variant_alias_declaration: "variant" optional_public_or_private_alias $@69 "name" $@70 '{' $@71 variant_alias_type_list $@72 . '}'

    '}'  shift, and go to state 755


State 570

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  492 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ')'    shift, and go to state 756


State 571

  491 function_argument_declaration: optional_field_annotation "var" variable_declaration .

    $default  reduce using rule 491 (function_argument_declaration)


State 572

  577 variable_name_with_pos_list: "$i" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 757
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 573

  578 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 758


State 574

  506 copy_or_move: "<-" .

    $default  reduce using rule 506 (copy_or_move)


State 575

  579 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  580                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 759


State 576

  505 copy_or_move: '=' .

    $default  reduce using rule 505 (copy_or_move)


State 577

  509 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  510                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 339
    type_declaration             go to state 760


State 578

  508 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 508 (variable_declaration)


State 579

  511 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  512                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "$ <|"                            shift, and go to state 439
    "@ <|"                            shift, and go to state 440
    "@@ <|"                           shift, and go to state 441
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    expr_pipe               go to state 761
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_assign             go to state 592
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 762
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 580

  494 function_argument_list: function_argument_list ';' function_argument_declaration .

    $default  reduce using rule 494 (function_argument_list)


State 581

   75 expression_while_loop: "while" expr . expression_block
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    '{'    shift, and go to state 276

    expression_block  go to state 763


State 582

   73 expression_for_loop: "for" variable_name_with_pos_list . "in" expr_list ';' expression_block
  579 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  580                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 764
    ','   shift, and go to state 575


State 583

  254 new_type_declaration: '<' . $@8 type_declaration '>' $@9

    $default  reduce using rule 252 ($@8)

    $@8  go to state 765


State 584

  256 expr_new: "new" new_type_declaration .
  257         | "new" new_type_declaration . '(' ')'
  258         | "new" new_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 766

    '('       [reduce using rule 256 (expr_new)]
    $default  reduce using rule 256 (expr_new)


State 585

  255 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 255 (new_type_declaration)


State 586

  259 expr_new: "new" make_decl .

    $default  reduce using rule 259 (expr_new)


State 587

  296 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  297               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  298               | "typeinfo" '(' . name_in_namespace '<' "name" ';' "name" '>' expr ')'

    "::"    shift, and go to state 54
    "name"  shift, and go to state 55

    name_in_namespace  go to state 767


State 588

  295 expr_type_decl: "type" '<' . $@16 type_declaration '>' $@17

    $default  reduce using rule 293 ($@16)

    $@16  go to state 768


State 589

  264 expression_return_no_pipe: "return" "<-" . expr_list
  267 expression_return: "return" "<-" . expr_pipe

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "$ <|"                            shift, and go to state 439
    "@ <|"                            shift, and go to state 440
    "@@ <|"                           shift, and go to state 441
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    expr_pipe               go to state 769
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    expr_list               go to state 770
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_assign             go to state 592
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 593
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 590

  266 expression_return: "return" expr_pipe .

    $default  reduce using rule 266 (expression_return)


State 591

  263 expression_return_no_pipe: "return" expr_list .
  300 expr_list: expr_list . ',' expr

    ','  shift, and go to state 771

    $default  reduce using rule 263 (expression_return_no_pipe)


State 592

  243 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 658


State 593

  299 expr_list: expr .
  324 expr_assign: expr .
  325            | expr . '=' expr
  326            | expr . "<-" expr
  327            | expr . ":=" expr
  328            | expr . "&=" expr
  329            | expr . "|=" expr
  330            | expr . "^=" expr
  331            | expr . "&&=" expr
  332            | expr . "||=" expr
  333            | expr . "^^=" expr
  334            | expr . "+=" expr
  335            | expr . "-=" expr
  336            | expr . "*=" expr
  337            | expr . "/=" expr
  338            | expr . "%=" expr
  339            | expr . "<<=" expr
  340            | expr . ">>=" expr
  341            | expr . "<<<=" expr
  342            | expr . ">>>=" expr
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 660
    "as"    shift, and go to state 661
    "+="    shift, and go to state 662
    "-="    shift, and go to state 663
    "/="    shift, and go to state 664
    "*="    shift, and go to state 665
    "%="    shift, and go to state 666
    "&="    shift, and go to state 667
    "|="    shift, and go to state 668
    "^="    shift, and go to state 669
    "<<"    shift, and go to state 670
    ">>"    shift, and go to state 671
    "++"    shift, and go to state 672
    "--"    shift, and go to state 673
    "<="    shift, and go to state 674
    "<<="   shift, and go to state 675
    ">>="   shift, and go to state 676
    ">="    shift, and go to state 677
    "=="    shift, and go to state 678
    "!="    shift, and go to state 679
    "->"    shift, and go to state 680
    "<-"    shift, and go to state 772
    "??"    shift, and go to state 682
    "?."    shift, and go to state 683
    "?["    shift, and go to state 684
    "<|"    shift, and go to state 685
    "|>"    shift, and go to state 686
    ":="    shift, and go to state 687
    "<<<"   shift, and go to state 688
    ">>>"   shift, and go to state 689
    "<<<="  shift, and go to state 690
    ">>>="  shift, and go to state 691
    "&&"    shift, and go to state 692
    "||"    shift, and go to state 693
    "^^"    shift, and go to state 694
    "&&="   shift, and go to state 695
    "||="   shift, and go to state 696
    "^^="   shift, and go to state 697
    ".."    shift, and go to state 698
    '='     shift, and go to state 773
    '?'     shift, and go to state 700
    '|'     shift, and go to state 701
    '^'     shift, and go to state 702
    '&'     shift, and go to state 703
    '<'     shift, and go to state 704
    '>'     shift, and go to state 705
    '-'     shift, and go to state 706
    '+'     shift, and go to state 707
    '*'     shift, and go to state 708
    '/'     shift, and go to state 709
    '%'     shift, and go to state 710
    '.'     shift, and go to state 711
    '['     shift, and go to state 712

    " <|"     reduce using rule 324 (expr_assign)
    $default  reduce using rule 299 (expr_list)


State 594

  273 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 774


State 595

  251 expression_delete: "delete" "explicit" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 775
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 596

  250 expression_delete: "delete" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 250 (expression_delete)


State 597

  420 expr: "deref" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 776
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 598

   76 expression_with: "with" expr . expression_block
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    '{'    shift, and go to state 276

    expression_block  go to state 777


State 599

   78 expression_with_alias: "assume" "name" . '=' $@4 expr

    '='  shift, and go to state 778


State 600

  286 expr_cast: "cast" '<' . $@10 type_declaration_no_options '>' $@11 expr

    $default  reduce using rule 284 ($@10)

    $@10  go to state 779


State 601

  289 expr_cast: "upcast" '<' . $@12 type_declaration_no_options '>' $@13 expr

    $default  reduce using rule 287 ($@12)

    $@12  go to state 780


State 602

  421 expr: "addr" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 781
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 603

  235 expression_any: "pass" ';' .

    $default  reduce using rule 235 (expression_any)


State 604

  292 expr_cast: "reinterpret" '<' . $@14 type_declaration_no_options '>' $@15 expr

    $default  reduce using rule 290 ($@14)

    $@14  go to state 782


State 605

   52 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 783


State 606

   53 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 784


State 607

   54 expression_goto: "goto" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 54 (expression_goto)


State 608

  451 expr: "unsafe" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 785
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 609

   74 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 74 (expression_unsafe)


State 610

  422 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  423     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 786


State 611

  269 expression_yield_no_pipe: "yield" "<-" . expr
  272 expression_yield: "yield" "<-" . expr_pipe

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "$ <|"                            shift, and go to state 439
    "@ <|"                            shift, and go to state 440
    "@@ <|"                           shift, and go to state 441
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    expr_pipe               go to state 787
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_assign             go to state 592
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 788
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 612

  271 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 271 (expression_yield)


State 613

  268 expression_yield_no_pipe: "yield" expr .
  324 expr_assign: expr .
  325            | expr . '=' expr
  326            | expr . "<-" expr
  327            | expr . ":=" expr
  328            | expr . "&=" expr
  329            | expr . "|=" expr
  330            | expr . "^=" expr
  331            | expr . "&&=" expr
  332            | expr . "||=" expr
  333            | expr . "^^=" expr
  334            | expr . "+=" expr
  335            | expr . "-=" expr
  336            | expr . "*=" expr
  337            | expr . "/=" expr
  338            | expr . "%=" expr
  339            | expr . "<<=" expr
  340            | expr . ">>=" expr
  341            | expr . "<<<=" expr
  342            | expr . ">>>=" expr
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 660
    "as"    shift, and go to state 661
    "+="    shift, and go to state 662
    "-="    shift, and go to state 663
    "/="    shift, and go to state 664
    "*="    shift, and go to state 665
    "%="    shift, and go to state 666
    "&="    shift, and go to state 667
    "|="    shift, and go to state 668
    "^="    shift, and go to state 669
    "<<"    shift, and go to state 670
    ">>"    shift, and go to state 671
    "++"    shift, and go to state 672
    "--"    shift, and go to state 673
    "<="    shift, and go to state 674
    "<<="   shift, and go to state 675
    ">>="   shift, and go to state 676
    ">="    shift, and go to state 677
    "=="    shift, and go to state 678
    "!="    shift, and go to state 679
    "->"    shift, and go to state 680
    "<-"    shift, and go to state 772
    "??"    shift, and go to state 682
    "?."    shift, and go to state 683
    "?["    shift, and go to state 684
    "<|"    shift, and go to state 685
    "|>"    shift, and go to state 686
    ":="    shift, and go to state 687
    "<<<"   shift, and go to state 688
    ">>>"   shift, and go to state 689
    "<<<="  shift, and go to state 690
    ">>>="  shift, and go to state 691
    "&&"    shift, and go to state 692
    "||"    shift, and go to state 693
    "^^"    shift, and go to state 694
    "&&="   shift, and go to state 695
    "||="   shift, and go to state 696
    "^^="   shift, and go to state 697
    ".."    shift, and go to state 698
    '='     shift, and go to state 773
    '?'     shift, and go to state 700
    '|'     shift, and go to state 701
    '^'     shift, and go to state 702
    '&'     shift, and go to state 703
    '<'     shift, and go to state 704
    '>'     shift, and go to state 705
    '-'     shift, and go to state 706
    '+'     shift, and go to state 707
    '*'     shift, and go to state 708
    '/'     shift, and go to state 709
    '%'     shift, and go to state 710
    '.'     shift, and go to state 711
    '['     shift, and go to state 712

    " <|"     reduce using rule 324 (expr_assign)
    $default  reduce using rule 268 (expression_yield_no_pipe)


State 614

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  403     | "++" expr .
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 660
    "as"  shift, and go to state 661
    "++"  shift, and go to state 672
    "--"  shift, and go to state 673
    "->"  shift, and go to state 680
    "?."  shift, and go to state 683
    "?["  shift, and go to state 684
    "<|"  shift, and go to state 685
    "|>"  shift, and go to state 686
    '.'   shift, and go to state 711
    '['   shift, and go to state 712

    $default  reduce using rule 403 (expr)


State 615

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  404     | "--" expr .
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 660
    "as"  shift, and go to state 661
    "++"  shift, and go to state 672
    "--"  shift, and go to state 673
    "->"  shift, and go to state 680
    "?."  shift, and go to state 683
    "?["  shift, and go to state 684
    "<|"  shift, and go to state 685
    "|>"  shift, and go to state 686
    '.'   shift, and go to state 711
    '['   shift, and go to state 712

    $default  reduce using rule 404 (expr)


State 616

  305 block_or_lambda: '@' .
  306                | '@' . '@'

    '@'  shift, and go to state 789

    $default  reduce using rule 305 (block_or_lambda)


State 617

  246 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 246 (expr_pipe)


State 618

  244 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 244 (expr_pipe)


State 619

  245 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 245 (expr_pipe)


State 620

  453 expr_mtag: "$$" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 790
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 621

  454 expr_mtag: "$i" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 791
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 622

  455 expr_mtag: "$v" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 792
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 623

  456 expr_mtag: "$b" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 793
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 624

  457 expr_mtag: "$a" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 794
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 625

  459 expr_mtag: "$c" '(' . expr ')' '(' ')'
  460          | "$c" '(' . expr ')' '(' expr_list ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 795
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 626

  747 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 400
    "name"  shift, and go to state 401

    variable_name_with_pos_list  go to state 796


State 627

  632 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  633                            | type_declaration_no_options . '[' ']'
  634                            | type_declaration_no_options . '-' '[' ']'
  635                            | type_declaration_no_options . "explicit"
  636                            | type_declaration_no_options . "const"
  637                            | type_declaration_no_options . '-' "const"
  638                            | type_declaration_no_options . '&'
  639                            | type_declaration_no_options . '-' '&'
  640                            | type_declaration_no_options . '#'
  641                            | type_declaration_no_options . "implicit"
  642                            | type_declaration_no_options . '-' '#'
  643                            | type_declaration_no_options . "==" "const"
  644                            | type_declaration_no_options . "==" '&'
  645                            | type_declaration_no_options . '?'
  649                            | type_declaration_no_options . "??"
  727 make_struct_decl: "[[" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  728                 | "[[" type_declaration_no_options . optional_block optional_trailing_delim_sqr_sqr
  729                 | "[[" type_declaration_no_options . '(' ')' optional_block optional_trailing_delim_sqr_sqr
  730                 | "[[" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  740 make_dim_decl: "[[" type_declaration_no_options . make_dim optional_trailing_semicolon_sqr_sqr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "const"                           shift, and go to state 383
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "where"                           shift, and go to state 797
    "reinterpret"                     shift, and go to state 430
    "implicit"                        shift, and go to state 384
    "explicit"                        shift, and go to state 385
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "=="                              shift, and go to state 386
    "??"                              shift, and go to state 387
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "$f"                              shift, and go to state 798
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 799
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '?'                               shift, and go to state 388
    '&'                               shift, and go to state 389
    '-'                               shift, and go to state 800
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '['                               shift, and go to state 391
    '('                               shift, and go to state 801
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276
    '#'                               shift, and go to state 392

    $default  reduce using rule 713 (optional_block)

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 802
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_fields      go to state 803
    make_struct_dim         go to state 804
    optional_block          go to state 805
    make_struct_decl        go to state 516
    make_tuple              go to state 806
    make_dim                go to state 807
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 628

  748 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "$i"    shift, and go to state 400
    "name"  shift, and go to state 401

    variable_name_with_pos_list  go to state 808


State 629

  632 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  633                            | type_declaration_no_options . '[' ']'
  634                            | type_declaration_no_options . '-' '[' ']'
  635                            | type_declaration_no_options . "explicit"
  636                            | type_declaration_no_options . "const"
  637                            | type_declaration_no_options . '-' "const"
  638                            | type_declaration_no_options . '&'
  639                            | type_declaration_no_options . '-' '&'
  640                            | type_declaration_no_options . '#'
  641                            | type_declaration_no_options . "implicit"
  642                            | type_declaration_no_options . '-' '#'
  643                            | type_declaration_no_options . "==" "const"
  644                            | type_declaration_no_options . "==" '&'
  645                            | type_declaration_no_options . '?'
  649                            | type_declaration_no_options . "??"
  731 make_struct_decl: "[{" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_cur_sqr
  732                 | "[{" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  741 make_dim_decl: "[{" type_declaration_no_options . make_dim optional_trailing_semicolon_cur_sqr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "const"                           shift, and go to state 383
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "implicit"                        shift, and go to state 384
    "explicit"                        shift, and go to state 385
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "=="                              shift, and go to state 386
    "??"                              shift, and go to state 387
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "$f"                              shift, and go to state 798
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 799
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '?'                               shift, and go to state 388
    '&'                               shift, and go to state 389
    '-'                               shift, and go to state 800
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '['                               shift, and go to state 391
    '('                               shift, and go to state 809
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276
    '#'                               shift, and go to state 392

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 802
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_fields      go to state 803
    make_struct_dim         go to state 810
    make_struct_decl        go to state 516
    make_tuple              go to state 806
    make_dim                go to state 811
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 630

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  736 make_map_tuple: expr . "=>" expr
  737               | expr .

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "=>"   shift, and go to state 812
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 737 (make_map_tuple)


State 631

  742 make_table: make_map_tuple .

    $default  reduce using rule 742 (make_table)


State 632

  743 make_table: make_table . ';' make_map_tuple
  744 make_table_decl: "{{" make_table . optional_trailing_semicolon_cur_cur

    ";}}"  shift, and go to state 813
    ';'    shift, and go to state 814
    '}'    shift, and go to state 815

    optional_trailing_semicolon_cur_cur  go to state 816


State 633

  242 expression_keyword: "keyword" '<' . $@6 type_declaration_no_options '>' $@7 expr

    $default  reduce using rule 240 ($@6)

    $@6  go to state 817


State 634

  239 expr_keyword: "keyword" expr . expression_block
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    '{'    shift, and go to state 276

    expression_block  go to state 818


State 635

   28 string_builder_body: string_builder_body . character_sequence
   29                    | string_builder_body . "{" expr "}"
   30 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 156
    STRING_CHARACTER_ESC  shift, and go to state 157
    "end of the string"   shift, and go to state 819
    "{"                   shift, and go to state 820

    character_sequence  go to state 821


State 636

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  380 expr: '-' expr .
  381     | expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 660
    "as"  shift, and go to state 661
    "++"  shift, and go to state 672
    "--"  shift, and go to state 673
    "->"  shift, and go to state 680
    "?."  shift, and go to state 683
    "?["  shift, and go to state 684
    "<|"  shift, and go to state 685
    "|>"  shift, and go to state 686
    '.'   shift, and go to state 711
    '['   shift, and go to state 712

    $default  reduce using rule 380 (expr)


State 637

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  379 expr: '+' expr .
  381     | expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 660
    "as"  shift, and go to state 661
    "++"  shift, and go to state 672
    "--"  shift, and go to state 673
    "->"  shift, and go to state 680
    "?."  shift, and go to state 683
    "?["  shift, and go to state 684
    "<|"  shift, and go to state 685
    "|>"  shift, and go to state 686
    '.'   shift, and go to state 711
    '['   shift, and go to state 712

    $default  reduce using rule 379 (expr)


State 638

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  419     | '*' expr .
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 683
    "?["  shift, and go to state 684
    '.'   shift, and go to state 711
    '['   shift, and go to state 712

    $default  reduce using rule 419 (expr)


State 639

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  378 expr: '~' expr .
  381     | expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 660
    "as"  shift, and go to state 661
    "++"  shift, and go to state 672
    "--"  shift, and go to state 673
    "->"  shift, and go to state 680
    "?."  shift, and go to state 683
    "?["  shift, and go to state 684
    "<|"  shift, and go to state 685
    "|>"  shift, and go to state 686
    '.'   shift, and go to state 711
    '['   shift, and go to state 712

    $default  reduce using rule 378 (expr)


State 640

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  377 expr: '!' expr .
  381     | expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 660
    "as"  shift, and go to state 661
    "++"  shift, and go to state 672
    "--"  shift, and go to state 673
    "->"  shift, and go to state 680
    "?."  shift, and go to state 683
    "?["  shift, and go to state 684
    "<|"  shift, and go to state 685
    "|>"  shift, and go to state 686
    '.'   shift, and go to state 711
    '['   shift, and go to state 712

    $default  reduce using rule 377 (expr)


State 641

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  407     | '(' expr . ')'
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ')'    shift, and go to state 822


State 642

  306 block_or_lambda: '@' '@' .
  355 func_addr_expr: '@' '@' . func_addr_name
  358               | '@' '@' . '<' $@18 type_declaration_no_options '>' $@19 func_addr_name
  361               | '@' '@' . '<' $@20 optional_function_argument_list optional_function_type '>' $@21 func_addr_name
  468 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 54
    "$i"    shift, and go to state 823
    "$c"    shift, and go to state 824
    "name"  shift, and go to state 55
    '<'     shift, and go to state 825

    $default  reduce using rule 306 (block_or_lambda)

    name_in_namespace  go to state 826
    func_addr_name     go to state 827


State 643

  214 expression_block: '{' expressions '}' "finally" . '{' expressions '}'

    '{'  shift, and go to state 828


State 644

  233 expression_any: expression_label ';' .

    $default  reduce using rule 233 (expression_any)


State 645

  234 expression_any: expression_goto ';' .

    $default  reduce using rule 234 (expression_any)


State 646

   70 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    '{'    shift, and go to state 276

    expression_block  go to state 829


State 647

   72 expression_if_then_else: expression_if_one_liner "if" . $@3 expr expression_else_one_liner ';'

    $default  reduce using rule 71 ($@3)

    $@3  go to state 830


State 648

  450 expr: name_in_namespace "name" .

    $default  reduce using rule 450 (expr)


State 649

  349 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  350                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  415 expr: name_in_namespace '(' . ')'
  416     | name_in_namespace '(' . expr_list ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '['                               shift, and go to state 831
    '('                               shift, and go to state 466
    ')'                               shift, and go to state 832
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    expr_list               go to state 833
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 834
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 650

  220 expression_any: expression_delete ';' .

    $default  reduce using rule 220 (expression_any)


State 651

  227 expression_any: expression_break ';' .

    $default  reduce using rule 227 (expression_any)


State 652

  228 expression_any: expression_continue ';' .

    $default  reduce using rule 228 (expression_any)


State 653

  265 expression_return: expression_return_no_pipe ';' .

    $default  reduce using rule 265 (expression_return)


State 654

  270 expression_yield: expression_yield_no_pipe ';' .

    $default  reduce using rule 270 (expression_yield)


State 655

  276 optional_in_scope: "inscope" .

    $default  reduce using rule 276 (optional_in_scope)


State 656

  282 expression_let: kwd_let optional_in_scope . let_variable_declaration
  283               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 291
    "[["    shift, and go to state 835
    "name"  shift, and go to state 292

    tuple_expansion_variable_declaration  go to state 836
    let_variable_name_with_pos_list       go to state 293
    let_variable_declaration              go to state 837


State 657

  316 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 838

    $default  reduce using rule 313 (optional_capture_list)

    optional_capture_list  go to state 839


State 658

  243 expr_pipe: expr_assign " <|" . expr_block

    '$'  shift, and go to state 467
    '@'  shift, and go to state 616
    '{'  shift, and go to state 276

    expression_block  go to state 483
    block_or_lambda   go to state 503
    expr_block        go to state 840


State 659

  219 expression_any: expr_assign ';' .

    $default  reduce using rule 219 (expression_any)


State 660

  428 expr: expr "is" . "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr "is" . basic_type_declaration
  430     | expr "is" . "name"
  467 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 841
    "bool"      shift, and go to state 300
    "void"      shift, and go to state 301
    "string"    shift, and go to state 302
    "int"       shift, and go to state 304
    "int2"      shift, and go to state 305
    "int3"      shift, and go to state 306
    "int4"      shift, and go to state 307
    "uint"      shift, and go to state 308
    "bitfield"  shift, and go to state 434
    "uint2"     shift, and go to state 310
    "uint3"     shift, and go to state 311
    "uint4"     shift, and go to state 312
    "float"     shift, and go to state 313
    "float2"    shift, and go to state 314
    "float3"    shift, and go to state 315
    "float4"    shift, and go to state 316
    "range"     shift, and go to state 317
    "urange"    shift, and go to state 318
    "range64"   shift, and go to state 319
    "urange64"  shift, and go to state 320
    "int64"     shift, and go to state 322
    "uint64"    shift, and go to state 323
    "double"    shift, and go to state 324
    "int8"      shift, and go to state 327
    "uint8"     shift, and go to state 328
    "int16"     shift, and go to state 329
    "uint16"    shift, and go to state 330
    "$f"        shift, and go to state 842
    "name"      shift, and go to state 843

    basic_type_declaration  go to state 844


State 661

  431 expr: expr "as" . "name"
  434     | expr "as" . "type" '<' $@26 type_declaration '>' $@27
  435     | expr "as" . basic_type_declaration
  465 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 845
    "bool"      shift, and go to state 300
    "void"      shift, and go to state 301
    "string"    shift, and go to state 302
    "int"       shift, and go to state 304
    "int2"      shift, and go to state 305
    "int3"      shift, and go to state 306
    "int4"      shift, and go to state 307
    "uint"      shift, and go to state 308
    "bitfield"  shift, and go to state 434
    "uint2"     shift, and go to state 310
    "uint3"     shift, and go to state 311
    "uint4"     shift, and go to state 312
    "float"     shift, and go to state 313
    "float2"    shift, and go to state 314
    "float3"    shift, and go to state 315
    "float4"    shift, and go to state 316
    "range"     shift, and go to state 317
    "urange"    shift, and go to state 318
    "range64"   shift, and go to state 319
    "urange64"  shift, and go to state 320
    "int64"     shift, and go to state 322
    "uint64"    shift, and go to state 323
    "double"    shift, and go to state 324
    "int8"      shift, and go to state 327
    "uint8"     shift, and go to state 328
    "int16"     shift, and go to state 329
    "uint16"    shift, and go to state 330
    "$f"        shift, and go to state 846
    "name"      shift, and go to state 847

    basic_type_declaration  go to state 848


State 662

  334 expr_assign: expr "+=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 849
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 663

  335 expr_assign: expr "-=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 850
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 664

  337 expr_assign: expr "/=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 851
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 665

  336 expr_assign: expr "*=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 852
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 666

  338 expr_assign: expr "%=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 853
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 667

  328 expr_assign: expr "&=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 854
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 668

  329 expr_assign: expr "|=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 855
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 669

  330 expr_assign: expr "^=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 856
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 670

  381 expr: expr "<<" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 857
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 671

  382 expr: expr ">>" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 858
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 672

  405 expr: expr "++" .

    $default  reduce using rule 405 (expr)


State 673

  406 expr: expr "--" .

    $default  reduce using rule 406 (expr)


State 674

  394 expr: expr "<=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 859
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 675

  339 expr_assign: expr "<<=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 860
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 676

  340 expr_assign: expr ">>=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 861
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 677

  395 expr: expr ">=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 862
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 678

  392 expr: expr "==" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 863
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 679

  393 expr: expr "!=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 864
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 680

  351 expr_method_call: expr "->" . "name" '(' ')'
  352                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 865


State 681

  326 expr_assign: expr "<-" . expr
  346 expr_assign_pipe: expr "<-" . "@ <|" expr_block
  347                 | expr "<-" . "@@ <|" expr_block
  348                 | expr "<-" . "$ <|" expr_block

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "$ <|"                            shift, and go to state 866
    "@ <|"                            shift, and go to state 867
    "@@ <|"                           shift, and go to state 868
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 869
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 682

  424 expr: expr "??" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 870
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 683

  412 expr: expr "?." . "name"
  462 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 871
    "name"  shift, and go to state 872


State 684

  410 expr: expr "?[" . expr ']'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 873
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 685

  448 expr: expr "<|" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 874
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 686

  449 expr: expr "|>" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 875
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 687

  327 expr_assign: expr ":=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 876
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 688

  383 expr: expr "<<<" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 877
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 689

  384 expr: expr ">>>" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 878
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 690

  341 expr_assign: expr "<<<=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 879
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 691

  342 expr_assign: expr ">>>=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 880
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 692

  399 expr: expr "&&" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 881
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 693

  400 expr: expr "||" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 882
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 694

  401 expr: expr "^^" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 883
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 695

  331 expr_assign: expr "&&=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 884
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 696

  332 expr_assign: expr "||=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 885
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 697

  333 expr_assign: expr "^^=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 886
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 698

  402 expr: expr ".." . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 887
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 699

  325 expr_assign: expr '=' . expr
  343 expr_assign_pipe: expr '=' . "@ <|" expr_block
  344                 | expr '=' . "@@ <|" expr_block
  345                 | expr '=' . "$ <|" expr_block

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "$ <|"                            shift, and go to state 888
    "@ <|"                            shift, and go to state 889
    "@@ <|"                           shift, and go to state 890
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 891
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 700

  425 expr: expr '?' . expr ':' expr
  436     | expr '?' . "as" "name"
  439     | expr '?' . "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr '?' . "as" basic_type_declaration
  466 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "as"                              shift, and go to state 892
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 893
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 701

  397 expr: expr '|' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 894
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 702

  398 expr: expr '^' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 895
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 703

  396 expr: expr '&' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 896
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 704

  390 expr: expr '<' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 897
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 705

  391 expr: expr '>' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 898
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 706

  386 expr: expr '-' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 899
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 707

  385 expr: expr '+' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 900
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 708

  387 expr: expr '*' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 901
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 709

  388 expr: expr '/' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 902
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 710

  389 expr: expr '%' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 903
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 711

  362 expr_field: expr '.' . "name"
  363           | expr '.' . '.' "name"
  366           | expr '.' . $@22 error $@23
  409 expr: expr '.' . '[' expr ']'
  411     | expr '.' . "?[" expr ']'
  413     | expr '.' . "?." "name"
  461 expr_mtag: expr '.' . "$f" '(' expr ')'
  463          | expr '.' . '.' "$f" '(' expr ')'
  464          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 904
    "?["    shift, and go to state 905
    "$f"    shift, and go to state 906
    "name"  shift, and go to state 907
    '.'     shift, and go to state 908
    '['     shift, and go to state 909

    $default  reduce using rule 364 ($@22)

    $@22  go to state 910


State 712

  408 expr: expr '[' . expr ']'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 911
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 713

  417 expr: basic_type_declaration '(' . ')'
  418     | basic_type_declaration '(' . expr_list ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    ')'                               shift, and go to state 912
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    expr_list               go to state 913
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 834
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 714

  540 enum_list: enum_list . ';'
  541          | enum_list . "name" ';'
  542          | enum_list . "name" '=' expr ';'
  562 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@39 enum_list . $@40 '}'

    "name"  shift, and go to state 521
    ';'     shift, and go to state 522

    $default  reduce using rule 561 ($@40)

    $@40  go to state 914


State 715

  542 enum_list: enum_list "name" '=' . expr ';'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 915
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 716

  541 enum_list: enum_list "name" ';' .

    $default  reduce using rule 541 (enum_list)


State 717

  559 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@37 enum_list $@38 '}' .

    $default  reduce using rule 559 (enum_declaration)


State 718

  115 optional_annotation_list: '[' . annotation_list ']'
  489 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' ';'

    "require"  shift, and go to state 57
    "private"  shift, and go to state 58
    "|>"       shift, and go to state 59
    "::"       shift, and go to state 54
    "name"     shift, and go to state 55
    '!'        shift, and go to state 60
    '('        shift, and go to state 61

    annotation_declaration_name   go to state 62
    annotation_declaration_basic  go to state 63
    annotation_declaration        go to state 64
    annotation_list               go to state 916
    name_in_namespace             go to state 66


State 719

  575 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@41 structure_name $@42 '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 575 (structure_declaration)


State 720

  486 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@31 function_declaration_header ';'
  488                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@32 function_declaration_header expression_block

    "def"  shift, and go to state 917


State 721

  484 struct_variable_declaration_list: struct_variable_declaration_list $@30 . structure_variable_declaration ';'

    "[["  shift, and go to state 211

    $default  reduce using rule 469 (optional_field_annotation)

    optional_field_annotation       go to state 918
    structure_variable_declaration  go to state 919


State 722

  519 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 519 (let_variable_name_with_pos_list)


State 723

  522 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 920


State 724

  523 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options ';' .

    $default  reduce using rule 523 (let_variable_declaration)


State 725

  524 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr ';'
  525                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "$ <|"                            shift, and go to state 439
    "@ <|"                            shift, and go to state 440
    "@@ <|"                           shift, and go to state 441
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    expr_pipe               go to state 921
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_assign             go to state 592
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 922
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 726

  527 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 527 (let_variable_declaration)


State 727

  324 expr_assign: expr .
  325            | expr . '=' expr
  326            | expr . "<-" expr
  327            | expr . ":=" expr
  328            | expr . "&=" expr
  329            | expr . "|=" expr
  330            | expr . "^=" expr
  331            | expr . "&&=" expr
  332            | expr . "||=" expr
  333            | expr . "^^=" expr
  334            | expr . "+=" expr
  335            | expr . "-=" expr
  336            | expr . "*=" expr
  337            | expr . "/=" expr
  338            | expr . "%=" expr
  339            | expr . "<<=" expr
  340            | expr . ">>=" expr
  341            | expr . "<<<=" expr
  342            | expr . ">>>=" expr
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  526 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 660
    "as"    shift, and go to state 661
    "+="    shift, and go to state 662
    "-="    shift, and go to state 663
    "/="    shift, and go to state 664
    "*="    shift, and go to state 665
    "%="    shift, and go to state 666
    "&="    shift, and go to state 667
    "|="    shift, and go to state 668
    "^="    shift, and go to state 669
    "<<"    shift, and go to state 670
    ">>"    shift, and go to state 671
    "++"    shift, and go to state 672
    "--"    shift, and go to state 673
    "<="    shift, and go to state 674
    "<<="   shift, and go to state 675
    ">>="   shift, and go to state 676
    ">="    shift, and go to state 677
    "=="    shift, and go to state 678
    "!="    shift, and go to state 679
    "->"    shift, and go to state 680
    "<-"    shift, and go to state 772
    "??"    shift, and go to state 682
    "?."    shift, and go to state 683
    "?["    shift, and go to state 684
    "<|"    shift, and go to state 685
    "|>"    shift, and go to state 686
    ":="    shift, and go to state 687
    "<<<"   shift, and go to state 688
    ">>>"   shift, and go to state 689
    "<<<="  shift, and go to state 690
    ">>>="  shift, and go to state 691
    "&&"    shift, and go to state 692
    "||"    shift, and go to state 693
    "^^"    shift, and go to state 694
    "&&="   shift, and go to state 695
    "||="   shift, and go to state 696
    "^^="   shift, and go to state 697
    ".."    shift, and go to state 698
    '='     shift, and go to state 773
    '?'     shift, and go to state 700
    '|'     shift, and go to state 701
    '^'     shift, and go to state 702
    '&'     shift, and go to state 703
    '<'     shift, and go to state 704
    '>'     shift, and go to state 705
    '-'     shift, and go to state 706
    '+'     shift, and go to state 707
    '*'     shift, and go to state 708
    '/'     shift, and go to state 709
    '%'     shift, and go to state 710
    '.'     shift, and go to state 711
    '['     shift, and go to state 712
    ';'     shift, and go to state 923

    $default  reduce using rule 324 (expr_assign)


State 728

  652 type_declaration_no_options: "array" '<' $@47 type_declaration . '>' $@48
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    '|'  shift, and go to state 393
    '>'  shift, and go to state 924


State 729

  655 type_declaration_no_options: "table" '<' $@49 table_type_pair . '>' $@50

    '>'  shift, and go to state 925


State 730

  626 table_type_pair: type_declaration .
  627                | type_declaration . ';' type_declaration
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    '|'  shift, and go to state 393
    ';'  shift, and go to state 926

    $default  reduce using rule 626 (table_type_pair)


State 731

  658 type_declaration_no_options: "iterator" '<' $@51 type_declaration . '>' $@52
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    '|'  shift, and go to state 393
    '>'  shift, and go to state 927


State 732

  648 type_declaration_no_options: "smart_ptr" '<' $@45 type_declaration . '>' $@46
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    '|'  shift, and go to state 393
    '>'  shift, and go to state 928


State 733

  616 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 616 (auto_type_declaration)


State 734

  618 bitfield_bits: "name" .

    $default  reduce using rule 618 (bitfield_bits)


State 735

  619 bitfield_bits: bitfield_bits . ';' "name"
  625 bitfield_type_declaration: "bitfield" '<' $@43 bitfield_bits . '>' $@44

    '>'  shift, and go to state 929
    ';'  shift, and go to state 930


State 736

  662 type_declaration_no_options: "block" '<' $@53 type_declaration . '>' $@54
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    '|'  shift, and go to state 393
    '>'  shift, and go to state 931


State 737

  665 type_declaration_no_options: "block" '<' $@55 optional_function_argument_list . optional_function_type '>' $@56

    ':'  shift, and go to state 355

    $default  reduce using rule 119 (optional_function_type)

    optional_function_type  go to state 932


State 738

  669 type_declaration_no_options: "function" '<' $@57 type_declaration . '>' $@58
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    '|'  shift, and go to state 393
    '>'  shift, and go to state 933


State 739

  672 type_declaration_no_options: "function" '<' $@59 optional_function_argument_list . optional_function_type '>' $@60

    ':'  shift, and go to state 355

    $default  reduce using rule 119 (optional_function_type)

    optional_function_type  go to state 934


State 740

  676 type_declaration_no_options: "lambda" '<' $@61 type_declaration . '>' $@62
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    '|'  shift, and go to state 393
    '>'  shift, and go to state 935


State 741

  679 type_declaration_no_options: "lambda" '<' $@63 optional_function_argument_list . optional_function_type '>' $@64

    ':'  shift, and go to state 355

    $default  reduce using rule 119 (optional_function_type)

    optional_function_type  go to state 936


State 742

  247 name_in_namespace: "name" .
  248                  | "name" . "::" "name"
  496 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 93
    ':'   shift, and go to state 937

    $default  reduce using rule 247 (name_in_namespace)


State 743

  497 tuple_type_list: tuple_type .

    $default  reduce using rule 497 (tuple_type_list)


State 744

  498 tuple_type_list: tuple_type_list . ';' tuple_type
  682 type_declaration_no_options: "tuple" '<' $@65 tuple_type_list . '>' $@66

    '>'  shift, and go to state 938
    ';'  shift, and go to state 939


State 745

  495 tuple_type: type_declaration .
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    '|'  shift, and go to state 393

    $default  reduce using rule 495 (tuple_type)


State 746

  500 variant_type_list: variant_type .

    $default  reduce using rule 500 (variant_type_list)


State 747

  501 variant_type_list: variant_type_list . ';' variant_type
  685 type_declaration_no_options: "variant" '<' $@67 variant_type_list . '>' $@68

    '>'  shift, and go to state 940
    ';'  shift, and go to state 941


State 748

  617 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 617 (auto_type_declaration)


State 749

  634 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 634 (type_declaration_no_options)


State 750

  632 type_declaration_no_options: type_declaration_no_options '[' expr ']' .

    $default  reduce using rule 632 (type_declaration_no_options)


State 751

  622 bitfield_alias_bits: bitfield_alias_bits "name" ';' .

    $default  reduce using rule 622 (bitfield_alias_bits)


State 752

  698 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@73 "name" $@74 '{' $@75 bitfield_alias_bits $@76 '}' .

    $default  reduce using rule 698 (bitfield_alias_declaration)


State 753

  499 variant_type: "name" ':' . type_declaration

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 339
    type_declaration             go to state 942


State 754

  504 variant_alias_type_list: variant_alias_type_list variant_type ';' .

    $default  reduce using rule 504 (variant_alias_type_list)


State 755

  693 variant_alias_declaration: "variant" optional_public_or_private_alias $@69 "name" $@70 '{' $@71 variant_alias_type_list $@72 '}' .

    $default  reduce using rule 693 (variant_alias_declaration)


State 756

  492 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 492 (function_argument_declaration)


State 757

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  577 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ')'    shift, and go to state 943


State 758

  578 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 578 (variable_name_with_pos_list)


State 759

  579 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  580                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 944

    $default  reduce using rule 579 (variable_name_with_pos_list)


State 760

  509 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  510                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 574
    '='   shift, and go to state 576
    '|'   shift, and go to state 393

    $default  reduce using rule 509 (variable_declaration)

    copy_or_move  go to state 945


State 761

  512 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 512 (variable_declaration)


State 762

  324 expr_assign: expr .
  325            | expr . '=' expr
  326            | expr . "<-" expr
  327            | expr . ":=" expr
  328            | expr . "&=" expr
  329            | expr . "|=" expr
  330            | expr . "^=" expr
  331            | expr . "&&=" expr
  332            | expr . "||=" expr
  333            | expr . "^^=" expr
  334            | expr . "+=" expr
  335            | expr . "-=" expr
  336            | expr . "*=" expr
  337            | expr . "/=" expr
  338            | expr . "%=" expr
  339            | expr . "<<=" expr
  340            | expr . ">>=" expr
  341            | expr . "<<<=" expr
  342            | expr . ">>>=" expr
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  511 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 660
    "as"    shift, and go to state 661
    "+="    shift, and go to state 662
    "-="    shift, and go to state 663
    "/="    shift, and go to state 664
    "*="    shift, and go to state 665
    "%="    shift, and go to state 666
    "&="    shift, and go to state 667
    "|="    shift, and go to state 668
    "^="    shift, and go to state 669
    "<<"    shift, and go to state 670
    ">>"    shift, and go to state 671
    "++"    shift, and go to state 672
    "--"    shift, and go to state 673
    "<="    shift, and go to state 674
    "<<="   shift, and go to state 675
    ">>="   shift, and go to state 676
    ">="    shift, and go to state 677
    "=="    shift, and go to state 678
    "!="    shift, and go to state 679
    "->"    shift, and go to state 680
    "<-"    shift, and go to state 772
    "??"    shift, and go to state 682
    "?."    shift, and go to state 683
    "?["    shift, and go to state 684
    "<|"    shift, and go to state 685
    "|>"    shift, and go to state 686
    ":="    shift, and go to state 687
    "<<<"   shift, and go to state 688
    ">>>"   shift, and go to state 689
    "<<<="  shift, and go to state 690
    ">>>="  shift, and go to state 691
    "&&"    shift, and go to state 692
    "||"    shift, and go to state 693
    "^^"    shift, and go to state 694
    "&&="   shift, and go to state 695
    "||="   shift, and go to state 696
    "^^="   shift, and go to state 697
    ".."    shift, and go to state 698
    '='     shift, and go to state 773
    '?'     shift, and go to state 700
    '|'     shift, and go to state 701
    '^'     shift, and go to state 702
    '&'     shift, and go to state 703
    '<'     shift, and go to state 704
    '>'     shift, and go to state 705
    '-'     shift, and go to state 706
    '+'     shift, and go to state 707
    '*'     shift, and go to state 708
    '/'     shift, and go to state 709
    '%'     shift, and go to state 710
    '.'     shift, and go to state 711
    '['     shift, and go to state 712

    " <|"     reduce using rule 324 (expr_assign)
    $default  reduce using rule 511 (variable_declaration)


State 763

   75 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 75 (expression_while_loop)


State 764

   73 expression_for_loop: "for" variable_name_with_pos_list "in" . expr_list ';' expression_block

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    expr_list               go to state 946
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 834
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 765

  254 new_type_declaration: '<' $@8 . type_declaration '>' $@9

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 339
    type_declaration             go to state 947


State 766

  257 expr_new: "new" new_type_declaration '(' . ')'
  258         | "new" new_type_declaration '(' . expr_list ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    ')'                               shift, and go to state 948
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    expr_list               go to state 949
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 834
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 767

  296 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  297               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  298               | "typeinfo" '(' name_in_namespace . '<' "name" ';' "name" '>' expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '<'                               shift, and go to state 950
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 951
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 768

  295 expr_type_decl: "type" '<' $@16 . type_declaration '>' $@17

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 339
    type_declaration             go to state 952


State 769

  267 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 267 (expression_return)


State 770

  264 expression_return_no_pipe: "return" "<-" expr_list .
  300 expr_list: expr_list . ',' expr

    ','  shift, and go to state 771

    $default  reduce using rule 264 (expression_return_no_pipe)


State 771

  300 expr_list: expr_list ',' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 953
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 772

  326 expr_assign: expr "<-" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 869
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 773

  325 expr_assign: expr '=' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 891
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 774

  273 expression_try_catch: "try" expression_block "recover" . expression_block

    '{'  shift, and go to state 276

    expression_block  go to state 954


State 775

  251 expression_delete: "delete" "explicit" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 251 (expression_delete)


State 776

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  420     | "deref" '(' expr . ')'
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ')'    shift, and go to state 955


State 777

   76 expression_with: "with" expr expression_block .

    $default  reduce using rule 76 (expression_with)


State 778

   78 expression_with_alias: "assume" "name" '=' . $@4 expr

    $default  reduce using rule 77 ($@4)

    $@4  go to state 956


State 779

  286 expr_cast: "cast" '<' $@10 . type_declaration_no_options '>' $@11 expr

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 957


State 780

  289 expr_cast: "upcast" '<' $@12 . type_declaration_no_options '>' $@13 expr

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 958


State 781

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  421     | "addr" '(' expr . ')'
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ')'    shift, and go to state 959


State 782

  292 expr_cast: "reinterpret" '<' $@14 . type_declaration_no_options '>' $@15 expr

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 960


State 783

   52 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 52 (expression_label)


State 784

   53 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 53 (expression_goto)


State 785

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  451     | "unsafe" '(' expr . ')'
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ')'    shift, and go to state 961


State 786

  422 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  423     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  632 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  633                            | type_declaration_no_options . '[' ']'
  634                            | type_declaration_no_options . '-' '[' ']'
  635                            | type_declaration_no_options . "explicit"
  636                            | type_declaration_no_options . "const"
  637                            | type_declaration_no_options . '-' "const"
  638                            | type_declaration_no_options . '&'
  639                            | type_declaration_no_options . '-' '&'
  640                            | type_declaration_no_options . '#'
  641                            | type_declaration_no_options . "implicit"
  642                            | type_declaration_no_options . '-' '#'
  643                            | type_declaration_no_options . "==" "const"
  644                            | type_declaration_no_options . "==" '&'
  645                            | type_declaration_no_options . '?'
  649                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 383
    "implicit"  shift, and go to state 384
    "explicit"  shift, and go to state 385
    "=="        shift, and go to state 386
    "??"        shift, and go to state 387
    '?'         shift, and go to state 388
    '&'         shift, and go to state 389
    '>'         shift, and go to state 962
    '-'         shift, and go to state 390
    '['         shift, and go to state 391
    '#'         shift, and go to state 392


State 787

  272 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 272 (expression_yield)


State 788

  269 expression_yield_no_pipe: "yield" "<-" expr .
  324 expr_assign: expr .
  325            | expr . '=' expr
  326            | expr . "<-" expr
  327            | expr . ":=" expr
  328            | expr . "&=" expr
  329            | expr . "|=" expr
  330            | expr . "^=" expr
  331            | expr . "&&=" expr
  332            | expr . "||=" expr
  333            | expr . "^^=" expr
  334            | expr . "+=" expr
  335            | expr . "-=" expr
  336            | expr . "*=" expr
  337            | expr . "/=" expr
  338            | expr . "%=" expr
  339            | expr . "<<=" expr
  340            | expr . ">>=" expr
  341            | expr . "<<<=" expr
  342            | expr . ">>>=" expr
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 660
    "as"    shift, and go to state 661
    "+="    shift, and go to state 662
    "-="    shift, and go to state 663
    "/="    shift, and go to state 664
    "*="    shift, and go to state 665
    "%="    shift, and go to state 666
    "&="    shift, and go to state 667
    "|="    shift, and go to state 668
    "^="    shift, and go to state 669
    "<<"    shift, and go to state 670
    ">>"    shift, and go to state 671
    "++"    shift, and go to state 672
    "--"    shift, and go to state 673
    "<="    shift, and go to state 674
    "<<="   shift, and go to state 675
    ">>="   shift, and go to state 676
    ">="    shift, and go to state 677
    "=="    shift, and go to state 678
    "!="    shift, and go to state 679
    "->"    shift, and go to state 680
    "<-"    shift, and go to state 772
    "??"    shift, and go to state 682
    "?."    shift, and go to state 683
    "?["    shift, and go to state 684
    "<|"    shift, and go to state 685
    "|>"    shift, and go to state 686
    ":="    shift, and go to state 687
    "<<<"   shift, and go to state 688
    ">>>"   shift, and go to state 689
    "<<<="  shift, and go to state 690
    ">>>="  shift, and go to state 691
    "&&"    shift, and go to state 692
    "||"    shift, and go to state 693
    "^^"    shift, and go to state 694
    "&&="   shift, and go to state 695
    "||="   shift, and go to state 696
    "^^="   shift, and go to state 697
    ".."    shift, and go to state 698
    '='     shift, and go to state 773
    '?'     shift, and go to state 700
    '|'     shift, and go to state 701
    '^'     shift, and go to state 702
    '&'     shift, and go to state 703
    '<'     shift, and go to state 704
    '>'     shift, and go to state 705
    '-'     shift, and go to state 706
    '+'     shift, and go to state 707
    '*'     shift, and go to state 708
    '/'     shift, and go to state 709
    '%'     shift, and go to state 710
    '.'     shift, and go to state 711
    '['     shift, and go to state 712

    " <|"     reduce using rule 324 (expr_assign)
    $default  reduce using rule 269 (expression_yield_no_pipe)


State 789

  306 block_or_lambda: '@' '@' .

    $default  reduce using rule 306 (block_or_lambda)


State 790

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  453 expr_mtag: "$$" '(' expr . ')'
  461          | expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ')'    shift, and go to state 963


State 791

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  454 expr_mtag: "$i" '(' expr . ')'
  461          | expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ')'    shift, and go to state 964


State 792

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  455 expr_mtag: "$v" '(' expr . ')'
  461          | expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ')'    shift, and go to state 965


State 793

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  456 expr_mtag: "$b" '(' expr . ')'
  461          | expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ')'    shift, and go to state 966


State 794

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  457 expr_mtag: "$a" '(' expr . ')'
  461          | expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ')'    shift, and go to state 967


State 795

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  459 expr_mtag: "$c" '(' expr . ')' '(' ')'
  460          | "$c" '(' expr . ')' '(' expr_list ')'
  461          | expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ')'    shift, and go to state 968


State 796

  579 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  580                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  747 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 969
    ','   shift, and go to state 575


State 797

  714 optional_block: "where" . expr_block

    '$'  shift, and go to state 467
    '@'  shift, and go to state 616
    '{'  shift, and go to state 276

    expression_block  go to state 483
    block_or_lambda   go to state 503
    expr_block        go to state 970


State 798

  707 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  708                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 971


State 799

  247 name_in_namespace: "name" .
  248                  | "name" . "::" "name"
  703 make_struct_fields: "name" . copy_or_move expr
  704                   | "name" . ":=" expr

    "<-"  shift, and go to state 574
    ":="  shift, and go to state 972
    "::"  shift, and go to state 93
    '='   shift, and go to state 576

    $default  reduce using rule 247 (name_in_namespace)

    copy_or_move  go to state 973


State 800

  380 expr: '-' . expr
  634 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  637                            | type_declaration_no_options '-' . "const"
  639                            | type_declaration_no_options '-' . '&'
  642                            | type_declaration_no_options '-' . '#'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "const"                           shift, and go to state 555
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '&'                               shift, and go to state 556
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '['                               shift, and go to state 557
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276
    '#'                               shift, and go to state 558

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 636
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 801

  407 expr: '(' . expr ')'
  729 make_struct_decl: "[[" type_declaration_no_options '(' . ')' optional_block optional_trailing_delim_sqr_sqr
  730                 | "[[" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    ')'                               shift, and go to state 974
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 641
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 802

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  733 make_tuple: expr .
  734           | expr . "=>" expr

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "=>"   shift, and go to state 975
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 733 (make_tuple)


State 803

  705 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  706                   | make_struct_fields . ',' "name" ":=" expr
  709                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  710                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  711 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 976

    $default  reduce using rule 711 (make_struct_dim)


State 804

  712 make_struct_dim: make_struct_dim . ';' make_struct_fields
  727 make_struct_decl: "[[" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 797
    ';'      shift, and go to state 977

    $default  reduce using rule 713 (optional_block)

    optional_block  go to state 978


State 805

  728 make_struct_decl: "[[" type_declaration_no_options optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 979
    ",]]"  shift, and go to state 980
    ']'    shift, and go to state 981

    optional_trailing_delim_sqr_sqr  go to state 982


State 806

  735 make_tuple: make_tuple . ',' expr
  738 make_dim: make_tuple .

    ','  shift, and go to state 983

    $default  reduce using rule 738 (make_dim)


State 807

  739 make_dim: make_dim . ';' make_tuple
  740 make_dim_decl: "[[" type_declaration_no_options make_dim . optional_trailing_semicolon_sqr_sqr

    ";]]"  shift, and go to state 984
    ']'    shift, and go to state 985
    ';'    shift, and go to state 986

    optional_trailing_semicolon_sqr_sqr  go to state 987


State 808

  579 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  580                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  748 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where '}' ']'

    "in"  shift, and go to state 988
    ','   shift, and go to state 575


State 809

  407 expr: '(' . expr ')'
  732 make_struct_decl: "[{" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    ')'                               shift, and go to state 989
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 641
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 810

  712 make_struct_dim: make_struct_dim . ';' make_struct_fields
  731 make_struct_decl: "[{" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"  shift, and go to state 797
    ';'      shift, and go to state 977

    $default  reduce using rule 713 (optional_block)

    optional_block  go to state 990


State 811

  739 make_dim: make_dim . ';' make_tuple
  741 make_dim_decl: "[{" type_declaration_no_options make_dim . optional_trailing_semicolon_cur_sqr

    ";}]"  shift, and go to state 991
    ';'    shift, and go to state 986
    '}'    shift, and go to state 992

    optional_trailing_semicolon_cur_sqr  go to state 993


State 812

  736 make_map_tuple: expr "=>" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 994
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 813

  716 optional_trailing_semicolon_cur_cur: ";}}" .

    $default  reduce using rule 716 (optional_trailing_semicolon_cur_cur)


State 814

  743 make_table: make_table ';' . make_map_tuple

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 630
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_map_tuple          go to state 995
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 815

  715 optional_trailing_semicolon_cur_cur: '}' . '}'

    '}'  shift, and go to state 996


State 816

  744 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur .

    $default  reduce using rule 744 (make_table_decl)


State 817

  242 expression_keyword: "keyword" '<' $@6 . type_declaration_no_options '>' $@7 expr

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 997


State 818

  239 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 239 (expr_keyword)


State 819

   30 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 30 (string_builder)


State 820

   29 string_builder_body: string_builder_body "{" . expr "}"

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 998
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 821

   24 character_sequence: character_sequence . STRING_CHARACTER
   25                   | character_sequence . STRING_CHARACTER_ESC
   28 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 213
    STRING_CHARACTER_ESC  shift, and go to state 214

    STRING_CHARACTER      [reduce using rule 28 (string_builder_body)]
    STRING_CHARACTER_ESC  [reduce using rule 28 (string_builder_body)]
    $default              reduce using rule 28 (string_builder_body)


State 822

  407 expr: '(' expr ')' .

    $default  reduce using rule 407 (expr)


State 823

  354 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 999


State 824

  468 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1000


State 825

  358 func_addr_expr: '@' '@' '<' . $@18 type_declaration_no_options '>' $@19 func_addr_name
  361               | '@' '@' '<' . $@20 optional_function_argument_list optional_function_type '>' $@21 func_addr_name

    ':'       reduce using rule 359 ($@20)
    '>'       reduce using rule 359 ($@20)
    '('       reduce using rule 359 ($@20)
    $default  reduce using rule 356 ($@18)

    $@18  go to state 1001
    $@20  go to state 1002


State 826

  353 func_addr_name: name_in_namespace .

    $default  reduce using rule 353 (func_addr_name)


State 827

  355 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 355 (func_addr_expr)


State 828

  214 expression_block: '{' expressions '}' "finally" '{' . expressions '}'

    $default  reduce using rule 236 (expressions)

    expressions  go to state 1003


State 829

   70 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1004
    "elif"         shift, and go to state 1005
    "static_elif"  shift, and go to state 1006

    $default  reduce using rule 57 (expression_else)

    elif_or_static_elif  go to state 1007
    expression_else      go to state 1008


State 830

   72 expression_if_then_else: expression_if_one_liner "if" $@3 . expr expression_else_one_liner ';'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1009
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 831

  349 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'

    "$f"    shift, and go to state 798
    "name"  shift, and go to state 1010

    make_struct_fields  go to state 1011


State 832

  415 expr: name_in_namespace '(' ')' .

    $default  reduce using rule 415 (expr)


State 833

  300 expr_list: expr_list . ',' expr
  350 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  416 expr: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1012
    ')'  shift, and go to state 1013


State 834

  299 expr_list: expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 299 (expr_list)


State 835

  280 tuple_expansion_variable_declaration: "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  281                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr ';'

    "name"  shift, and go to state 1014

    tuple_expansion  go to state 1015


State 836

  283 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 283 (expression_let)


State 837

  282 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 282 (expression_let)


State 838

  314 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"  shift, and go to state 1016
    ":="  shift, and go to state 1017
    '='   shift, and go to state 1018
    '&'   shift, and go to state 1019

    capture_entry  go to state 1020
    capture_list   go to state 1021


State 839

  316 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 274

    $default  reduce using rule 116 (optional_function_argument_list)

    optional_function_argument_list  go to state 1022


State 840

  243 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 243 (expr_pipe)


State 841

  428 expr: expr "is" "type" . '<' $@24 type_declaration_no_options '>' $@25

    '<'  shift, and go to state 1023


State 842

  467 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1024


State 843

  430 expr: expr "is" "name" .

    $default  reduce using rule 430 (expr)


State 844

  429 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 429 (expr)


State 845

  434 expr: expr "as" "type" . '<' $@26 type_declaration '>' $@27

    '<'  shift, and go to state 1025


State 846

  465 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1026


State 847

  431 expr: expr "as" "name" .

    $default  reduce using rule 431 (expr)


State 848

  435 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 435 (expr)


State 849

  334 expr_assign: expr "+=" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 334 (expr_assign)


State 850

  335 expr_assign: expr "-=" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 335 (expr_assign)


State 851

  337 expr_assign: expr "/=" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 337 (expr_assign)


State 852

  336 expr_assign: expr "*=" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 336 (expr_assign)


State 853

  338 expr_assign: expr "%=" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 338 (expr_assign)


State 854

  328 expr_assign: expr "&=" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 328 (expr_assign)


State 855

  329 expr_assign: expr "|=" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 329 (expr_assign)


State 856

  330 expr_assign: expr "^=" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 330 (expr_assign)


State 857

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  381     | expr "<<" expr .
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 660
    "as"  shift, and go to state 661
    "++"  shift, and go to state 672
    "--"  shift, and go to state 673
    "->"  shift, and go to state 680
    "??"  shift, and go to state 682
    "?."  shift, and go to state 683
    "?["  shift, and go to state 684
    "<|"  shift, and go to state 685
    "|>"  shift, and go to state 686
    '-'   shift, and go to state 706
    '+'   shift, and go to state 707
    '*'   shift, and go to state 708
    '/'   shift, and go to state 709
    '%'   shift, and go to state 710
    '.'   shift, and go to state 711
    '['   shift, and go to state 712

    $default  reduce using rule 381 (expr)


State 858

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  382     | expr ">>" expr .
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 660
    "as"  shift, and go to state 661
    "++"  shift, and go to state 672
    "--"  shift, and go to state 673
    "->"  shift, and go to state 680
    "??"  shift, and go to state 682
    "?."  shift, and go to state 683
    "?["  shift, and go to state 684
    "<|"  shift, and go to state 685
    "|>"  shift, and go to state 686
    '-'   shift, and go to state 706
    '+'   shift, and go to state 707
    '*'   shift, and go to state 708
    '/'   shift, and go to state 709
    '%'   shift, and go to state 710
    '.'   shift, and go to state 711
    '['   shift, and go to state 712

    $default  reduce using rule 382 (expr)


State 859

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  394     | expr "<=" expr .
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 394 (expr)


State 860

  339 expr_assign: expr "<<=" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 339 (expr_assign)


State 861

  340 expr_assign: expr ">>=" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 340 (expr_assign)


State 862

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  395     | expr ">=" expr .
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 395 (expr)


State 863

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  392     | expr "==" expr .
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 392 (expr)


State 864

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  393     | expr "!=" expr .
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 393 (expr)


State 865

  351 expr_method_call: expr "->" "name" . '(' ')'
  352                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1027


State 866

  348 expr_assign_pipe: expr "<-" "$ <|" . expr_block

    '$'  shift, and go to state 467
    '@'  shift, and go to state 616
    '{'  shift, and go to state 276

    expression_block  go to state 483
    block_or_lambda   go to state 503
    expr_block        go to state 1028


State 867

  346 expr_assign_pipe: expr "<-" "@ <|" . expr_block

    '$'  shift, and go to state 467
    '@'  shift, and go to state 616
    '{'  shift, and go to state 276

    expression_block  go to state 483
    block_or_lambda   go to state 503
    expr_block        go to state 1029


State 868

  347 expr_assign_pipe: expr "<-" "@@ <|" . expr_block

    '$'  shift, and go to state 467
    '@'  shift, and go to state 616
    '{'  shift, and go to state 276

    expression_block  go to state 483
    block_or_lambda   go to state 503
    expr_block        go to state 1030


State 869

  326 expr_assign: expr "<-" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 326 (expr_assign)


State 870

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  424     | expr "??" expr .
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 660
    "as"  shift, and go to state 661
    "++"  shift, and go to state 672
    "--"  shift, and go to state 673
    "->"  shift, and go to state 680
    "??"  shift, and go to state 682
    "?."  shift, and go to state 683
    "?["  shift, and go to state 684
    "<|"  shift, and go to state 685
    "|>"  shift, and go to state 686
    '.'   shift, and go to state 711
    '['   shift, and go to state 712

    $default  reduce using rule 424 (expr)


State 871

  462 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1031


State 872

  412 expr: expr "?." "name" .

    $default  reduce using rule 412 (expr)


State 873

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  410     | expr "?[" expr . ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ']'    shift, and go to state 1032


State 874

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  448     | expr "<|" expr .
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 680
    "?."  shift, and go to state 683
    "?["  shift, and go to state 684
    '.'   shift, and go to state 711
    '['   shift, and go to state 712

    $default  reduce using rule 448 (expr)


State 875

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  449     | expr "|>" expr .
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 680
    "?."  shift, and go to state 683
    "?["  shift, and go to state 684
    '.'   shift, and go to state 711
    '['   shift, and go to state 712

    $default  reduce using rule 449 (expr)


State 876

  327 expr_assign: expr ":=" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 327 (expr_assign)


State 877

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  383     | expr "<<<" expr .
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 660
    "as"  shift, and go to state 661
    "++"  shift, and go to state 672
    "--"  shift, and go to state 673
    "->"  shift, and go to state 680
    "??"  shift, and go to state 682
    "?."  shift, and go to state 683
    "?["  shift, and go to state 684
    "<|"  shift, and go to state 685
    "|>"  shift, and go to state 686
    '-'   shift, and go to state 706
    '+'   shift, and go to state 707
    '*'   shift, and go to state 708
    '/'   shift, and go to state 709
    '%'   shift, and go to state 710
    '.'   shift, and go to state 711
    '['   shift, and go to state 712

    $default  reduce using rule 383 (expr)


State 878

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  384     | expr ">>>" expr .
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 660
    "as"  shift, and go to state 661
    "++"  shift, and go to state 672
    "--"  shift, and go to state 673
    "->"  shift, and go to state 680
    "??"  shift, and go to state 682
    "?."  shift, and go to state 683
    "?["  shift, and go to state 684
    "<|"  shift, and go to state 685
    "|>"  shift, and go to state 686
    '-'   shift, and go to state 706
    '+'   shift, and go to state 707
    '*'   shift, and go to state 708
    '/'   shift, and go to state 709
    '%'   shift, and go to state 710
    '.'   shift, and go to state 711
    '['   shift, and go to state 712

    $default  reduce using rule 384 (expr)


State 879

  341 expr_assign: expr "<<<=" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 341 (expr_assign)


State 880

  342 expr_assign: expr ">>>=" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 342 (expr_assign)


State 881

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  399     | expr "&&" expr .
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 399 (expr)


State 882

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  400     | expr "||" expr .
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "^^"   shift, and go to state 694
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 400 (expr)


State 883

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  401     | expr "^^" expr .
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 401 (expr)


State 884

  331 expr_assign: expr "&&=" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 331 (expr_assign)


State 885

  332 expr_assign: expr "||=" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 332 (expr_assign)


State 886

  333 expr_assign: expr "^^=" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 333 (expr_assign)


State 887

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  402     | expr ".." expr .
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    ".."  error (nonassociative)

    $default  reduce using rule 402 (expr)


State 888

  345 expr_assign_pipe: expr '=' "$ <|" . expr_block

    '$'  shift, and go to state 467
    '@'  shift, and go to state 616
    '{'  shift, and go to state 276

    expression_block  go to state 483
    block_or_lambda   go to state 503
    expr_block        go to state 1033


State 889

  343 expr_assign_pipe: expr '=' "@ <|" . expr_block

    '$'  shift, and go to state 467
    '@'  shift, and go to state 616
    '{'  shift, and go to state 276

    expression_block  go to state 483
    block_or_lambda   go to state 503
    expr_block        go to state 1034


State 890

  344 expr_assign_pipe: expr '=' "@@ <|" . expr_block

    '$'  shift, and go to state 467
    '@'  shift, and go to state 616
    '{'  shift, and go to state 276

    expression_block  go to state 483
    block_or_lambda   go to state 503
    expr_block        go to state 1035


State 891

  325 expr_assign: expr '=' expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 325 (expr_assign)


State 892

  436 expr: expr '?' "as" . "name"
  439     | expr '?' "as" . "type" '<' $@28 type_declaration '>' $@29
  440     | expr '?' "as" . basic_type_declaration
  466 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1036
    "bool"      shift, and go to state 300
    "void"      shift, and go to state 301
    "string"    shift, and go to state 302
    "int"       shift, and go to state 304
    "int2"      shift, and go to state 305
    "int3"      shift, and go to state 306
    "int4"      shift, and go to state 307
    "uint"      shift, and go to state 308
    "bitfield"  shift, and go to state 434
    "uint2"     shift, and go to state 310
    "uint3"     shift, and go to state 311
    "uint4"     shift, and go to state 312
    "float"     shift, and go to state 313
    "float2"    shift, and go to state 314
    "float3"    shift, and go to state 315
    "float4"    shift, and go to state 316
    "range"     shift, and go to state 317
    "urange"    shift, and go to state 318
    "range64"   shift, and go to state 319
    "urange64"  shift, and go to state 320
    "int64"     shift, and go to state 322
    "uint64"    shift, and go to state 323
    "double"    shift, and go to state 324
    "int8"      shift, and go to state 327
    "uint8"     shift, and go to state 328
    "int16"     shift, and go to state 329
    "uint16"    shift, and go to state 330
    "$f"        shift, and go to state 1037
    "name"      shift, and go to state 1038

    basic_type_declaration  go to state 1039


State 893

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  425     | expr '?' expr . ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    ':'    shift, and go to state 1040
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712


State 894

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  397     | expr '|' expr .
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 397 (expr)


State 895

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  398     | expr '^' expr .
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 398 (expr)


State 896

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  396     | expr '&' expr .
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 396 (expr)


State 897

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  390     | expr '<' expr .
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 390 (expr)


State 898

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  391     | expr '>' expr .
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 391 (expr)


State 899

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  386     | expr '-' expr .
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 660
    "as"  shift, and go to state 661
    "++"  shift, and go to state 672
    "--"  shift, and go to state 673
    "->"  shift, and go to state 680
    "??"  shift, and go to state 682
    "?."  shift, and go to state 683
    "?["  shift, and go to state 684
    "<|"  shift, and go to state 685
    "|>"  shift, and go to state 686
    '*'   shift, and go to state 708
    '/'   shift, and go to state 709
    '%'   shift, and go to state 710
    '.'   shift, and go to state 711
    '['   shift, and go to state 712

    $default  reduce using rule 386 (expr)


State 900

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  385     | expr '+' expr .
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 660
    "as"  shift, and go to state 661
    "++"  shift, and go to state 672
    "--"  shift, and go to state 673
    "->"  shift, and go to state 680
    "??"  shift, and go to state 682
    "?."  shift, and go to state 683
    "?["  shift, and go to state 684
    "<|"  shift, and go to state 685
    "|>"  shift, and go to state 686
    '*'   shift, and go to state 708
    '/'   shift, and go to state 709
    '%'   shift, and go to state 710
    '.'   shift, and go to state 711
    '['   shift, and go to state 712

    $default  reduce using rule 385 (expr)


State 901

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  387     | expr '*' expr .
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 660
    "as"  shift, and go to state 661
    "++"  shift, and go to state 672
    "--"  shift, and go to state 673
    "->"  shift, and go to state 680
    "??"  shift, and go to state 682
    "?."  shift, and go to state 683
    "?["  shift, and go to state 684
    "<|"  shift, and go to state 685
    "|>"  shift, and go to state 686
    '.'   shift, and go to state 711
    '['   shift, and go to state 712

    $default  reduce using rule 387 (expr)


State 902

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  388     | expr '/' expr .
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 660
    "as"  shift, and go to state 661
    "++"  shift, and go to state 672
    "--"  shift, and go to state 673
    "->"  shift, and go to state 680
    "??"  shift, and go to state 682
    "?."  shift, and go to state 683
    "?["  shift, and go to state 684
    "<|"  shift, and go to state 685
    "|>"  shift, and go to state 686
    '.'   shift, and go to state 711
    '['   shift, and go to state 712

    $default  reduce using rule 388 (expr)


State 903

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  389     | expr '%' expr .
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 660
    "as"  shift, and go to state 661
    "++"  shift, and go to state 672
    "--"  shift, and go to state 673
    "->"  shift, and go to state 680
    "??"  shift, and go to state 682
    "?."  shift, and go to state 683
    "?["  shift, and go to state 684
    "<|"  shift, and go to state 685
    "|>"  shift, and go to state 686
    '.'   shift, and go to state 711
    '['   shift, and go to state 712

    $default  reduce using rule 389 (expr)


State 904

  413 expr: expr '.' "?." . "name"
  464 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1041
    "name"  shift, and go to state 1042


State 905

  411 expr: expr '.' "?[" . expr ']'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1043
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 906

  461 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1044


State 907

  362 expr_field: expr '.' "name" .

    $default  reduce using rule 362 (expr_field)


State 908

  363 expr_field: expr '.' '.' . "name"
  463 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1045
    "name"  shift, and go to state 1046


State 909

  409 expr: expr '.' '[' . expr ']'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1047
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 910

  366 expr_field: expr '.' $@22 . error $@23

    error  shift, and go to state 1048


State 911

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  408     | expr '[' expr . ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ']'    shift, and go to state 1049


State 912

  417 expr: basic_type_declaration '(' ')' .

    $default  reduce using rule 417 (expr)


State 913

  300 expr_list: expr_list . ',' expr
  418 expr: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 771
    ')'  shift, and go to state 1050


State 914

  562 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@39 enum_list $@40 . '}'

    '}'  shift, and go to state 1051


State 915

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  542 enum_list: enum_list "name" '=' expr . ';'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ';'    shift, and go to state 1052


State 916

  113 annotation_list: annotation_list . ',' annotation_declaration
  115 optional_annotation_list: '[' annotation_list . ']'
  489 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' ';'

    ','  shift, and go to state 102
    ']'  shift, and go to state 1053


State 917

  486 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@31 function_declaration_header ';'
  488                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@32 function_declaration_header expression_block

    "public"   shift, and go to state 1054
    "private"  shift, and go to state 1055

    $default  reduce using rule 476 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1056


State 918

  481 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1057

    $default  reduce using rule 479 (optional_static_member_variable)

    optional_static_member_variable  go to state 1058


State 919

  484 struct_variable_declaration_list: struct_variable_declaration_list $@30 structure_variable_declaration . ';'

    ';'  shift, and go to state 1059


State 920

  522 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 522 (let_variable_name_with_pos_list)


State 921

  525 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 525 (let_variable_declaration)


State 922

  324 expr_assign: expr .
  325            | expr . '=' expr
  326            | expr . "<-" expr
  327            | expr . ":=" expr
  328            | expr . "&=" expr
  329            | expr . "|=" expr
  330            | expr . "^=" expr
  331            | expr . "&&=" expr
  332            | expr . "||=" expr
  333            | expr . "^^=" expr
  334            | expr . "+=" expr
  335            | expr . "-=" expr
  336            | expr . "*=" expr
  337            | expr . "/=" expr
  338            | expr . "%=" expr
  339            | expr . "<<=" expr
  340            | expr . ">>=" expr
  341            | expr . "<<<=" expr
  342            | expr . ">>>=" expr
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  524 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 660
    "as"    shift, and go to state 661
    "+="    shift, and go to state 662
    "-="    shift, and go to state 663
    "/="    shift, and go to state 664
    "*="    shift, and go to state 665
    "%="    shift, and go to state 666
    "&="    shift, and go to state 667
    "|="    shift, and go to state 668
    "^="    shift, and go to state 669
    "<<"    shift, and go to state 670
    ">>"    shift, and go to state 671
    "++"    shift, and go to state 672
    "--"    shift, and go to state 673
    "<="    shift, and go to state 674
    "<<="   shift, and go to state 675
    ">>="   shift, and go to state 676
    ">="    shift, and go to state 677
    "=="    shift, and go to state 678
    "!="    shift, and go to state 679
    "->"    shift, and go to state 680
    "<-"    shift, and go to state 772
    "??"    shift, and go to state 682
    "?."    shift, and go to state 683
    "?["    shift, and go to state 684
    "<|"    shift, and go to state 685
    "|>"    shift, and go to state 686
    ":="    shift, and go to state 687
    "<<<"   shift, and go to state 688
    ">>>"   shift, and go to state 689
    "<<<="  shift, and go to state 690
    ">>>="  shift, and go to state 691
    "&&"    shift, and go to state 692
    "||"    shift, and go to state 693
    "^^"    shift, and go to state 694
    "&&="   shift, and go to state 695
    "||="   shift, and go to state 696
    "^^="   shift, and go to state 697
    ".."    shift, and go to state 698
    '='     shift, and go to state 773
    '?'     shift, and go to state 700
    '|'     shift, and go to state 701
    '^'     shift, and go to state 702
    '&'     shift, and go to state 703
    '<'     shift, and go to state 704
    '>'     shift, and go to state 705
    '-'     shift, and go to state 706
    '+'     shift, and go to state 707
    '*'     shift, and go to state 708
    '/'     shift, and go to state 709
    '%'     shift, and go to state 710
    '.'     shift, and go to state 711
    '['     shift, and go to state 712
    ';'     shift, and go to state 1060

    $default  reduce using rule 324 (expr_assign)


State 923

  526 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 526 (let_variable_declaration)


State 924

  652 type_declaration_no_options: "array" '<' $@47 type_declaration '>' . $@48

    $default  reduce using rule 651 ($@48)

    $@48  go to state 1061


State 925

  655 type_declaration_no_options: "table" '<' $@49 table_type_pair '>' . $@50

    $default  reduce using rule 654 ($@50)

    $@50  go to state 1062


State 926

  627 table_type_pair: type_declaration ';' . type_declaration

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 339
    type_declaration             go to state 1063


State 927

  658 type_declaration_no_options: "iterator" '<' $@51 type_declaration '>' . $@52

    $default  reduce using rule 657 ($@52)

    $@52  go to state 1064


State 928

  648 type_declaration_no_options: "smart_ptr" '<' $@45 type_declaration '>' . $@46

    $default  reduce using rule 647 ($@46)

    $@46  go to state 1065


State 929

  625 bitfield_type_declaration: "bitfield" '<' $@43 bitfield_bits '>' . $@44

    $default  reduce using rule 624 ($@44)

    $@44  go to state 1066


State 930

  619 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 1067


State 931

  662 type_declaration_no_options: "block" '<' $@53 type_declaration '>' . $@54

    $default  reduce using rule 661 ($@54)

    $@54  go to state 1068


State 932

  665 type_declaration_no_options: "block" '<' $@55 optional_function_argument_list optional_function_type . '>' $@56

    '>'  shift, and go to state 1069


State 933

  669 type_declaration_no_options: "function" '<' $@57 type_declaration '>' . $@58

    $default  reduce using rule 668 ($@58)

    $@58  go to state 1070


State 934

  672 type_declaration_no_options: "function" '<' $@59 optional_function_argument_list optional_function_type . '>' $@60

    '>'  shift, and go to state 1071


State 935

  676 type_declaration_no_options: "lambda" '<' $@61 type_declaration '>' . $@62

    $default  reduce using rule 675 ($@62)

    $@62  go to state 1072


State 936

  679 type_declaration_no_options: "lambda" '<' $@63 optional_function_argument_list optional_function_type . '>' $@64

    '>'  shift, and go to state 1073


State 937

  496 tuple_type: "name" ':' . type_declaration

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 339
    type_declaration             go to state 1074


State 938

  682 type_declaration_no_options: "tuple" '<' $@65 tuple_type_list '>' . $@66

    $default  reduce using rule 681 ($@66)

    $@66  go to state 1075


State 939

  498 tuple_type_list: tuple_type_list ';' . tuple_type

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 742

    name_in_namespace            go to state 334
    tuple_type                   go to state 1076
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 339
    type_declaration             go to state 745


State 940

  685 type_declaration_no_options: "variant" '<' $@67 variant_type_list '>' . $@68

    $default  reduce using rule 684 ($@68)

    $@68  go to state 1077


State 941

  501 variant_type_list: variant_type_list ';' . variant_type

    "name"  shift, and go to state 566

    variant_type  go to state 1078


State 942

  499 variant_type: "name" ':' type_declaration .
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    '|'  shift, and go to state 393

    $default  reduce using rule 499 (variant_type)


State 943

  577 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 577 (variable_name_with_pos_list)


State 944

  580 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1079


State 945

  510 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1080
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 946

   73 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list . ';' expression_block
  300 expr_list: expr_list . ',' expr

    ','  shift, and go to state 771
    ';'  shift, and go to state 1081


State 947

  254 new_type_declaration: '<' $@8 type_declaration . '>' $@9
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    '|'  shift, and go to state 393
    '>'  shift, and go to state 1082


State 948

  257 expr_new: "new" new_type_declaration '(' ')' .

    $default  reduce using rule 257 (expr_new)


State 949

  258 expr_new: "new" new_type_declaration '(' expr_list . ')'
  300 expr_list: expr_list . ',' expr

    ','  shift, and go to state 771
    ')'  shift, and go to state 1083


State 950

  297 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  298               | "typeinfo" '(' name_in_namespace '<' . "name" ';' "name" '>' expr ')'

    "name"  shift, and go to state 1084


State 951

  296 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ')'    shift, and go to state 1085


State 952

  295 expr_type_decl: "type" '<' $@16 type_declaration . '>' $@17
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    '|'  shift, and go to state 393
    '>'  shift, and go to state 1086


State 953

  300 expr_list: expr_list ',' expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 300 (expr_list)


State 954

  273 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 273 (expression_try_catch)


State 955

  420 expr: "deref" '(' expr ')' .

    $default  reduce using rule 420 (expr)


State 956

   78 expression_with_alias: "assume" "name" '=' $@4 . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1087
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 957

  286 expr_cast: "cast" '<' $@10 type_declaration_no_options . '>' $@11 expr
  632 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  633                            | type_declaration_no_options . '[' ']'
  634                            | type_declaration_no_options . '-' '[' ']'
  635                            | type_declaration_no_options . "explicit"
  636                            | type_declaration_no_options . "const"
  637                            | type_declaration_no_options . '-' "const"
  638                            | type_declaration_no_options . '&'
  639                            | type_declaration_no_options . '-' '&'
  640                            | type_declaration_no_options . '#'
  641                            | type_declaration_no_options . "implicit"
  642                            | type_declaration_no_options . '-' '#'
  643                            | type_declaration_no_options . "==" "const"
  644                            | type_declaration_no_options . "==" '&'
  645                            | type_declaration_no_options . '?'
  649                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 383
    "implicit"  shift, and go to state 384
    "explicit"  shift, and go to state 385
    "=="        shift, and go to state 386
    "??"        shift, and go to state 387
    '?'         shift, and go to state 388
    '&'         shift, and go to state 389
    '>'         shift, and go to state 1088
    '-'         shift, and go to state 390
    '['         shift, and go to state 391
    '#'         shift, and go to state 392


State 958

  289 expr_cast: "upcast" '<' $@12 type_declaration_no_options . '>' $@13 expr
  632 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  633                            | type_declaration_no_options . '[' ']'
  634                            | type_declaration_no_options . '-' '[' ']'
  635                            | type_declaration_no_options . "explicit"
  636                            | type_declaration_no_options . "const"
  637                            | type_declaration_no_options . '-' "const"
  638                            | type_declaration_no_options . '&'
  639                            | type_declaration_no_options . '-' '&'
  640                            | type_declaration_no_options . '#'
  641                            | type_declaration_no_options . "implicit"
  642                            | type_declaration_no_options . '-' '#'
  643                            | type_declaration_no_options . "==" "const"
  644                            | type_declaration_no_options . "==" '&'
  645                            | type_declaration_no_options . '?'
  649                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 383
    "implicit"  shift, and go to state 384
    "explicit"  shift, and go to state 385
    "=="        shift, and go to state 386
    "??"        shift, and go to state 387
    '?'         shift, and go to state 388
    '&'         shift, and go to state 389
    '>'         shift, and go to state 1089
    '-'         shift, and go to state 390
    '['         shift, and go to state 391
    '#'         shift, and go to state 392


State 959

  421 expr: "addr" '(' expr ')' .

    $default  reduce using rule 421 (expr)


State 960

  292 expr_cast: "reinterpret" '<' $@14 type_declaration_no_options . '>' $@15 expr
  632 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  633                            | type_declaration_no_options . '[' ']'
  634                            | type_declaration_no_options . '-' '[' ']'
  635                            | type_declaration_no_options . "explicit"
  636                            | type_declaration_no_options . "const"
  637                            | type_declaration_no_options . '-' "const"
  638                            | type_declaration_no_options . '&'
  639                            | type_declaration_no_options . '-' '&'
  640                            | type_declaration_no_options . '#'
  641                            | type_declaration_no_options . "implicit"
  642                            | type_declaration_no_options . '-' '#'
  643                            | type_declaration_no_options . "==" "const"
  644                            | type_declaration_no_options . "==" '&'
  645                            | type_declaration_no_options . '?'
  649                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 383
    "implicit"  shift, and go to state 384
    "explicit"  shift, and go to state 385
    "=="        shift, and go to state 386
    "??"        shift, and go to state 387
    '?'         shift, and go to state 388
    '&'         shift, and go to state 389
    '>'         shift, and go to state 1090
    '-'         shift, and go to state 390
    '['         shift, and go to state 391
    '#'         shift, and go to state 392


State 961

  451 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 451 (expr)


State 962

  422 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  423     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "[["  shift, and go to state 838

    $default  reduce using rule 313 (optional_capture_list)

    optional_capture_list  go to state 1091


State 963

  453 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 453 (expr_mtag)


State 964

  454 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 454 (expr_mtag)


State 965

  455 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 455 (expr_mtag)


State 966

  456 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 456 (expr_mtag)


State 967

  457 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 457 (expr_mtag)


State 968

  459 expr_mtag: "$c" '(' expr ')' . '(' ')'
  460          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1092


State 969

  747 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where ']' ']'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    expr_list               go to state 1093
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 834
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 970

  714 optional_block: "where" expr_block .

    $default  reduce using rule 714 (optional_block)


State 971

  707 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  708                   | "$f" '(' . expr ')' ":=" expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1094
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 972

  704 make_struct_fields: "name" ":=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1095
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 973

  703 make_struct_fields: "name" copy_or_move . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1096
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 974

  729 make_struct_decl: "[[" type_declaration_no_options '(' ')' . optional_block optional_trailing_delim_sqr_sqr
  730                 | "[[" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 797
    "$f"     shift, and go to state 798
    "name"   shift, and go to state 1010

    $default  reduce using rule 713 (optional_block)

    make_struct_fields  go to state 803
    make_struct_dim     go to state 1097
    optional_block      go to state 1098


State 975

  734 make_tuple: expr "=>" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1099
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 976

  705 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  706                   | make_struct_fields ',' . "name" ":=" expr
  709                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  710                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1100
    "name"  shift, and go to state 1101


State 977

  712 make_struct_dim: make_struct_dim ';' . make_struct_fields

    "$f"    shift, and go to state 798
    "name"  shift, and go to state 1010

    make_struct_fields  go to state 1102


State 978

  727 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 979
    ",]]"  shift, and go to state 980
    ']'    shift, and go to state 981

    optional_trailing_delim_sqr_sqr  go to state 1103


State 979

  722 optional_trailing_delim_sqr_sqr: ";]]" .

    $default  reduce using rule 722 (optional_trailing_delim_sqr_sqr)


State 980

  723 optional_trailing_delim_sqr_sqr: ",]]" .

    $default  reduce using rule 723 (optional_trailing_delim_sqr_sqr)


State 981

  721 optional_trailing_delim_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1104


State 982

  728 make_struct_decl: "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 728 (make_struct_decl)


State 983

  735 make_tuple: make_tuple ',' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1105
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 984

  720 optional_trailing_semicolon_sqr_sqr: ";]]" .

    $default  reduce using rule 720 (optional_trailing_semicolon_sqr_sqr)


State 985

  719 optional_trailing_semicolon_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1106


State 986

  739 make_dim: make_dim ';' . make_tuple

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 802
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_tuple              go to state 1107
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 987

  740 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr .

    $default  reduce using rule 740 (make_dim_decl)


State 988

  748 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where '}' ']'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    expr_list               go to state 1108
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 834
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 989

  732 make_struct_decl: "[{" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "$f"    shift, and go to state 798
    "name"  shift, and go to state 1010

    make_struct_fields  go to state 803
    make_struct_dim     go to state 1109


State 990

  731 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    ";}]"  shift, and go to state 1110
    ",}]"  shift, and go to state 1111
    '}'    shift, and go to state 1112

    optional_trailing_delim_cur_sqr  go to state 1113


State 991

  718 optional_trailing_semicolon_cur_sqr: ";}]" .

    $default  reduce using rule 718 (optional_trailing_semicolon_cur_sqr)


State 992

  717 optional_trailing_semicolon_cur_sqr: '}' . ']'

    ']'  shift, and go to state 1114


State 993

  741 make_dim_decl: "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr .

    $default  reduce using rule 741 (make_dim_decl)


State 994

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  736 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 736 (make_map_tuple)


State 995

  743 make_table: make_table ';' make_map_tuple .

    $default  reduce using rule 743 (make_table)


State 996

  715 optional_trailing_semicolon_cur_cur: '}' '}' .

    $default  reduce using rule 715 (optional_trailing_semicolon_cur_cur)


State 997

  242 expression_keyword: "keyword" '<' $@6 type_declaration_no_options . '>' $@7 expr
  632 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  633                            | type_declaration_no_options . '[' ']'
  634                            | type_declaration_no_options . '-' '[' ']'
  635                            | type_declaration_no_options . "explicit"
  636                            | type_declaration_no_options . "const"
  637                            | type_declaration_no_options . '-' "const"
  638                            | type_declaration_no_options . '&'
  639                            | type_declaration_no_options . '-' '&'
  640                            | type_declaration_no_options . '#'
  641                            | type_declaration_no_options . "implicit"
  642                            | type_declaration_no_options . '-' '#'
  643                            | type_declaration_no_options . "==" "const"
  644                            | type_declaration_no_options . "==" '&'
  645                            | type_declaration_no_options . '?'
  649                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 383
    "implicit"  shift, and go to state 384
    "explicit"  shift, and go to state 385
    "=="        shift, and go to state 386
    "??"        shift, and go to state 387
    '?'         shift, and go to state 388
    '&'         shift, and go to state 389
    '>'         shift, and go to state 1115
    '-'         shift, and go to state 390
    '['         shift, and go to state 391
    '#'         shift, and go to state 392


State 998

   29 string_builder_body: string_builder_body "{" expr . "}"
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    "}"    shift, and go to state 1116
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712


State 999

  354 func_addr_name: "$i" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1117
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1000

  468 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1118
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1001

  358 func_addr_expr: '@' '@' '<' $@18 . type_declaration_no_options '>' $@19 func_addr_name

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 1119


State 1002

  361 func_addr_expr: '@' '@' '<' $@20 . optional_function_argument_list optional_function_type '>' $@21 func_addr_name

    '('  shift, and go to state 274

    $default  reduce using rule 116 (optional_function_argument_list)

    optional_function_argument_list  go to state 1120


State 1003

  214 expression_block: '{' expressions '}' "finally" '{' expressions . '}'
  237 expressions: expressions . expression_any
  238            | expressions . error

    error                             shift, and go to state 407
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 408
    "if"                              shift, and go to state 409
    "static_if"                       shift, and go to state 410
    "for"                             shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "return"                          shift, and go to state 417
    "null"                            shift, and go to state 418
    "break"                           shift, and go to state 419
    "try"                             shift, and go to state 420
    "delete"                          shift, and go to state 421
    "deref"                           shift, and go to state 422
    "with"                            shift, and go to state 423
    "assume"                          shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 427
    "continue"                        shift, and go to state 428
    "pass"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "label"                           shift, and go to state 431
    "goto"                            shift, and go to state 432
    "unsafe"                          shift, and go to state 433
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "yield"                           shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "$ <|"                            shift, and go to state 439
    "@ <|"                            shift, and go to state 440
    "@@ <|"                           shift, and go to state 441
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 459
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    ';'                               shift, and go to state 469
    '{'                               shift, and go to state 276
    '}'                               shift, and go to state 1121

    string_builder             go to state 471
    expr_reader                go to state 472
    expression_label           go to state 473
    expression_goto            go to state 474
    if_or_static_if            go to state 475
    expression_if_one_liner    go to state 476
    expression_if_then_else    go to state 477
    expression_for_loop        go to state 478
    expression_unsafe          go to state 479
    expression_while_loop      go to state 480
    expression_with            go to state 481
    expression_with_alias      go to state 482
    expression_block           go to state 483
    expression_any             go to state 484
    expr_keyword               go to state 485
    expression_keyword         go to state 486
    expr_pipe                  go to state 487
    name_in_namespace          go to state 488
    expression_delete          go to state 489
    expr_new                   go to state 490
    expression_break           go to state 491
    expression_continue        go to state 492
    expression_return_no_pipe  go to state 493
    expression_return          go to state 494
    expression_yield_no_pipe   go to state 495
    expression_yield           go to state 496
    expression_try_catch       go to state 497
    kwd_let                    go to state 498
    expression_let             go to state 499
    expr_cast                  go to state 500
    expr_type_decl             go to state 501
    expr_type_info             go to state 502
    block_or_lambda            go to state 503
    expr_block                 go to state 504
    expr_numeric_const         go to state 505
    expr_assign                go to state 506
    expr_assign_pipe           go to state 507
    expr_named_call            go to state 508
    expr_method_call           go to state 509
    func_addr_expr             go to state 510
    expr_field                 go to state 511
    expr                       go to state 512
    expr_mtag                  go to state 513
    basic_type_declaration     go to state 514
    make_decl                  go to state 515
    make_struct_decl           go to state 516
    make_dim_decl              go to state 517
    make_table_decl            go to state 518
    array_comprehension        go to state 519


State 1004

   58 expression_else: "else" . expression_block

    '{'  shift, and go to state 276

    expression_block  go to state 1122


State 1005

   55 elif_or_static_elif: "elif" .

    $default  reduce using rule 55 (elif_or_static_elif)


State 1006

   56 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 56 (elif_or_static_elif)


State 1007

   59 expression_else: elif_or_static_elif . expr expression_block expression_else

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1123
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1008

   70 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 70 (expression_if_then_else)


State 1009

   72 expression_if_then_else: expression_if_one_liner "if" $@3 expr . expression_else_one_liner ';'
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1124
    "is"    shift, and go to state 660
    "as"    shift, and go to state 661
    "<<"    shift, and go to state 670
    ">>"    shift, and go to state 671
    "++"    shift, and go to state 672
    "--"    shift, and go to state 673
    "<="    shift, and go to state 674
    ">="    shift, and go to state 677
    "=="    shift, and go to state 678
    "!="    shift, and go to state 679
    "->"    shift, and go to state 680
    "??"    shift, and go to state 682
    "?."    shift, and go to state 683
    "?["    shift, and go to state 684
    "<|"    shift, and go to state 685
    "|>"    shift, and go to state 686
    "<<<"   shift, and go to state 688
    ">>>"   shift, and go to state 689
    "&&"    shift, and go to state 692
    "||"    shift, and go to state 693
    "^^"    shift, and go to state 694
    ".."    shift, and go to state 698
    '?'     shift, and go to state 700
    '|'     shift, and go to state 701
    '^'     shift, and go to state 702
    '&'     shift, and go to state 703
    '<'     shift, and go to state 704
    '>'     shift, and go to state 705
    '-'     shift, and go to state 706
    '+'     shift, and go to state 707
    '*'     shift, and go to state 708
    '/'     shift, and go to state 709
    '%'     shift, and go to state 710
    '.'     shift, and go to state 711
    '['     shift, and go to state 712

    $default  reduce using rule 62 (expression_else_one_liner)

    expression_else_one_liner  go to state 1125


State 1010

  703 make_struct_fields: "name" . copy_or_move expr
  704                   | "name" . ":=" expr

    "<-"  shift, and go to state 574
    ":="  shift, and go to state 972
    '='   shift, and go to state 576

    copy_or_move  go to state 973


State 1011

  349 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  705 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  706                   | make_struct_fields . ',' "name" ":=" expr
  709                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  710                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 976
    ']'  shift, and go to state 1126


State 1012

  300 expr_list: expr_list ',' . expr
  350 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '['                               shift, and go to state 1127
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 953
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1013

  416 expr: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 416 (expr)


State 1014

  278 tuple_expansion: "name" .

    $default  reduce using rule 278 (tuple_expansion)


State 1015

  279 tuple_expansion: tuple_expansion . ',' "name"
  280 tuple_expansion_variable_declaration: "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  281                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr ';'

    ','  shift, and go to state 1128
    ']'  shift, and go to state 1129


State 1016

  309 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1130


State 1017

  310 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1131


State 1018

  308 capture_entry: '=' . "name"

    "name"  shift, and go to state 1132


State 1019

  307 capture_entry: '&' . "name"

    "name"  shift, and go to state 1133


State 1020

  311 capture_list: capture_entry .

    $default  reduce using rule 311 (capture_list)


State 1021

  312 capture_list: capture_list . ',' capture_entry
  314 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 1134
    ']'  shift, and go to state 1135


State 1022

  316 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 355

    $default  reduce using rule 119 (optional_function_type)

    optional_function_type  go to state 1136


State 1023

  428 expr: expr "is" "type" '<' . $@24 type_declaration_no_options '>' $@25

    $default  reduce using rule 426 ($@24)

    $@24  go to state 1137


State 1024

  467 expr_mtag: expr "is" "$f" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1138
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1025

  434 expr: expr "as" "type" '<' . $@26 type_declaration '>' $@27

    $default  reduce using rule 432 ($@26)

    $@26  go to state 1139


State 1026

  465 expr_mtag: expr "as" "$f" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1140
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1027

  351 expr_method_call: expr "->" "name" '(' . ')'
  352                 | expr "->" "name" '(' . expr_list ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    ')'                               shift, and go to state 1141
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    expr_list               go to state 1142
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 834
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1028

  348 expr_assign_pipe: expr "<-" "$ <|" expr_block .

    $default  reduce using rule 348 (expr_assign_pipe)


State 1029

  346 expr_assign_pipe: expr "<-" "@ <|" expr_block .

    $default  reduce using rule 346 (expr_assign_pipe)


State 1030

  347 expr_assign_pipe: expr "<-" "@@ <|" expr_block .

    $default  reduce using rule 347 (expr_assign_pipe)


State 1031

  462 expr_mtag: expr "?." "$f" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1143
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1032

  410 expr: expr "?[" expr ']' .

    $default  reduce using rule 410 (expr)


State 1033

  345 expr_assign_pipe: expr '=' "$ <|" expr_block .

    $default  reduce using rule 345 (expr_assign_pipe)


State 1034

  343 expr_assign_pipe: expr '=' "@ <|" expr_block .

    $default  reduce using rule 343 (expr_assign_pipe)


State 1035

  344 expr_assign_pipe: expr '=' "@@ <|" expr_block .

    $default  reduce using rule 344 (expr_assign_pipe)


State 1036

  439 expr: expr '?' "as" "type" . '<' $@28 type_declaration '>' $@29

    '<'  shift, and go to state 1144


State 1037

  466 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1145


State 1038

  436 expr: expr '?' "as" "name" .

    $default  reduce using rule 436 (expr)


State 1039

  440 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 440 (expr)


State 1040

  425 expr: expr '?' expr ':' . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1146
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1041

  464 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1147


State 1042

  413 expr: expr '.' "?." "name" .

    $default  reduce using rule 413 (expr)


State 1043

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  411     | expr '.' "?[" expr . ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ']'    shift, and go to state 1148


State 1044

  461 expr_mtag: expr '.' "$f" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1149
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1045

  463 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1150


State 1046

  363 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 363 (expr_field)


State 1047

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  409     | expr '.' '[' expr . ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ']'    shift, and go to state 1151


State 1048

  366 expr_field: expr '.' $@22 error . $@23

    $default  reduce using rule 365 ($@23)

    $@23  go to state 1152


State 1049

  408 expr: expr '[' expr ']' .

    $default  reduce using rule 408 (expr)


State 1050

  418 expr: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 418 (expr)


State 1051

  562 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@39 enum_list $@40 '}' .

    $default  reduce using rule 562 (enum_declaration)


State 1052

  542 enum_list: enum_list "name" '=' expr ';' .

    $default  reduce using rule 542 (enum_list)


State 1053

  115 optional_annotation_list: '[' annotation_list ']' .
  489 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . ';'

    ';'  shift, and go to state 1153

    $default  reduce using rule 115 (optional_annotation_list)


State 1054

  477 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 477 (optional_public_or_private_member_variable)


State 1055

  478 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 478 (optional_public_or_private_member_variable)


State 1056

  486 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@31 function_declaration_header ';'
  488                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@32 function_declaration_header expression_block

    "abstract"  shift, and go to state 1154
    "static"    shift, and go to state 1057

    $default  reduce using rule 479 (optional_static_member_variable)

    optional_static_member_variable  go to state 1155


State 1057

  480 optional_static_member_variable: "static" .

    $default  reduce using rule 480 (optional_static_member_variable)


State 1058

  481 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1156
    "sealed"    shift, and go to state 1157

    $default  reduce using rule 471 (optional_override)

    optional_override  go to state 1158


State 1059

  484 struct_variable_declaration_list: struct_variable_declaration_list $@30 structure_variable_declaration ';' .

    $default  reduce using rule 484 (struct_variable_declaration_list)


State 1060

  524 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr ';' .

    $default  reduce using rule 524 (let_variable_declaration)


State 1061

  652 type_declaration_no_options: "array" '<' $@47 type_declaration '>' $@48 .

    $default  reduce using rule 652 (type_declaration_no_options)


State 1062

  655 type_declaration_no_options: "table" '<' $@49 table_type_pair '>' $@50 .

    $default  reduce using rule 655 (type_declaration_no_options)


State 1063

  627 table_type_pair: type_declaration ';' type_declaration .
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    '|'  shift, and go to state 393

    $default  reduce using rule 627 (table_type_pair)


State 1064

  658 type_declaration_no_options: "iterator" '<' $@51 type_declaration '>' $@52 .

    $default  reduce using rule 658 (type_declaration_no_options)


State 1065

  648 type_declaration_no_options: "smart_ptr" '<' $@45 type_declaration '>' $@46 .

    $default  reduce using rule 648 (type_declaration_no_options)


State 1066

  625 bitfield_type_declaration: "bitfield" '<' $@43 bitfield_bits '>' $@44 .

    $default  reduce using rule 625 (bitfield_type_declaration)


State 1067

  619 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 619 (bitfield_bits)


State 1068

  662 type_declaration_no_options: "block" '<' $@53 type_declaration '>' $@54 .

    $default  reduce using rule 662 (type_declaration_no_options)


State 1069

  665 type_declaration_no_options: "block" '<' $@55 optional_function_argument_list optional_function_type '>' . $@56

    $default  reduce using rule 664 ($@56)

    $@56  go to state 1159


State 1070

  669 type_declaration_no_options: "function" '<' $@57 type_declaration '>' $@58 .

    $default  reduce using rule 669 (type_declaration_no_options)


State 1071

  672 type_declaration_no_options: "function" '<' $@59 optional_function_argument_list optional_function_type '>' . $@60

    $default  reduce using rule 671 ($@60)

    $@60  go to state 1160


State 1072

  676 type_declaration_no_options: "lambda" '<' $@61 type_declaration '>' $@62 .

    $default  reduce using rule 676 (type_declaration_no_options)


State 1073

  679 type_declaration_no_options: "lambda" '<' $@63 optional_function_argument_list optional_function_type '>' . $@64

    $default  reduce using rule 678 ($@64)

    $@64  go to state 1161


State 1074

  496 tuple_type: "name" ':' type_declaration .
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    '|'  shift, and go to state 393

    $default  reduce using rule 496 (tuple_type)


State 1075

  682 type_declaration_no_options: "tuple" '<' $@65 tuple_type_list '>' $@66 .

    $default  reduce using rule 682 (type_declaration_no_options)


State 1076

  498 tuple_type_list: tuple_type_list ';' tuple_type .

    $default  reduce using rule 498 (tuple_type_list)


State 1077

  685 type_declaration_no_options: "variant" '<' $@67 variant_type_list '>' $@68 .

    $default  reduce using rule 685 (type_declaration_no_options)


State 1078

  501 variant_type_list: variant_type_list ';' variant_type .

    $default  reduce using rule 501 (variant_type_list)


State 1079

  580 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 580 (variable_name_with_pos_list)


State 1080

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  510 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 510 (variable_declaration)


State 1081

   73 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' . expression_block

    '{'  shift, and go to state 276

    expression_block  go to state 1162


State 1082

  254 new_type_declaration: '<' $@8 type_declaration '>' . $@9

    $default  reduce using rule 253 ($@9)

    $@9  go to state 1163


State 1083

  258 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 258 (expr_new)


State 1084

  297 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  298               | "typeinfo" '(' name_in_namespace '<' "name" . ';' "name" '>' expr ')'

    '>'  shift, and go to state 1164
    ';'  shift, and go to state 1165


State 1085

  296 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 296 (expr_type_info)


State 1086

  295 expr_type_decl: "type" '<' $@16 type_declaration '>' . $@17

    $default  reduce using rule 294 ($@17)

    $@17  go to state 1166


State 1087

   78 expression_with_alias: "assume" "name" '=' $@4 expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 78 (expression_with_alias)


State 1088

  286 expr_cast: "cast" '<' $@10 type_declaration_no_options '>' . $@11 expr

    $default  reduce using rule 285 ($@11)

    $@11  go to state 1167


State 1089

  289 expr_cast: "upcast" '<' $@12 type_declaration_no_options '>' . $@13 expr

    $default  reduce using rule 288 ($@13)

    $@13  go to state 1168


State 1090

  292 expr_cast: "reinterpret" '<' $@14 type_declaration_no_options '>' . $@15 expr

    $default  reduce using rule 291 ($@15)

    $@15  go to state 1169


State 1091

  422 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  423     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1170


State 1092

  459 expr_mtag: "$c" '(' expr ')' '(' . ')'
  460          | "$c" '(' expr ')' '(' . expr_list ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    ')'                               shift, and go to state 1171
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    expr_list               go to state 1172
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 834
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1093

  300 expr_list: expr_list . ',' expr
  747 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where ']' ']'

    ','  shift, and go to state 771
    ';'  shift, and go to state 1173


State 1094

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  707 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  708                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ')'    shift, and go to state 1174


State 1095

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  704 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 704 (make_struct_fields)


State 1096

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  703 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 703 (make_struct_fields)


State 1097

  712 make_struct_dim: make_struct_dim . ';' make_struct_fields
  730 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 797
    ';'      shift, and go to state 977

    $default  reduce using rule 713 (optional_block)

    optional_block  go to state 1175


State 1098

  729 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 979
    ",]]"  shift, and go to state 980
    ']'    shift, and go to state 981

    optional_trailing_delim_sqr_sqr  go to state 1176


State 1099

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  734 make_tuple: expr "=>" expr .

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 734 (make_tuple)


State 1100

  709 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  710                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1177


State 1101

  705 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  706                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 574
    ":="  shift, and go to state 1178
    '='   shift, and go to state 576

    copy_or_move  go to state 1179


State 1102

  705 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  706                   | make_struct_fields . ',' "name" ":=" expr
  709                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  710                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  712 make_struct_dim: make_struct_dim ';' make_struct_fields .

    ','  shift, and go to state 976

    $default  reduce using rule 712 (make_struct_dim)


State 1103

  727 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 727 (make_struct_decl)


State 1104

  721 optional_trailing_delim_sqr_sqr: ']' ']' .

    $default  reduce using rule 721 (optional_trailing_delim_sqr_sqr)


State 1105

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  735 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 735 (make_tuple)


State 1106

  719 optional_trailing_semicolon_sqr_sqr: ']' ']' .

    $default  reduce using rule 719 (optional_trailing_semicolon_sqr_sqr)


State 1107

  735 make_tuple: make_tuple . ',' expr
  739 make_dim: make_dim ';' make_tuple .

    ','  shift, and go to state 983

    $default  reduce using rule 739 (make_dim)


State 1108

  300 expr_list: expr_list . ',' expr
  748 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where '}' ']'

    ','  shift, and go to state 771
    ';'  shift, and go to state 1180


State 1109

  712 make_struct_dim: make_struct_dim . ';' make_struct_fields
  732 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"  shift, and go to state 797
    ';'      shift, and go to state 977

    $default  reduce using rule 713 (optional_block)

    optional_block  go to state 1181


State 1110

  725 optional_trailing_delim_cur_sqr: ";}]" .

    $default  reduce using rule 725 (optional_trailing_delim_cur_sqr)


State 1111

  726 optional_trailing_delim_cur_sqr: ",}]" .

    $default  reduce using rule 726 (optional_trailing_delim_cur_sqr)


State 1112

  724 optional_trailing_delim_cur_sqr: '}' . ']'

    ']'  shift, and go to state 1182


State 1113

  731 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 731 (make_struct_decl)


State 1114

  717 optional_trailing_semicolon_cur_sqr: '}' ']' .

    $default  reduce using rule 717 (optional_trailing_semicolon_cur_sqr)


State 1115

  242 expression_keyword: "keyword" '<' $@6 type_declaration_no_options '>' . $@7 expr

    $default  reduce using rule 241 ($@7)

    $@7  go to state 1183


State 1116

   29 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 29 (string_builder_body)


State 1117

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  354 func_addr_name: "$i" '(' expr . ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ')'    shift, and go to state 1184


State 1118

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  468          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ')'    shift, and go to state 1185


State 1119

  358 func_addr_expr: '@' '@' '<' $@18 type_declaration_no_options . '>' $@19 func_addr_name
  632 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  633                            | type_declaration_no_options . '[' ']'
  634                            | type_declaration_no_options . '-' '[' ']'
  635                            | type_declaration_no_options . "explicit"
  636                            | type_declaration_no_options . "const"
  637                            | type_declaration_no_options . '-' "const"
  638                            | type_declaration_no_options . '&'
  639                            | type_declaration_no_options . '-' '&'
  640                            | type_declaration_no_options . '#'
  641                            | type_declaration_no_options . "implicit"
  642                            | type_declaration_no_options . '-' '#'
  643                            | type_declaration_no_options . "==" "const"
  644                            | type_declaration_no_options . "==" '&'
  645                            | type_declaration_no_options . '?'
  649                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 383
    "implicit"  shift, and go to state 384
    "explicit"  shift, and go to state 385
    "=="        shift, and go to state 386
    "??"        shift, and go to state 387
    '?'         shift, and go to state 388
    '&'         shift, and go to state 389
    '>'         shift, and go to state 1186
    '-'         shift, and go to state 390
    '['         shift, and go to state 391
    '#'         shift, and go to state 392


State 1120

  361 func_addr_expr: '@' '@' '<' $@20 optional_function_argument_list . optional_function_type '>' $@21 func_addr_name

    ':'  shift, and go to state 355

    $default  reduce using rule 119 (optional_function_type)

    optional_function_type  go to state 1187


State 1121

  214 expression_block: '{' expressions '}' "finally" '{' expressions '}' .

    $default  reduce using rule 214 (expression_block)


State 1122

   58 expression_else: "else" expression_block .

    $default  reduce using rule 58 (expression_else)


State 1123

   59 expression_else: elif_or_static_elif expr . expression_block expression_else
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    '{'    shift, and go to state 276

    expression_block  go to state 1188


State 1124

   64 expression_else_one_liner: "else" . $@2 expression_if_one_liner

    $default  reduce using rule 63 ($@2)

    $@2  go to state 1189


State 1125

   72 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner . ';'

    ';'  shift, and go to state 1190


State 1126

  349 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1191


State 1127

  350 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'

    "$f"    shift, and go to state 798
    "name"  shift, and go to state 1010

    make_struct_fields  go to state 1192


State 1128

  279 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1193


State 1129

  280 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  281                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr ';'

    ']'  shift, and go to state 1194


State 1130

  309 capture_entry: "<-" "name" .

    $default  reduce using rule 309 (capture_entry)


State 1131

  310 capture_entry: ":=" "name" .

    $default  reduce using rule 310 (capture_entry)


State 1132

  308 capture_entry: '=' "name" .

    $default  reduce using rule 308 (capture_entry)


State 1133

  307 capture_entry: '&' "name" .

    $default  reduce using rule 307 (capture_entry)


State 1134

  312 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 1016
    ":="  shift, and go to state 1017
    '='   shift, and go to state 1018
    '&'   shift, and go to state 1019

    capture_entry  go to state 1195


State 1135

  314 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1196


State 1136

  316 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"  shift, and go to state 1197
    '{'   shift, and go to state 276

    expression_block       go to state 1198
    block_or_simple_block  go to state 1199


State 1137

  428 expr: expr "is" "type" '<' $@24 . type_declaration_no_options '>' $@25

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 1200


State 1138

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  467          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ')'    shift, and go to state 1201


State 1139

  434 expr: expr "as" "type" '<' $@26 . type_declaration '>' $@27

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 339
    type_declaration             go to state 1202


State 1140

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  465          | expr "as" "$f" '(' expr . ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ')'    shift, and go to state 1203


State 1141

  351 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 351 (expr_method_call)


State 1142

  300 expr_list: expr_list . ',' expr
  352 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 771
    ')'  shift, and go to state 1204


State 1143

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  462          | expr "?." "$f" '(' expr . ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ')'    shift, and go to state 1205


State 1144

  439 expr: expr '?' "as" "type" '<' . $@28 type_declaration '>' $@29

    $default  reduce using rule 437 ($@28)

    $@28  go to state 1206


State 1145

  466 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1207
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1146

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  425     | expr '?' expr ':' expr .
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 425 (expr)


State 1147

  464 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1208
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1148

  411 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 411 (expr)


State 1149

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  461          | expr '.' "$f" '(' expr . ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ')'    shift, and go to state 1209


State 1150

  463 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1210
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1151

  409 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 409 (expr)


State 1152

  366 expr_field: expr '.' $@22 error $@23 .

    $default  reduce using rule 366 (expr_field)


State 1153

  489 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' ';' .

    $default  reduce using rule 489 (struct_variable_declaration_list)


State 1154

  486 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@31 function_declaration_header ';'

    "const"  shift, and go to state 1211

    $default  reduce using rule 474 (optional_constant)

    optional_constant  go to state 1212


State 1155

  488 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@32 function_declaration_header expression_block

    "override"  shift, and go to state 1156
    "sealed"    shift, and go to state 1157

    $default  reduce using rule 471 (optional_override)

    optional_override  go to state 1213


State 1156

  472 optional_override: "override" .

    $default  reduce using rule 472 (optional_override)


State 1157

  473 optional_override: "sealed" .

    $default  reduce using rule 473 (optional_override)


State 1158

  481 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1054
    "private"  shift, and go to state 1055

    $default  reduce using rule 476 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1214


State 1159

  665 type_declaration_no_options: "block" '<' $@55 optional_function_argument_list optional_function_type '>' $@56 .

    $default  reduce using rule 665 (type_declaration_no_options)


State 1160

  672 type_declaration_no_options: "function" '<' $@59 optional_function_argument_list optional_function_type '>' $@60 .

    $default  reduce using rule 672 (type_declaration_no_options)


State 1161

  679 type_declaration_no_options: "lambda" '<' $@63 optional_function_argument_list optional_function_type '>' $@64 .

    $default  reduce using rule 679 (type_declaration_no_options)


State 1162

   73 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' expression_block .

    $default  reduce using rule 73 (expression_for_loop)


State 1163

  254 new_type_declaration: '<' $@8 type_declaration '>' $@9 .

    $default  reduce using rule 254 (new_type_declaration)


State 1164

  297 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1215
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1165

  298 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' . "name" '>' expr ')'

    "name"  shift, and go to state 1216


State 1166

  295 expr_type_decl: "type" '<' $@16 type_declaration '>' $@17 .

    $default  reduce using rule 295 (expr_type_decl)


State 1167

  286 expr_cast: "cast" '<' $@10 type_declaration_no_options '>' $@11 . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1217
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1168

  289 expr_cast: "upcast" '<' $@12 type_declaration_no_options '>' $@13 . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1218
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1169

  292 expr_cast: "reinterpret" '<' $@14 type_declaration_no_options '>' $@15 . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1219
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1170

  422 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  423     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    ')'                               shift, and go to state 1220
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1221
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1171

  459 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 459 (expr_mtag)


State 1172

  300 expr_list: expr_list . ',' expr
  460 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 771
    ')'  shift, and go to state 1222


State 1173

  747 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where ']' ']'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1223
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1174

  707 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  708                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 574
    ":="  shift, and go to state 1224
    '='   shift, and go to state 576

    copy_or_move  go to state 1225


State 1175

  730 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 979
    ",]]"  shift, and go to state 980
    ']'    shift, and go to state 981

    optional_trailing_delim_sqr_sqr  go to state 1226


State 1176

  729 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 729 (make_struct_decl)


State 1177

  709 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  710                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1227
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1178

  706 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1228
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1179

  705 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1229
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1180

  748 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where '}' ']'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1230
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1181

  732 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    ";}]"  shift, and go to state 1110
    ",}]"  shift, and go to state 1111
    '}'    shift, and go to state 1112

    optional_trailing_delim_cur_sqr  go to state 1231


State 1182

  724 optional_trailing_delim_cur_sqr: '}' ']' .

    $default  reduce using rule 724 (optional_trailing_delim_cur_sqr)


State 1183

  242 expression_keyword: "keyword" '<' $@6 type_declaration_no_options '>' $@7 . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1232
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1184

  354 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 354 (func_addr_name)


State 1185

  468 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 468 (expr_mtag)


State 1186

  358 func_addr_expr: '@' '@' '<' $@18 type_declaration_no_options '>' . $@19 func_addr_name

    $default  reduce using rule 357 ($@19)

    $@19  go to state 1233


State 1187

  361 func_addr_expr: '@' '@' '<' $@20 optional_function_argument_list optional_function_type . '>' $@21 func_addr_name

    '>'  shift, and go to state 1234


State 1188

   59 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1004
    "elif"         shift, and go to state 1005
    "static_elif"  shift, and go to state 1006

    $default  reduce using rule 57 (expression_else)

    elif_or_static_elif  go to state 1007
    expression_else      go to state 1235


State 1189

   64 expression_else_one_liner: "else" $@2 . expression_if_one_liner

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "return"                          shift, and go to state 1236
    "null"                            shift, and go to state 418
    "break"                           shift, and go to state 419
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "continue"                        shift, and go to state 428
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "yield"                           shift, and go to state 1237
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder             go to state 471
    expr_reader                go to state 472
    expression_if_one_liner    go to state 1238
    expression_block           go to state 483
    expression_keyword         go to state 486
    name_in_namespace          go to state 488
    expr_new                   go to state 490
    expression_break           go to state 1239
    expression_continue        go to state 1240
    expression_return_no_pipe  go to state 1241
    expression_yield_no_pipe   go to state 1242
    expr_cast                  go to state 500
    expr_type_decl             go to state 501
    expr_type_info             go to state 502
    block_or_lambda            go to state 503
    expr_block                 go to state 504
    expr_numeric_const         go to state 505
    expr_named_call            go to state 508
    expr_method_call           go to state 509
    func_addr_expr             go to state 510
    expr_field                 go to state 511
    expr                       go to state 1243
    expr_mtag                  go to state 513
    basic_type_declaration     go to state 514
    make_decl                  go to state 515
    make_struct_decl           go to state 516
    make_dim_decl              go to state 517
    make_table_decl            go to state 518
    array_comprehension        go to state 519


State 1190

   72 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner ';' .

    $default  reduce using rule 72 (expression_if_then_else)


State 1191

  349 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 349 (expr_named_call)


State 1192

  350 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  705 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  706                   | make_struct_fields . ',' "name" ":=" expr
  709                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  710                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 976
    ']'  shift, and go to state 1244


State 1193

  279 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 279 (tuple_expansion)


State 1194

  280 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  281                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr ';'

    ':'  shift, and go to state 1245
    '&'  shift, and go to state 369

    $default  reduce using rule 516 (optional_ref)

    optional_ref  go to state 1246


State 1195

  312 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 312 (capture_list)


State 1196

  314 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 314 (optional_capture_list)


State 1197

  302 block_or_simple_block: "=>" . expr
  303                      | "=>" . "<-" expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "<-"                              shift, and go to state 1247
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1248
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1198

  301 block_or_simple_block: expression_block .

    $default  reduce using rule 301 (block_or_simple_block)


State 1199

  316 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 316 (expr_block)


State 1200

  428 expr: expr "is" "type" '<' $@24 type_declaration_no_options . '>' $@25
  632 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  633                            | type_declaration_no_options . '[' ']'
  634                            | type_declaration_no_options . '-' '[' ']'
  635                            | type_declaration_no_options . "explicit"
  636                            | type_declaration_no_options . "const"
  637                            | type_declaration_no_options . '-' "const"
  638                            | type_declaration_no_options . '&'
  639                            | type_declaration_no_options . '-' '&'
  640                            | type_declaration_no_options . '#'
  641                            | type_declaration_no_options . "implicit"
  642                            | type_declaration_no_options . '-' '#'
  643                            | type_declaration_no_options . "==" "const"
  644                            | type_declaration_no_options . "==" '&'
  645                            | type_declaration_no_options . '?'
  649                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 383
    "implicit"  shift, and go to state 384
    "explicit"  shift, and go to state 385
    "=="        shift, and go to state 386
    "??"        shift, and go to state 387
    '?'         shift, and go to state 388
    '&'         shift, and go to state 389
    '>'         shift, and go to state 1249
    '-'         shift, and go to state 390
    '['         shift, and go to state 391
    '#'         shift, and go to state 392


State 1201

  467 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 467 (expr_mtag)


State 1202

  434 expr: expr "as" "type" '<' $@26 type_declaration . '>' $@27
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    '|'  shift, and go to state 393
    '>'  shift, and go to state 1250


State 1203

  465 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 465 (expr_mtag)


State 1204

  352 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 352 (expr_method_call)


State 1205

  462 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 462 (expr_mtag)


State 1206

  439 expr: expr '?' "as" "type" '<' $@28 . type_declaration '>' $@29

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 339
    type_declaration             go to state 1251


State 1207

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  466          | expr '?' "as" "$f" '(' expr . ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ')'    shift, and go to state 1252


State 1208

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  464          | expr '.' "?." "$f" '(' expr . ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ')'    shift, and go to state 1253


State 1209

  461 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 461 (expr_mtag)


State 1210

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  463          | expr '.' '.' "$f" '(' expr . ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ')'    shift, and go to state 1254


State 1211

  475 optional_constant: "const" .

    $default  reduce using rule 475 (optional_constant)


State 1212

  486 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@31 function_declaration_header ';'

    $default  reduce using rule 485 ($@31)

    $@31  go to state 1255


State 1213

  488 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@32 function_declaration_header expression_block

    "const"  shift, and go to state 1211

    $default  reduce using rule 474 (optional_constant)

    optional_constant  go to state 1256


State 1214

  481 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 400
    "name"  shift, and go to state 401

    variable_declaration         go to state 1257
    variable_name_with_pos_list  go to state 403


State 1215

  297 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ')'    shift, and go to state 1258


State 1216

  298 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" . '>' expr ')'

    '>'  shift, and go to state 1259


State 1217

  286 expr_cast: "cast" '<' $@10 type_declaration_no_options '>' $@11 expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 286 (expr_cast)


State 1218

  289 expr_cast: "upcast" '<' $@12 type_declaration_no_options '>' $@13 expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 289 (expr_cast)


State 1219

  292 expr_cast: "reinterpret" '<' $@14 type_declaration_no_options '>' $@15 expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 292 (expr_cast)


State 1220

  422 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 422 (expr)


State 1221

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  423     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ')'    shift, and go to state 1260


State 1222

  460 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 460 (expr_mtag)


State 1223

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  747 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where ']' ']'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ';'    shift, and go to state 1261

    $default  reduce using rule 745 (array_comprehension_where)

    array_comprehension_where  go to state 1262


State 1224

  708 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1263
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1225

  707 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1264
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1226

  730 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 730 (make_struct_decl)


State 1227

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  709 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  710                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ')'    shift, and go to state 1265


State 1228

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  706 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 706 (make_struct_fields)


State 1229

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  705 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 705 (make_struct_fields)


State 1230

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  748 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where '}' ']'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ';'    shift, and go to state 1261

    $default  reduce using rule 745 (array_comprehension_where)

    array_comprehension_where  go to state 1266


State 1231

  732 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 732 (make_struct_decl)


State 1232

  242 expression_keyword: "keyword" '<' $@6 type_declaration_no_options '>' $@7 expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 242 (expression_keyword)


State 1233

  358 func_addr_expr: '@' '@' '<' $@18 type_declaration_no_options '>' $@19 . func_addr_name

    "::"    shift, and go to state 54
    "$i"    shift, and go to state 823
    "name"  shift, and go to state 55

    name_in_namespace  go to state 826
    func_addr_name     go to state 1267


State 1234

  361 func_addr_expr: '@' '@' '<' $@20 optional_function_argument_list optional_function_type '>' . $@21 func_addr_name

    $default  reduce using rule 360 ($@21)

    $@21  go to state 1268


State 1235

   59 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 59 (expression_else)


State 1236

  262 expression_return_no_pipe: "return" .
  263                          | "return" . expr_list
  264                          | "return" . "<-" expr_list

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "<-"                              shift, and go to state 1269
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    $default  reduce using rule 262 (expression_return_no_pipe)

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    expr_list               go to state 591
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 834
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1237

  268 expression_yield_no_pipe: "yield" . expr
  269                         | "yield" . "<-" expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "<-"                              shift, and go to state 1270
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1271
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1238

   64 expression_else_one_liner: "else" $@2 expression_if_one_liner .

    $default  reduce using rule 64 (expression_else_one_liner)


State 1239

   68 expression_if_one_liner: expression_break .

    $default  reduce using rule 68 (expression_if_one_liner)


State 1240

   69 expression_if_one_liner: expression_continue .

    $default  reduce using rule 69 (expression_if_one_liner)


State 1241

   66 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 66 (expression_if_one_liner)


State 1242

   67 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 67 (expression_if_one_liner)


State 1243

   65 expression_if_one_liner: expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 65 (expression_if_one_liner)


State 1244

  350 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1272


State 1245

  280 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr ';'

    "array"      shift, and go to state 296
    "table"      shift, and go to state 297
    "iterator"   shift, and go to state 298
    "smart_ptr"  shift, and go to state 299
    "bool"       shift, and go to state 300
    "void"       shift, and go to state 301
    "string"     shift, and go to state 302
    "auto"       shift, and go to state 303
    "int"        shift, and go to state 304
    "int2"       shift, and go to state 305
    "int3"       shift, and go to state 306
    "int4"       shift, and go to state 307
    "uint"       shift, and go to state 308
    "bitfield"   shift, and go to state 309
    "uint2"      shift, and go to state 310
    "uint3"      shift, and go to state 311
    "uint4"      shift, and go to state 312
    "float"      shift, and go to state 313
    "float2"     shift, and go to state 314
    "float3"     shift, and go to state 315
    "float4"     shift, and go to state 316
    "range"      shift, and go to state 317
    "urange"     shift, and go to state 318
    "range64"    shift, and go to state 319
    "urange64"   shift, and go to state 320
    "block"      shift, and go to state 321
    "int64"      shift, and go to state 322
    "uint64"     shift, and go to state 323
    "double"     shift, and go to state 324
    "function"   shift, and go to state 325
    "lambda"     shift, and go to state 326
    "int8"       shift, and go to state 327
    "uint8"      shift, and go to state 328
    "int16"      shift, and go to state 329
    "uint16"     shift, and go to state 330
    "tuple"      shift, and go to state 331
    "variant"    shift, and go to state 332
    "::"         shift, and go to state 54
    "$t"         shift, and go to state 333
    "name"       shift, and go to state 55

    name_in_namespace            go to state 334
    basic_type_declaration       go to state 335
    structure_type_declaration   go to state 336
    auto_type_declaration        go to state 337
    bitfield_type_declaration    go to state 338
    type_declaration_no_options  go to state 1273


State 1246

  281 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr ';'

    "<-"  shift, and go to state 534
    ":="  shift, and go to state 535
    '='   shift, and go to state 536

    copy_or_move_or_clone  go to state 1274


State 1247

  303 block_or_simple_block: "=>" "<-" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1275
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1248

  302 block_or_simple_block: "=>" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    ".."  error (nonassociative)

    $default  reduce using rule 302 (block_or_simple_block)


State 1249

  428 expr: expr "is" "type" '<' $@24 type_declaration_no_options '>' . $@25

    $default  reduce using rule 427 ($@25)

    $@25  go to state 1276


State 1250

  434 expr: expr "as" "type" '<' $@26 type_declaration '>' . $@27

    $default  reduce using rule 433 ($@27)

    $@27  go to state 1277


State 1251

  439 expr: expr '?' "as" "type" '<' $@28 type_declaration . '>' $@29
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    '|'  shift, and go to state 393
    '>'  shift, and go to state 1278


State 1252

  466 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 466 (expr_mtag)


State 1253

  464 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 464 (expr_mtag)


State 1254

  463 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 463 (expr_mtag)


State 1255

  486 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@31 . function_declaration_header ';'

    "operator"  shift, and go to state 174
    "bool"      shift, and go to state 175
    "string"    shift, and go to state 176
    "int"       shift, and go to state 177
    "int2"      shift, and go to state 178
    "int3"      shift, and go to state 179
    "int4"      shift, and go to state 180
    "uint"      shift, and go to state 181
    "uint2"     shift, and go to state 182
    "uint3"     shift, and go to state 183
    "uint4"     shift, and go to state 184
    "float"     shift, and go to state 185
    "float2"    shift, and go to state 186
    "float3"    shift, and go to state 187
    "float4"    shift, and go to state 188
    "range"     shift, and go to state 189
    "urange"    shift, and go to state 190
    "range64"   shift, and go to state 191
    "urange64"  shift, and go to state 192
    "int64"     shift, and go to state 193
    "uint64"    shift, and go to state 194
    "double"    shift, and go to state 195
    "int8"      shift, and go to state 196
    "uint8"     shift, and go to state 197
    "int16"     shift, and go to state 198
    "uint16"    shift, and go to state 199
    "++"        shift, and go to state 200
    "--"        shift, and go to state 201
    "name"      shift, and go to state 202

    function_name                go to state 203
    function_declaration_header  go to state 1279


State 1256

  488 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@32 function_declaration_header expression_block

    $default  reduce using rule 487 ($@32)

    $@32  go to state 1280


State 1257

  481 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 481 (structure_variable_declaration)


State 1258

  297 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 297 (expr_type_info)


State 1259

  298 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' . expr ')'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1281
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1260

  423 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 423 (expr)


State 1261

  746 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1282


State 1262

  747 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1283


State 1263

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  708 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 708 (make_struct_fields)


State 1264

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  707 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 707 (make_struct_fields)


State 1265

  709 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  710                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 574
    ":="  shift, and go to state 1284
    '='   shift, and go to state 576

    copy_or_move  go to state 1285


State 1266

  748 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . '}' ']'

    '}'  shift, and go to state 1286


State 1267

  358 func_addr_expr: '@' '@' '<' $@18 type_declaration_no_options '>' $@19 func_addr_name .

    $default  reduce using rule 358 (func_addr_expr)


State 1268

  361 func_addr_expr: '@' '@' '<' $@20 optional_function_argument_list optional_function_type '>' $@21 . func_addr_name

    "::"    shift, and go to state 54
    "$i"    shift, and go to state 823
    "name"  shift, and go to state 55

    name_in_namespace  go to state 826
    func_addr_name     go to state 1287


State 1269

  264 expression_return_no_pipe: "return" "<-" . expr_list

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    expr_list               go to state 770
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 834
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1270

  269 expression_yield_no_pipe: "yield" "<-" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1288
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1271

  268 expression_yield_no_pipe: "yield" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 268 (expression_yield_no_pipe)


State 1272

  350 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 350 (expr_named_call)


State 1273

  280 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr ';'
  632 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  633                            | type_declaration_no_options . '[' ']'
  634                            | type_declaration_no_options . '-' '[' ']'
  635                            | type_declaration_no_options . "explicit"
  636                            | type_declaration_no_options . "const"
  637                            | type_declaration_no_options . '-' "const"
  638                            | type_declaration_no_options . '&'
  639                            | type_declaration_no_options . '-' '&'
  640                            | type_declaration_no_options . '#'
  641                            | type_declaration_no_options . "implicit"
  642                            | type_declaration_no_options . '-' '#'
  643                            | type_declaration_no_options . "==" "const"
  644                            | type_declaration_no_options . "==" '&'
  645                            | type_declaration_no_options . '?'
  649                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 383
    "implicit"  shift, and go to state 384
    "explicit"  shift, and go to state 385
    "=="        shift, and go to state 386
    "<-"        shift, and go to state 534
    "??"        shift, and go to state 387
    ":="        shift, and go to state 535
    '='         shift, and go to state 536
    '?'         shift, and go to state 388
    '&'         shift, and go to state 389
    '-'         shift, and go to state 390
    '['         shift, and go to state 391
    '#'         shift, and go to state 392

    copy_or_move_or_clone  go to state 1289


State 1274

  281 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr ';'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1290
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1275

  303 block_or_simple_block: "=>" "<-" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 303 (block_or_simple_block)


State 1276

  428 expr: expr "is" "type" '<' $@24 type_declaration_no_options '>' $@25 .

    $default  reduce using rule 428 (expr)


State 1277

  434 expr: expr "as" "type" '<' $@26 type_declaration '>' $@27 .

    $default  reduce using rule 434 (expr)


State 1278

  439 expr: expr '?' "as" "type" '<' $@28 type_declaration '>' . $@29

    $default  reduce using rule 438 ($@29)

    $@29  go to state 1291


State 1279

  486 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@31 function_declaration_header . ';'

    ';'  shift, and go to state 1292


State 1280

  488 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@32 . function_declaration_header expression_block

    "operator"  shift, and go to state 174
    "bool"      shift, and go to state 175
    "string"    shift, and go to state 176
    "int"       shift, and go to state 177
    "int2"      shift, and go to state 178
    "int3"      shift, and go to state 179
    "int4"      shift, and go to state 180
    "uint"      shift, and go to state 181
    "uint2"     shift, and go to state 182
    "uint3"     shift, and go to state 183
    "uint4"     shift, and go to state 184
    "float"     shift, and go to state 185
    "float2"    shift, and go to state 186
    "float3"    shift, and go to state 187
    "float4"    shift, and go to state 188
    "range"     shift, and go to state 189
    "urange"    shift, and go to state 190
    "range64"   shift, and go to state 191
    "urange64"  shift, and go to state 192
    "int64"     shift, and go to state 193
    "uint64"    shift, and go to state 194
    "double"    shift, and go to state 195
    "int8"      shift, and go to state 196
    "uint8"     shift, and go to state 197
    "int16"     shift, and go to state 198
    "uint16"    shift, and go to state 199
    "++"        shift, and go to state 200
    "--"        shift, and go to state 201
    "name"      shift, and go to state 202

    function_name                go to state 203
    function_declaration_header  go to state 1293


State 1281

  298 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr . ')'
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ')'    shift, and go to state 1294


State 1282

  746 array_comprehension_where: ';' "where" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1295
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1283

  747 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1296


State 1284

  710 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1297
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1285

  709 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1298
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1286

  748 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' . ']'

    ']'  shift, and go to state 1299


State 1287

  361 func_addr_expr: '@' '@' '<' $@20 optional_function_argument_list optional_function_type '>' $@21 func_addr_name .

    $default  reduce using rule 361 (func_addr_expr)


State 1288

  269 expression_yield_no_pipe: "yield" "<-" expr .
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 269 (expression_yield_no_pipe)


State 1289

  280 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr ';'

    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "null"                            shift, and go to state 418
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 528
    "bool"                            shift, and go to state 300
    "void"                            shift, and go to state 301
    "string"                          shift, and go to state 302
    "int"                             shift, and go to state 304
    "int2"                            shift, and go to state 305
    "int3"                            shift, and go to state 306
    "int4"                            shift, and go to state 307
    "uint"                            shift, and go to state 308
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 310
    "uint3"                           shift, and go to state 311
    "uint4"                           shift, and go to state 312
    "float"                           shift, and go to state 313
    "float2"                          shift, and go to state 314
    "float3"                          shift, and go to state 315
    "float4"                          shift, and go to state 316
    "range"                           shift, and go to state 317
    "urange"                          shift, and go to state 318
    "range64"                         shift, and go to state 319
    "urange64"                        shift, and go to state 320
    "int64"                           shift, and go to state 322
    "uint64"                          shift, and go to state 323
    "double"                          shift, and go to state 324
    "int8"                            shift, and go to state 327
    "uint8"                           shift, and go to state 328
    "int16"                           shift, and go to state 329
    "uint16"                          shift, and go to state 330
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 54
    "$$"                              shift, and go to state 442
    "$i"                              shift, and go to state 443
    "$v"                              shift, and go to state 444
    "$b"                              shift, and go to state 445
    "$a"                              shift, and go to state 446
    "$c"                              shift, and go to state 447
    "..."                             shift, and go to state 448
    "[["                              shift, and go to state 449
    "[{"                              shift, and go to state 450
    "{{"                              shift, and go to state 451
    "integer constant"                shift, and go to state 452
    "long integer constant"           shift, and go to state 453
    "unsigned integer constant"       shift, and go to state 454
    "unsigned long integer constant"  shift, and go to state 455
    "unsigned int8 constant"          shift, and go to state 456
    "floating point constant"         shift, and go to state 457
    "double constant"                 shift, and go to state 458
    "name"                            shift, and go to state 55
    "keyword"                         shift, and go to state 529
    "start of the string"             shift, and go to state 460
    '-'                               shift, and go to state 461
    '+'                               shift, and go to state 462
    '*'                               shift, and go to state 463
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 464
    '!'                               shift, and go to state 465
    '('                               shift, and go to state 466
    '$'                               shift, and go to state 467
    '@'                               shift, and go to state 468
    '{'                               shift, and go to state 276

    string_builder          go to state 471
    expr_reader             go to state 472
    expression_block        go to state 483
    expression_keyword      go to state 486
    name_in_namespace       go to state 488
    expr_new                go to state 490
    expr_cast               go to state 500
    expr_type_decl          go to state 501
    expr_type_info          go to state 502
    block_or_lambda         go to state 503
    expr_block              go to state 504
    expr_numeric_const      go to state 505
    expr_named_call         go to state 508
    expr_method_call        go to state 509
    func_addr_expr          go to state 510
    expr_field              go to state 511
    expr                    go to state 1300
    expr_mtag               go to state 513
    basic_type_declaration  go to state 514
    make_decl               go to state 515
    make_struct_decl        go to state 516
    make_dim_decl           go to state 517
    make_table_decl         go to state 518
    array_comprehension     go to state 519


State 1290

  281 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr . ';'
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ';'    shift, and go to state 1301


State 1291

  439 expr: expr '?' "as" "type" '<' $@28 type_declaration '>' $@29 .

    $default  reduce using rule 439 (expr)


State 1292

  486 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@31 function_declaration_header ';' .

    $default  reduce using rule 486 (struct_variable_declaration_list)


State 1293

  488 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@32 function_declaration_header . expression_block

    '{'  shift, and go to state 276

    expression_block  go to state 1302


State 1294

  298 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')' .

    $default  reduce using rule 298 (expr_type_info)


State 1295

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  746 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 746 (array_comprehension_where)


State 1296

  747 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']' .

    $default  reduce using rule 747 (array_comprehension)


State 1297

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  710 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 710 (make_struct_fields)


State 1298

  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  709 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712

    $default  reduce using rule 709 (make_struct_fields)


State 1299

  748 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']' .

    $default  reduce using rule 748 (array_comprehension)


State 1300

  280 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr . ';'
  351 expr_method_call: expr . "->" "name" '(' ')'
  352                 | expr . "->" "name" '(' expr_list ')'
  362 expr_field: expr . '.' "name"
  363           | expr . '.' '.' "name"
  366           | expr . '.' $@22 error $@23
  381 expr: expr . "<<" expr
  382     | expr . ">>" expr
  383     | expr . "<<<" expr
  384     | expr . ">>>" expr
  385     | expr . '+' expr
  386     | expr . '-' expr
  387     | expr . '*' expr
  388     | expr . '/' expr
  389     | expr . '%' expr
  390     | expr . '<' expr
  391     | expr . '>' expr
  392     | expr . "==" expr
  393     | expr . "!=" expr
  394     | expr . "<=" expr
  395     | expr . ">=" expr
  396     | expr . '&' expr
  397     | expr . '|' expr
  398     | expr . '^' expr
  399     | expr . "&&" expr
  400     | expr . "||" expr
  401     | expr . "^^" expr
  402     | expr . ".." expr
  405     | expr . "++"
  406     | expr . "--"
  408     | expr . '[' expr ']'
  409     | expr . '.' '[' expr ']'
  410     | expr . "?[" expr ']'
  411     | expr . '.' "?[" expr ']'
  412     | expr . "?." "name"
  413     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 670
    ">>"   shift, and go to state 671
    "++"   shift, and go to state 672
    "--"   shift, and go to state 673
    "<="   shift, and go to state 674
    ">="   shift, and go to state 677
    "=="   shift, and go to state 678
    "!="   shift, and go to state 679
    "->"   shift, and go to state 680
    "??"   shift, and go to state 682
    "?."   shift, and go to state 683
    "?["   shift, and go to state 684
    "<|"   shift, and go to state 685
    "|>"   shift, and go to state 686
    "<<<"  shift, and go to state 688
    ">>>"  shift, and go to state 689
    "&&"   shift, and go to state 692
    "||"   shift, and go to state 693
    "^^"   shift, and go to state 694
    ".."   shift, and go to state 698
    '?'    shift, and go to state 700
    '|'    shift, and go to state 701
    '^'    shift, and go to state 702
    '&'    shift, and go to state 703
    '<'    shift, and go to state 704
    '>'    shift, and go to state 705
    '-'    shift, and go to state 706
    '+'    shift, and go to state 707
    '*'    shift, and go to state 708
    '/'    shift, and go to state 709
    '%'    shift, and go to state 710
    '.'    shift, and go to state 711
    '['    shift, and go to state 712
    ';'    shift, and go to state 1303


State 1301

  281 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 281 (tuple_expansion_variable_declaration)


State 1302

  488 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@32 function_declaration_header expression_block .

    $default  reduce using rule 488 (struct_variable_declaration_list)


State 1303

  280 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';' .

    $default  reduce using rule 280 (tuple_expansion_variable_declaration)

Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 51 conflicts: 1 shift/reduce
State 148 conflicts: 1 shift/reduce
State 154 conflicts: 1 shift/reduce
State 164 conflicts: 1 shift/reduce
State 168 conflicts: 1 shift/reduce
State 169 conflicts: 1 shift/reduce
State 389 conflicts: 2 shift/reduce
State 463 conflicts: 7 shift/reduce
State 649 conflicts: 3 reduce/reduce
State 666 conflicts: 2 shift/reduce
State 1031 conflicts: 6 shift/reduce
State 1033 conflicts: 6 shift/reduce
State 1035 conflicts: 6 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program bitfield_alias_declaration
   13        | program ';'

   14 optional_public_or_private_module: %empty
   15                                  | "public"
   16                                  | "private"

   17 module_name: '$'
   18            | "name"

   19 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   20 character_sequence: STRING_CHARACTER
   21                   | STRING_CHARACTER_ESC
   22                   | character_sequence STRING_CHARACTER
   23                   | character_sequence STRING_CHARACTER_ESC

   24 string_constant: "start of the string" character_sequence "end of the string"

   25 string_builder_body: %empty
   26                    | string_builder_body character_sequence
   27                    | string_builder_body "{" expr "}"

   28 string_builder: "start of the string" string_builder_body "end of the string"

   29 reader_character_sequence: STRING_CHARACTER
   30                          | reader_character_sequence STRING_CHARACTER

   31 $@1: %empty

   32 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   33 options_declaration: "options" annotation_argument_list

   34 require_declaration: "require" require_module

   35 require_module_name: "name"
   36                    | '%' require_module_name
   37                    | require_module_name '.' "name"
   38                    | require_module_name '/' "name"

   39 require_module: require_module_name is_public_module
   40               | require_module_name "as" "name" is_public_module

   41 is_public_module: %empty
   42                 | "public"

   43 expect_declaration: "expect" expect_list

   44 expect_list: expect_error
   45            | expect_list ',' expect_error

   46 expect_error: "integer constant"
   47             | "integer constant" ':' "integer constant"

   48 expression_label: "label" "integer constant" ':'

   49 expression_goto: "goto" "label" "integer constant"
   50                | "goto" expr

   51 elif_or_static_elif: "elif"
   52                    | "static_elif"

   53 expression_else: %empty
   54                | "else" expression_block
   55                | elif_or_static_elif expr expression_block expression_else

   56 if_or_static_if: "if"
   57                | "static_if"

   58 expression_if_then_else: if_or_static_if expr expression_block expression_else

   59 $@2: %empty

   60 expression_if_then_else: expr "if" $@2 expr

   61 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' expression_block

   62 expression_unsafe: "unsafe" expression_block

   63 expression_while_loop: "while" expr expression_block

   64 expression_with: "with" expr expression_block

   65 $@3: %empty

   66 expression_with_alias: "assume" "name" '=' $@3 expr

   67 annotation_argument_value: string_constant
   68                          | "name"
   69                          | "integer constant"
   70                          | "floating point constant"
   71                          | "true"
   72                          | "false"

   73 annotation_argument_value_list: annotation_argument_value
   74                               | annotation_argument_value_list ',' annotation_argument_value

   75 annotation_argument_name: "name"
   76                         | "type"
   77                         | "in"

   78 annotation_argument: annotation_argument_name '=' string_constant
   79                    | annotation_argument_name '=' "name"
   80                    | annotation_argument_name '=' "integer constant"
   81                    | annotation_argument_name '=' "floating point constant"
   82                    | annotation_argument_name '=' "true"
   83                    | annotation_argument_name '=' "false"
   84                    | annotation_argument_name
   85                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

   86 annotation_argument_list: annotation_argument
   87                         | annotation_argument_list ',' annotation_argument

   88 annotation_declaration_name: name_in_namespace
   89                            | "require"
   90                            | "private"

   91 annotation_declaration: annotation_declaration_name
   92                       | annotation_declaration_name '(' annotation_argument_list ')'

   93 annotation_list: annotation_declaration
   94                | annotation_list ',' annotation_declaration

   95 optional_annotation_list: %empty
   96                         | '[' annotation_list ']'

   97 optional_function_argument_list: %empty
   98                                | '(' ')'
   99                                | '(' function_argument_list ')'

  100 optional_function_type: %empty
  101                       | ':' type_declaration

  102 function_name: "name"
  103              | "operator" '!'
  104              | "operator" '~'
  105              | "operator" "+="
  106              | "operator" "-="
  107              | "operator" "*="
  108              | "operator" "/="
  109              | "operator" "%="
  110              | "operator" "&="
  111              | "operator" "|="
  112              | "operator" "^="
  113              | "operator" "&&="
  114              | "operator" "||="
  115              | "operator" "^^="
  116              | "operator" "&&"
  117              | "operator" "||"
  118              | "operator" "^^"
  119              | "operator" '+'
  120              | "operator" '-'
  121              | "operator" '*'
  122              | "operator" '/'
  123              | "operator" '%'
  124              | "operator" '<'
  125              | "operator" '>'
  126              | "operator" ".."
  127              | "operator" "=="
  128              | "operator" "!="
  129              | "operator" "<="
  130              | "operator" ">="
  131              | "operator" '&'
  132              | "operator" '|'
  133              | "operator" '^'
  134              | "++" "operator"
  135              | "--" "operator"
  136              | "operator" "++"
  137              | "operator" "--"
  138              | "operator" "<<"
  139              | "operator" ">>"
  140              | "operator" "<<="
  141              | "operator" ">>="
  142              | "operator" "<<<"
  143              | "operator" ">>>"
  144              | "operator" "<<<="
  145              | "operator" ">>>="
  146              | "operator" '[' ']'
  147              | "operator" "?[" ']'
  148              | "operator" '.'
  149              | "operator" "?."
  150              | "operator" ":="
  151              | "operator" "delete"
  152              | "operator" "??"
  153              | "operator" "is"
  154              | "operator" "as"
  155              | "operator" '?' "as"
  156              | "bool"
  157              | "string"
  158              | "int"
  159              | "int2"
  160              | "int3"
  161              | "int4"
  162              | "uint"
  163              | "uint2"
  164              | "uint3"
  165              | "uint4"
  166              | "float"
  167              | "float2"
  168              | "float3"
  169              | "float4"
  170              | "range"
  171              | "urange"
  172              | "int64"
  173              | "uint64"
  174              | "double"
  175              | "int8"
  176              | "uint8"
  177              | "int16"
  178              | "uint16"

  179 global_function_declaration: optional_annotation_list "def" function_declaration

  180 optional_public_or_private_function: %empty
  181                                    | "private"
  182                                    | "public"

  183 function_declaration_header: function_name optional_function_argument_list optional_function_type

  184 $@4: %empty

  185 function_declaration: optional_public_or_private_function $@4 function_declaration_header expression_block

  186 expression_block: '{' expressions '}'
  187                 | '{' expressions '}' "finally" '{' expressions '}'

  188 expression_any: ';'
  189               | expr_pipe
  190               | expr_assign_pipe
  191               | expr_assign ';'
  192               | expression_delete ';'
  193               | expression_let
  194               | expression_while_loop
  195               | expression_unsafe
  196               | expression_with
  197               | expression_with_alias
  198               | expression_for_loop
  199               | expression_break ';'
  200               | expression_continue ';'
  201               | expression_return
  202               | expression_yield
  203               | expression_if_then_else
  204               | expression_try_catch
  205               | expression_label ';'
  206               | expression_goto ';'
  207               | "pass" ';'

  208 expressions: %empty
  209            | expressions expression_any
  210            | expressions error

  211 expr_pipe: expr_assign " <|" expr_block
  212          | "@ <|" expr_block
  213          | "@@ <|" expr_block

  214 name_in_namespace: "name"
  215                  | "name" "::" "name"
  216                  | "::" "name"

  217 expression_delete: "delete" expr

  218 expr_new: "new" type_declaration
  219         | "new" type_declaration '(' ')'
  220         | "new" type_declaration '(' expr_list ')'
  221         | "new" make_decl

  222 expression_break: "break"

  223 expression_continue: "continue"

  224 expression_return: "return" ';'
  225                  | "return" expr ';'
  226                  | "return" "<-" expr ';'
  227                  | "return" expr_pipe
  228                  | "return" "<-" expr_pipe

  229 $@5: %empty

  230 expression_return: "return" expr "if" $@5 expr ';'

  231 expression_yield: "yield" expr ';'
  232                 | "yield" "<-" expr ';'
  233                 | "yield" expr_pipe
  234                 | "yield" "<-" expr_pipe

  235 expression_try_catch: "try" expression_block "recover" expression_block

  236 kwd_let: "let"
  237        | "var"

  238 expression_let: kwd_let let_variable_declaration

  239 $@6: %empty

  240 $@7: %empty

  241 expr_cast: "cast" '<' $@6 type_declaration '>' $@7 expr

  242 $@8: %empty

  243 $@9: %empty

  244 expr_cast: "upcast" '<' $@8 type_declaration '>' $@9 expr

  245 $@10: %empty

  246 $@11: %empty

  247 expr_cast: "reinterpret" '<' $@10 type_declaration '>' $@11 expr

  248 $@12: %empty

  249 $@13: %empty

  250 expr_type_decl: "type" '<' $@12 type_declaration '>' $@13

  251 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  252               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  253               | "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

  254 expr_list: expr
  255          | expr_list ',' expr

  256 block_or_simple_block: expression_block
  257                      | "=>" expr
  258                      | "=>" "<-" expr

  259 block_or_lambda: '$'
  260                | '@'
  261                | '@' '@'

  262 capture_entry: '&' "name"
  263              | '=' "name"
  264              | "<-" "name"
  265              | ":=" "name"

  266 capture_list: capture_entry
  267             | capture_list ',' capture_entry

  268 optional_capture_list: %empty
  269                      | "[[" capture_list ']' ']'

  270 expr_block: expression_block
  271           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  272 expr_numeric_const: "integer constant"
  273                   | "unsigned integer constant"
  274                   | "long integer constant"
  275                   | "unsigned long integer constant"
  276                   | "floating point constant"
  277                   | "double constant"

  278 expr_assign: expr
  279            | expr '=' expr
  280            | expr "<-" expr
  281            | expr ":=" expr
  282            | expr "&=" expr
  283            | expr "|=" expr
  284            | expr "^=" expr
  285            | expr "&&=" expr
  286            | expr "||=" expr
  287            | expr "^^=" expr
  288            | expr "+=" expr
  289            | expr "-=" expr
  290            | expr "*=" expr
  291            | expr "/=" expr
  292            | expr "%=" expr
  293            | expr "<<=" expr
  294            | expr ">>=" expr
  295            | expr "<<<=" expr
  296            | expr ">>>=" expr

  297 expr_assign_pipe: expr '=' "@ <|" expr
  298                 | expr '=' "@@ <|" expr
  299                 | expr "<-" "@ <|" expr
  300                 | expr "<-" "@@ <|" expr

  301 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'

  302 expr_method_call: expr "->" "name" '(' ')'
  303                 | expr "->" "name" '(' expr_list ')'

  304 func_addr_name: name_in_namespace
  305               | "$i" '(' expr ')'

  306 func_addr_expr: '@' '@' func_addr_name

  307 $@14: %empty

  308 $@15: %empty

  309 func_addr_expr: '@' '@' '<' $@14 type_declaration '>' $@15 func_addr_name

  310 $@16: %empty

  311 $@17: %empty

  312 func_addr_expr: '@' '@' '<' $@16 optional_function_argument_list optional_function_type '>' $@17 func_addr_name

  313 expr_field: expr '.' "name"
  314           | expr '.' '.' "name"

  315 $@18: %empty

  316 $@19: %empty

  317 expr_field: expr '.' $@18 error $@19

  318 expr: "null"
  319     | name_in_namespace
  320     | expr_numeric_const
  321     | expr_reader
  322     | string_builder
  323     | make_decl
  324     | "true"
  325     | "false"
  326     | expr_field
  327     | expr_mtag
  328     | '!' expr
  329     | '~' expr
  330     | '+' expr
  331     | '-' expr
  332     | expr "<<" expr
  333     | expr ">>" expr
  334     | expr "<<<" expr
  335     | expr ">>>" expr
  336     | expr '+' expr
  337     | expr '-' expr
  338     | expr '*' expr
  339     | expr '/' expr
  340     | expr '%' expr
  341     | expr '<' expr
  342     | expr '>' expr
  343     | expr "==" expr
  344     | expr "!=" expr
  345     | expr "<=" expr
  346     | expr ">=" expr
  347     | expr '&' expr
  348     | expr '|' expr
  349     | expr '^' expr
  350     | expr "&&" expr
  351     | expr "||" expr
  352     | expr "^^" expr
  353     | expr ".." expr
  354     | "++" expr
  355     | "--" expr
  356     | expr "++"
  357     | expr "--"
  358     | '(' expr ')'
  359     | expr '[' expr ']'
  360     | expr '.' '[' expr ']'
  361     | expr "?[" expr ']'
  362     | expr '.' "?[" expr ']'
  363     | expr "?." "name"
  364     | expr '.' "?." "name"
  365     | func_addr_expr
  366     | name_in_namespace '(' ')'
  367     | name_in_namespace '(' expr_list ')'
  368     | basic_type_declaration '(' ')'
  369     | basic_type_declaration '(' expr_list ')'
  370     | '*' expr
  371     | "deref" '(' expr ')'
  372     | "addr" '(' expr ')'
  373     | "generator" '<' type_declaration '>' optional_capture_list '(' ')'
  374     | "generator" '<' type_declaration '>' optional_capture_list '(' expr ')'
  375     | expr "??" expr
  376     | expr '?' expr ':' expr

  377 $@20: %empty

  378 $@21: %empty

  379 expr: expr "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr "is" basic_type_declaration
  381     | expr "is" "name"
  382     | expr "as" "name"

  383 $@22: %empty

  384 $@23: %empty

  385 expr: expr "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr "as" basic_type_declaration
  387     | expr '?' "as" "name"

  388 $@24: %empty

  389 $@25: %empty

  390 expr: expr '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr '?' "as" basic_type_declaration
  392     | expr_type_info
  393     | expr_type_decl
  394     | expr_cast
  395     | expr_new
  396     | expr_method_call
  397     | expr_named_call
  398     | expr_block
  399     | expr "<|" expr
  400     | expr "|>" expr
  401     | name_in_namespace "name"
  402     | "unsafe" '(' expr ')'

  403 expr_mtag: "$$" '(' expr ')'
  404          | "$i" '(' expr ')'
  405          | "$v" '(' expr ')'
  406          | "$b" '(' expr ')'
  407          | "$a" '(' expr ')'
  408          | "$c" '(' expr ')' '(' ')'
  409          | "$c" '(' expr ')' '(' expr_list ')'
  410          | expr '.' "$f" '(' expr ')'
  411          | expr "?." "$f" '(' expr ')'
  412          | expr '.' '.' "$f" '(' expr ')'
  413          | expr '.' "?." "$f" '(' expr ')'
  414          | expr "as" "$f" '(' expr ')'
  415          | expr '?' "as" "$f" '(' expr ')'
  416          | expr "is" "$f" '(' expr ')'
  417          | '@' '@' "$c" '(' expr ')'

  418 optional_field_annotation: %empty
  419                          | "[[" annotation_argument_list ']' ']'

  420 optional_override: %empty
  421                  | "override"
  422                  | "sealed"

  423 optional_constant: %empty
  424                  | "const"

  425 optional_public_or_private_member_variable: %empty
  426                                           | "public"
  427                                           | "private"

  428 structure_variable_declaration: optional_field_annotation optional_override optional_public_or_private_member_variable variable_declaration

  429 struct_variable_declaration_list: %empty

  430 $@26: %empty

  431 struct_variable_declaration_list: struct_variable_declaration_list $@26 structure_variable_declaration ';'

  432 $@27: %empty

  433 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" $@27 function_declaration_header ';'

  434 $@28: %empty

  435 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant $@28 function_declaration_header expression_block
  436                                 | struct_variable_declaration_list '[' annotation_list ']' ';'

  437 function_argument_declaration: optional_field_annotation variable_declaration
  438                              | optional_field_annotation "var" variable_declaration
  439                              | "$a" '(' expr ')'

  440 function_argument_list: function_argument_declaration
  441                       | function_argument_list ';' function_argument_declaration

  442 tuple_type: type_declaration
  443           | "name" ':' type_declaration

  444 tuple_type_list: tuple_type
  445                | tuple_type_list ';' tuple_type

  446 variant_type: "name" ':' type_declaration

  447 variant_type_list: variant_type
  448                  | variant_type_list ';' variant_type

  449 copy_or_move: '='
  450             | "<-"

  451 variable_declaration: variable_name_with_pos_list
  452                     | variable_name_with_pos_list '&'
  453                     | variable_name_with_pos_list ':' type_declaration
  454                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  455                     | variable_name_with_pos_list copy_or_move expr
  456                     | variable_name_with_pos_list copy_or_move expr_pipe

  457 copy_or_move_or_clone: '='
  458                      | "<-"
  459                      | ":="

  460 optional_ref: %empty
  461             | '&'

  462 let_variable_name_with_pos_list: "name"
  463                                | "$i" '(' expr ')'
  464                                | "name" "aka" "name"
  465                                | let_variable_name_with_pos_list ',' "name"
  466                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  467 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration ';'
  468                         | let_variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone expr ';'
  469                         | let_variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone expr_pipe
  470                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';'
  471                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  472 global_variable_declaration_list: %empty

  473 $@29: %empty

  474 global_variable_declaration_list: global_variable_declaration_list $@29 optional_field_annotation let_variable_declaration

  475 optional_shared: %empty
  476                | "shared"

  477 optional_public_or_private_variable: %empty
  478                                    | "private"
  479                                    | "public"

  480 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  481 $@30: %empty

  482 global_let: kwd_let optional_shared optional_public_or_private_variable $@30 optional_field_annotation let_variable_declaration

  483 enum_list: %empty
  484          | enum_list "name" ';'
  485          | enum_list "name" '=' expr ';'

  486 $@31: %empty

  487 single_alias: "name" $@31 '=' type_declaration

  488 alias_list: single_alias ';'
  489           | alias_list single_alias ';'

  490 alias_declaration: "typedef" '{' alias_list '}'
  491                  | "typedef" single_alias

  492 optional_public_or_private_enum: %empty
  493                                | "private"
  494                                | "public"

  495 enum_name: "name"

  496 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' enum_list '}'
  497                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list '}'

  498 optional_structure_parent: %empty
  499                          | ':' name_in_namespace

  500 optional_sealed: %empty
  501                | "sealed"

  502 structure_name: optional_sealed "name" optional_structure_parent

  503 class_or_struct: "class"
  504                | "struct"

  505 optional_public_or_private_structure: %empty
  506                                     | "private"
  507                                     | "public"

  508 $@32: %empty

  509 $@33: %empty

  510 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name $@33 '{' struct_variable_declaration_list '}'

  511 variable_name_with_pos_list: "name"
  512                            | "$i" '(' expr ')'
  513                            | "name" "aka" "name"
  514                            | variable_name_with_pos_list ',' "name"
  515                            | variable_name_with_pos_list ',' "name" "aka" "name"

  516 basic_type_declaration: "bool"
  517                       | "string"
  518                       | "int"
  519                       | "int8"
  520                       | "int16"
  521                       | "int64"
  522                       | "int2"
  523                       | "int3"
  524                       | "int4"
  525                       | "uint"
  526                       | "uint8"
  527                       | "uint16"
  528                       | "uint64"
  529                       | "uint2"
  530                       | "uint3"
  531                       | "uint4"
  532                       | "float"
  533                       | "float2"
  534                       | "float3"
  535                       | "float4"
  536                       | "void"
  537                       | "range"
  538                       | "urange"
  539                       | "double"
  540                       | "bitfield"

  541 enum_basic_type_declaration: "int"
  542                            | "int8"
  543                            | "int16"
  544                            | "uint"
  545                            | "uint8"
  546                            | "uint16"

  547 structure_type_declaration: name_in_namespace

  548 auto_type_declaration: "auto"
  549                      | "auto" '(' "name" ')'
  550                      | "$t" '(' expr ')'

  551 bitfield_bits: "name"
  552              | bitfield_bits ';' "name"

  553 $@34: %empty

  554 $@35: %empty

  555 bitfield_type_declaration: "bitfield" '<' $@34 bitfield_bits '>' $@35

  556 table_type_pair: type_declaration
  557                | type_declaration ';' type_declaration

  558 type_declaration: basic_type_declaration
  559                 | auto_type_declaration
  560                 | bitfield_type_declaration
  561                 | structure_type_declaration
  562                 | type_declaration '[' expr ']'
  563                 | type_declaration '[' ']'
  564                 | type_declaration '-' '[' ']'
  565                 | type_declaration "explicit"
  566                 | type_declaration "const"
  567                 | type_declaration '-' "const"
  568                 | type_declaration '&'
  569                 | type_declaration '-' '&'
  570                 | type_declaration '#'
  571                 | type_declaration "implicit"
  572                 | type_declaration '-' '#'
  573                 | type_declaration '=' "const"
  574                 | type_declaration '?'

  575 $@36: %empty

  576 $@37: %empty

  577 type_declaration: "smart_ptr" '<' $@36 type_declaration '>' $@37
  578                 | type_declaration "??"

  579 $@38: %empty

  580 $@39: %empty

  581 type_declaration: "array" '<' $@38 type_declaration '>' $@39

  582 $@40: %empty

  583 $@41: %empty

  584 type_declaration: "table" '<' $@40 table_type_pair '>' $@41

  585 $@42: %empty

  586 $@43: %empty

  587 type_declaration: "iterator" '<' $@42 type_declaration '>' $@43
  588                 | "block"

  589 $@44: %empty

  590 $@45: %empty

  591 type_declaration: "block" '<' $@44 type_declaration '>' $@45

  592 $@46: %empty

  593 $@47: %empty

  594 type_declaration: "block" '<' $@46 optional_function_argument_list optional_function_type '>' $@47
  595                 | "function"

  596 $@48: %empty

  597 $@49: %empty

  598 type_declaration: "function" '<' $@48 type_declaration '>' $@49

  599 $@50: %empty

  600 $@51: %empty

  601 type_declaration: "function" '<' $@50 optional_function_argument_list optional_function_type '>' $@51
  602                 | "lambda"

  603 $@52: %empty

  604 $@53: %empty

  605 type_declaration: "lambda" '<' $@52 type_declaration '>' $@53

  606 $@54: %empty

  607 $@55: %empty

  608 type_declaration: "lambda" '<' $@54 optional_function_argument_list optional_function_type '>' $@55

  609 $@56: %empty

  610 $@57: %empty

  611 type_declaration: "tuple" '<' $@56 tuple_type_list '>' $@57

  612 $@58: %empty

  613 $@59: %empty

  614 type_declaration: "variant" '<' $@58 variant_type_list '>' $@59

  615 $@60: %empty

  616 $@61: %empty

  617 variant_alias_declaration: "variant" $@60 "name" $@61 '{' variant_type_list ';' '}'

  618 $@62: %empty

  619 bitfield_alias_declaration: "bitfield" $@62 "name" '{' bitfield_bits ';' '}'

  620 make_decl: make_struct_decl
  621          | make_dim_decl
  622          | make_table_decl
  623          | array_comprehension

  624 make_struct_fields: "name" copy_or_move expr
  625                   | "name" ":=" expr
  626                   | make_struct_fields ',' "name" copy_or_move expr
  627                   | make_struct_fields ',' "name" ":=" expr

  628 make_struct_dim: make_struct_fields
  629                | make_struct_dim ';' make_struct_fields

  630 optional_block: %empty
  631               | "where" expr_block

  632 make_struct_decl: "[[" type_declaration make_struct_dim optional_block ']' ']'
  633                 | "[[" type_declaration optional_block ']' ']'
  634                 | "[[" type_declaration '(' ')' optional_block ']' ']'
  635                 | "[[" type_declaration '(' ')' make_struct_dim optional_block ']' ']'
  636                 | "[{" type_declaration make_struct_dim optional_block '}' ']'
  637                 | "[{" type_declaration '(' ')' make_struct_dim optional_block '}' ']'

  638 make_tuple: expr
  639           | make_tuple ',' expr

  640 make_map_tuple: expr "=>" expr
  641               | expr

  642 make_any_tuple: make_tuple
  643               | make_map_tuple

  644 make_dim: make_any_tuple
  645         | make_dim ';' make_any_tuple

  646 make_dim_decl: "[[" type_declaration make_dim ']' ']'
  647              | "[{" type_declaration make_dim '}' ']'

  648 make_table: make_map_tuple
  649           | make_table ';' make_map_tuple

  650 make_table_decl: "{{" make_table '}' '}'

  651 array_comprehension_where: %empty
  652                          | ';' "where" expr

  653 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'
  654                    | "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 103 328
    '#' (35) 570 572
    '$' (36) 17 259
    '%' (37) 32 36 123 340
    '&' (38) 131 262 347 452 461 568 569
    '(' (40) 85 92 98 99 219 220 251 252 253 301 302 303 305 358 366 367 368 369 371 372 373 374 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 439 463 512 549 550 634 635 637
    ')' (41) 85 92 98 99 219 220 251 252 253 301 302 303 305 358 366 367 368 369 371 372 373 374 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 439 463 512 549 550 634 635 637
    '*' (42) 121 338 370
    '+' (43) 119 330 336
    ',' (44) 45 74 87 94 255 267 465 466 514 515 626 627 639
    '-' (45) 120 331 337 564 567 569 572
    '.' (46) 37 148 313 314 317 360 362 364 410 412 413
    '/' (47) 38 122 339
    ':' (58) 47 48 101 376 443 446 453 454 467 468 469 497 499
    ';' (59) 13 61 188 191 192 199 200 205 206 207 224 225 226 230 231 232 253 431 433 436 441 445 448 467 468 470 484 485 488 489 552 557 617 619 629 645 649 652 653 654
    '<' (60) 124 241 244 247 250 252 253 309 312 341 373 374 379 385 390 555 577 581 584 587 591 594 598 601 605 608 611 614
    '=' (61) 66 78 79 80 81 82 83 85 263 279 297 298 449 457 485 487 573
    '>' (62) 125 241 244 247 250 252 253 309 312 342 373 374 379 385 390 555 577 581 584 587 591 594 598 601 605 608 611 614
    '?' (63) 155 376 387 390 391 415 574
    '@' (64) 260 261 306 309 312 417
    '[' (91) 96 146 301 359 360 436 562 563 564
    ']' (93) 96 146 147 269 301 359 360 361 362 419 436 562 563 564 632 633 634 635 636 637 646 647 653 654
    '^' (94) 133 349
    '{' (123) 186 187 480 490 496 497 510 617 619
    '|' (124) 132 348
    '}' (125) 186 187 480 490 496 497 510 617 619 636 637 647 650 654
    '~' (126) 104 329
    error (256) 210 317
    "lexer error" (258)
    "struct" (259) 504
    "class" (260) 503
    "let" (261) 236
    "def" (262) 179 433 435
    "while" (263) 63
    "if" (264) 56 60 230
    "static_if" (265) 57
    "else" (266) 54
    "for" (267) 61 653 654
    "recover" (268) 235
    "true" (269) 71 82 324
    "false" (270) 72 83 325
    "new" (271) 218 219 220 221
    "typeinfo" (272) 251 252 253
    "type" (273) 76 250 379 385 390
    "in" (274) 61 77 653 654
    "is" (275) 153 379 380 381 416
    "as" (276) 40 154 155 382 385 386 387 390 391 414 415
    "elif" (277) 51
    "static_elif" (278) 52
    "array" (279) 581
    "return" (280) 224 225 226 227 228 230
    "null" (281) 318
    "break" (282) 222
    "try" (283) 235
    "options" (284) 33
    "table" (285) 584
    "expect" (286) 43
    "const" (287) 424 566 567 573
    "require" (288) 34 89
    "operator" (289) 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155
    "enum" (290) 496 497
    "finally" (291) 187
    "delete" (292) 151 217
    "deref" (293) 371
    "typedef" (294) 490 491
    "with" (295) 64
    "aka" (296) 464 466 513 515
    "assume" (297) 66
    "cast" (298) 241
    "override" (299) 421
    "abstract" (300) 433
    "upcast" (301) 244
    "iterator" (302) 587
    "var" (303) 237 438
    "addr" (304) 372
    "continue" (305) 223
    "where" (306) 631 652
    "pass" (307) 207
    "reinterpret" (308) 247
    "module" (309) 19
    "public" (310) 15 42 182 426 479 494 507
    "label" (311) 48 49
    "goto" (312) 49 50
    "implicit" (313) 571
    "explicit" (314) 565
    "shared" (315) 476
    "private" (316) 16 90 181 427 478 493 506
    "smart_ptr" (317) 577
    "unsafe" (318) 62 402
    "bool" (319) 156 516
    "void" (320) 536
    "string" (321) 157 517
    "auto" (322) 548 549
    "int" (323) 158 518 541
    "int2" (324) 159 522
    "int3" (325) 160 523
    "int4" (326) 161 524
    "uint" (327) 162 525 544
    "bitfield" (328) 540 555 619
    "uint2" (329) 163 529
    "uint3" (330) 164 530
    "uint4" (331) 165 531
    "float" (332) 166 532
    "float2" (333) 167 533
    "float3" (334) 168 534
    "float4" (335) 169 535
    "range" (336) 170 537
    "urange" (337) 171 538
    "block" (338) 588 591 594
    "int64" (339) 172 521
    "uint64" (340) 173 528
    "double" (341) 174 539
    "function" (342) 595 598 601
    "lambda" (343) 602 605 608
    "int8" (344) 175 519 542
    "uint8" (345) 176 526 545
    "int16" (346) 177 520 543
    "uint16" (347) 178 527 546
    "tuple" (348) 611
    "variant" (349) 614 617
    "generator" (350) 373 374
    "yield" (351) 231 232 233 234
    "sealed" (352) 422 501
    "+=" (353) 105 288
    "-=" (354) 106 289
    "/=" (355) 108 291
    "*=" (356) 107 290
    "%=" (357) 109 292
    "&=" (358) 110 282
    "|=" (359) 111 283
    "^=" (360) 112 284
    "<<" (361) 138 332
    ">>" (362) 139 333
    "++" (363) 134 136 354 356
    "--" (364) 135 137 355 357
    "<=" (365) 129 345
    "<<=" (366) 140 293
    ">>=" (367) 141 294
    ">=" (368) 130 346
    "==" (369) 127 343
    "!=" (370) 128 344
    "->" (371) 302 303
    "<-" (372) 226 228 232 234 258 264 280 299 300 450 458
    "??" (373) 152 375 578
    "?." (374) 149 363 364 411 413
    "?[" (375) 147 361 362
    "<|" (376) 399
    " <|" (377) 211
    "@ <|" (378) 212 297 299
    "@@ <|" (379) 213 298 300
    "|>" (380) 400
    ":=" (381) 150 265 281 459 625 627
    "<<<" (382) 142 334
    ">>>" (383) 143 335
    "<<<=" (384) 144 295
    ">>>=" (385) 145 296
    "=>" (386) 257 258 640
    "::" (387) 215 216
    "&&" (388) 116 350
    "||" (389) 117 351
    "^^" (390) 118 352
    "&&=" (391) 113 285
    "||=" (392) 114 286
    "^^=" (393) 115 287
    ".." (394) 126 353
    "$$" (395) 403
    "$i" (396) 305 404 463 512
    "$v" (397) 405
    "$b" (398) 406
    "$a" (399) 407 439
    "$t" (400) 550
    "$c" (401) 408 409 417
    "$f" (402) 410 411 412 413 414 415 416
    "[[" (403) 269 419 632 633 634 635 646 653
    "[{" (404) 636 637 647 654
    "{{" (405) 650
    "integer constant" <i> (406) 46 47 48 49 69 80 272
    "long integer constant" <i64> (407) 274
    "unsigned integer constant" <ui> (408) 273
    "unsigned long integer constant" <ui64> (409) 275
    "floating point constant" <fd> (410) 70 81 276
    "double constant" <d> (411) 277
    "name" <s> (412) 18 35 37 38 40 66 68 75 79 102 214 215 216 252 253 262 263 264 265 302 303 313 314 363 364 381 382 387 401 443 446 462 464 465 466 484 485 487 495 502 511 513 514 515 549 551 552 617 619 624 625 626 627
    "start of the string" (413) 24 28
    STRING_CHARACTER <ch> (414) 20 22 29 30
    STRING_CHARACTER_ESC (415) 21 23
    "end of the string" (416) 24 28
    "{" (417) 27
    "}" (418) 27
    "end of failed eader macro" (419)
    UNARY_MINUS (420)
    UNARY_PLUS (421)
    PRE_INC (422)
    PRE_DEC (423)
    POST_INC (424)
    POST_DEC (425)
    DEREF (426)


Nonterminals, with rules where they appear

    $accept (199)
        on left: 0
    program (200)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13
    optional_public_or_private_module <b> (201)
        on left: 14 15 16
        on right: 19
    module_name <s> (202)
        on left: 17 18
        on right: 19
    module_declaration (203)
        on left: 19
        on right: 2
    character_sequence <s> (204)
        on left: 20 21 22 23
        on right: 22 23 24 26
    string_constant <s> (205)
        on left: 24
        on right: 67 78
    string_builder_body <pExpression> (206)
        on left: 25 26 27
        on right: 26 27 28
    string_builder <pExpression> (207)
        on left: 28
        on right: 322
    reader_character_sequence (208)
        on left: 29 30
        on right: 30 32
    expr_reader <pExpression> (209)
        on left: 32
        on right: 321
    $@1 (210)
        on left: 31
        on right: 32
    options_declaration (211)
        on left: 33
        on right: 9
    require_declaration (212)
        on left: 34
        on right: 8
    require_module_name <s> (213)
        on left: 35 36 37 38
        on right: 36 37 38 39 40
    require_module (214)
        on left: 39 40
        on right: 34
    is_public_module <b> (215)
        on left: 41 42
        on right: 39 40
    expect_declaration (216)
        on left: 43
        on right: 7
    expect_list (217)
        on left: 44 45
        on right: 43 45
    expect_error (218)
        on left: 46 47
        on right: 44 45
    expression_label <pExpression> (219)
        on left: 48
        on right: 205
    expression_goto <pExpression> (220)
        on left: 49 50
        on right: 206
    elif_or_static_elif <b> (221)
        on left: 51 52
        on right: 55
    expression_else <pExpression> (222)
        on left: 53 54 55
        on right: 55 58
    if_or_static_if <b> (223)
        on left: 56 57
        on right: 58
    expression_if_then_else <pExpression> (224)
        on left: 58 60
        on right: 203
    $@2 (225)
        on left: 59
        on right: 60
    expression_for_loop <pExpression> (226)
        on left: 61
        on right: 198
    expression_unsafe <pExpression> (227)
        on left: 62
        on right: 195
    expression_while_loop <pExpression> (228)
        on left: 63
        on right: 194
    expression_with <pExpression> (229)
        on left: 64
        on right: 196
    expression_with_alias <pExpression> (230)
        on left: 66
        on right: 197
    $@3 (231)
        on left: 65
        on right: 66
    annotation_argument_value <aa> (232)
        on left: 67 68 69 70 71 72
        on right: 73 74
    annotation_argument_value_list <aaList> (233)
        on left: 73 74
        on right: 74 85
    annotation_argument_name <s> (234)
        on left: 75 76 77
        on right: 78 79 80 81 82 83 84 85
    annotation_argument <aa> (235)
        on left: 78 79 80 81 82 83 84 85
        on right: 86 87
    annotation_argument_list <aaList> (236)
        on left: 86 87
        on right: 33 87 92 419
    annotation_declaration_name <s> (237)
        on left: 88 89 90
        on right: 91 92
    annotation_declaration <fa> (238)
        on left: 91 92
        on right: 93 94
    annotation_list <faList> (239)
        on left: 93 94
        on right: 94 96 436
    optional_annotation_list <faList> (240)
        on left: 95 96
        on right: 179 271 433 435 496 497 510
    optional_function_argument_list <pVarDeclList> (241)
        on left: 97 98 99
        on right: 183 271 312 594 601 608
    optional_function_type <pTypeDecl> (242)
        on left: 100 101
        on right: 183 271 312 594 601 608
    function_name <s> (243)
        on left: 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178
        on right: 183
    global_function_declaration (244)
        on left: 179
        on right: 6
    optional_public_or_private_function <b> (245)
        on left: 180 181 182
        on right: 185
    function_declaration_header <pFuncDecl> (246)
        on left: 183
        on right: 185 433 435
    function_declaration <pFuncDecl> (247)
        on left: 185
        on right: 179
    $@4 (248)
        on left: 184
        on right: 185
    expression_block <pExpression> (249)
        on left: 186 187
        on right: 54 55 58 61 62 63 64 185 235 256 270 435
    expression_any <pExpression> (250)
        on left: 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207
        on right: 209
    expressions <pExpression> (251)
        on left: 208 209 210
        on right: 186 187 209 210
    expr_pipe <pExpression> (252)
        on left: 211 212 213
        on right: 189 227 228 233 234 456 469 471
    name_in_namespace <s> (253)
        on left: 214 215 216
        on right: 32 88 251 252 253 301 304 319 366 367 401 499 547
    expression_delete <pExpression> (254)
        on left: 217
        on right: 192
    expr_new <pExpression> (255)
        on left: 218 219 220 221
        on right: 395
    expression_break <pExpression> (256)
        on left: 222
        on right: 199
    expression_continue <pExpression> (257)
        on left: 223
        on right: 200
    expression_return <pExpression> (258)
        on left: 224 225 226 227 228 230
        on right: 201
    $@5 (259)
        on left: 229
        on right: 230
    expression_yield <pExpression> (260)
        on left: 231 232 233 234
        on right: 202
    expression_try_catch <pExpression> (261)
        on left: 235
        on right: 204
    kwd_let <b> (262)
        on left: 236 237
        on right: 238 480 482
    expression_let <pExpression> (263)
        on left: 238
        on right: 193
    expr_cast <pExpression> (264)
        on left: 241 244 247
        on right: 394
    $@6 (265)
        on left: 239
        on right: 241
    $@7 (266)
        on left: 240
        on right: 241
    $@8 (267)
        on left: 242
        on right: 244
    $@9 (268)
        on left: 243
        on right: 244
    $@10 (269)
        on left: 245
        on right: 247
    $@11 (270)
        on left: 246
        on right: 247
    expr_type_decl <pExpression> (271)
        on left: 250
        on right: 393
    $@12 (272)
        on left: 248
        on right: 250
    $@13 (273)
        on left: 249
        on right: 250
    expr_type_info <pExpression> (274)
        on left: 251 252 253
        on right: 392
    expr_list <pExpression> (275)
        on left: 254 255
        on right: 61 220 255 303 367 369 409 653 654
    block_or_simple_block <pExpression> (276)
        on left: 256 257 258
        on right: 271
    block_or_lambda <i> (277)
        on left: 259 260 261
        on right: 271
    capture_entry <pCapt> (278)
        on left: 262 263 264 265
        on right: 266 267
    capture_list <pCaptList> (279)
        on left: 266 267
        on right: 267 269
    optional_capture_list <pCaptList> (280)
        on left: 268 269
        on right: 271 373 374
    expr_block <pExpression> (281)
        on left: 270 271
        on right: 211 212 213 398 631
    expr_numeric_const <pExpression> (282)
        on left: 272 273 274 275 276 277
        on right: 320
    expr_assign <pExpression> (283)
        on left: 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296
        on right: 191 211
    expr_assign_pipe <pExpression> (284)
        on left: 297 298 299 300
        on right: 190
    expr_named_call <pExpression> (285)
        on left: 301
        on right: 397
    expr_method_call <pExpression> (286)
        on left: 302 303
        on right: 396
    func_addr_name <pExpression> (287)
        on left: 304 305
        on right: 306 309 312
    func_addr_expr <pExpression> (288)
        on left: 306 309 312
        on right: 365
    $@14 (289)
        on left: 307
        on right: 309
    $@15 (290)
        on left: 308
        on right: 309
    $@16 (291)
        on left: 310
        on right: 312
    $@17 (292)
        on left: 311
        on right: 312
    expr_field <pExpression> (293)
        on left: 313 314 317
        on right: 326
    $@18 (294)
        on left: 315
        on right: 317
    $@19 (295)
        on left: 316
        on right: 317
    expr <pExpression> (296)
        on left: 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 379 380 381 382 385 386 387 390 391 392 393 394 395 396 397 398 399 400 401 402
        on right
    $@20 (297)
        on left: 377
        on right: 379
    $@21 (298)
        on left: 378
        on right: 379
    $@22 (299)
        on left: 383
        on right: 385
    $@23 (300)
        on left: 384
        on right: 385
    $@24 (301)
        on left: 388
        on right: 390
    $@25 (302)
        on left: 389
        on right: 390
    expr_mtag <pExpression> (303)
        on left: 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417
        on right: 327
    optional_field_annotation <aaList> (304)
        on left: 418 419
        on right: 428 437 438 474 482
    optional_override <i> (305)
        on left: 420 421 422
        on right: 428 435
    optional_constant <b> (306)
        on left: 423 424
        on right: 435
    optional_public_or_private_member_variable <b> (307)
        on left: 425 426 427
        on right: 428 433 435
    structure_variable_declaration <pVarDecl> (308)
        on left: 428
        on right: 431
    struct_variable_declaration_list <pVarDeclList> (309)
        on left: 429 431 433 435 436
        on right: 431 433 435 436 510
    $@26 (310)
        on left: 430
        on right: 431
    $@27 (311)
        on left: 432
        on right: 433
    $@28 (312)
        on left: 434
        on right: 435
    function_argument_declaration <pVarDecl> (313)
        on left: 437 438 439
        on right: 440 441
    function_argument_list <pVarDeclList> (314)
        on left: 440 441
        on right: 99 441
    tuple_type <pVarDecl> (315)
        on left: 442 443
        on right: 444 445
    tuple_type_list <pVarDeclList> (316)
        on left: 444 445
        on right: 445 611
    variant_type <pVarDecl> (317)
        on left: 446
        on right: 447 448
    variant_type_list <pVarDeclList> (318)
        on left: 447 448
        on right: 448 614 617
    copy_or_move <b> (319)
        on left: 449 450
        on right: 454 455 456 624 626
    variable_declaration <pVarDecl> (320)
        on left: 451 452 453 454 455 456
        on right: 428 437 438
    copy_or_move_or_clone <i> (321)
        on left: 457 458 459
        on right: 468 469 470 471
    optional_ref <b> (322)
        on left: 460 461
        on right: 470 471
    let_variable_name_with_pos_list <pNameWithPosList> (323)
        on left: 462 463 464 465 466
        on right: 465 466 467 468 469 470 471
    let_variable_declaration <pVarDecl> (324)
        on left: 467 468 469 470 471
        on right: 238 474 482
    global_variable_declaration_list <pVarDeclList> (325)
        on left: 472 474
        on right: 474 480
    $@29 (326)
        on left: 473
        on right: 474
    optional_shared <b> (327)
        on left: 475 476
        on right: 19 480 482
    optional_public_or_private_variable <b> (328)
        on left: 477 478 479
        on right: 480 482
    global_let (329)
        on left: 480 482
        on right: 5
    $@30 (330)
        on left: 481
        on right: 482
    enum_list <pEnum> (331)
        on left: 483 484 485
        on right: 484 485 496 497
    single_alias (332)
        on left: 487
        on right: 488 489 491
    $@31 (333)
        on left: 486
        on right: 487
    alias_list (334)
        on left: 488 489
        on right: 489 490
    alias_declaration (335)
        on left: 490 491
        on right: 10
    optional_public_or_private_enum <b> (336)
        on left: 492 493 494
        on right: 496 497
    enum_name <pEnum> (337)
        on left: 495
        on right: 496 497
    enum_declaration (338)
        on left: 496 497
        on right: 4
    optional_structure_parent <s> (339)
        on left: 498 499
        on right: 502
    optional_sealed <b> (340)
        on left: 500 501
        on right: 502
    structure_name <pStructure> (341)
        on left: 502
        on right: 510
    class_or_struct <b> (342)
        on left: 503 504
        on right: 510
    optional_public_or_private_structure <b> (343)
        on left: 505 506 507
        on right: 510
    structure_declaration (344)
        on left: 510
        on right: 3
    $@32 (345)
        on left: 508
        on right: 510
    $@33 (346)
        on left: 509
        on right: 510
    variable_name_with_pos_list <pNameWithPosList> (347)
        on left: 511 512 513 514 515
        on right: 61 451 452 453 454 455 456 514 515 653 654
    basic_type_declaration <type> (348)
        on left: 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540
        on right: 368 369 380 386 391 558
    enum_basic_type_declaration <type> (349)
        on left: 541 542 543 544 545 546
        on right: 497
    structure_type_declaration <pTypeDecl> (350)
        on left: 547
        on right: 561
    auto_type_declaration <pTypeDecl> (351)
        on left: 548 549 550
        on right: 559
    bitfield_bits <pNameList> (352)
        on left: 551 552
        on right: 552 555 619
    bitfield_type_declaration <pTypeDecl> (353)
        on left: 555
        on right: 560
    $@34 (354)
        on left: 553
        on right: 555
    $@35 (355)
        on left: 554
        on right: 555
    table_type_pair <aTypePair> (356)
        on left: 556 557
        on right: 584
    type_declaration <pTypeDecl> (357)
        on left: 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 577 578 581 584 587 588 591 594 595 598 601 602 605 608 611 614
        on right: 101 218 219 220 241 244 247 250 309 373 374 379 385 390 442 443 446 453 454 467 468 469 487 556 557 562 563 564 565 566 567 568 569 570 571 572 573 574 577 578 581 587 591 598 605 632 633 634 635 636 637 646 647
    $@36 (358)
        on left: 575
        on right: 577
    $@37 (359)
        on left: 576
        on right: 577
    $@38 (360)
        on left: 579
        on right: 581
    $@39 (361)
        on left: 580
        on right: 581
    $@40 (362)
        on left: 582
        on right: 584
    $@41 (363)
        on left: 583
        on right: 584
    $@42 (364)
        on left: 585
        on right: 587
    $@43 (365)
        on left: 586
        on right: 587
    $@44 (366)
        on left: 589
        on right: 591
    $@45 (367)
        on left: 590
        on right: 591
    $@46 (368)
        on left: 592
        on right: 594
    $@47 (369)
        on left: 593
        on right: 594
    $@48 (370)
        on left: 596
        on right: 598
    $@49 (371)
        on left: 597
        on right: 598
    $@50 (372)
        on left: 599
        on right: 601
    $@51 (373)
        on left: 600
        on right: 601
    $@52 (374)
        on left: 603
        on right: 605
    $@53 (375)
        on left: 604
        on right: 605
    $@54 (376)
        on left: 606
        on right: 608
    $@55 (377)
        on left: 607
        on right: 608
    $@56 (378)
        on left: 609
        on right: 611
    $@57 (379)
        on left: 610
        on right: 611
    $@58 (380)
        on left: 612
        on right: 614
    $@59 (381)
        on left: 613
        on right: 614
    variant_alias_declaration (382)
        on left: 617
        on right: 11
    $@60 (383)
        on left: 615
        on right: 617
    $@61 (384)
        on left: 616
        on right: 617
    bitfield_alias_declaration (385)
        on left: 619
        on right: 12
    $@62 (386)
        on left: 618
        on right: 619
    make_decl <pExpression> (387)
        on left: 620 621 622 623
        on right: 221 323
    make_struct_fields <pMakeStruct> (388)
        on left: 624 625 626 627
        on right: 301 626 627 628 629
    make_struct_dim <pExpression> (389)
        on left: 628 629
        on right: 629 632 635 636 637
    optional_block <pExpression> (390)
        on left: 630 631
        on right: 632 633 634 635 636 637
    make_struct_decl <pExpression> (391)
        on left: 632 633 634 635 636 637
        on right: 620
    make_tuple <pExpression> (392)
        on left: 638 639
        on right: 639 642
    make_map_tuple <pExpression> (393)
        on left: 640 641
        on right: 643 648 649
    make_any_tuple <pExpression> (394)
        on left: 642 643
        on right: 644 645
    make_dim <pExpression> (395)
        on left: 644 645
        on right: 645 646 647
    make_dim_decl <pExpression> (396)
        on left: 646 647
        on right: 621
    make_table <pExpression> (397)
        on left: 648 649
        on right: 649 650
    make_table_decl <pExpression> (398)
        on left: 650
        on right: 622
    array_comprehension_where <pExpression> (399)
        on left: 651 652
        on right: 653 654
    array_comprehension <pExpression> (400)
        on left: 653 654
        on right: 623


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . bitfield_alias_declaration
   13        | program . ';'

    $end        shift, and go to state 2
    "let"       shift, and go to state 3
    "options"   shift, and go to state 4
    "expect"    shift, and go to state 5
    "require"   shift, and go to state 6
    "typedef"   shift, and go to state 7
    "var"       shift, and go to state 8
    "module"    shift, and go to state 9
    "bitfield"  shift, and go to state 10
    "variant"   shift, and go to state 11
    '['         shift, and go to state 12
    ';'         shift, and go to state 13

    $default  reduce using rule 95 (optional_annotation_list)

    module_declaration           go to state 14
    options_declaration          go to state 15
    require_declaration          go to state 16
    expect_declaration           go to state 17
    optional_annotation_list     go to state 18
    global_function_declaration  go to state 19
    kwd_let                      go to state 20
    global_let                   go to state 21
    alias_declaration            go to state 22
    enum_declaration             go to state 23
    structure_declaration        go to state 24
    variant_alias_declaration    go to state 25
    bitfield_alias_declaration   go to state 26


State 2

    0 $accept: program $end .

    $default  accept


State 3

  236 kwd_let: "let" .

    $default  reduce using rule 236 (kwd_let)


State 4

   33 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 27
    "in"    shift, and go to state 28
    "name"  shift, and go to state 29

    annotation_argument_name  go to state 30
    annotation_argument       go to state 31
    annotation_argument_list  go to state 32


State 5

   43 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 33

    expect_list   go to state 34
    expect_error  go to state 35


State 6

   34 require_declaration: "require" . require_module

    "name"  shift, and go to state 36
    '%'     shift, and go to state 37

    require_module_name  go to state 38
    require_module       go to state 39


State 7

  490 alias_declaration: "typedef" . '{' alias_list '}'
  491                  | "typedef" . single_alias

    "name"  shift, and go to state 40
    '{'     shift, and go to state 41

    single_alias  go to state 42


State 8

  237 kwd_let: "var" .

    $default  reduce using rule 237 (kwd_let)


State 9

   19 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 43
    '$'     shift, and go to state 44

    module_name  go to state 45


State 10

  619 bitfield_alias_declaration: "bitfield" . $@62 "name" '{' bitfield_bits ';' '}'

    $default  reduce using rule 618 ($@62)

    $@62  go to state 46


State 11

  617 variant_alias_declaration: "variant" . $@60 "name" $@61 '{' variant_type_list ';' '}'

    $default  reduce using rule 615 ($@60)

    $@60  go to state 47


State 12

   96 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 48
    "private"  shift, and go to state 49
    "::"       shift, and go to state 50
    "name"     shift, and go to state 51

    annotation_declaration_name  go to state 52
    annotation_declaration       go to state 53
    annotation_list              go to state 54
    name_in_namespace            go to state 55


State 13

   13 program: program ';' .

    $default  reduce using rule 13 (program)


State 14

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 15

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 16

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 17

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 18

  179 global_function_declaration: optional_annotation_list . "def" function_declaration
  496 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name '{' enum_list '}'
  497                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list '}'
  510 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@32 structure_name $@33 '{' struct_variable_declaration_list '}'

    "struct"  shift, and go to state 56
    "class"   shift, and go to state 57
    "def"     shift, and go to state 58
    "enum"    shift, and go to state 59

    class_or_struct  go to state 60


State 19

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 20

  480 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  482           | kwd_let . optional_shared optional_public_or_private_variable $@30 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 61

    $default  reduce using rule 475 (optional_shared)

    optional_shared  go to state 62


State 21

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 22

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 23

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 24

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 25

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 26

   12 program: program bitfield_alias_declaration .

    $default  reduce using rule 12 (program)


State 27

   76 annotation_argument_name: "type" .

    $default  reduce using rule 76 (annotation_argument_name)


State 28

   77 annotation_argument_name: "in" .

    $default  reduce using rule 77 (annotation_argument_name)


State 29

   75 annotation_argument_name: "name" .

    $default  reduce using rule 75 (annotation_argument_name)


State 30

   78 annotation_argument: annotation_argument_name . '=' string_constant
   79                    | annotation_argument_name . '=' "name"
   80                    | annotation_argument_name . '=' "integer constant"
   81                    | annotation_argument_name . '=' "floating point constant"
   82                    | annotation_argument_name . '=' "true"
   83                    | annotation_argument_name . '=' "false"
   84                    | annotation_argument_name .
   85                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 63

    $default  reduce using rule 84 (annotation_argument)


State 31

   86 annotation_argument_list: annotation_argument .

    $default  reduce using rule 86 (annotation_argument_list)


State 32

   33 options_declaration: "options" annotation_argument_list .
   87 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 64

    $default  reduce using rule 33 (options_declaration)


State 33

   46 expect_error: "integer constant" .
   47             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 65

    $default  reduce using rule 46 (expect_error)


State 34

   43 expect_declaration: "expect" expect_list .
   45 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 66

    $default  reduce using rule 43 (expect_declaration)


State 35

   44 expect_list: expect_error .

    $default  reduce using rule 44 (expect_list)


State 36

   35 require_module_name: "name" .

    $default  reduce using rule 35 (require_module_name)


State 37

   36 require_module_name: '%' . require_module_name

    "name"  shift, and go to state 36
    '%'     shift, and go to state 37

    require_module_name  go to state 67


State 38

   37 require_module_name: require_module_name . '.' "name"
   38                    | require_module_name . '/' "name"
   39 require_module: require_module_name . is_public_module
   40               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 68
    "public"  shift, and go to state 69
    '/'       shift, and go to state 70
    '.'       shift, and go to state 71

    $default  reduce using rule 41 (is_public_module)

    is_public_module  go to state 72


State 39

   34 require_declaration: "require" require_module .

    $default  reduce using rule 34 (require_declaration)


State 40

  487 single_alias: "name" . $@31 '=' type_declaration

    $default  reduce using rule 486 ($@31)

    $@31  go to state 73


State 41

  490 alias_declaration: "typedef" '{' . alias_list '}'

    "name"  shift, and go to state 40

    single_alias  go to state 74
    alias_list    go to state 75


State 42

  491 alias_declaration: "typedef" single_alias .

    $default  reduce using rule 491 (alias_declaration)


State 43

   18 module_name: "name" .

    $default  reduce using rule 18 (module_name)


State 44

   17 module_name: '$' .

    $default  reduce using rule 17 (module_name)


State 45

   19 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 61

    $default  reduce using rule 475 (optional_shared)

    optional_shared  go to state 76


State 46

  619 bitfield_alias_declaration: "bitfield" $@62 . "name" '{' bitfield_bits ';' '}'

    "name"  shift, and go to state 77


State 47

  617 variant_alias_declaration: "variant" $@60 . "name" $@61 '{' variant_type_list ';' '}'

    "name"  shift, and go to state 78


State 48

   89 annotation_declaration_name: "require" .

    $default  reduce using rule 89 (annotation_declaration_name)


State 49

   90 annotation_declaration_name: "private" .

    $default  reduce using rule 90 (annotation_declaration_name)


State 50

  216 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 79


State 51

  214 name_in_namespace: "name" .
  215                  | "name" . "::" "name"

    "::"  shift, and go to state 80

    "::"      [reduce using rule 214 (name_in_namespace)]
    $default  reduce using rule 214 (name_in_namespace)


State 52

   91 annotation_declaration: annotation_declaration_name .
   92                       | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 81

    $default  reduce using rule 91 (annotation_declaration)


State 53

   93 annotation_list: annotation_declaration .

    $default  reduce using rule 93 (annotation_list)


State 54

   94 annotation_list: annotation_list . ',' annotation_declaration
   96 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 82
    ']'  shift, and go to state 83


State 55

   88 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 88 (annotation_declaration_name)


State 56

  504 class_or_struct: "struct" .

    $default  reduce using rule 504 (class_or_struct)


State 57

  503 class_or_struct: "class" .

    $default  reduce using rule 503 (class_or_struct)


State 58

  179 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 84
    "private"  shift, and go to state 85

    $default  reduce using rule 180 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 86
    function_declaration                 go to state 87


State 59

  496 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name '{' enum_list '}'
  497                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list '}'

    "public"   shift, and go to state 88
    "private"  shift, and go to state 89

    $default  reduce using rule 492 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 90


State 60

  510 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@32 structure_name $@33 '{' struct_variable_declaration_list '}'

    "public"   shift, and go to state 91
    "private"  shift, and go to state 92

    $default  reduce using rule 505 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 93


State 61

  476 optional_shared: "shared" .

    $default  reduce using rule 476 (optional_shared)


State 62

  480 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  482           | kwd_let optional_shared . optional_public_or_private_variable $@30 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 94
    "private"  shift, and go to state 95

    $default  reduce using rule 477 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 96


State 63

   78 annotation_argument: annotation_argument_name '=' . string_constant
   79                    | annotation_argument_name '=' . "name"
   80                    | annotation_argument_name '=' . "integer constant"
   81                    | annotation_argument_name '=' . "floating point constant"
   82                    | annotation_argument_name '=' . "true"
   83                    | annotation_argument_name '=' . "false"
   85                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 97
    "false"                    shift, and go to state 98
    "integer constant"         shift, and go to state 99
    "floating point constant"  shift, and go to state 100
    "name"                     shift, and go to state 101
    "start of the string"      shift, and go to state 102
    '('                        shift, and go to state 103

    string_constant  go to state 104


State 64

   87 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 27
    "in"    shift, and go to state 28
    "name"  shift, and go to state 29

    annotation_argument_name  go to state 30
    annotation_argument       go to state 105


State 65

   47 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 106


State 66

   45 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 33

    expect_error  go to state 107


State 67

   36 require_module_name: '%' require_module_name .
   37                    | require_module_name . '.' "name"
   38                    | require_module_name . '/' "name"

    '.'  shift, and go to state 71

    $default  reduce using rule 36 (require_module_name)


State 68

   40 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 108


State 69

   42 is_public_module: "public" .

    $default  reduce using rule 42 (is_public_module)


State 70

   38 require_module_name: require_module_name '/' . "name"

    "name"  shift, and go to state 109


State 71

   37 require_module_name: require_module_name '.' . "name"

    "name"  shift, and go to state 110


State 72

   39 require_module: require_module_name is_public_module .

    $default  reduce using rule 39 (require_module)


State 73

  487 single_alias: "name" $@31 . '=' type_declaration

    '='  shift, and go to state 111


State 74

  488 alias_list: single_alias . ';'

    ';'  shift, and go to state 112


State 75

  489 alias_list: alias_list . single_alias ';'
  490 alias_declaration: "typedef" '{' alias_list . '}'

    "name"  shift, and go to state 40
    '}'     shift, and go to state 113

    single_alias  go to state 114


State 76

   19 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 115
    "private"  shift, and go to state 116

    $default  reduce using rule 14 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 117


State 77

  619 bitfield_alias_declaration: "bitfield" $@62 "name" . '{' bitfield_bits ';' '}'

    '{'  shift, and go to state 118


State 78

  617 variant_alias_declaration: "variant" $@60 "name" . $@61 '{' variant_type_list ';' '}'

    $default  reduce using rule 616 ($@61)

    $@61  go to state 119


State 79

  216 name_in_namespace: "::" "name" .

    $default  reduce using rule 216 (name_in_namespace)


State 80

  215 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 120


State 81

   92 annotation_declaration: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 27
    "in"    shift, and go to state 28
    "name"  shift, and go to state 29

    annotation_argument_name  go to state 30
    annotation_argument       go to state 31
    annotation_argument_list  go to state 121


State 82

   94 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 48
    "private"  shift, and go to state 49
    "::"       shift, and go to state 50
    "name"     shift, and go to state 51

    annotation_declaration_name  go to state 52
    annotation_declaration       go to state 122
    name_in_namespace            go to state 55


State 83

   96 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 96 (optional_annotation_list)


State 84

  182 optional_public_or_private_function: "public" .

    $default  reduce using rule 182 (optional_public_or_private_function)


State 85

  181 optional_public_or_private_function: "private" .

    $default  reduce using rule 181 (optional_public_or_private_function)


State 86

  185 function_declaration: optional_public_or_private_function . $@4 function_declaration_header expression_block

    $default  reduce using rule 184 ($@4)

    $@4  go to state 123


State 87

  179 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 179 (global_function_declaration)


State 88

  494 optional_public_or_private_enum: "public" .

    $default  reduce using rule 494 (optional_public_or_private_enum)


State 89

  493 optional_public_or_private_enum: "private" .

    $default  reduce using rule 493 (optional_public_or_private_enum)


State 90

  496 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name '{' enum_list '}'
  497                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration '{' enum_list '}'

    "name"  shift, and go to state 124

    enum_name  go to state 125


State 91

  507 optional_public_or_private_structure: "public" .

    $default  reduce using rule 507 (optional_public_or_private_structure)


State 92

  506 optional_public_or_private_structure: "private" .

    $default  reduce using rule 506 (optional_public_or_private_structure)


State 93

  510 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@32 structure_name $@33 '{' struct_variable_declaration_list '}'

    $default  reduce using rule 508 ($@32)

    $@32  go to state 126


State 94

  479 optional_public_or_private_variable: "public" .

    $default  reduce using rule 479 (optional_public_or_private_variable)


State 95

  478 optional_public_or_private_variable: "private" .

    $default  reduce using rule 478 (optional_public_or_private_variable)


State 96

  480 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  482           | kwd_let optional_shared optional_public_or_private_variable . $@30 optional_field_annotation let_variable_declaration

    '{'  shift, and go to state 127

    $default  reduce using rule 481 ($@30)

    $@30  go to state 128


State 97

   82 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 82 (annotation_argument)


State 98

   83 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 83 (annotation_argument)


State 99

   80 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 80 (annotation_argument)


State 100

   81 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 81 (annotation_argument)


State 101

   79 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 79 (annotation_argument)


State 102

   24 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 129
    STRING_CHARACTER_ESC  shift, and go to state 130

    character_sequence  go to state 131


State 103

   85 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 132
    "false"                    shift, and go to state 133
    "integer constant"         shift, and go to state 134
    "floating point constant"  shift, and go to state 135
    "name"                     shift, and go to state 136
    "start of the string"      shift, and go to state 102

    string_constant                 go to state 137
    annotation_argument_value       go to state 138
    annotation_argument_value_list  go to state 139


State 104

   78 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 78 (annotation_argument)


State 105

   87 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 87 (annotation_argument_list)


State 106

   47 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 47 (expect_error)


State 107

   45 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 45 (expect_list)


State 108

   40 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 69

    $default  reduce using rule 41 (is_public_module)

    is_public_module  go to state 140


State 109

   38 require_module_name: require_module_name '/' "name" .

    $default  reduce using rule 38 (require_module_name)


State 110

   37 require_module_name: require_module_name '.' "name" .

    $default  reduce using rule 37 (require_module_name)


State 111

  487 single_alias: "name" $@31 '=' . type_declaration

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 182


State 112

  488 alias_list: single_alias ';' .

    $default  reduce using rule 488 (alias_list)


State 113

  490 alias_declaration: "typedef" '{' alias_list '}' .

    $default  reduce using rule 490 (alias_declaration)


State 114

  489 alias_list: alias_list single_alias . ';'

    ';'  shift, and go to state 183


State 115

   15 optional_public_or_private_module: "public" .

    $default  reduce using rule 15 (optional_public_or_private_module)


State 116

   16 optional_public_or_private_module: "private" .

    $default  reduce using rule 16 (optional_public_or_private_module)


State 117

   19 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 19 (module_declaration)


State 118

  619 bitfield_alias_declaration: "bitfield" $@62 "name" '{' . bitfield_bits ';' '}'

    "name"  shift, and go to state 184

    bitfield_bits  go to state 185


State 119

  617 variant_alias_declaration: "variant" $@60 "name" $@61 . '{' variant_type_list ';' '}'

    '{'  shift, and go to state 186


State 120

  215 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 215 (name_in_namespace)


State 121

   87 annotation_argument_list: annotation_argument_list . ',' annotation_argument
   92 annotation_declaration: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 64
    ')'  shift, and go to state 187


State 122

   94 annotation_list: annotation_list ',' annotation_declaration .

    $default  reduce using rule 94 (annotation_list)


State 123

  185 function_declaration: optional_public_or_private_function $@4 . function_declaration_header expression_block

    "operator"  shift, and go to state 188
    "bool"      shift, and go to state 189
    "string"    shift, and go to state 190
    "int"       shift, and go to state 191
    "int2"      shift, and go to state 192
    "int3"      shift, and go to state 193
    "int4"      shift, and go to state 194
    "uint"      shift, and go to state 195
    "uint2"     shift, and go to state 196
    "uint3"     shift, and go to state 197
    "uint4"     shift, and go to state 198
    "float"     shift, and go to state 199
    "float2"    shift, and go to state 200
    "float3"    shift, and go to state 201
    "float4"    shift, and go to state 202
    "range"     shift, and go to state 203
    "urange"    shift, and go to state 204
    "int64"     shift, and go to state 205
    "uint64"    shift, and go to state 206
    "double"    shift, and go to state 207
    "int8"      shift, and go to state 208
    "uint8"     shift, and go to state 209
    "int16"     shift, and go to state 210
    "uint16"    shift, and go to state 211
    "++"        shift, and go to state 212
    "--"        shift, and go to state 213
    "name"      shift, and go to state 214

    function_name                go to state 215
    function_declaration_header  go to state 216


State 124

  495 enum_name: "name" .

    $default  reduce using rule 495 (enum_name)


State 125

  496 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . '{' enum_list '}'
  497                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration '{' enum_list '}'

    ':'  shift, and go to state 217
    '{'  shift, and go to state 218


State 126

  510 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 . structure_name $@33 '{' struct_variable_declaration_list '}'

    "sealed"  shift, and go to state 219

    $default  reduce using rule 500 (optional_sealed)

    optional_sealed  go to state 220
    structure_name   go to state 221


State 127

  480 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 472 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 222


State 128

  482 global_let: kwd_let optional_shared optional_public_or_private_variable $@30 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 223

    $default  reduce using rule 418 (optional_field_annotation)

    optional_field_annotation  go to state 224


State 129

   20 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 20 (character_sequence)


State 130

   21 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 21 (character_sequence)


State 131

   22 character_sequence: character_sequence . STRING_CHARACTER
   23                   | character_sequence . STRING_CHARACTER_ESC
   24 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 225
    STRING_CHARACTER_ESC  shift, and go to state 226
    "end of the string"   shift, and go to state 227


State 132

   71 annotation_argument_value: "true" .

    $default  reduce using rule 71 (annotation_argument_value)


State 133

   72 annotation_argument_value: "false" .

    $default  reduce using rule 72 (annotation_argument_value)


State 134

   69 annotation_argument_value: "integer constant" .

    $default  reduce using rule 69 (annotation_argument_value)


State 135

   70 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 70 (annotation_argument_value)


State 136

   68 annotation_argument_value: "name" .

    $default  reduce using rule 68 (annotation_argument_value)


State 137

   67 annotation_argument_value: string_constant .

    $default  reduce using rule 67 (annotation_argument_value)


State 138

   73 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 73 (annotation_argument_value_list)


State 139

   74 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
   85 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 228
    ')'  shift, and go to state 229


State 140

   40 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 40 (require_module)


State 141

  581 type_declaration: "array" . '<' $@38 type_declaration '>' $@39

    '<'  shift, and go to state 230


State 142

  584 type_declaration: "table" . '<' $@40 table_type_pair '>' $@41

    '<'  shift, and go to state 231


State 143

  587 type_declaration: "iterator" . '<' $@42 type_declaration '>' $@43

    '<'  shift, and go to state 232


State 144

  577 type_declaration: "smart_ptr" . '<' $@36 type_declaration '>' $@37

    '<'  shift, and go to state 233


State 145

  516 basic_type_declaration: "bool" .

    $default  reduce using rule 516 (basic_type_declaration)


State 146

  536 basic_type_declaration: "void" .

    $default  reduce using rule 536 (basic_type_declaration)


State 147

  517 basic_type_declaration: "string" .

    $default  reduce using rule 517 (basic_type_declaration)


State 148

  548 auto_type_declaration: "auto" .
  549                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 234

    '('       [reduce using rule 548 (auto_type_declaration)]
    $default  reduce using rule 548 (auto_type_declaration)


State 149

  518 basic_type_declaration: "int" .

    $default  reduce using rule 518 (basic_type_declaration)


State 150

  522 basic_type_declaration: "int2" .

    $default  reduce using rule 522 (basic_type_declaration)


State 151

  523 basic_type_declaration: "int3" .

    $default  reduce using rule 523 (basic_type_declaration)


State 152

  524 basic_type_declaration: "int4" .

    $default  reduce using rule 524 (basic_type_declaration)


State 153

  525 basic_type_declaration: "uint" .

    $default  reduce using rule 525 (basic_type_declaration)


State 154

  540 basic_type_declaration: "bitfield" .
  555 bitfield_type_declaration: "bitfield" . '<' $@34 bitfield_bits '>' $@35

    '<'  shift, and go to state 235

    '<'       [reduce using rule 540 (basic_type_declaration)]
    $default  reduce using rule 540 (basic_type_declaration)


State 155

  529 basic_type_declaration: "uint2" .

    $default  reduce using rule 529 (basic_type_declaration)


State 156

  530 basic_type_declaration: "uint3" .

    $default  reduce using rule 530 (basic_type_declaration)


State 157

  531 basic_type_declaration: "uint4" .

    $default  reduce using rule 531 (basic_type_declaration)


State 158

  532 basic_type_declaration: "float" .

    $default  reduce using rule 532 (basic_type_declaration)


State 159

  533 basic_type_declaration: "float2" .

    $default  reduce using rule 533 (basic_type_declaration)


State 160

  534 basic_type_declaration: "float3" .

    $default  reduce using rule 534 (basic_type_declaration)


State 161

  535 basic_type_declaration: "float4" .

    $default  reduce using rule 535 (basic_type_declaration)


State 162

  537 basic_type_declaration: "range" .

    $default  reduce using rule 537 (basic_type_declaration)


State 163

  538 basic_type_declaration: "urange" .

    $default  reduce using rule 538 (basic_type_declaration)


State 164

  588 type_declaration: "block" .
  591                 | "block" . '<' $@44 type_declaration '>' $@45
  594                 | "block" . '<' $@46 optional_function_argument_list optional_function_type '>' $@47

    '<'  shift, and go to state 236

    '<'       [reduce using rule 588 (type_declaration)]
    $default  reduce using rule 588 (type_declaration)


State 165

  521 basic_type_declaration: "int64" .

    $default  reduce using rule 521 (basic_type_declaration)


State 166

  528 basic_type_declaration: "uint64" .

    $default  reduce using rule 528 (basic_type_declaration)


State 167

  539 basic_type_declaration: "double" .

    $default  reduce using rule 539 (basic_type_declaration)


State 168

  595 type_declaration: "function" .
  598                 | "function" . '<' $@48 type_declaration '>' $@49
  601                 | "function" . '<' $@50 optional_function_argument_list optional_function_type '>' $@51

    '<'  shift, and go to state 237

    '<'       [reduce using rule 595 (type_declaration)]
    $default  reduce using rule 595 (type_declaration)


State 169

  602 type_declaration: "lambda" .
  605                 | "lambda" . '<' $@52 type_declaration '>' $@53
  608                 | "lambda" . '<' $@54 optional_function_argument_list optional_function_type '>' $@55

    '<'  shift, and go to state 238

    '<'       [reduce using rule 602 (type_declaration)]
    $default  reduce using rule 602 (type_declaration)


State 170

  519 basic_type_declaration: "int8" .

    $default  reduce using rule 519 (basic_type_declaration)


State 171

  526 basic_type_declaration: "uint8" .

    $default  reduce using rule 526 (basic_type_declaration)


State 172

  520 basic_type_declaration: "int16" .

    $default  reduce using rule 520 (basic_type_declaration)


State 173

  527 basic_type_declaration: "uint16" .

    $default  reduce using rule 527 (basic_type_declaration)


State 174

  611 type_declaration: "tuple" . '<' $@56 tuple_type_list '>' $@57

    '<'  shift, and go to state 239


State 175

  614 type_declaration: "variant" . '<' $@58 variant_type_list '>' $@59

    '<'  shift, and go to state 240


State 176

  550 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 241


State 177

  547 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 547 (structure_type_declaration)


State 178

  558 type_declaration: basic_type_declaration .

    $default  reduce using rule 558 (type_declaration)


State 179

  561 type_declaration: structure_type_declaration .

    $default  reduce using rule 561 (type_declaration)


State 180

  559 type_declaration: auto_type_declaration .

    $default  reduce using rule 559 (type_declaration)


State 181

  560 type_declaration: bitfield_type_declaration .

    $default  reduce using rule 560 (type_declaration)


State 182

  487 single_alias: "name" $@31 '=' type_declaration .
  562 type_declaration: type_declaration . '[' expr ']'
  563                 | type_declaration . '[' ']'
  564                 | type_declaration . '-' '[' ']'
  565                 | type_declaration . "explicit"
  566                 | type_declaration . "const"
  567                 | type_declaration . '-' "const"
  568                 | type_declaration . '&'
  569                 | type_declaration . '-' '&'
  570                 | type_declaration . '#'
  571                 | type_declaration . "implicit"
  572                 | type_declaration . '-' '#'
  573                 | type_declaration . '=' "const"
  574                 | type_declaration . '?'
  578                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251

    $default  reduce using rule 487 (single_alias)


State 183

  489 alias_list: alias_list single_alias ';' .

    $default  reduce using rule 489 (alias_list)


State 184

  551 bitfield_bits: "name" .

    $default  reduce using rule 551 (bitfield_bits)


State 185

  552 bitfield_bits: bitfield_bits . ';' "name"
  619 bitfield_alias_declaration: "bitfield" $@62 "name" '{' bitfield_bits . ';' '}'

    ';'  shift, and go to state 252


State 186

  617 variant_alias_declaration: "variant" $@60 "name" $@61 '{' . variant_type_list ';' '}'

    "name"  shift, and go to state 253

    variant_type       go to state 254
    variant_type_list  go to state 255


State 187

   92 annotation_declaration: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 92 (annotation_declaration)


State 188

  103 function_name: "operator" . '!'
  104              | "operator" . '~'
  105              | "operator" . "+="
  106              | "operator" . "-="
  107              | "operator" . "*="
  108              | "operator" . "/="
  109              | "operator" . "%="
  110              | "operator" . "&="
  111              | "operator" . "|="
  112              | "operator" . "^="
  113              | "operator" . "&&="
  114              | "operator" . "||="
  115              | "operator" . "^^="
  116              | "operator" . "&&"
  117              | "operator" . "||"
  118              | "operator" . "^^"
  119              | "operator" . '+'
  120              | "operator" . '-'
  121              | "operator" . '*'
  122              | "operator" . '/'
  123              | "operator" . '%'
  124              | "operator" . '<'
  125              | "operator" . '>'
  126              | "operator" . ".."
  127              | "operator" . "=="
  128              | "operator" . "!="
  129              | "operator" . "<="
  130              | "operator" . ">="
  131              | "operator" . '&'
  132              | "operator" . '|'
  133              | "operator" . '^'
  136              | "operator" . "++"
  137              | "operator" . "--"
  138              | "operator" . "<<"
  139              | "operator" . ">>"
  140              | "operator" . "<<="
  141              | "operator" . ">>="
  142              | "operator" . "<<<"
  143              | "operator" . ">>>"
  144              | "operator" . "<<<="
  145              | "operator" . ">>>="
  146              | "operator" . '[' ']'
  147              | "operator" . "?[" ']'
  148              | "operator" . '.'
  149              | "operator" . "?."
  150              | "operator" . ":="
  151              | "operator" . "delete"
  152              | "operator" . "??"
  153              | "operator" . "is"
  154              | "operator" . "as"
  155              | "operator" . '?' "as"

    "is"      shift, and go to state 256
    "as"      shift, and go to state 257
    "delete"  shift, and go to state 258
    "+="      shift, and go to state 259
    "-="      shift, and go to state 260
    "/="      shift, and go to state 261
    "*="      shift, and go to state 262
    "%="      shift, and go to state 263
    "&="      shift, and go to state 264
    "|="      shift, and go to state 265
    "^="      shift, and go to state 266
    "<<"      shift, and go to state 267
    ">>"      shift, and go to state 268
    "++"      shift, and go to state 269
    "--"      shift, and go to state 270
    "<="      shift, and go to state 271
    "<<="     shift, and go to state 272
    ">>="     shift, and go to state 273
    ">="      shift, and go to state 274
    "=="      shift, and go to state 275
    "!="      shift, and go to state 276
    "??"      shift, and go to state 277
    "?."      shift, and go to state 278
    "?["      shift, and go to state 279
    ":="      shift, and go to state 280
    "<<<"     shift, and go to state 281
    ">>>"     shift, and go to state 282
    "<<<="    shift, and go to state 283
    ">>>="    shift, and go to state 284
    "&&"      shift, and go to state 285
    "||"      shift, and go to state 286
    "^^"      shift, and go to state 287
    "&&="     shift, and go to state 288
    "||="     shift, and go to state 289
    "^^="     shift, and go to state 290
    ".."      shift, and go to state 291
    '?'       shift, and go to state 292
    '|'       shift, and go to state 293
    '^'       shift, and go to state 294
    '&'       shift, and go to state 295
    '<'       shift, and go to state 296
    '>'       shift, and go to state 297
    '-'       shift, and go to state 298
    '+'       shift, and go to state 299
    '*'       shift, and go to state 300
    '/'       shift, and go to state 301
    '%'       shift, and go to state 302
    '~'       shift, and go to state 303
    '!'       shift, and go to state 304
    '.'       shift, and go to state 305
    '['       shift, and go to state 306


State 189

  156 function_name: "bool" .

    $default  reduce using rule 156 (function_name)


State 190

  157 function_name: "string" .

    $default  reduce using rule 157 (function_name)


State 191

  158 function_name: "int" .

    $default  reduce using rule 158 (function_name)


State 192

  159 function_name: "int2" .

    $default  reduce using rule 159 (function_name)


State 193

  160 function_name: "int3" .

    $default  reduce using rule 160 (function_name)


State 194

  161 function_name: "int4" .

    $default  reduce using rule 161 (function_name)


State 195

  162 function_name: "uint" .

    $default  reduce using rule 162 (function_name)


State 196

  163 function_name: "uint2" .

    $default  reduce using rule 163 (function_name)


State 197

  164 function_name: "uint3" .

    $default  reduce using rule 164 (function_name)


State 198

  165 function_name: "uint4" .

    $default  reduce using rule 165 (function_name)


State 199

  166 function_name: "float" .

    $default  reduce using rule 166 (function_name)


State 200

  167 function_name: "float2" .

    $default  reduce using rule 167 (function_name)


State 201

  168 function_name: "float3" .

    $default  reduce using rule 168 (function_name)


State 202

  169 function_name: "float4" .

    $default  reduce using rule 169 (function_name)


State 203

  170 function_name: "range" .

    $default  reduce using rule 170 (function_name)


State 204

  171 function_name: "urange" .

    $default  reduce using rule 171 (function_name)


State 205

  172 function_name: "int64" .

    $default  reduce using rule 172 (function_name)


State 206

  173 function_name: "uint64" .

    $default  reduce using rule 173 (function_name)


State 207

  174 function_name: "double" .

    $default  reduce using rule 174 (function_name)


State 208

  175 function_name: "int8" .

    $default  reduce using rule 175 (function_name)


State 209

  176 function_name: "uint8" .

    $default  reduce using rule 176 (function_name)


State 210

  177 function_name: "int16" .

    $default  reduce using rule 177 (function_name)


State 211

  178 function_name: "uint16" .

    $default  reduce using rule 178 (function_name)


State 212

  134 function_name: "++" . "operator"

    "operator"  shift, and go to state 307


State 213

  135 function_name: "--" . "operator"

    "operator"  shift, and go to state 308


State 214

  102 function_name: "name" .

    $default  reduce using rule 102 (function_name)


State 215

  183 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 309

    $default  reduce using rule 97 (optional_function_argument_list)

    optional_function_argument_list  go to state 310


State 216

  185 function_declaration: optional_public_or_private_function $@4 function_declaration_header . expression_block

    '{'  shift, and go to state 311

    expression_block  go to state 312


State 217

  497 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration '{' enum_list '}'

    "int"     shift, and go to state 313
    "uint"    shift, and go to state 314
    "int8"    shift, and go to state 315
    "uint8"   shift, and go to state 316
    "int16"   shift, and go to state 317
    "uint16"  shift, and go to state 318

    enum_basic_type_declaration  go to state 319


State 218

  496 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' . enum_list '}'

    $default  reduce using rule 483 (enum_list)

    enum_list  go to state 320


State 219

  501 optional_sealed: "sealed" .

    $default  reduce using rule 501 (optional_sealed)


State 220

  502 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 321


State 221

  510 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name . $@33 '{' struct_variable_declaration_list '}'

    $default  reduce using rule 509 ($@33)

    $@33  go to state 322


State 222

  474 global_variable_declaration_list: global_variable_declaration_list . $@29 optional_field_annotation let_variable_declaration
  480 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    '}'  shift, and go to state 323

    $default  reduce using rule 473 ($@29)

    $@29  go to state 324


State 223

  419 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 27
    "in"    shift, and go to state 28
    "name"  shift, and go to state 29

    annotation_argument_name  go to state 30
    annotation_argument       go to state 31
    annotation_argument_list  go to state 325


State 224

  482 global_let: kwd_let optional_shared optional_public_or_private_variable $@30 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 326
    "name"  shift, and go to state 327

    let_variable_name_with_pos_list  go to state 328
    let_variable_declaration         go to state 329


State 225

   22 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 22 (character_sequence)


State 226

   23 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 23 (character_sequence)


State 227

   24 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 24 (string_constant)


State 228

   74 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 132
    "false"                    shift, and go to state 133
    "integer constant"         shift, and go to state 134
    "floating point constant"  shift, and go to state 135
    "name"                     shift, and go to state 136
    "start of the string"      shift, and go to state 102

    string_constant            go to state 137
    annotation_argument_value  go to state 330


State 229

   85 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 85 (annotation_argument)


State 230

  581 type_declaration: "array" '<' . $@38 type_declaration '>' $@39

    $default  reduce using rule 579 ($@38)

    $@38  go to state 331


State 231

  584 type_declaration: "table" '<' . $@40 table_type_pair '>' $@41

    $default  reduce using rule 582 ($@40)

    $@40  go to state 332


State 232

  587 type_declaration: "iterator" '<' . $@42 type_declaration '>' $@43

    $default  reduce using rule 585 ($@42)

    $@42  go to state 333


State 233

  577 type_declaration: "smart_ptr" '<' . $@36 type_declaration '>' $@37

    $default  reduce using rule 575 ($@36)

    $@36  go to state 334


State 234

  549 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 335


State 235

  555 bitfield_type_declaration: "bitfield" '<' . $@34 bitfield_bits '>' $@35

    $default  reduce using rule 553 ($@34)

    $@34  go to state 336


State 236

  591 type_declaration: "block" '<' . $@44 type_declaration '>' $@45
  594                 | "block" '<' . $@46 optional_function_argument_list optional_function_type '>' $@47

    ':'       reduce using rule 592 ($@46)
    '>'       reduce using rule 592 ($@46)
    '('       reduce using rule 592 ($@46)
    $default  reduce using rule 589 ($@44)

    $@44  go to state 337
    $@46  go to state 338


State 237

  598 type_declaration: "function" '<' . $@48 type_declaration '>' $@49
  601                 | "function" '<' . $@50 optional_function_argument_list optional_function_type '>' $@51

    ':'       reduce using rule 599 ($@50)
    '>'       reduce using rule 599 ($@50)
    '('       reduce using rule 599 ($@50)
    $default  reduce using rule 596 ($@48)

    $@48  go to state 339
    $@50  go to state 340


State 238

  605 type_declaration: "lambda" '<' . $@52 type_declaration '>' $@53
  608                 | "lambda" '<' . $@54 optional_function_argument_list optional_function_type '>' $@55

    ':'       reduce using rule 606 ($@54)
    '>'       reduce using rule 606 ($@54)
    '('       reduce using rule 606 ($@54)
    $default  reduce using rule 603 ($@52)

    $@52  go to state 341
    $@54  go to state 342


State 239

  611 type_declaration: "tuple" '<' . $@56 tuple_type_list '>' $@57

    $default  reduce using rule 609 ($@56)

    $@56  go to state 343


State 240

  614 type_declaration: "variant" '<' . $@58 variant_type_list '>' $@59

    $default  reduce using rule 612 ($@58)

    $@58  go to state 344


State 241

  550 auto_type_declaration: "$t" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 401
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 242

  566 type_declaration: type_declaration "const" .

    $default  reduce using rule 566 (type_declaration)


State 243

  571 type_declaration: type_declaration "implicit" .

    $default  reduce using rule 571 (type_declaration)


State 244

  565 type_declaration: type_declaration "explicit" .

    $default  reduce using rule 565 (type_declaration)


State 245

  578 type_declaration: type_declaration "??" .

    $default  reduce using rule 578 (type_declaration)


State 246

  573 type_declaration: type_declaration '=' . "const"

    "const"  shift, and go to state 409


State 247

  574 type_declaration: type_declaration '?' .

    $default  reduce using rule 574 (type_declaration)


State 248

  568 type_declaration: type_declaration '&' .

    $default  reduce using rule 568 (type_declaration)


State 249

  564 type_declaration: type_declaration '-' . '[' ']'
  567                 | type_declaration '-' . "const"
  569                 | type_declaration '-' . '&'
  572                 | type_declaration '-' . '#'

    "const"  shift, and go to state 410
    '&'      shift, and go to state 411
    '['      shift, and go to state 412
    '#'      shift, and go to state 413


State 250

  562 type_declaration: type_declaration '[' . expr ']'
  563                 | type_declaration '[' . ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    ']'                               shift, and go to state 414
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 415
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 251

  570 type_declaration: type_declaration '#' .

    $default  reduce using rule 570 (type_declaration)


State 252

  552 bitfield_bits: bitfield_bits ';' . "name"
  619 bitfield_alias_declaration: "bitfield" $@62 "name" '{' bitfield_bits ';' . '}'

    "name"  shift, and go to state 416
    '}'     shift, and go to state 417


State 253

  446 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 418


State 254

  447 variant_type_list: variant_type .

    $default  reduce using rule 447 (variant_type_list)


State 255

  448 variant_type_list: variant_type_list . ';' variant_type
  617 variant_alias_declaration: "variant" $@60 "name" $@61 '{' variant_type_list . ';' '}'

    ';'  shift, and go to state 419


State 256

  153 function_name: "operator" "is" .

    $default  reduce using rule 153 (function_name)


State 257

  154 function_name: "operator" "as" .

    $default  reduce using rule 154 (function_name)


State 258

  151 function_name: "operator" "delete" .

    $default  reduce using rule 151 (function_name)


State 259

  105 function_name: "operator" "+=" .

    $default  reduce using rule 105 (function_name)


State 260

  106 function_name: "operator" "-=" .

    $default  reduce using rule 106 (function_name)


State 261

  108 function_name: "operator" "/=" .

    $default  reduce using rule 108 (function_name)


State 262

  107 function_name: "operator" "*=" .

    $default  reduce using rule 107 (function_name)


State 263

  109 function_name: "operator" "%=" .

    $default  reduce using rule 109 (function_name)


State 264

  110 function_name: "operator" "&=" .

    $default  reduce using rule 110 (function_name)


State 265

  111 function_name: "operator" "|=" .

    $default  reduce using rule 111 (function_name)


State 266

  112 function_name: "operator" "^=" .

    $default  reduce using rule 112 (function_name)


State 267

  138 function_name: "operator" "<<" .

    $default  reduce using rule 138 (function_name)


State 268

  139 function_name: "operator" ">>" .

    $default  reduce using rule 139 (function_name)


State 269

  136 function_name: "operator" "++" .

    $default  reduce using rule 136 (function_name)


State 270

  137 function_name: "operator" "--" .

    $default  reduce using rule 137 (function_name)


State 271

  129 function_name: "operator" "<=" .

    $default  reduce using rule 129 (function_name)


State 272

  140 function_name: "operator" "<<=" .

    $default  reduce using rule 140 (function_name)


State 273

  141 function_name: "operator" ">>=" .

    $default  reduce using rule 141 (function_name)


State 274

  130 function_name: "operator" ">=" .

    $default  reduce using rule 130 (function_name)


State 275

  127 function_name: "operator" "==" .

    $default  reduce using rule 127 (function_name)


State 276

  128 function_name: "operator" "!=" .

    $default  reduce using rule 128 (function_name)


State 277

  152 function_name: "operator" "??" .

    $default  reduce using rule 152 (function_name)


State 278

  149 function_name: "operator" "?." .

    $default  reduce using rule 149 (function_name)


State 279

  147 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 420


State 280

  150 function_name: "operator" ":=" .

    $default  reduce using rule 150 (function_name)


State 281

  142 function_name: "operator" "<<<" .

    $default  reduce using rule 142 (function_name)


State 282

  143 function_name: "operator" ">>>" .

    $default  reduce using rule 143 (function_name)


State 283

  144 function_name: "operator" "<<<=" .

    $default  reduce using rule 144 (function_name)


State 284

  145 function_name: "operator" ">>>=" .

    $default  reduce using rule 145 (function_name)


State 285

  116 function_name: "operator" "&&" .

    $default  reduce using rule 116 (function_name)


State 286

  117 function_name: "operator" "||" .

    $default  reduce using rule 117 (function_name)


State 287

  118 function_name: "operator" "^^" .

    $default  reduce using rule 118 (function_name)


State 288

  113 function_name: "operator" "&&=" .

    $default  reduce using rule 113 (function_name)


State 289

  114 function_name: "operator" "||=" .

    $default  reduce using rule 114 (function_name)


State 290

  115 function_name: "operator" "^^=" .

    $default  reduce using rule 115 (function_name)


State 291

  126 function_name: "operator" ".." .

    $default  reduce using rule 126 (function_name)


State 292

  155 function_name: "operator" '?' . "as"

    "as"  shift, and go to state 421


State 293

  132 function_name: "operator" '|' .

    $default  reduce using rule 132 (function_name)


State 294

  133 function_name: "operator" '^' .

    $default  reduce using rule 133 (function_name)


State 295

  131 function_name: "operator" '&' .

    $default  reduce using rule 131 (function_name)


State 296

  124 function_name: "operator" '<' .

    $default  reduce using rule 124 (function_name)


State 297

  125 function_name: "operator" '>' .

    $default  reduce using rule 125 (function_name)


State 298

  120 function_name: "operator" '-' .

    $default  reduce using rule 120 (function_name)


State 299

  119 function_name: "operator" '+' .

    $default  reduce using rule 119 (function_name)


State 300

  121 function_name: "operator" '*' .

    $default  reduce using rule 121 (function_name)


State 301

  122 function_name: "operator" '/' .

    $default  reduce using rule 122 (function_name)


State 302

  123 function_name: "operator" '%' .

    $default  reduce using rule 123 (function_name)


State 303

  104 function_name: "operator" '~' .

    $default  reduce using rule 104 (function_name)


State 304

  103 function_name: "operator" '!' .

    $default  reduce using rule 103 (function_name)


State 305

  148 function_name: "operator" '.' .

    $default  reduce using rule 148 (function_name)


State 306

  146 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 422


State 307

  134 function_name: "++" "operator" .

    $default  reduce using rule 134 (function_name)


State 308

  135 function_name: "--" "operator" .

    $default  reduce using rule 135 (function_name)


State 309

   98 optional_function_argument_list: '(' . ')'
   99                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 423
    "[["  shift, and go to state 223
    ')'   shift, and go to state 424

    $default  reduce using rule 418 (optional_field_annotation)

    optional_field_annotation      go to state 425
    function_argument_declaration  go to state 426
    function_argument_list         go to state 427


State 310

  183 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 428

    $default  reduce using rule 100 (optional_function_type)

    optional_function_type  go to state 429


State 311

  186 expression_block: '{' . expressions '}'
  187                 | '{' . expressions '}' "finally" '{' expressions '}'

    $default  reduce using rule 208 (expressions)

    expressions  go to state 430


State 312

  185 function_declaration: optional_public_or_private_function $@4 function_declaration_header expression_block .

    $default  reduce using rule 185 (function_declaration)


State 313

  541 enum_basic_type_declaration: "int" .

    $default  reduce using rule 541 (enum_basic_type_declaration)


State 314

  544 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 544 (enum_basic_type_declaration)


State 315

  542 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 542 (enum_basic_type_declaration)


State 316

  545 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 545 (enum_basic_type_declaration)


State 317

  543 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 543 (enum_basic_type_declaration)


State 318

  546 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 546 (enum_basic_type_declaration)


State 319

  497 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . '{' enum_list '}'

    '{'  shift, and go to state 431


State 320

  484 enum_list: enum_list . "name" ';'
  485          | enum_list . "name" '=' expr ';'
  496 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' enum_list . '}'

    "name"  shift, and go to state 432
    '}'     shift, and go to state 433


State 321

  502 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 434

    $default  reduce using rule 498 (optional_structure_parent)

    optional_structure_parent  go to state 435


State 322

  510 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name $@33 . '{' struct_variable_declaration_list '}'

    '{'  shift, and go to state 436


State 323

  480 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 480 (global_let)


State 324

  474 global_variable_declaration_list: global_variable_declaration_list $@29 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 223

    $default  reduce using rule 418 (optional_field_annotation)

    optional_field_annotation  go to state 437


State 325

   87 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  419 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 64
    ']'  shift, and go to state 438


State 326

  463 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 439


State 327

  462 let_variable_name_with_pos_list: "name" .
  464                                | "name" . "aka" "name"

    "aka"  shift, and go to state 440

    $default  reduce using rule 462 (let_variable_name_with_pos_list)


State 328

  465 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  466                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  467 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration ';'
  468                         | let_variable_name_with_pos_list . ':' type_declaration copy_or_move_or_clone expr ';'
  469                         | let_variable_name_with_pos_list . ':' type_declaration copy_or_move_or_clone expr_pipe
  470                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr ';'
  471                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 441
    ':'  shift, and go to state 442
    '&'  shift, and go to state 443

    $default  reduce using rule 460 (optional_ref)

    optional_ref  go to state 444


State 329

  482 global_let: kwd_let optional_shared optional_public_or_private_variable $@30 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 482 (global_let)


State 330

   74 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 74 (annotation_argument_value_list)


State 331

  581 type_declaration: "array" '<' $@38 . type_declaration '>' $@39

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 445


State 332

  584 type_declaration: "table" '<' $@40 . table_type_pair '>' $@41

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    table_type_pair             go to state 446
    type_declaration            go to state 447


State 333

  587 type_declaration: "iterator" '<' $@42 . type_declaration '>' $@43

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 448


State 334

  577 type_declaration: "smart_ptr" '<' $@36 . type_declaration '>' $@37

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 449


State 335

  549 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 450


State 336

  555 bitfield_type_declaration: "bitfield" '<' $@34 . bitfield_bits '>' $@35

    "name"  shift, and go to state 184

    bitfield_bits  go to state 451


State 337

  591 type_declaration: "block" '<' $@44 . type_declaration '>' $@45

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 452


State 338

  594 type_declaration: "block" '<' $@46 . optional_function_argument_list optional_function_type '>' $@47

    '('  shift, and go to state 309

    $default  reduce using rule 97 (optional_function_argument_list)

    optional_function_argument_list  go to state 453


State 339

  598 type_declaration: "function" '<' $@48 . type_declaration '>' $@49

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 454


State 340

  601 type_declaration: "function" '<' $@50 . optional_function_argument_list optional_function_type '>' $@51

    '('  shift, and go to state 309

    $default  reduce using rule 97 (optional_function_argument_list)

    optional_function_argument_list  go to state 455


State 341

  605 type_declaration: "lambda" '<' $@52 . type_declaration '>' $@53

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 456


State 342

  608 type_declaration: "lambda" '<' $@54 . optional_function_argument_list optional_function_type '>' $@55

    '('  shift, and go to state 309

    $default  reduce using rule 97 (optional_function_argument_list)

    optional_function_argument_list  go to state 457


State 343

  611 type_declaration: "tuple" '<' $@56 . tuple_type_list '>' $@57

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 458

    name_in_namespace           go to state 177
    tuple_type                  go to state 459
    tuple_type_list             go to state 460
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 461


State 344

  614 type_declaration: "variant" '<' $@58 . variant_type_list '>' $@59

    "name"  shift, and go to state 253

    variant_type       go to state 254
    variant_type_list  go to state 462


State 345

  324 expr: "true" .

    $default  reduce using rule 324 (expr)


State 346

  325 expr: "false" .

    $default  reduce using rule 325 (expr)


State 347

  218 expr_new: "new" . type_declaration
  219         | "new" . type_declaration '(' ')'
  220         | "new" . type_declaration '(' expr_list ')'
  221         | "new" . make_decl

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "[["         shift, and go to state 367
    "[{"         shift, and go to state 368
    "{{"         shift, and go to state 369
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 463
    make_decl                   go to state 464
    make_struct_decl            go to state 405
    make_dim_decl               go to state 406
    make_table_decl             go to state 407
    array_comprehension         go to state 408


State 348

  251 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  252               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  253               | "typeinfo" . '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

    '('  shift, and go to state 465


State 349

  250 expr_type_decl: "type" . '<' $@12 type_declaration '>' $@13

    '<'  shift, and go to state 466


State 350

  318 expr: "null" .

    $default  reduce using rule 318 (expr)


State 351

  371 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 467


State 352

  241 expr_cast: "cast" . '<' $@6 type_declaration '>' $@7 expr

    '<'  shift, and go to state 468


State 353

  244 expr_cast: "upcast" . '<' $@8 type_declaration '>' $@9 expr

    '<'  shift, and go to state 469


State 354

  372 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 470


State 355

  247 expr_cast: "reinterpret" . '<' $@10 type_declaration '>' $@11 expr

    '<'  shift, and go to state 471


State 356

  402 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 472


State 357

  540 basic_type_declaration: "bitfield" .

    $default  reduce using rule 540 (basic_type_declaration)


State 358

  373 expr: "generator" . '<' type_declaration '>' optional_capture_list '(' ')'
  374     | "generator" . '<' type_declaration '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 473


State 359

  354 expr: "++" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 474
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 360

  355 expr: "--" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 475
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 361

  403 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 476


State 362

  404 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 477


State 363

  405 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 478


State 364

  406 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 479


State 365

  407 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 480


State 366

  408 expr_mtag: "$c" . '(' expr ')' '(' ')'
  409          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 481


State 367

  632 make_struct_decl: "[[" . type_declaration make_struct_dim optional_block ']' ']'
  633                 | "[[" . type_declaration optional_block ']' ']'
  634                 | "[[" . type_declaration '(' ')' optional_block ']' ']'
  635                 | "[[" . type_declaration '(' ')' make_struct_dim optional_block ']' ']'
  646 make_dim_decl: "[[" . type_declaration make_dim ']' ']'
  653 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 482
    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 483


State 368

  636 make_struct_decl: "[{" . type_declaration make_struct_dim optional_block '}' ']'
  637                 | "[{" . type_declaration '(' ')' make_struct_dim optional_block '}' ']'
  647 make_dim_decl: "[{" . type_declaration make_dim '}' ']'
  654 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "for"        shift, and go to state 484
    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 485


State 369

  650 make_table_decl: "{{" . make_table '}' '}'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 486
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_map_tuple          go to state 487
    make_dim_decl           go to state 406
    make_table              go to state 488
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 370

  272 expr_numeric_const: "integer constant" .

    $default  reduce using rule 272 (expr_numeric_const)


State 371

  274 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 274 (expr_numeric_const)


State 372

  273 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 273 (expr_numeric_const)


State 373

  275 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 275 (expr_numeric_const)


State 374

  276 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 276 (expr_numeric_const)


State 375

  277 expr_numeric_const: "double constant" .

    $default  reduce using rule 277 (expr_numeric_const)


State 376

   28 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 25 (string_builder_body)

    string_builder_body  go to state 489


State 377

  331 expr: '-' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 490
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 378

  330 expr: '+' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 491
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 379

  370 expr: '*' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 492
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 380

   32 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 50
    "name"  shift, and go to state 51

    name_in_namespace  go to state 493


State 381

  329 expr: '~' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 494
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 382

  328 expr: '!' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 495
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 383

  358 expr: '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 496
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 384

  259 block_or_lambda: '$' .

    $default  reduce using rule 259 (block_or_lambda)


State 385

  260 block_or_lambda: '@' .
  261                | '@' . '@'
  306 func_addr_expr: '@' . '@' func_addr_name
  309               | '@' . '@' '<' $@14 type_declaration '>' $@15 func_addr_name
  312               | '@' . '@' '<' $@16 optional_function_argument_list optional_function_type '>' $@17 func_addr_name
  417 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 497

    $default  reduce using rule 260 (block_or_lambda)


State 386

  322 expr: string_builder .

    $default  reduce using rule 322 (expr)


State 387

  321 expr: expr_reader .

    $default  reduce using rule 321 (expr)


State 388

  270 expr_block: expression_block .

    $default  reduce using rule 270 (expr_block)


State 389

  301 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  319 expr: name_in_namespace .
  366     | name_in_namespace . '(' ')'
  367     | name_in_namespace . '(' expr_list ')'
  401     | name_in_namespace . "name"

    "name"  shift, and go to state 498
    '('     shift, and go to state 499

    "name"    [reduce using rule 319 (expr)]
    '('       [reduce using rule 319 (expr)]
    $default  reduce using rule 319 (expr)


State 390

  395 expr: expr_new .

    $default  reduce using rule 395 (expr)


State 391

  394 expr: expr_cast .

    $default  reduce using rule 394 (expr)


State 392

  393 expr: expr_type_decl .

    $default  reduce using rule 393 (expr)


State 393

  392 expr: expr_type_info .

    $default  reduce using rule 392 (expr)


State 394

  271 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 12

    $default  reduce using rule 95 (optional_annotation_list)

    optional_annotation_list  go to state 500


State 395

  398 expr: expr_block .

    $default  reduce using rule 398 (expr)


State 396

  320 expr: expr_numeric_const .

    $default  reduce using rule 320 (expr)


State 397

  397 expr: expr_named_call .

    $default  reduce using rule 397 (expr)


State 398

  396 expr: expr_method_call .

    $default  reduce using rule 396 (expr)


State 399

  365 expr: func_addr_expr .

    $default  reduce using rule 365 (expr)


State 400

  326 expr: expr_field .

    $default  reduce using rule 326 (expr)


State 401

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'
  550 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 536


State 402

  327 expr: expr_mtag .

    $default  reduce using rule 327 (expr)


State 403

  368 expr: basic_type_declaration . '(' ')'
  369     | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 537


State 404

  323 expr: make_decl .

    $default  reduce using rule 323 (expr)


State 405

  620 make_decl: make_struct_decl .

    $default  reduce using rule 620 (make_decl)


State 406

  621 make_decl: make_dim_decl .

    $default  reduce using rule 621 (make_decl)


State 407

  622 make_decl: make_table_decl .

    $default  reduce using rule 622 (make_decl)


State 408

  623 make_decl: array_comprehension .

    $default  reduce using rule 623 (make_decl)


State 409

  573 type_declaration: type_declaration '=' "const" .

    $default  reduce using rule 573 (type_declaration)


State 410

  567 type_declaration: type_declaration '-' "const" .

    $default  reduce using rule 567 (type_declaration)


State 411

  569 type_declaration: type_declaration '-' '&' .

    $default  reduce using rule 569 (type_declaration)


State 412

  564 type_declaration: type_declaration '-' '[' . ']'

    ']'  shift, and go to state 538


State 413

  572 type_declaration: type_declaration '-' '#' .

    $default  reduce using rule 572 (type_declaration)


State 414

  563 type_declaration: type_declaration '[' ']' .

    $default  reduce using rule 563 (type_declaration)


State 415

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'
  562 type_declaration: type_declaration '[' expr . ']'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ']'    shift, and go to state 539


State 416

  552 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 552 (bitfield_bits)


State 417

  619 bitfield_alias_declaration: "bitfield" $@62 "name" '{' bitfield_bits ';' '}' .

    $default  reduce using rule 619 (bitfield_alias_declaration)


State 418

  446 variant_type: "name" ':' . type_declaration

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 540


State 419

  448 variant_type_list: variant_type_list ';' . variant_type
  617 variant_alias_declaration: "variant" $@60 "name" $@61 '{' variant_type_list ';' . '}'

    "name"  shift, and go to state 253
    '}'     shift, and go to state 541

    variant_type  go to state 542


State 420

  147 function_name: "operator" "?[" ']' .

    $default  reduce using rule 147 (function_name)


State 421

  155 function_name: "operator" '?' "as" .

    $default  reduce using rule 155 (function_name)


State 422

  146 function_name: "operator" '[' ']' .

    $default  reduce using rule 146 (function_name)


State 423

  439 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 543


State 424

   98 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 98 (optional_function_argument_list)


State 425

  437 function_argument_declaration: optional_field_annotation . variable_declaration
  438                              | optional_field_annotation . "var" variable_declaration

    "var"   shift, and go to state 544
    "$i"    shift, and go to state 545
    "name"  shift, and go to state 546

    variable_declaration         go to state 547
    variable_name_with_pos_list  go to state 548


State 426

  440 function_argument_list: function_argument_declaration .

    $default  reduce using rule 440 (function_argument_list)


State 427

   99 optional_function_argument_list: '(' function_argument_list . ')'
  441 function_argument_list: function_argument_list . ';' function_argument_declaration

    ')'  shift, and go to state 549
    ';'  shift, and go to state 550


State 428

  101 optional_function_type: ':' . type_declaration

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 551


State 429

  183 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 183 (function_declaration_header)


State 430

  186 expression_block: '{' expressions . '}'
  187                 | '{' expressions . '}' "finally" '{' expressions '}'
  209 expressions: expressions . expression_any
  210            | expressions . error

    error                             shift, and go to state 552
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 553
    "if"                              shift, and go to state 554
    "static_if"                       shift, and go to state 555
    "for"                             shift, and go to state 556
    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "return"                          shift, and go to state 557
    "null"                            shift, and go to state 350
    "break"                           shift, and go to state 558
    "try"                             shift, and go to state 559
    "delete"                          shift, and go to state 560
    "deref"                           shift, and go to state 351
    "with"                            shift, and go to state 561
    "assume"                          shift, and go to state 562
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 354
    "continue"                        shift, and go to state 563
    "pass"                            shift, and go to state 564
    "reinterpret"                     shift, and go to state 355
    "label"                           shift, and go to state 565
    "goto"                            shift, and go to state 566
    "unsafe"                          shift, and go to state 567
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "yield"                           shift, and go to state 568
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "@ <|"                            shift, and go to state 569
    "@@ <|"                           shift, and go to state 570
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    ';'                               shift, and go to state 571
    '{'                               shift, and go to state 311
    '}'                               shift, and go to state 572

    string_builder           go to state 386
    expr_reader              go to state 387
    expression_label         go to state 573
    expression_goto          go to state 574
    if_or_static_if          go to state 575
    expression_if_then_else  go to state 576
    expression_for_loop      go to state 577
    expression_unsafe        go to state 578
    expression_while_loop    go to state 579
    expression_with          go to state 580
    expression_with_alias    go to state 581
    expression_block         go to state 388
    expression_any           go to state 582
    expr_pipe                go to state 583
    name_in_namespace        go to state 389
    expression_delete        go to state 584
    expr_new                 go to state 390
    expression_break         go to state 585
    expression_continue      go to state 586
    expression_return        go to state 587
    expression_yield         go to state 588
    expression_try_catch     go to state 589
    kwd_let                  go to state 590
    expression_let           go to state 591
    expr_cast                go to state 391
    expr_type_decl           go to state 392
    expr_type_info           go to state 393
    block_or_lambda          go to state 394
    expr_block               go to state 395
    expr_numeric_const       go to state 396
    expr_assign              go to state 592
    expr_assign_pipe         go to state 593
    expr_named_call          go to state 397
    expr_method_call         go to state 398
    func_addr_expr           go to state 399
    expr_field               go to state 400
    expr                     go to state 594
    expr_mtag                go to state 402
    basic_type_declaration   go to state 403
    make_decl                go to state 404
    make_struct_decl         go to state 405
    make_dim_decl            go to state 406
    make_table_decl          go to state 407
    array_comprehension      go to state 408


State 431

  497 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' . enum_list '}'

    $default  reduce using rule 483 (enum_list)

    enum_list  go to state 595


State 432

  484 enum_list: enum_list "name" . ';'
  485          | enum_list "name" . '=' expr ';'

    '='  shift, and go to state 596
    ';'  shift, and go to state 597


State 433

  496 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' enum_list '}' .

    $default  reduce using rule 496 (enum_declaration)


State 434

  499 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 50
    "name"  shift, and go to state 51

    name_in_namespace  go to state 598


State 435

  502 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 502 (structure_name)


State 436

  510 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name $@33 '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 429 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 599


State 437

  474 global_variable_declaration_list: global_variable_declaration_list $@29 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 326
    "name"  shift, and go to state 327

    let_variable_name_with_pos_list  go to state 328
    let_variable_declaration         go to state 600


State 438

  419 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 601


State 439

  463 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 602
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 440

  464 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 603


State 441

  465 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  466                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 604


State 442

  467 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration ';'
  468                         | let_variable_name_with_pos_list ':' . type_declaration copy_or_move_or_clone expr ';'
  469                         | let_variable_name_with_pos_list ':' . type_declaration copy_or_move_or_clone expr_pipe

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 605


State 443

  461 optional_ref: '&' .

    $default  reduce using rule 461 (optional_ref)


State 444

  470 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr ';'
  471                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 606
    ":="  shift, and go to state 607
    '='   shift, and go to state 608

    copy_or_move_or_clone  go to state 609


State 445

  562 type_declaration: type_declaration . '[' expr ']'
  563                 | type_declaration . '[' ']'
  564                 | type_declaration . '-' '[' ']'
  565                 | type_declaration . "explicit"
  566                 | type_declaration . "const"
  567                 | type_declaration . '-' "const"
  568                 | type_declaration . '&'
  569                 | type_declaration . '-' '&'
  570                 | type_declaration . '#'
  571                 | type_declaration . "implicit"
  572                 | type_declaration . '-' '#'
  573                 | type_declaration . '=' "const"
  574                 | type_declaration . '?'
  578                 | type_declaration . "??"
  581                 | "array" '<' $@38 type_declaration . '>' $@39

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 610
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 446

  584 type_declaration: "table" '<' $@40 table_type_pair . '>' $@41

    '>'  shift, and go to state 611


State 447

  556 table_type_pair: type_declaration .
  557                | type_declaration . ';' type_declaration
  562 type_declaration: type_declaration . '[' expr ']'
  563                 | type_declaration . '[' ']'
  564                 | type_declaration . '-' '[' ']'
  565                 | type_declaration . "explicit"
  566                 | type_declaration . "const"
  567                 | type_declaration . '-' "const"
  568                 | type_declaration . '&'
  569                 | type_declaration . '-' '&'
  570                 | type_declaration . '#'
  571                 | type_declaration . "implicit"
  572                 | type_declaration . '-' '#'
  573                 | type_declaration . '=' "const"
  574                 | type_declaration . '?'
  578                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    ';'         shift, and go to state 612
    '#'         shift, and go to state 251

    $default  reduce using rule 556 (table_type_pair)


State 448

  562 type_declaration: type_declaration . '[' expr ']'
  563                 | type_declaration . '[' ']'
  564                 | type_declaration . '-' '[' ']'
  565                 | type_declaration . "explicit"
  566                 | type_declaration . "const"
  567                 | type_declaration . '-' "const"
  568                 | type_declaration . '&'
  569                 | type_declaration . '-' '&'
  570                 | type_declaration . '#'
  571                 | type_declaration . "implicit"
  572                 | type_declaration . '-' '#'
  573                 | type_declaration . '=' "const"
  574                 | type_declaration . '?'
  578                 | type_declaration . "??"
  587                 | "iterator" '<' $@42 type_declaration . '>' $@43

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 613
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 449

  562 type_declaration: type_declaration . '[' expr ']'
  563                 | type_declaration . '[' ']'
  564                 | type_declaration . '-' '[' ']'
  565                 | type_declaration . "explicit"
  566                 | type_declaration . "const"
  567                 | type_declaration . '-' "const"
  568                 | type_declaration . '&'
  569                 | type_declaration . '-' '&'
  570                 | type_declaration . '#'
  571                 | type_declaration . "implicit"
  572                 | type_declaration . '-' '#'
  573                 | type_declaration . '=' "const"
  574                 | type_declaration . '?'
  577                 | "smart_ptr" '<' $@36 type_declaration . '>' $@37
  578                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 614
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 450

  549 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 549 (auto_type_declaration)


State 451

  552 bitfield_bits: bitfield_bits . ';' "name"
  555 bitfield_type_declaration: "bitfield" '<' $@34 bitfield_bits . '>' $@35

    '>'  shift, and go to state 615
    ';'  shift, and go to state 616


State 452

  562 type_declaration: type_declaration . '[' expr ']'
  563                 | type_declaration . '[' ']'
  564                 | type_declaration . '-' '[' ']'
  565                 | type_declaration . "explicit"
  566                 | type_declaration . "const"
  567                 | type_declaration . '-' "const"
  568                 | type_declaration . '&'
  569                 | type_declaration . '-' '&'
  570                 | type_declaration . '#'
  571                 | type_declaration . "implicit"
  572                 | type_declaration . '-' '#'
  573                 | type_declaration . '=' "const"
  574                 | type_declaration . '?'
  578                 | type_declaration . "??"
  591                 | "block" '<' $@44 type_declaration . '>' $@45

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 617
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 453

  594 type_declaration: "block" '<' $@46 optional_function_argument_list . optional_function_type '>' $@47

    ':'  shift, and go to state 428

    $default  reduce using rule 100 (optional_function_type)

    optional_function_type  go to state 618


State 454

  562 type_declaration: type_declaration . '[' expr ']'
  563                 | type_declaration . '[' ']'
  564                 | type_declaration . '-' '[' ']'
  565                 | type_declaration . "explicit"
  566                 | type_declaration . "const"
  567                 | type_declaration . '-' "const"
  568                 | type_declaration . '&'
  569                 | type_declaration . '-' '&'
  570                 | type_declaration . '#'
  571                 | type_declaration . "implicit"
  572                 | type_declaration . '-' '#'
  573                 | type_declaration . '=' "const"
  574                 | type_declaration . '?'
  578                 | type_declaration . "??"
  598                 | "function" '<' $@48 type_declaration . '>' $@49

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 619
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 455

  601 type_declaration: "function" '<' $@50 optional_function_argument_list . optional_function_type '>' $@51

    ':'  shift, and go to state 428

    $default  reduce using rule 100 (optional_function_type)

    optional_function_type  go to state 620


State 456

  562 type_declaration: type_declaration . '[' expr ']'
  563                 | type_declaration . '[' ']'
  564                 | type_declaration . '-' '[' ']'
  565                 | type_declaration . "explicit"
  566                 | type_declaration . "const"
  567                 | type_declaration . '-' "const"
  568                 | type_declaration . '&'
  569                 | type_declaration . '-' '&'
  570                 | type_declaration . '#'
  571                 | type_declaration . "implicit"
  572                 | type_declaration . '-' '#'
  573                 | type_declaration . '=' "const"
  574                 | type_declaration . '?'
  578                 | type_declaration . "??"
  605                 | "lambda" '<' $@52 type_declaration . '>' $@53

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 621
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 457

  608 type_declaration: "lambda" '<' $@54 optional_function_argument_list . optional_function_type '>' $@55

    ':'  shift, and go to state 428

    $default  reduce using rule 100 (optional_function_type)

    optional_function_type  go to state 622


State 458

  214 name_in_namespace: "name" .
  215                  | "name" . "::" "name"
  443 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 80
    ':'   shift, and go to state 623

    $default  reduce using rule 214 (name_in_namespace)


State 459

  444 tuple_type_list: tuple_type .

    $default  reduce using rule 444 (tuple_type_list)


State 460

  445 tuple_type_list: tuple_type_list . ';' tuple_type
  611 type_declaration: "tuple" '<' $@56 tuple_type_list . '>' $@57

    '>'  shift, and go to state 624
    ';'  shift, and go to state 625


State 461

  442 tuple_type: type_declaration .
  562 type_declaration: type_declaration . '[' expr ']'
  563                 | type_declaration . '[' ']'
  564                 | type_declaration . '-' '[' ']'
  565                 | type_declaration . "explicit"
  566                 | type_declaration . "const"
  567                 | type_declaration . '-' "const"
  568                 | type_declaration . '&'
  569                 | type_declaration . '-' '&'
  570                 | type_declaration . '#'
  571                 | type_declaration . "implicit"
  572                 | type_declaration . '-' '#'
  573                 | type_declaration . '=' "const"
  574                 | type_declaration . '?'
  578                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251

    $default  reduce using rule 442 (tuple_type)


State 462

  448 variant_type_list: variant_type_list . ';' variant_type
  614 type_declaration: "variant" '<' $@58 variant_type_list . '>' $@59

    '>'  shift, and go to state 626
    ';'  shift, and go to state 627


State 463

  218 expr_new: "new" type_declaration .
  219         | "new" type_declaration . '(' ')'
  220         | "new" type_declaration . '(' expr_list ')'
  562 type_declaration: type_declaration . '[' expr ']'
  563                 | type_declaration . '[' ']'
  564                 | type_declaration . '-' '[' ']'
  565                 | type_declaration . "explicit"
  566                 | type_declaration . "const"
  567                 | type_declaration . '-' "const"
  568                 | type_declaration . '&'
  569                 | type_declaration . '-' '&'
  570                 | type_declaration . '#'
  571                 | type_declaration . "implicit"
  572                 | type_declaration . '-' '#'
  573                 | type_declaration . '=' "const"
  574                 | type_declaration . '?'
  578                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '('         shift, and go to state 628
    '#'         shift, and go to state 251

    "??"      [reduce using rule 218 (expr_new)]
    '='       [reduce using rule 218 (expr_new)]
    '?'       [reduce using rule 218 (expr_new)]
    '&'       [reduce using rule 218 (expr_new)]
    '-'       [reduce using rule 218 (expr_new)]
    '['       [reduce using rule 218 (expr_new)]
    '('       [reduce using rule 218 (expr_new)]
    $default  reduce using rule 218 (expr_new)


State 464

  221 expr_new: "new" make_decl .

    $default  reduce using rule 221 (expr_new)


State 465

  251 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  252               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  253               | "typeinfo" '(' . name_in_namespace '<' "name" ';' "name" '>' expr ')'

    "::"    shift, and go to state 50
    "name"  shift, and go to state 51

    name_in_namespace  go to state 629


State 466

  250 expr_type_decl: "type" '<' . $@12 type_declaration '>' $@13

    $default  reduce using rule 248 ($@12)

    $@12  go to state 630


State 467

  371 expr: "deref" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 631
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 468

  241 expr_cast: "cast" '<' . $@6 type_declaration '>' $@7 expr

    $default  reduce using rule 239 ($@6)

    $@6  go to state 632


State 469

  244 expr_cast: "upcast" '<' . $@8 type_declaration '>' $@9 expr

    $default  reduce using rule 242 ($@8)

    $@8  go to state 633


State 470

  372 expr: "addr" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 634
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 471

  247 expr_cast: "reinterpret" '<' . $@10 type_declaration '>' $@11 expr

    $default  reduce using rule 245 ($@10)

    $@10  go to state 635


State 472

  402 expr: "unsafe" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 636
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 473

  373 expr: "generator" '<' . type_declaration '>' optional_capture_list '(' ')'
  374     | "generator" '<' . type_declaration '>' optional_capture_list '(' expr ')'

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 637


State 474

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  354     | "++" expr .
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 354 (expr)


State 475

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  355     | "--" expr .
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 355 (expr)


State 476

  403 expr_mtag: "$$" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 638
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 477

  404 expr_mtag: "$i" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 639
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 478

  405 expr_mtag: "$v" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 640
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 479

  406 expr_mtag: "$b" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 641
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 480

  407 expr_mtag: "$a" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 642
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 481

  408 expr_mtag: "$c" '(' . expr ')' '(' ')'
  409          | "$c" '(' . expr ')' '(' expr_list ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 643
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 482

  653 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 545
    "name"  shift, and go to state 546

    variable_name_with_pos_list  go to state 644


State 483

  562 type_declaration: type_declaration . '[' expr ']'
  563                 | type_declaration . '[' ']'
  564                 | type_declaration . '-' '[' ']'
  565                 | type_declaration . "explicit"
  566                 | type_declaration . "const"
  567                 | type_declaration . '-' "const"
  568                 | type_declaration . '&'
  569                 | type_declaration . '-' '&'
  570                 | type_declaration . '#'
  571                 | type_declaration . "implicit"
  572                 | type_declaration . '-' '#'
  573                 | type_declaration . '=' "const"
  574                 | type_declaration . '?'
  578                 | type_declaration . "??"
  632 make_struct_decl: "[[" type_declaration . make_struct_dim optional_block ']' ']'
  633                 | "[[" type_declaration . optional_block ']' ']'
  634                 | "[[" type_declaration . '(' ')' optional_block ']' ']'
  635                 | "[[" type_declaration . '(' ')' make_struct_dim optional_block ']' ']'
  646 make_dim_decl: "[[" type_declaration . make_dim ']' ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "const"                           shift, and go to state 242
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "where"                           shift, and go to state 645
    "reinterpret"                     shift, and go to state 355
    "implicit"                        shift, and go to state 243
    "explicit"                        shift, and go to state 244
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "??"                              shift, and go to state 245
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 646
    "start of the string"             shift, and go to state 376
    '='                               shift, and go to state 246
    '?'                               shift, and go to state 247
    '&'                               shift, and go to state 248
    '-'                               shift, and go to state 647
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '['                               shift, and go to state 250
    '('                               shift, and go to state 648
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311
    '#'                               shift, and go to state 251

    $default  reduce using rule 630 (optional_block)

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 649
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_fields      go to state 650
    make_struct_dim         go to state 651
    optional_block          go to state 652
    make_struct_decl        go to state 405
    make_tuple              go to state 653
    make_map_tuple          go to state 654
    make_any_tuple          go to state 655
    make_dim                go to state 656
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 484

  654 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "$i"    shift, and go to state 545
    "name"  shift, and go to state 546

    variable_name_with_pos_list  go to state 657


State 485

  562 type_declaration: type_declaration . '[' expr ']'
  563                 | type_declaration . '[' ']'
  564                 | type_declaration . '-' '[' ']'
  565                 | type_declaration . "explicit"
  566                 | type_declaration . "const"
  567                 | type_declaration . '-' "const"
  568                 | type_declaration . '&'
  569                 | type_declaration . '-' '&'
  570                 | type_declaration . '#'
  571                 | type_declaration . "implicit"
  572                 | type_declaration . '-' '#'
  573                 | type_declaration . '=' "const"
  574                 | type_declaration . '?'
  578                 | type_declaration . "??"
  636 make_struct_decl: "[{" type_declaration . make_struct_dim optional_block '}' ']'
  637                 | "[{" type_declaration . '(' ')' make_struct_dim optional_block '}' ']'
  647 make_dim_decl: "[{" type_declaration . make_dim '}' ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "const"                           shift, and go to state 242
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "implicit"                        shift, and go to state 243
    "explicit"                        shift, and go to state 244
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "??"                              shift, and go to state 245
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 646
    "start of the string"             shift, and go to state 376
    '='                               shift, and go to state 246
    '?'                               shift, and go to state 247
    '&'                               shift, and go to state 248
    '-'                               shift, and go to state 647
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '['                               shift, and go to state 250
    '('                               shift, and go to state 658
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311
    '#'                               shift, and go to state 251

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 649
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_fields      go to state 650
    make_struct_dim         go to state 659
    make_struct_decl        go to state 405
    make_tuple              go to state 653
    make_map_tuple          go to state 654
    make_any_tuple          go to state 655
    make_dim                go to state 660
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 486

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'
  640 make_map_tuple: expr . "=>" expr
  641               | expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "=>"   shift, and go to state 661
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 641 (make_map_tuple)


State 487

  648 make_table: make_map_tuple .

    $default  reduce using rule 648 (make_table)


State 488

  649 make_table: make_table . ';' make_map_tuple
  650 make_table_decl: "{{" make_table . '}' '}'

    ';'  shift, and go to state 662
    '}'  shift, and go to state 663


State 489

   26 string_builder_body: string_builder_body . character_sequence
   27                    | string_builder_body . "{" expr "}"
   28 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 129
    STRING_CHARACTER_ESC  shift, and go to state 130
    "end of the string"   shift, and go to state 664
    "{"                   shift, and go to state 665

    character_sequence  go to state 666


State 490

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  331 expr: '-' expr .
  332     | expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 331 (expr)


State 491

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  330 expr: '+' expr .
  332     | expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 330 (expr)


State 492

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  370     | '*' expr .
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 370 (expr)


State 493

   32 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 31 ($@1)

    $@1  go to state 667


State 494

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  329 expr: '~' expr .
  332     | expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 329 (expr)


State 495

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  328 expr: '!' expr .
  332     | expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 328 (expr)


State 496

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  358     | '(' expr . ')'
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 668


State 497

  261 block_or_lambda: '@' '@' .
  306 func_addr_expr: '@' '@' . func_addr_name
  309               | '@' '@' . '<' $@14 type_declaration '>' $@15 func_addr_name
  312               | '@' '@' . '<' $@16 optional_function_argument_list optional_function_type '>' $@17 func_addr_name
  417 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 50
    "$i"    shift, and go to state 669
    "$c"    shift, and go to state 670
    "name"  shift, and go to state 51
    '<'     shift, and go to state 671

    $default  reduce using rule 261 (block_or_lambda)

    name_in_namespace  go to state 672
    func_addr_name     go to state 673


State 498

  401 expr: name_in_namespace "name" .

    $default  reduce using rule 401 (expr)


State 499

  301 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  366 expr: name_in_namespace '(' . ')'
  367     | name_in_namespace '(' . expr_list ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '['                               shift, and go to state 674
    '('                               shift, and go to state 383
    ')'                               shift, and go to state 675
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    expr_list               go to state 676
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 677
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 500

  271 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 678

    $default  reduce using rule 268 (optional_capture_list)

    optional_capture_list  go to state 679


State 501

  379 expr: expr "is" . "type" '<' $@20 type_declaration '>' $@21
  380     | expr "is" . basic_type_declaration
  381     | expr "is" . "name"
  416 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 680
    "bool"      shift, and go to state 145
    "void"      shift, and go to state 146
    "string"    shift, and go to state 147
    "int"       shift, and go to state 149
    "int2"      shift, and go to state 150
    "int3"      shift, and go to state 151
    "int4"      shift, and go to state 152
    "uint"      shift, and go to state 153
    "bitfield"  shift, and go to state 357
    "uint2"     shift, and go to state 155
    "uint3"     shift, and go to state 156
    "uint4"     shift, and go to state 157
    "float"     shift, and go to state 158
    "float2"    shift, and go to state 159
    "float3"    shift, and go to state 160
    "float4"    shift, and go to state 161
    "range"     shift, and go to state 162
    "urange"    shift, and go to state 163
    "int64"     shift, and go to state 165
    "uint64"    shift, and go to state 166
    "double"    shift, and go to state 167
    "int8"      shift, and go to state 170
    "uint8"     shift, and go to state 171
    "int16"     shift, and go to state 172
    "uint16"    shift, and go to state 173
    "$f"        shift, and go to state 681
    "name"      shift, and go to state 682

    basic_type_declaration  go to state 683


State 502

  382 expr: expr "as" . "name"
  385     | expr "as" . "type" '<' $@22 type_declaration '>' $@23
  386     | expr "as" . basic_type_declaration
  414 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 684
    "bool"      shift, and go to state 145
    "void"      shift, and go to state 146
    "string"    shift, and go to state 147
    "int"       shift, and go to state 149
    "int2"      shift, and go to state 150
    "int3"      shift, and go to state 151
    "int4"      shift, and go to state 152
    "uint"      shift, and go to state 153
    "bitfield"  shift, and go to state 357
    "uint2"     shift, and go to state 155
    "uint3"     shift, and go to state 156
    "uint4"     shift, and go to state 157
    "float"     shift, and go to state 158
    "float2"    shift, and go to state 159
    "float3"    shift, and go to state 160
    "float4"    shift, and go to state 161
    "range"     shift, and go to state 162
    "urange"    shift, and go to state 163
    "int64"     shift, and go to state 165
    "uint64"    shift, and go to state 166
    "double"    shift, and go to state 167
    "int8"      shift, and go to state 170
    "uint8"     shift, and go to state 171
    "int16"     shift, and go to state 172
    "uint16"    shift, and go to state 173
    "$f"        shift, and go to state 685
    "name"      shift, and go to state 686

    basic_type_declaration  go to state 687


State 503

  332 expr: expr "<<" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 688
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 504

  333 expr: expr ">>" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 689
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 505

  356 expr: expr "++" .

    $default  reduce using rule 356 (expr)


State 506

  357 expr: expr "--" .

    $default  reduce using rule 357 (expr)


State 507

  345 expr: expr "<=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 690
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 508

  346 expr: expr ">=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 691
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 509

  343 expr: expr "==" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 692
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 510

  344 expr: expr "!=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 693
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 511

  302 expr_method_call: expr "->" . "name" '(' ')'
  303                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 694


State 512

  375 expr: expr "??" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 695
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 513

  363 expr: expr "?." . "name"
  411 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 696
    "name"  shift, and go to state 697


State 514

  361 expr: expr "?[" . expr ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 698
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 515

  399 expr: expr "<|" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 699
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 516

  400 expr: expr "|>" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 700
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 517

  334 expr: expr "<<<" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 701
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 518

  335 expr: expr ">>>" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 702
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 519

  350 expr: expr "&&" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 703
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 520

  351 expr: expr "||" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 704
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 521

  352 expr: expr "^^" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 705
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 522

  353 expr: expr ".." . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 706
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 523

  376 expr: expr '?' . expr ':' expr
  387     | expr '?' . "as" "name"
  390     | expr '?' . "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr '?' . "as" basic_type_declaration
  415 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "as"                              shift, and go to state 707
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 708
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 524

  348 expr: expr '|' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 709
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 525

  349 expr: expr '^' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 710
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 526

  347 expr: expr '&' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 711
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 527

  341 expr: expr '<' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 712
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 528

  342 expr: expr '>' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 713
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 529

  337 expr: expr '-' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 714
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 530

  336 expr: expr '+' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 715
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 531

  338 expr: expr '*' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 716
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 532

  339 expr: expr '/' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 717
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 533

  340 expr: expr '%' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 718
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 534

  313 expr_field: expr '.' . "name"
  314           | expr '.' . '.' "name"
  317           | expr '.' . $@18 error $@19
  360 expr: expr '.' . '[' expr ']'
  362     | expr '.' . "?[" expr ']'
  364     | expr '.' . "?." "name"
  410 expr_mtag: expr '.' . "$f" '(' expr ')'
  412          | expr '.' . '.' "$f" '(' expr ')'
  413          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 719
    "?["    shift, and go to state 720
    "$f"    shift, and go to state 721
    "name"  shift, and go to state 722
    '.'     shift, and go to state 723
    '['     shift, and go to state 724

    $default  reduce using rule 315 ($@18)

    $@18  go to state 725


State 535

  359 expr: expr '[' . expr ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 726
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 536

  550 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 550 (auto_type_declaration)


State 537

  368 expr: basic_type_declaration '(' . ')'
  369     | basic_type_declaration '(' . expr_list ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    ')'                               shift, and go to state 727
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    expr_list               go to state 728
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 677
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 538

  564 type_declaration: type_declaration '-' '[' ']' .

    $default  reduce using rule 564 (type_declaration)


State 539

  562 type_declaration: type_declaration '[' expr ']' .

    $default  reduce using rule 562 (type_declaration)


State 540

  446 variant_type: "name" ':' type_declaration .
  562 type_declaration: type_declaration . '[' expr ']'
  563                 | type_declaration . '[' ']'
  564                 | type_declaration . '-' '[' ']'
  565                 | type_declaration . "explicit"
  566                 | type_declaration . "const"
  567                 | type_declaration . '-' "const"
  568                 | type_declaration . '&'
  569                 | type_declaration . '-' '&'
  570                 | type_declaration . '#'
  571                 | type_declaration . "implicit"
  572                 | type_declaration . '-' '#'
  573                 | type_declaration . '=' "const"
  574                 | type_declaration . '?'
  578                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251

    $default  reduce using rule 446 (variant_type)


State 541

  617 variant_alias_declaration: "variant" $@60 "name" $@61 '{' variant_type_list ';' '}' .

    $default  reduce using rule 617 (variant_alias_declaration)


State 542

  448 variant_type_list: variant_type_list ';' variant_type .

    $default  reduce using rule 448 (variant_type_list)


State 543

  439 function_argument_declaration: "$a" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 729
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 544

  438 function_argument_declaration: optional_field_annotation "var" . variable_declaration

    "$i"    shift, and go to state 545
    "name"  shift, and go to state 546

    variable_declaration         go to state 730
    variable_name_with_pos_list  go to state 548


State 545

  512 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 731


State 546

  511 variable_name_with_pos_list: "name" .
  513                            | "name" . "aka" "name"

    "aka"  shift, and go to state 732

    $default  reduce using rule 511 (variable_name_with_pos_list)


State 547

  437 function_argument_declaration: optional_field_annotation variable_declaration .

    $default  reduce using rule 437 (function_argument_declaration)


State 548

  451 variable_declaration: variable_name_with_pos_list .
  452                     | variable_name_with_pos_list . '&'
  453                     | variable_name_with_pos_list . ':' type_declaration
  454                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  455                     | variable_name_with_pos_list . copy_or_move expr
  456                     | variable_name_with_pos_list . copy_or_move expr_pipe
  514 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  515                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 733
    ','   shift, and go to state 734
    '='   shift, and go to state 735
    ':'   shift, and go to state 736
    '&'   shift, and go to state 737

    $default  reduce using rule 451 (variable_declaration)

    copy_or_move  go to state 738


State 549

   99 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 99 (optional_function_argument_list)


State 550

  441 function_argument_list: function_argument_list ';' . function_argument_declaration

    "$a"  shift, and go to state 423
    "[["  shift, and go to state 223

    $default  reduce using rule 418 (optional_field_annotation)

    optional_field_annotation      go to state 425
    function_argument_declaration  go to state 739


State 551

  101 optional_function_type: ':' type_declaration .
  562 type_declaration: type_declaration . '[' expr ']'
  563                 | type_declaration . '[' ']'
  564                 | type_declaration . '-' '[' ']'
  565                 | type_declaration . "explicit"
  566                 | type_declaration . "const"
  567                 | type_declaration . '-' "const"
  568                 | type_declaration . '&'
  569                 | type_declaration . '-' '&'
  570                 | type_declaration . '#'
  571                 | type_declaration . "implicit"
  572                 | type_declaration . '-' '#'
  573                 | type_declaration . '=' "const"
  574                 | type_declaration . '?'
  578                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251

    $default  reduce using rule 101 (optional_function_type)


State 552

  210 expressions: expressions error .

    $default  reduce using rule 210 (expressions)


State 553

   63 expression_while_loop: "while" . expr expression_block

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 740
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 554

   56 if_or_static_if: "if" .

    $default  reduce using rule 56 (if_or_static_if)


State 555

   57 if_or_static_if: "static_if" .

    $default  reduce using rule 57 (if_or_static_if)


State 556

   61 expression_for_loop: "for" . variable_name_with_pos_list "in" expr_list ';' expression_block

    "$i"    shift, and go to state 545
    "name"  shift, and go to state 546

    variable_name_with_pos_list  go to state 741


State 557

  224 expression_return: "return" . ';'
  225                  | "return" . expr ';'
  226                  | "return" . "<-" expr ';'
  227                  | "return" . expr_pipe
  228                  | "return" . "<-" expr_pipe
  230                  | "return" . expr "if" $@5 expr ';'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "<-"                              shift, and go to state 742
    "@ <|"                            shift, and go to state 569
    "@@ <|"                           shift, and go to state 570
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    ';'                               shift, and go to state 743
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    expr_pipe               go to state 744
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_assign             go to state 745
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 746
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 558

  222 expression_break: "break" .

    $default  reduce using rule 222 (expression_break)


State 559

  235 expression_try_catch: "try" . expression_block "recover" expression_block

    '{'  shift, and go to state 311

    expression_block  go to state 747


State 560

  217 expression_delete: "delete" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 748
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 561

   64 expression_with: "with" . expr expression_block

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 749
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 562

   66 expression_with_alias: "assume" . "name" '=' $@3 expr

    "name"  shift, and go to state 750


State 563

  223 expression_continue: "continue" .

    $default  reduce using rule 223 (expression_continue)


State 564

  207 expression_any: "pass" . ';'

    ';'  shift, and go to state 751


State 565

   48 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 752


State 566

   49 expression_goto: "goto" . "label" "integer constant"
   50                | "goto" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "label"                           shift, and go to state 753
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 754
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 567

   62 expression_unsafe: "unsafe" . expression_block
  402 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 472
    '{'  shift, and go to state 311

    expression_block  go to state 755


State 568

  231 expression_yield: "yield" . expr ';'
  232                 | "yield" . "<-" expr ';'
  233                 | "yield" . expr_pipe
  234                 | "yield" . "<-" expr_pipe

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "<-"                              shift, and go to state 756
    "@ <|"                            shift, and go to state 569
    "@@ <|"                           shift, and go to state 570
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    expr_pipe               go to state 757
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_assign             go to state 745
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 758
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 569

  212 expr_pipe: "@ <|" . expr_block

    '$'  shift, and go to state 384
    '@'  shift, and go to state 759
    '{'  shift, and go to state 311

    expression_block  go to state 388
    block_or_lambda   go to state 394
    expr_block        go to state 760


State 570

  213 expr_pipe: "@@ <|" . expr_block

    '$'  shift, and go to state 384
    '@'  shift, and go to state 759
    '{'  shift, and go to state 311

    expression_block  go to state 388
    block_or_lambda   go to state 394
    expr_block        go to state 761


State 571

  188 expression_any: ';' .

    $default  reduce using rule 188 (expression_any)


State 572

  186 expression_block: '{' expressions '}' .
  187                 | '{' expressions '}' . "finally" '{' expressions '}'

    "finally"  shift, and go to state 762

    $default  reduce using rule 186 (expression_block)


State 573

  205 expression_any: expression_label . ';'

    ';'  shift, and go to state 763


State 574

  206 expression_any: expression_goto . ';'

    ';'  shift, and go to state 764


State 575

   58 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 765
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 576

  203 expression_any: expression_if_then_else .

    $default  reduce using rule 203 (expression_any)


State 577

  198 expression_any: expression_for_loop .

    $default  reduce using rule 198 (expression_any)


State 578

  195 expression_any: expression_unsafe .

    $default  reduce using rule 195 (expression_any)


State 579

  194 expression_any: expression_while_loop .

    $default  reduce using rule 194 (expression_any)


State 580

  196 expression_any: expression_with .

    $default  reduce using rule 196 (expression_any)


State 581

  197 expression_any: expression_with_alias .

    $default  reduce using rule 197 (expression_any)


State 582

  209 expressions: expressions expression_any .

    $default  reduce using rule 209 (expressions)


State 583

  189 expression_any: expr_pipe .

    $default  reduce using rule 189 (expression_any)


State 584

  192 expression_any: expression_delete . ';'

    ';'  shift, and go to state 766


State 585

  199 expression_any: expression_break . ';'

    ';'  shift, and go to state 767


State 586

  200 expression_any: expression_continue . ';'

    ';'  shift, and go to state 768


State 587

  201 expression_any: expression_return .

    $default  reduce using rule 201 (expression_any)


State 588

  202 expression_any: expression_yield .

    $default  reduce using rule 202 (expression_any)


State 589

  204 expression_any: expression_try_catch .

    $default  reduce using rule 204 (expression_any)


State 590

  238 expression_let: kwd_let . let_variable_declaration

    "$i"    shift, and go to state 326
    "name"  shift, and go to state 327

    let_variable_name_with_pos_list  go to state 328
    let_variable_declaration         go to state 769


State 591

  193 expression_any: expression_let .

    $default  reduce using rule 193 (expression_any)


State 592

  191 expression_any: expr_assign . ';'
  211 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 770
    ';'    shift, and go to state 771


State 593

  190 expression_any: expr_assign_pipe .

    $default  reduce using rule 190 (expression_any)


State 594

   60 expression_if_then_else: expr . "if" $@2 expr
  278 expr_assign: expr .
  279            | expr . '=' expr
  280            | expr . "<-" expr
  281            | expr . ":=" expr
  282            | expr . "&=" expr
  283            | expr . "|=" expr
  284            | expr . "^=" expr
  285            | expr . "&&=" expr
  286            | expr . "||=" expr
  287            | expr . "^^=" expr
  288            | expr . "+=" expr
  289            | expr . "-=" expr
  290            | expr . "*=" expr
  291            | expr . "/=" expr
  292            | expr . "%=" expr
  293            | expr . "<<=" expr
  294            | expr . ">>=" expr
  295            | expr . "<<<=" expr
  296            | expr . ">>>=" expr
  297 expr_assign_pipe: expr . '=' "@ <|" expr
  298                 | expr . '=' "@@ <|" expr
  299                 | expr . "<-" "@ <|" expr
  300                 | expr . "<-" "@@ <|" expr
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "if"    shift, and go to state 772
    "is"    shift, and go to state 501
    "as"    shift, and go to state 502
    "+="    shift, and go to state 773
    "-="    shift, and go to state 774
    "/="    shift, and go to state 775
    "*="    shift, and go to state 776
    "%="    shift, and go to state 777
    "&="    shift, and go to state 778
    "|="    shift, and go to state 779
    "^="    shift, and go to state 780
    "<<"    shift, and go to state 503
    ">>"    shift, and go to state 504
    "++"    shift, and go to state 505
    "--"    shift, and go to state 506
    "<="    shift, and go to state 507
    "<<="   shift, and go to state 781
    ">>="   shift, and go to state 782
    ">="    shift, and go to state 508
    "=="    shift, and go to state 509
    "!="    shift, and go to state 510
    "->"    shift, and go to state 511
    "<-"    shift, and go to state 783
    "??"    shift, and go to state 512
    "?."    shift, and go to state 513
    "?["    shift, and go to state 514
    "<|"    shift, and go to state 515
    "|>"    shift, and go to state 516
    ":="    shift, and go to state 784
    "<<<"   shift, and go to state 517
    ">>>"   shift, and go to state 518
    "<<<="  shift, and go to state 785
    ">>>="  shift, and go to state 786
    "&&"    shift, and go to state 519
    "||"    shift, and go to state 520
    "^^"    shift, and go to state 521
    "&&="   shift, and go to state 787
    "||="   shift, and go to state 788
    "^^="   shift, and go to state 789
    ".."    shift, and go to state 522
    '='     shift, and go to state 790
    '?'     shift, and go to state 523
    '|'     shift, and go to state 524
    '^'     shift, and go to state 525
    '&'     shift, and go to state 526
    '<'     shift, and go to state 527
    '>'     shift, and go to state 528
    '-'     shift, and go to state 529
    '+'     shift, and go to state 530
    '*'     shift, and go to state 531
    '/'     shift, and go to state 532
    '%'     shift, and go to state 533
    '.'     shift, and go to state 534
    '['     shift, and go to state 535

    $default  reduce using rule 278 (expr_assign)


State 595

  484 enum_list: enum_list . "name" ';'
  485          | enum_list . "name" '=' expr ';'
  497 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list . '}'

    "name"  shift, and go to state 432
    '}'     shift, and go to state 791


State 596

  485 enum_list: enum_list "name" '=' . expr ';'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 792
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 597

  484 enum_list: enum_list "name" ';' .

    $default  reduce using rule 484 (enum_list)


State 598

  499 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 499 (optional_structure_parent)


State 599

  431 struct_variable_declaration_list: struct_variable_declaration_list . $@26 structure_variable_declaration ';'
  433                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" $@27 function_declaration_header ';'
  435                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant $@28 function_declaration_header expression_block
  436                                 | struct_variable_declaration_list . '[' annotation_list ']' ';'
  510 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name $@33 '{' struct_variable_declaration_list . '}'

    '['  shift, and go to state 793
    '}'  shift, and go to state 794

    "def"     reduce using rule 95 (optional_annotation_list)
    $default  reduce using rule 430 ($@26)

    optional_annotation_list  go to state 795
    $@26                      go to state 796


State 600

  474 global_variable_declaration_list: global_variable_declaration_list $@29 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 474 (global_variable_declaration_list)


State 601

  419 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 419 (optional_field_annotation)


State 602

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'
  463 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 797


State 603

  464 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 464 (let_variable_name_with_pos_list)


State 604

  465 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  466                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 798

    $default  reduce using rule 465 (let_variable_name_with_pos_list)


State 605

  467 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration . ';'
  468                         | let_variable_name_with_pos_list ':' type_declaration . copy_or_move_or_clone expr ';'
  469                         | let_variable_name_with_pos_list ':' type_declaration . copy_or_move_or_clone expr_pipe
  562 type_declaration: type_declaration . '[' expr ']'
  563                 | type_declaration . '[' ']'
  564                 | type_declaration . '-' '[' ']'
  565                 | type_declaration . "explicit"
  566                 | type_declaration . "const"
  567                 | type_declaration . '-' "const"
  568                 | type_declaration . '&'
  569                 | type_declaration . '-' '&'
  570                 | type_declaration . '#'
  571                 | type_declaration . "implicit"
  572                 | type_declaration . '-' '#'
  573                 | type_declaration . '=' "const"
  574                 | type_declaration . '?'
  578                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "<-"        shift, and go to state 606
    "??"        shift, and go to state 245
    ":="        shift, and go to state 607
    '='         shift, and go to state 799
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    ';'         shift, and go to state 800
    '#'         shift, and go to state 251

    copy_or_move_or_clone  go to state 801


State 606

  458 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 458 (copy_or_move_or_clone)


State 607

  459 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 459 (copy_or_move_or_clone)


State 608

  457 copy_or_move_or_clone: '=' .

    $default  reduce using rule 457 (copy_or_move_or_clone)


State 609

  470 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr ';'
  471                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "@ <|"                            shift, and go to state 569
    "@@ <|"                           shift, and go to state 570
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    expr_pipe               go to state 802
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_assign             go to state 745
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 803
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 610

  581 type_declaration: "array" '<' $@38 type_declaration '>' . $@39

    $default  reduce using rule 580 ($@39)

    $@39  go to state 804


State 611

  584 type_declaration: "table" '<' $@40 table_type_pair '>' . $@41

    $default  reduce using rule 583 ($@41)

    $@41  go to state 805


State 612

  557 table_type_pair: type_declaration ';' . type_declaration

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 806


State 613

  587 type_declaration: "iterator" '<' $@42 type_declaration '>' . $@43

    $default  reduce using rule 586 ($@43)

    $@43  go to state 807


State 614

  577 type_declaration: "smart_ptr" '<' $@36 type_declaration '>' . $@37

    $default  reduce using rule 576 ($@37)

    $@37  go to state 808


State 615

  555 bitfield_type_declaration: "bitfield" '<' $@34 bitfield_bits '>' . $@35

    $default  reduce using rule 554 ($@35)

    $@35  go to state 809


State 616

  552 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 416


State 617

  591 type_declaration: "block" '<' $@44 type_declaration '>' . $@45

    $default  reduce using rule 590 ($@45)

    $@45  go to state 810


State 618

  594 type_declaration: "block" '<' $@46 optional_function_argument_list optional_function_type . '>' $@47

    '>'  shift, and go to state 811


State 619

  598 type_declaration: "function" '<' $@48 type_declaration '>' . $@49

    $default  reduce using rule 597 ($@49)

    $@49  go to state 812


State 620

  601 type_declaration: "function" '<' $@50 optional_function_argument_list optional_function_type . '>' $@51

    '>'  shift, and go to state 813


State 621

  605 type_declaration: "lambda" '<' $@52 type_declaration '>' . $@53

    $default  reduce using rule 604 ($@53)

    $@53  go to state 814


State 622

  608 type_declaration: "lambda" '<' $@54 optional_function_argument_list optional_function_type . '>' $@55

    '>'  shift, and go to state 815


State 623

  443 tuple_type: "name" ':' . type_declaration

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 816


State 624

  611 type_declaration: "tuple" '<' $@56 tuple_type_list '>' . $@57

    $default  reduce using rule 610 ($@57)

    $@57  go to state 817


State 625

  445 tuple_type_list: tuple_type_list ';' . tuple_type

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 458

    name_in_namespace           go to state 177
    tuple_type                  go to state 818
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 461


State 626

  614 type_declaration: "variant" '<' $@58 variant_type_list '>' . $@59

    $default  reduce using rule 613 ($@59)

    $@59  go to state 819


State 627

  448 variant_type_list: variant_type_list ';' . variant_type

    "name"  shift, and go to state 253

    variant_type  go to state 542


State 628

  219 expr_new: "new" type_declaration '(' . ')'
  220         | "new" type_declaration '(' . expr_list ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    ')'                               shift, and go to state 820
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    expr_list               go to state 821
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 677
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 629

  251 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  252               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  253               | "typeinfo" '(' name_in_namespace . '<' "name" ';' "name" '>' expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '<'                               shift, and go to state 822
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 823
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 630

  250 expr_type_decl: "type" '<' $@12 . type_declaration '>' $@13

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 824


State 631

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  371     | "deref" '(' expr . ')'
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 825


State 632

  241 expr_cast: "cast" '<' $@6 . type_declaration '>' $@7 expr

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 826


State 633

  244 expr_cast: "upcast" '<' $@8 . type_declaration '>' $@9 expr

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 827


State 634

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  372     | "addr" '(' expr . ')'
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 828


State 635

  247 expr_cast: "reinterpret" '<' $@10 . type_declaration '>' $@11 expr

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 829


State 636

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  402     | "unsafe" '(' expr . ')'
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 830


State 637

  373 expr: "generator" '<' type_declaration . '>' optional_capture_list '(' ')'
  374     | "generator" '<' type_declaration . '>' optional_capture_list '(' expr ')'
  562 type_declaration: type_declaration . '[' expr ']'
  563                 | type_declaration . '[' ']'
  564                 | type_declaration . '-' '[' ']'
  565                 | type_declaration . "explicit"
  566                 | type_declaration . "const"
  567                 | type_declaration . '-' "const"
  568                 | type_declaration . '&'
  569                 | type_declaration . '-' '&'
  570                 | type_declaration . '#'
  571                 | type_declaration . "implicit"
  572                 | type_declaration . '-' '#'
  573                 | type_declaration . '=' "const"
  574                 | type_declaration . '?'
  578                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 831
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 638

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  403 expr_mtag: "$$" '(' expr . ')'
  410          | expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 832


State 639

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  404 expr_mtag: "$i" '(' expr . ')'
  410          | expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 833


State 640

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  405 expr_mtag: "$v" '(' expr . ')'
  410          | expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 834


State 641

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  406 expr_mtag: "$b" '(' expr . ')'
  410          | expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 835


State 642

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  407 expr_mtag: "$a" '(' expr . ')'
  410          | expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 836


State 643

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  408 expr_mtag: "$c" '(' expr . ')' '(' ')'
  409          | "$c" '(' expr . ')' '(' expr_list ')'
  410          | expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 837


State 644

  514 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  515                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  653 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 838
    ','   shift, and go to state 734


State 645

  631 optional_block: "where" . expr_block

    '$'  shift, and go to state 384
    '@'  shift, and go to state 759
    '{'  shift, and go to state 311

    expression_block  go to state 388
    block_or_lambda   go to state 394
    expr_block        go to state 839


State 646

  214 name_in_namespace: "name" .
  215                  | "name" . "::" "name"
  624 make_struct_fields: "name" . copy_or_move expr
  625                   | "name" . ":=" expr

    "<-"  shift, and go to state 733
    ":="  shift, and go to state 840
    "::"  shift, and go to state 80
    '='   shift, and go to state 735

    $default  reduce using rule 214 (name_in_namespace)

    copy_or_move  go to state 841


State 647

  331 expr: '-' . expr
  564 type_declaration: type_declaration '-' . '[' ']'
  567                 | type_declaration '-' . "const"
  569                 | type_declaration '-' . '&'
  572                 | type_declaration '-' . '#'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "const"                           shift, and go to state 410
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '&'                               shift, and go to state 411
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '['                               shift, and go to state 412
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311
    '#'                               shift, and go to state 413

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 490
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 648

  358 expr: '(' . expr ')'
  634 make_struct_decl: "[[" type_declaration '(' . ')' optional_block ']' ']'
  635                 | "[[" type_declaration '(' . ')' make_struct_dim optional_block ']' ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    ')'                               shift, and go to state 842
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 496
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 649

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'
  638 make_tuple: expr .
  640 make_map_tuple: expr . "=>" expr
  641               | expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "=>"   shift, and go to state 661
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    ']'       reduce using rule 638 (make_tuple)
    ']'       [reduce using rule 641 (make_map_tuple)]
    ';'       reduce using rule 638 (make_tuple)
    ';'       [reduce using rule 641 (make_map_tuple)]
    '}'       reduce using rule 638 (make_tuple)
    '}'       [reduce using rule 641 (make_map_tuple)]
    $default  reduce using rule 638 (make_tuple)


State 650

  626 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  627                   | make_struct_fields . ',' "name" ":=" expr
  628 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 843

    $default  reduce using rule 628 (make_struct_dim)


State 651

  629 make_struct_dim: make_struct_dim . ';' make_struct_fields
  632 make_struct_decl: "[[" type_declaration make_struct_dim . optional_block ']' ']'

    "where"  shift, and go to state 645
    ';'      shift, and go to state 844

    $default  reduce using rule 630 (optional_block)

    optional_block  go to state 845


State 652

  633 make_struct_decl: "[[" type_declaration optional_block . ']' ']'

    ']'  shift, and go to state 846


State 653

  639 make_tuple: make_tuple . ',' expr
  642 make_any_tuple: make_tuple .

    ','  shift, and go to state 847

    $default  reduce using rule 642 (make_any_tuple)


State 654

  643 make_any_tuple: make_map_tuple .

    $default  reduce using rule 643 (make_any_tuple)


State 655

  644 make_dim: make_any_tuple .

    $default  reduce using rule 644 (make_dim)


State 656

  645 make_dim: make_dim . ';' make_any_tuple
  646 make_dim_decl: "[[" type_declaration make_dim . ']' ']'

    ']'  shift, and go to state 848
    ';'  shift, and go to state 849


State 657

  514 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  515                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  654 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where '}' ']'

    "in"  shift, and go to state 850
    ','   shift, and go to state 734


State 658

  358 expr: '(' . expr ')'
  637 make_struct_decl: "[{" type_declaration '(' . ')' make_struct_dim optional_block '}' ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    ')'                               shift, and go to state 851
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 496
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 659

  629 make_struct_dim: make_struct_dim . ';' make_struct_fields
  636 make_struct_decl: "[{" type_declaration make_struct_dim . optional_block '}' ']'

    "where"  shift, and go to state 645
    ';'      shift, and go to state 844

    $default  reduce using rule 630 (optional_block)

    optional_block  go to state 852


State 660

  645 make_dim: make_dim . ';' make_any_tuple
  647 make_dim_decl: "[{" type_declaration make_dim . '}' ']'

    ';'  shift, and go to state 849
    '}'  shift, and go to state 853


State 661

  640 make_map_tuple: expr "=>" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 854
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 662

  649 make_table: make_table ';' . make_map_tuple

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 486
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_map_tuple          go to state 855
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 663

  650 make_table_decl: "{{" make_table '}' . '}'

    '}'  shift, and go to state 856


State 664

   28 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 28 (string_builder)


State 665

   27 string_builder_body: string_builder_body "{" . expr "}"

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 857
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 666

   22 character_sequence: character_sequence . STRING_CHARACTER
   23                   | character_sequence . STRING_CHARACTER_ESC
   26 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 225
    STRING_CHARACTER_ESC  shift, and go to state 226

    STRING_CHARACTER      [reduce using rule 26 (string_builder_body)]
    STRING_CHARACTER_ESC  [reduce using rule 26 (string_builder_body)]
    $default              reduce using rule 26 (string_builder_body)


State 667

   32 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 858

    reader_character_sequence  go to state 859


State 668

  358 expr: '(' expr ')' .

    $default  reduce using rule 358 (expr)


State 669

  305 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 860


State 670

  417 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 861


State 671

  309 func_addr_expr: '@' '@' '<' . $@14 type_declaration '>' $@15 func_addr_name
  312               | '@' '@' '<' . $@16 optional_function_argument_list optional_function_type '>' $@17 func_addr_name

    ':'       reduce using rule 310 ($@16)
    '>'       reduce using rule 310 ($@16)
    '('       reduce using rule 310 ($@16)
    $default  reduce using rule 307 ($@14)

    $@14  go to state 862
    $@16  go to state 863


State 672

  304 func_addr_name: name_in_namespace .

    $default  reduce using rule 304 (func_addr_name)


State 673

  306 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 306 (func_addr_expr)


State 674

  301 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'

    "name"  shift, and go to state 864

    make_struct_fields  go to state 865


State 675

  366 expr: name_in_namespace '(' ')' .

    $default  reduce using rule 366 (expr)


State 676

  255 expr_list: expr_list . ',' expr
  367 expr: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 866
    ')'  shift, and go to state 867


State 677

  254 expr_list: expr .
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 254 (expr_list)


State 678

  269 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"  shift, and go to state 868
    ":="  shift, and go to state 869
    '='   shift, and go to state 870
    '&'   shift, and go to state 871

    capture_entry  go to state 872
    capture_list   go to state 873


State 679

  271 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 309

    $default  reduce using rule 97 (optional_function_argument_list)

    optional_function_argument_list  go to state 874


State 680

  379 expr: expr "is" "type" . '<' $@20 type_declaration '>' $@21

    '<'  shift, and go to state 875


State 681

  416 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 876


State 682

  381 expr: expr "is" "name" .

    $default  reduce using rule 381 (expr)


State 683

  380 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 380 (expr)


State 684

  385 expr: expr "as" "type" . '<' $@22 type_declaration '>' $@23

    '<'  shift, and go to state 877


State 685

  414 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 878


State 686

  382 expr: expr "as" "name" .

    $default  reduce using rule 382 (expr)


State 687

  386 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 386 (expr)


State 688

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  332     | expr "<<" expr .
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '-'   shift, and go to state 529
    '+'   shift, and go to state 530
    '*'   shift, and go to state 531
    '/'   shift, and go to state 532
    '%'   shift, and go to state 533
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 332 (expr)


State 689

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  333     | expr ">>" expr .
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '-'   shift, and go to state 529
    '+'   shift, and go to state 530
    '*'   shift, and go to state 531
    '/'   shift, and go to state 532
    '%'   shift, and go to state 533
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 333 (expr)


State 690

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  345     | expr "<=" expr .
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 345 (expr)


State 691

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  346     | expr ">=" expr .
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 346 (expr)


State 692

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  343     | expr "==" expr .
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 343 (expr)


State 693

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  344     | expr "!=" expr .
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 344 (expr)


State 694

  302 expr_method_call: expr "->" "name" . '(' ')'
  303                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 879


State 695

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  375     | expr "??" expr .
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 375 (expr)


State 696

  411 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 880


State 697

  363 expr: expr "?." "name" .

    $default  reduce using rule 363 (expr)


State 698

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  361     | expr "?[" expr . ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ']'    shift, and go to state 881


State 699

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  399     | expr "<|" expr .
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 511
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 399 (expr)


State 700

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  400     | expr "|>" expr .
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 511
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 400 (expr)


State 701

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  334     | expr "<<<" expr .
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '-'   shift, and go to state 529
    '+'   shift, and go to state 530
    '*'   shift, and go to state 531
    '/'   shift, and go to state 532
    '%'   shift, and go to state 533
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 334 (expr)


State 702

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  335     | expr ">>>" expr .
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '-'   shift, and go to state 529
    '+'   shift, and go to state 530
    '*'   shift, and go to state 531
    '/'   shift, and go to state 532
    '%'   shift, and go to state 533
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 335 (expr)


State 703

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  350     | expr "&&" expr .
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 350 (expr)


State 704

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  351     | expr "||" expr .
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "^^"   shift, and go to state 521
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 351 (expr)


State 705

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  352     | expr "^^" expr .
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 352 (expr)


State 706

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  353     | expr ".." expr .
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    ".."  error (nonassociative)

    $default  reduce using rule 353 (expr)


State 707

  387 expr: expr '?' "as" . "name"
  390     | expr '?' "as" . "type" '<' $@24 type_declaration '>' $@25
  391     | expr '?' "as" . basic_type_declaration
  415 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 882
    "bool"      shift, and go to state 145
    "void"      shift, and go to state 146
    "string"    shift, and go to state 147
    "int"       shift, and go to state 149
    "int2"      shift, and go to state 150
    "int3"      shift, and go to state 151
    "int4"      shift, and go to state 152
    "uint"      shift, and go to state 153
    "bitfield"  shift, and go to state 357
    "uint2"     shift, and go to state 155
    "uint3"     shift, and go to state 156
    "uint4"     shift, and go to state 157
    "float"     shift, and go to state 158
    "float2"    shift, and go to state 159
    "float3"    shift, and go to state 160
    "float4"    shift, and go to state 161
    "range"     shift, and go to state 162
    "urange"    shift, and go to state 163
    "int64"     shift, and go to state 165
    "uint64"    shift, and go to state 166
    "double"    shift, and go to state 167
    "int8"      shift, and go to state 170
    "uint8"     shift, and go to state 171
    "int16"     shift, and go to state 172
    "uint16"    shift, and go to state 173
    "$f"        shift, and go to state 883
    "name"      shift, and go to state 884

    basic_type_declaration  go to state 885


State 708

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  376     | expr '?' expr . ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    ':'    shift, and go to state 886
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535


State 709

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  348     | expr '|' expr .
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 348 (expr)


State 710

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  349     | expr '^' expr .
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 349 (expr)


State 711

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  347     | expr '&' expr .
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 347 (expr)


State 712

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  341     | expr '<' expr .
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 341 (expr)


State 713

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  342     | expr '>' expr .
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 342 (expr)


State 714

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  337     | expr '-' expr .
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '*'   shift, and go to state 531
    '/'   shift, and go to state 532
    '%'   shift, and go to state 533
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 337 (expr)


State 715

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  336     | expr '+' expr .
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '*'   shift, and go to state 531
    '/'   shift, and go to state 532
    '%'   shift, and go to state 533
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 336 (expr)


State 716

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  338     | expr '*' expr .
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 338 (expr)


State 717

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  339     | expr '/' expr .
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 339 (expr)


State 718

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  340     | expr '%' expr .
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 340 (expr)


State 719

  364 expr: expr '.' "?." . "name"
  413 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 887
    "name"  shift, and go to state 888


State 720

  362 expr: expr '.' "?[" . expr ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 889
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 721

  410 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 890


State 722

  313 expr_field: expr '.' "name" .

    $default  reduce using rule 313 (expr_field)


State 723

  314 expr_field: expr '.' '.' . "name"
  412 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 891
    "name"  shift, and go to state 892


State 724

  360 expr: expr '.' '[' . expr ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 893
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 725

  317 expr_field: expr '.' $@18 . error $@19

    error  shift, and go to state 894


State 726

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  359     | expr '[' expr . ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ']'    shift, and go to state 895


State 727

  368 expr: basic_type_declaration '(' ')' .

    $default  reduce using rule 368 (expr)


State 728

  255 expr_list: expr_list . ',' expr
  369 expr: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 866
    ')'  shift, and go to state 896


State 729

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'
  439 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 897


State 730

  438 function_argument_declaration: optional_field_annotation "var" variable_declaration .

    $default  reduce using rule 438 (function_argument_declaration)


State 731

  512 variable_name_with_pos_list: "$i" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 898
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 732

  513 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 899


State 733

  450 copy_or_move: "<-" .

    $default  reduce using rule 450 (copy_or_move)


State 734

  514 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  515                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 900


State 735

  449 copy_or_move: '=' .

    $default  reduce using rule 449 (copy_or_move)


State 736

  453 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  454                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 901


State 737

  452 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 452 (variable_declaration)


State 738

  455 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  456                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "@ <|"                            shift, and go to state 569
    "@@ <|"                           shift, and go to state 570
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    expr_pipe               go to state 902
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_assign             go to state 745
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 903
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 739

  441 function_argument_list: function_argument_list ';' function_argument_declaration .

    $default  reduce using rule 441 (function_argument_list)


State 740

   63 expression_while_loop: "while" expr . expression_block
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    '{'    shift, and go to state 311

    expression_block  go to state 904


State 741

   61 expression_for_loop: "for" variable_name_with_pos_list . "in" expr_list ';' expression_block
  514 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  515                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 905
    ','   shift, and go to state 734


State 742

  226 expression_return: "return" "<-" . expr ';'
  228                  | "return" "<-" . expr_pipe

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "@ <|"                            shift, and go to state 569
    "@@ <|"                           shift, and go to state 570
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    expr_pipe               go to state 906
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_assign             go to state 745
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 907
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 743

  224 expression_return: "return" ';' .

    $default  reduce using rule 224 (expression_return)


State 744

  227 expression_return: "return" expr_pipe .

    $default  reduce using rule 227 (expression_return)


State 745

  211 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 770


State 746

  225 expression_return: "return" expr . ';'
  230                  | "return" expr . "if" $@5 expr ';'
  278 expr_assign: expr .
  279            | expr . '=' expr
  280            | expr . "<-" expr
  281            | expr . ":=" expr
  282            | expr . "&=" expr
  283            | expr . "|=" expr
  284            | expr . "^=" expr
  285            | expr . "&&=" expr
  286            | expr . "||=" expr
  287            | expr . "^^=" expr
  288            | expr . "+=" expr
  289            | expr . "-=" expr
  290            | expr . "*=" expr
  291            | expr . "/=" expr
  292            | expr . "%=" expr
  293            | expr . "<<=" expr
  294            | expr . ">>=" expr
  295            | expr . "<<<=" expr
  296            | expr . ">>>=" expr
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "if"    shift, and go to state 908
    "is"    shift, and go to state 501
    "as"    shift, and go to state 502
    "+="    shift, and go to state 773
    "-="    shift, and go to state 774
    "/="    shift, and go to state 775
    "*="    shift, and go to state 776
    "%="    shift, and go to state 777
    "&="    shift, and go to state 778
    "|="    shift, and go to state 779
    "^="    shift, and go to state 780
    "<<"    shift, and go to state 503
    ">>"    shift, and go to state 504
    "++"    shift, and go to state 505
    "--"    shift, and go to state 506
    "<="    shift, and go to state 507
    "<<="   shift, and go to state 781
    ">>="   shift, and go to state 782
    ">="    shift, and go to state 508
    "=="    shift, and go to state 509
    "!="    shift, and go to state 510
    "->"    shift, and go to state 511
    "<-"    shift, and go to state 909
    "??"    shift, and go to state 512
    "?."    shift, and go to state 513
    "?["    shift, and go to state 514
    "<|"    shift, and go to state 515
    "|>"    shift, and go to state 516
    ":="    shift, and go to state 784
    "<<<"   shift, and go to state 517
    ">>>"   shift, and go to state 518
    "<<<="  shift, and go to state 785
    ">>>="  shift, and go to state 786
    "&&"    shift, and go to state 519
    "||"    shift, and go to state 520
    "^^"    shift, and go to state 521
    "&&="   shift, and go to state 787
    "||="   shift, and go to state 788
    "^^="   shift, and go to state 789
    ".."    shift, and go to state 522
    '='     shift, and go to state 910
    '?'     shift, and go to state 523
    '|'     shift, and go to state 524
    '^'     shift, and go to state 525
    '&'     shift, and go to state 526
    '<'     shift, and go to state 527
    '>'     shift, and go to state 528
    '-'     shift, and go to state 529
    '+'     shift, and go to state 530
    '*'     shift, and go to state 531
    '/'     shift, and go to state 532
    '%'     shift, and go to state 533
    '.'     shift, and go to state 534
    '['     shift, and go to state 535
    ';'     shift, and go to state 911

    $default  reduce using rule 278 (expr_assign)


State 747

  235 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 912


State 748

  217 expression_delete: "delete" expr .
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 217 (expression_delete)


State 749

   64 expression_with: "with" expr . expression_block
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    '{'    shift, and go to state 311

    expression_block  go to state 913


State 750

   66 expression_with_alias: "assume" "name" . '=' $@3 expr

    '='  shift, and go to state 914


State 751

  207 expression_any: "pass" ';' .

    $default  reduce using rule 207 (expression_any)


State 752

   48 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 915


State 753

   49 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 916


State 754

   50 expression_goto: "goto" expr .
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 50 (expression_goto)


State 755

   62 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 62 (expression_unsafe)


State 756

  232 expression_yield: "yield" "<-" . expr ';'
  234                 | "yield" "<-" . expr_pipe

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "@ <|"                            shift, and go to state 569
    "@@ <|"                           shift, and go to state 570
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    expr_pipe               go to state 917
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_assign             go to state 745
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 918
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 757

  233 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 233 (expression_yield)


State 758

  231 expression_yield: "yield" expr . ';'
  278 expr_assign: expr .
  279            | expr . '=' expr
  280            | expr . "<-" expr
  281            | expr . ":=" expr
  282            | expr . "&=" expr
  283            | expr . "|=" expr
  284            | expr . "^=" expr
  285            | expr . "&&=" expr
  286            | expr . "||=" expr
  287            | expr . "^^=" expr
  288            | expr . "+=" expr
  289            | expr . "-=" expr
  290            | expr . "*=" expr
  291            | expr . "/=" expr
  292            | expr . "%=" expr
  293            | expr . "<<=" expr
  294            | expr . ">>=" expr
  295            | expr . "<<<=" expr
  296            | expr . ">>>=" expr
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 501
    "as"    shift, and go to state 502
    "+="    shift, and go to state 773
    "-="    shift, and go to state 774
    "/="    shift, and go to state 775
    "*="    shift, and go to state 776
    "%="    shift, and go to state 777
    "&="    shift, and go to state 778
    "|="    shift, and go to state 779
    "^="    shift, and go to state 780
    "<<"    shift, and go to state 503
    ">>"    shift, and go to state 504
    "++"    shift, and go to state 505
    "--"    shift, and go to state 506
    "<="    shift, and go to state 507
    "<<="   shift, and go to state 781
    ">>="   shift, and go to state 782
    ">="    shift, and go to state 508
    "=="    shift, and go to state 509
    "!="    shift, and go to state 510
    "->"    shift, and go to state 511
    "<-"    shift, and go to state 909
    "??"    shift, and go to state 512
    "?."    shift, and go to state 513
    "?["    shift, and go to state 514
    "<|"    shift, and go to state 515
    "|>"    shift, and go to state 516
    ":="    shift, and go to state 784
    "<<<"   shift, and go to state 517
    ">>>"   shift, and go to state 518
    "<<<="  shift, and go to state 785
    ">>>="  shift, and go to state 786
    "&&"    shift, and go to state 519
    "||"    shift, and go to state 520
    "^^"    shift, and go to state 521
    "&&="   shift, and go to state 787
    "||="   shift, and go to state 788
    "^^="   shift, and go to state 789
    ".."    shift, and go to state 522
    '='     shift, and go to state 910
    '?'     shift, and go to state 523
    '|'     shift, and go to state 524
    '^'     shift, and go to state 525
    '&'     shift, and go to state 526
    '<'     shift, and go to state 527
    '>'     shift, and go to state 528
    '-'     shift, and go to state 529
    '+'     shift, and go to state 530
    '*'     shift, and go to state 531
    '/'     shift, and go to state 532
    '%'     shift, and go to state 533
    '.'     shift, and go to state 534
    '['     shift, and go to state 535
    ';'     shift, and go to state 919

    $default  reduce using rule 278 (expr_assign)


State 759

  260 block_or_lambda: '@' .
  261                | '@' . '@'

    '@'  shift, and go to state 920

    $default  reduce using rule 260 (block_or_lambda)


State 760

  212 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 212 (expr_pipe)


State 761

  213 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 213 (expr_pipe)


State 762

  187 expression_block: '{' expressions '}' "finally" . '{' expressions '}'

    '{'  shift, and go to state 921


State 763

  205 expression_any: expression_label ';' .

    $default  reduce using rule 205 (expression_any)


State 764

  206 expression_any: expression_goto ';' .

    $default  reduce using rule 206 (expression_any)


State 765

   58 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    '{'    shift, and go to state 311

    expression_block  go to state 922


State 766

  192 expression_any: expression_delete ';' .

    $default  reduce using rule 192 (expression_any)


State 767

  199 expression_any: expression_break ';' .

    $default  reduce using rule 199 (expression_any)


State 768

  200 expression_any: expression_continue ';' .

    $default  reduce using rule 200 (expression_any)


State 769

  238 expression_let: kwd_let let_variable_declaration .

    $default  reduce using rule 238 (expression_let)


State 770

  211 expr_pipe: expr_assign " <|" . expr_block

    '$'  shift, and go to state 384
    '@'  shift, and go to state 759
    '{'  shift, and go to state 311

    expression_block  go to state 388
    block_or_lambda   go to state 394
    expr_block        go to state 923


State 771

  191 expression_any: expr_assign ';' .

    $default  reduce using rule 191 (expression_any)


State 772

   60 expression_if_then_else: expr "if" . $@2 expr

    $default  reduce using rule 59 ($@2)

    $@2  go to state 924


State 773

  288 expr_assign: expr "+=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 925
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 774

  289 expr_assign: expr "-=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 926
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 775

  291 expr_assign: expr "/=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 927
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 776

  290 expr_assign: expr "*=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 928
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 777

  292 expr_assign: expr "%=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 929
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 778

  282 expr_assign: expr "&=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 930
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 779

  283 expr_assign: expr "|=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 931
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 780

  284 expr_assign: expr "^=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 932
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 781

  293 expr_assign: expr "<<=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 933
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 782

  294 expr_assign: expr ">>=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 934
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 783

  280 expr_assign: expr "<-" . expr
  299 expr_assign_pipe: expr "<-" . "@ <|" expr
  300                 | expr "<-" . "@@ <|" expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "@ <|"                            shift, and go to state 935
    "@@ <|"                           shift, and go to state 936
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 937
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 784

  281 expr_assign: expr ":=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 938
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 785

  295 expr_assign: expr "<<<=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 939
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 786

  296 expr_assign: expr ">>>=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 940
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 787

  285 expr_assign: expr "&&=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 941
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 788

  286 expr_assign: expr "||=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 942
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 789

  287 expr_assign: expr "^^=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 943
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 790

  279 expr_assign: expr '=' . expr
  297 expr_assign_pipe: expr '=' . "@ <|" expr
  298                 | expr '=' . "@@ <|" expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "@ <|"                            shift, and go to state 944
    "@@ <|"                           shift, and go to state 945
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 946
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 791

  497 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list '}' .

    $default  reduce using rule 497 (enum_declaration)


State 792

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'
  485 enum_list: enum_list "name" '=' expr . ';'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ';'    shift, and go to state 947


State 793

   96 optional_annotation_list: '[' . annotation_list ']'
  436 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' ';'

    "require"  shift, and go to state 48
    "private"  shift, and go to state 49
    "::"       shift, and go to state 50
    "name"     shift, and go to state 51

    annotation_declaration_name  go to state 52
    annotation_declaration       go to state 53
    annotation_list              go to state 948
    name_in_namespace            go to state 55


State 794

  510 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name $@33 '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 510 (structure_declaration)


State 795

  433 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" $@27 function_declaration_header ';'
  435                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_override optional_constant $@28 function_declaration_header expression_block

    "def"  shift, and go to state 949


State 796

  431 struct_variable_declaration_list: struct_variable_declaration_list $@26 . structure_variable_declaration ';'

    "[["  shift, and go to state 223

    $default  reduce using rule 418 (optional_field_annotation)

    optional_field_annotation       go to state 950
    structure_variable_declaration  go to state 951


State 797

  463 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 463 (let_variable_name_with_pos_list)


State 798

  466 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 952


State 799

  457 copy_or_move_or_clone: '=' .
  573 type_declaration: type_declaration '=' . "const"

    "const"  shift, and go to state 409

    $default  reduce using rule 457 (copy_or_move_or_clone)


State 800

  467 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration ';' .

    $default  reduce using rule 467 (let_variable_declaration)


State 801

  468 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone . expr ';'
  469                         | let_variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone . expr_pipe

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "@ <|"                            shift, and go to state 569
    "@@ <|"                           shift, and go to state 570
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    expr_pipe               go to state 953
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_assign             go to state 745
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 954
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 802

  471 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 471 (let_variable_declaration)


State 803

  278 expr_assign: expr .
  279            | expr . '=' expr
  280            | expr . "<-" expr
  281            | expr . ":=" expr
  282            | expr . "&=" expr
  283            | expr . "|=" expr
  284            | expr . "^=" expr
  285            | expr . "&&=" expr
  286            | expr . "||=" expr
  287            | expr . "^^=" expr
  288            | expr . "+=" expr
  289            | expr . "-=" expr
  290            | expr . "*=" expr
  291            | expr . "/=" expr
  292            | expr . "%=" expr
  293            | expr . "<<=" expr
  294            | expr . ">>=" expr
  295            | expr . "<<<=" expr
  296            | expr . ">>>=" expr
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'
  470 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 501
    "as"    shift, and go to state 502
    "+="    shift, and go to state 773
    "-="    shift, and go to state 774
    "/="    shift, and go to state 775
    "*="    shift, and go to state 776
    "%="    shift, and go to state 777
    "&="    shift, and go to state 778
    "|="    shift, and go to state 779
    "^="    shift, and go to state 780
    "<<"    shift, and go to state 503
    ">>"    shift, and go to state 504
    "++"    shift, and go to state 505
    "--"    shift, and go to state 506
    "<="    shift, and go to state 507
    "<<="   shift, and go to state 781
    ">>="   shift, and go to state 782
    ">="    shift, and go to state 508
    "=="    shift, and go to state 509
    "!="    shift, and go to state 510
    "->"    shift, and go to state 511
    "<-"    shift, and go to state 909
    "??"    shift, and go to state 512
    "?."    shift, and go to state 513
    "?["    shift, and go to state 514
    "<|"    shift, and go to state 515
    "|>"    shift, and go to state 516
    ":="    shift, and go to state 784
    "<<<"   shift, and go to state 517
    ">>>"   shift, and go to state 518
    "<<<="  shift, and go to state 785
    ">>>="  shift, and go to state 786
    "&&"    shift, and go to state 519
    "||"    shift, and go to state 520
    "^^"    shift, and go to state 521
    "&&="   shift, and go to state 787
    "||="   shift, and go to state 788
    "^^="   shift, and go to state 789
    ".."    shift, and go to state 522
    '='     shift, and go to state 910
    '?'     shift, and go to state 523
    '|'     shift, and go to state 524
    '^'     shift, and go to state 525
    '&'     shift, and go to state 526
    '<'     shift, and go to state 527
    '>'     shift, and go to state 528
    '-'     shift, and go to state 529
    '+'     shift, and go to state 530
    '*'     shift, and go to state 531
    '/'     shift, and go to state 532
    '%'     shift, and go to state 533
    '.'     shift, and go to state 534
    '['     shift, and go to state 535
    ';'     shift, and go to state 955

    $default  reduce using rule 278 (expr_assign)


State 804

  581 type_declaration: "array" '<' $@38 type_declaration '>' $@39 .

    $default  reduce using rule 581 (type_declaration)


State 805

  584 type_declaration: "table" '<' $@40 table_type_pair '>' $@41 .

    $default  reduce using rule 584 (type_declaration)


State 806

  557 table_type_pair: type_declaration ';' type_declaration .
  562 type_declaration: type_declaration . '[' expr ']'
  563                 | type_declaration . '[' ']'
  564                 | type_declaration . '-' '[' ']'
  565                 | type_declaration . "explicit"
  566                 | type_declaration . "const"
  567                 | type_declaration . '-' "const"
  568                 | type_declaration . '&'
  569                 | type_declaration . '-' '&'
  570                 | type_declaration . '#'
  571                 | type_declaration . "implicit"
  572                 | type_declaration . '-' '#'
  573                 | type_declaration . '=' "const"
  574                 | type_declaration . '?'
  578                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251

    $default  reduce using rule 557 (table_type_pair)


State 807

  587 type_declaration: "iterator" '<' $@42 type_declaration '>' $@43 .

    $default  reduce using rule 587 (type_declaration)


State 808

  577 type_declaration: "smart_ptr" '<' $@36 type_declaration '>' $@37 .

    $default  reduce using rule 577 (type_declaration)


State 809

  555 bitfield_type_declaration: "bitfield" '<' $@34 bitfield_bits '>' $@35 .

    $default  reduce using rule 555 (bitfield_type_declaration)


State 810

  591 type_declaration: "block" '<' $@44 type_declaration '>' $@45 .

    $default  reduce using rule 591 (type_declaration)


State 811

  594 type_declaration: "block" '<' $@46 optional_function_argument_list optional_function_type '>' . $@47

    $default  reduce using rule 593 ($@47)

    $@47  go to state 956


State 812

  598 type_declaration: "function" '<' $@48 type_declaration '>' $@49 .

    $default  reduce using rule 598 (type_declaration)


State 813

  601 type_declaration: "function" '<' $@50 optional_function_argument_list optional_function_type '>' . $@51

    $default  reduce using rule 600 ($@51)

    $@51  go to state 957


State 814

  605 type_declaration: "lambda" '<' $@52 type_declaration '>' $@53 .

    $default  reduce using rule 605 (type_declaration)


State 815

  608 type_declaration: "lambda" '<' $@54 optional_function_argument_list optional_function_type '>' . $@55

    $default  reduce using rule 607 ($@55)

    $@55  go to state 958


State 816

  443 tuple_type: "name" ':' type_declaration .
  562 type_declaration: type_declaration . '[' expr ']'
  563                 | type_declaration . '[' ']'
  564                 | type_declaration . '-' '[' ']'
  565                 | type_declaration . "explicit"
  566                 | type_declaration . "const"
  567                 | type_declaration . '-' "const"
  568                 | type_declaration . '&'
  569                 | type_declaration . '-' '&'
  570                 | type_declaration . '#'
  571                 | type_declaration . "implicit"
  572                 | type_declaration . '-' '#'
  573                 | type_declaration . '=' "const"
  574                 | type_declaration . '?'
  578                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251

    $default  reduce using rule 443 (tuple_type)


State 817

  611 type_declaration: "tuple" '<' $@56 tuple_type_list '>' $@57 .

    $default  reduce using rule 611 (type_declaration)


State 818

  445 tuple_type_list: tuple_type_list ';' tuple_type .

    $default  reduce using rule 445 (tuple_type_list)


State 819

  614 type_declaration: "variant" '<' $@58 variant_type_list '>' $@59 .

    $default  reduce using rule 614 (type_declaration)


State 820

  219 expr_new: "new" type_declaration '(' ')' .

    $default  reduce using rule 219 (expr_new)


State 821

  220 expr_new: "new" type_declaration '(' expr_list . ')'
  255 expr_list: expr_list . ',' expr

    ','  shift, and go to state 866
    ')'  shift, and go to state 959


State 822

  252 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  253               | "typeinfo" '(' name_in_namespace '<' . "name" ';' "name" '>' expr ')'

    "name"  shift, and go to state 960


State 823

  251 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 961


State 824

  250 expr_type_decl: "type" '<' $@12 type_declaration . '>' $@13
  562 type_declaration: type_declaration . '[' expr ']'
  563                 | type_declaration . '[' ']'
  564                 | type_declaration . '-' '[' ']'
  565                 | type_declaration . "explicit"
  566                 | type_declaration . "const"
  567                 | type_declaration . '-' "const"
  568                 | type_declaration . '&'
  569                 | type_declaration . '-' '&'
  570                 | type_declaration . '#'
  571                 | type_declaration . "implicit"
  572                 | type_declaration . '-' '#'
  573                 | type_declaration . '=' "const"
  574                 | type_declaration . '?'
  578                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 962
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 825

  371 expr: "deref" '(' expr ')' .

    $default  reduce using rule 371 (expr)


State 826

  241 expr_cast: "cast" '<' $@6 type_declaration . '>' $@7 expr
  562 type_declaration: type_declaration . '[' expr ']'
  563                 | type_declaration . '[' ']'
  564                 | type_declaration . '-' '[' ']'
  565                 | type_declaration . "explicit"
  566                 | type_declaration . "const"
  567                 | type_declaration . '-' "const"
  568                 | type_declaration . '&'
  569                 | type_declaration . '-' '&'
  570                 | type_declaration . '#'
  571                 | type_declaration . "implicit"
  572                 | type_declaration . '-' '#'
  573                 | type_declaration . '=' "const"
  574                 | type_declaration . '?'
  578                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 963
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 827

  244 expr_cast: "upcast" '<' $@8 type_declaration . '>' $@9 expr
  562 type_declaration: type_declaration . '[' expr ']'
  563                 | type_declaration . '[' ']'
  564                 | type_declaration . '-' '[' ']'
  565                 | type_declaration . "explicit"
  566                 | type_declaration . "const"
  567                 | type_declaration . '-' "const"
  568                 | type_declaration . '&'
  569                 | type_declaration . '-' '&'
  570                 | type_declaration . '#'
  571                 | type_declaration . "implicit"
  572                 | type_declaration . '-' '#'
  573                 | type_declaration . '=' "const"
  574                 | type_declaration . '?'
  578                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 964
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 828

  372 expr: "addr" '(' expr ')' .

    $default  reduce using rule 372 (expr)


State 829

  247 expr_cast: "reinterpret" '<' $@10 type_declaration . '>' $@11 expr
  562 type_declaration: type_declaration . '[' expr ']'
  563                 | type_declaration . '[' ']'
  564                 | type_declaration . '-' '[' ']'
  565                 | type_declaration . "explicit"
  566                 | type_declaration . "const"
  567                 | type_declaration . '-' "const"
  568                 | type_declaration . '&'
  569                 | type_declaration . '-' '&'
  570                 | type_declaration . '#'
  571                 | type_declaration . "implicit"
  572                 | type_declaration . '-' '#'
  573                 | type_declaration . '=' "const"
  574                 | type_declaration . '?'
  578                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 965
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 830

  402 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 402 (expr)


State 831

  373 expr: "generator" '<' type_declaration '>' . optional_capture_list '(' ')'
  374     | "generator" '<' type_declaration '>' . optional_capture_list '(' expr ')'

    "[["  shift, and go to state 678

    $default  reduce using rule 268 (optional_capture_list)

    optional_capture_list  go to state 966


State 832

  403 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 403 (expr_mtag)


State 833

  404 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 404 (expr_mtag)


State 834

  405 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 405 (expr_mtag)


State 835

  406 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 406 (expr_mtag)


State 836

  407 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 407 (expr_mtag)


State 837

  408 expr_mtag: "$c" '(' expr ')' . '(' ')'
  409          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 967


State 838

  653 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where ']' ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    expr_list               go to state 968
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 677
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 839

  631 optional_block: "where" expr_block .

    $default  reduce using rule 631 (optional_block)


State 840

  625 make_struct_fields: "name" ":=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 969
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 841

  624 make_struct_fields: "name" copy_or_move . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 970
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 842

  634 make_struct_decl: "[[" type_declaration '(' ')' . optional_block ']' ']'
  635                 | "[[" type_declaration '(' ')' . make_struct_dim optional_block ']' ']'

    "where"  shift, and go to state 645
    "name"   shift, and go to state 864

    $default  reduce using rule 630 (optional_block)

    make_struct_fields  go to state 650
    make_struct_dim     go to state 971
    optional_block      go to state 972


State 843

  626 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  627                   | make_struct_fields ',' . "name" ":=" expr

    "name"  shift, and go to state 973


State 844

  629 make_struct_dim: make_struct_dim ';' . make_struct_fields

    "name"  shift, and go to state 864

    make_struct_fields  go to state 974


State 845

  632 make_struct_decl: "[[" type_declaration make_struct_dim optional_block . ']' ']'

    ']'  shift, and go to state 975


State 846

  633 make_struct_decl: "[[" type_declaration optional_block ']' . ']'

    ']'  shift, and go to state 976


State 847

  639 make_tuple: make_tuple ',' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 977
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 848

  646 make_dim_decl: "[[" type_declaration make_dim ']' . ']'

    ']'  shift, and go to state 978


State 849

  645 make_dim: make_dim ';' . make_any_tuple

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 649
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_tuple              go to state 653
    make_map_tuple          go to state 654
    make_any_tuple          go to state 979
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 850

  654 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where '}' ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    expr_list               go to state 980
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 677
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 851

  637 make_struct_decl: "[{" type_declaration '(' ')' . make_struct_dim optional_block '}' ']'

    "name"  shift, and go to state 864

    make_struct_fields  go to state 650
    make_struct_dim     go to state 981


State 852

  636 make_struct_decl: "[{" type_declaration make_struct_dim optional_block . '}' ']'

    '}'  shift, and go to state 982


State 853

  647 make_dim_decl: "[{" type_declaration make_dim '}' . ']'

    ']'  shift, and go to state 983


State 854

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'
  640 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 640 (make_map_tuple)


State 855

  649 make_table: make_table ';' make_map_tuple .

    $default  reduce using rule 649 (make_table)


State 856

  650 make_table_decl: "{{" make_table '}' '}' .

    $default  reduce using rule 650 (make_table_decl)


State 857

   27 string_builder_body: string_builder_body "{" expr . "}"
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    "}"    shift, and go to state 984
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535


State 858

   29 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 29 (reader_character_sequence)


State 859

   30 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   32 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 985

    $default  reduce using rule 32 (expr_reader)


State 860

  305 func_addr_name: "$i" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 986
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 861

  417 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 987
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 862

  309 func_addr_expr: '@' '@' '<' $@14 . type_declaration '>' $@15 func_addr_name

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 988


State 863

  312 func_addr_expr: '@' '@' '<' $@16 . optional_function_argument_list optional_function_type '>' $@17 func_addr_name

    '('  shift, and go to state 309

    $default  reduce using rule 97 (optional_function_argument_list)

    optional_function_argument_list  go to state 989


State 864

  624 make_struct_fields: "name" . copy_or_move expr
  625                   | "name" . ":=" expr

    "<-"  shift, and go to state 733
    ":="  shift, and go to state 840
    '='   shift, and go to state 735

    copy_or_move  go to state 841


State 865

  301 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  626 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  627                   | make_struct_fields . ',' "name" ":=" expr

    ','  shift, and go to state 843
    ']'  shift, and go to state 990


State 866

  255 expr_list: expr_list ',' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 991
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 867

  367 expr: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 367 (expr)


State 868

  264 capture_entry: "<-" . "name"

    "name"  shift, and go to state 992


State 869

  265 capture_entry: ":=" . "name"

    "name"  shift, and go to state 993


State 870

  263 capture_entry: '=' . "name"

    "name"  shift, and go to state 994


State 871

  262 capture_entry: '&' . "name"

    "name"  shift, and go to state 995


State 872

  266 capture_list: capture_entry .

    $default  reduce using rule 266 (capture_list)


State 873

  267 capture_list: capture_list . ',' capture_entry
  269 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 996
    ']'  shift, and go to state 997


State 874

  271 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 428

    $default  reduce using rule 100 (optional_function_type)

    optional_function_type  go to state 998


State 875

  379 expr: expr "is" "type" '<' . $@20 type_declaration '>' $@21

    $default  reduce using rule 377 ($@20)

    $@20  go to state 999


State 876

  416 expr_mtag: expr "is" "$f" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1000
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 877

  385 expr: expr "as" "type" '<' . $@22 type_declaration '>' $@23

    $default  reduce using rule 383 ($@22)

    $@22  go to state 1001


State 878

  414 expr_mtag: expr "as" "$f" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1002
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 879

  302 expr_method_call: expr "->" "name" '(' . ')'
  303                 | expr "->" "name" '(' . expr_list ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    ')'                               shift, and go to state 1003
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    expr_list               go to state 1004
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 677
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 880

  411 expr_mtag: expr "?." "$f" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1005
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 881

  361 expr: expr "?[" expr ']' .

    $default  reduce using rule 361 (expr)


State 882

  390 expr: expr '?' "as" "type" . '<' $@24 type_declaration '>' $@25

    '<'  shift, and go to state 1006


State 883

  415 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1007


State 884

  387 expr: expr '?' "as" "name" .

    $default  reduce using rule 387 (expr)


State 885

  391 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 391 (expr)


State 886

  376 expr: expr '?' expr ':' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1008
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 887

  413 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1009


State 888

  364 expr: expr '.' "?." "name" .

    $default  reduce using rule 364 (expr)


State 889

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  362     | expr '.' "?[" expr . ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ']'    shift, and go to state 1010


State 890

  410 expr_mtag: expr '.' "$f" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1011
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 891

  412 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1012


State 892

  314 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 314 (expr_field)


State 893

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  360     | expr '.' '[' expr . ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ']'    shift, and go to state 1013


State 894

  317 expr_field: expr '.' $@18 error . $@19

    $default  reduce using rule 316 ($@19)

    $@19  go to state 1014


State 895

  359 expr: expr '[' expr ']' .

    $default  reduce using rule 359 (expr)


State 896

  369 expr: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 369 (expr)


State 897

  439 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 439 (function_argument_declaration)


State 898

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'
  512 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1015


State 899

  513 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 513 (variable_name_with_pos_list)


State 900

  514 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  515                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1016

    $default  reduce using rule 514 (variable_name_with_pos_list)


State 901

  453 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  454                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  562 type_declaration: type_declaration . '[' expr ']'
  563                 | type_declaration . '[' ']'
  564                 | type_declaration . '-' '[' ']'
  565                 | type_declaration . "explicit"
  566                 | type_declaration . "const"
  567                 | type_declaration . '-' "const"
  568                 | type_declaration . '&'
  569                 | type_declaration . '-' '&'
  570                 | type_declaration . '#'
  571                 | type_declaration . "implicit"
  572                 | type_declaration . '-' '#'
  573                 | type_declaration . '=' "const"
  574                 | type_declaration . '?'
  578                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "<-"        shift, and go to state 733
    "??"        shift, and go to state 245
    '='         shift, and go to state 1017
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251

    $default  reduce using rule 453 (variable_declaration)

    copy_or_move  go to state 1018


State 902

  456 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 456 (variable_declaration)


State 903

  278 expr_assign: expr .
  279            | expr . '=' expr
  280            | expr . "<-" expr
  281            | expr . ":=" expr
  282            | expr . "&=" expr
  283            | expr . "|=" expr
  284            | expr . "^=" expr
  285            | expr . "&&=" expr
  286            | expr . "||=" expr
  287            | expr . "^^=" expr
  288            | expr . "+=" expr
  289            | expr . "-=" expr
  290            | expr . "*=" expr
  291            | expr . "/=" expr
  292            | expr . "%=" expr
  293            | expr . "<<=" expr
  294            | expr . ">>=" expr
  295            | expr . "<<<=" expr
  296            | expr . ">>>=" expr
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'
  455 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 501
    "as"    shift, and go to state 502
    "+="    shift, and go to state 773
    "-="    shift, and go to state 774
    "/="    shift, and go to state 775
    "*="    shift, and go to state 776
    "%="    shift, and go to state 777
    "&="    shift, and go to state 778
    "|="    shift, and go to state 779
    "^="    shift, and go to state 780
    "<<"    shift, and go to state 503
    ">>"    shift, and go to state 504
    "++"    shift, and go to state 505
    "--"    shift, and go to state 506
    "<="    shift, and go to state 507
    "<<="   shift, and go to state 781
    ">>="   shift, and go to state 782
    ">="    shift, and go to state 508
    "=="    shift, and go to state 509
    "!="    shift, and go to state 510
    "->"    shift, and go to state 511
    "<-"    shift, and go to state 909
    "??"    shift, and go to state 512
    "?."    shift, and go to state 513
    "?["    shift, and go to state 514
    "<|"    shift, and go to state 515
    "|>"    shift, and go to state 516
    ":="    shift, and go to state 784
    "<<<"   shift, and go to state 517
    ">>>"   shift, and go to state 518
    "<<<="  shift, and go to state 785
    ">>>="  shift, and go to state 786
    "&&"    shift, and go to state 519
    "||"    shift, and go to state 520
    "^^"    shift, and go to state 521
    "&&="   shift, and go to state 787
    "||="   shift, and go to state 788
    "^^="   shift, and go to state 789
    ".."    shift, and go to state 522
    '='     shift, and go to state 910
    '?'     shift, and go to state 523
    '|'     shift, and go to state 524
    '^'     shift, and go to state 525
    '&'     shift, and go to state 526
    '<'     shift, and go to state 527
    '>'     shift, and go to state 528
    '-'     shift, and go to state 529
    '+'     shift, and go to state 530
    '*'     shift, and go to state 531
    '/'     shift, and go to state 532
    '%'     shift, and go to state 533
    '.'     shift, and go to state 534
    '['     shift, and go to state 535

    " <|"     reduce using rule 278 (expr_assign)
    $default  reduce using rule 455 (variable_declaration)


State 904

   63 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 63 (expression_while_loop)


State 905

   61 expression_for_loop: "for" variable_name_with_pos_list "in" . expr_list ';' expression_block

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    expr_list               go to state 1019
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 677
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 906

  228 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 228 (expression_return)


State 907

  226 expression_return: "return" "<-" expr . ';'
  278 expr_assign: expr .
  279            | expr . '=' expr
  280            | expr . "<-" expr
  281            | expr . ":=" expr
  282            | expr . "&=" expr
  283            | expr . "|=" expr
  284            | expr . "^=" expr
  285            | expr . "&&=" expr
  286            | expr . "||=" expr
  287            | expr . "^^=" expr
  288            | expr . "+=" expr
  289            | expr . "-=" expr
  290            | expr . "*=" expr
  291            | expr . "/=" expr
  292            | expr . "%=" expr
  293            | expr . "<<=" expr
  294            | expr . ">>=" expr
  295            | expr . "<<<=" expr
  296            | expr . ">>>=" expr
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 501
    "as"    shift, and go to state 502
    "+="    shift, and go to state 773
    "-="    shift, and go to state 774
    "/="    shift, and go to state 775
    "*="    shift, and go to state 776
    "%="    shift, and go to state 777
    "&="    shift, and go to state 778
    "|="    shift, and go to state 779
    "^="    shift, and go to state 780
    "<<"    shift, and go to state 503
    ">>"    shift, and go to state 504
    "++"    shift, and go to state 505
    "--"    shift, and go to state 506
    "<="    shift, and go to state 507
    "<<="   shift, and go to state 781
    ">>="   shift, and go to state 782
    ">="    shift, and go to state 508
    "=="    shift, and go to state 509
    "!="    shift, and go to state 510
    "->"    shift, and go to state 511
    "<-"    shift, and go to state 909
    "??"    shift, and go to state 512
    "?."    shift, and go to state 513
    "?["    shift, and go to state 514
    "<|"    shift, and go to state 515
    "|>"    shift, and go to state 516
    ":="    shift, and go to state 784
    "<<<"   shift, and go to state 517
    ">>>"   shift, and go to state 518
    "<<<="  shift, and go to state 785
    ">>>="  shift, and go to state 786
    "&&"    shift, and go to state 519
    "||"    shift, and go to state 520
    "^^"    shift, and go to state 521
    "&&="   shift, and go to state 787
    "||="   shift, and go to state 788
    "^^="   shift, and go to state 789
    ".."    shift, and go to state 522
    '='     shift, and go to state 910
    '?'     shift, and go to state 523
    '|'     shift, and go to state 524
    '^'     shift, and go to state 525
    '&'     shift, and go to state 526
    '<'     shift, and go to state 527
    '>'     shift, and go to state 528
    '-'     shift, and go to state 529
    '+'     shift, and go to state 530
    '*'     shift, and go to state 531
    '/'     shift, and go to state 532
    '%'     shift, and go to state 533
    '.'     shift, and go to state 534
    '['     shift, and go to state 535
    ';'     shift, and go to state 1020

    $default  reduce using rule 278 (expr_assign)


State 908

  230 expression_return: "return" expr "if" . $@5 expr ';'

    $default  reduce using rule 229 ($@5)

    $@5  go to state 1021


State 909

  280 expr_assign: expr "<-" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 937
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 910

  279 expr_assign: expr '=' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 946
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 911

  225 expression_return: "return" expr ';' .

    $default  reduce using rule 225 (expression_return)


State 912

  235 expression_try_catch: "try" expression_block "recover" . expression_block

    '{'  shift, and go to state 311

    expression_block  go to state 1022


State 913

   64 expression_with: "with" expr expression_block .

    $default  reduce using rule 64 (expression_with)


State 914

   66 expression_with_alias: "assume" "name" '=' . $@3 expr

    $default  reduce using rule 65 ($@3)

    $@3  go to state 1023


State 915

   48 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 48 (expression_label)


State 916

   49 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 49 (expression_goto)


State 917

  234 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 234 (expression_yield)


State 918

  232 expression_yield: "yield" "<-" expr . ';'
  278 expr_assign: expr .
  279            | expr . '=' expr
  280            | expr . "<-" expr
  281            | expr . ":=" expr
  282            | expr . "&=" expr
  283            | expr . "|=" expr
  284            | expr . "^=" expr
  285            | expr . "&&=" expr
  286            | expr . "||=" expr
  287            | expr . "^^=" expr
  288            | expr . "+=" expr
  289            | expr . "-=" expr
  290            | expr . "*=" expr
  291            | expr . "/=" expr
  292            | expr . "%=" expr
  293            | expr . "<<=" expr
  294            | expr . ">>=" expr
  295            | expr . "<<<=" expr
  296            | expr . ">>>=" expr
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 501
    "as"    shift, and go to state 502
    "+="    shift, and go to state 773
    "-="    shift, and go to state 774
    "/="    shift, and go to state 775
    "*="    shift, and go to state 776
    "%="    shift, and go to state 777
    "&="    shift, and go to state 778
    "|="    shift, and go to state 779
    "^="    shift, and go to state 780
    "<<"    shift, and go to state 503
    ">>"    shift, and go to state 504
    "++"    shift, and go to state 505
    "--"    shift, and go to state 506
    "<="    shift, and go to state 507
    "<<="   shift, and go to state 781
    ">>="   shift, and go to state 782
    ">="    shift, and go to state 508
    "=="    shift, and go to state 509
    "!="    shift, and go to state 510
    "->"    shift, and go to state 511
    "<-"    shift, and go to state 909
    "??"    shift, and go to state 512
    "?."    shift, and go to state 513
    "?["    shift, and go to state 514
    "<|"    shift, and go to state 515
    "|>"    shift, and go to state 516
    ":="    shift, and go to state 784
    "<<<"   shift, and go to state 517
    ">>>"   shift, and go to state 518
    "<<<="  shift, and go to state 785
    ">>>="  shift, and go to state 786
    "&&"    shift, and go to state 519
    "||"    shift, and go to state 520
    "^^"    shift, and go to state 521
    "&&="   shift, and go to state 787
    "||="   shift, and go to state 788
    "^^="   shift, and go to state 789
    ".."    shift, and go to state 522
    '='     shift, and go to state 910
    '?'     shift, and go to state 523
    '|'     shift, and go to state 524
    '^'     shift, and go to state 525
    '&'     shift, and go to state 526
    '<'     shift, and go to state 527
    '>'     shift, and go to state 528
    '-'     shift, and go to state 529
    '+'     shift, and go to state 530
    '*'     shift, and go to state 531
    '/'     shift, and go to state 532
    '%'     shift, and go to state 533
    '.'     shift, and go to state 534
    '['     shift, and go to state 535
    ';'     shift, and go to state 1024

    $default  reduce using rule 278 (expr_assign)


State 919

  231 expression_yield: "yield" expr ';' .

    $default  reduce using rule 231 (expression_yield)


State 920

  261 block_or_lambda: '@' '@' .

    $default  reduce using rule 261 (block_or_lambda)


State 921

  187 expression_block: '{' expressions '}' "finally" '{' . expressions '}'

    $default  reduce using rule 208 (expressions)

    expressions  go to state 1025


State 922

   58 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1026
    "elif"         shift, and go to state 1027
    "static_elif"  shift, and go to state 1028

    $default  reduce using rule 53 (expression_else)

    elif_or_static_elif  go to state 1029
    expression_else      go to state 1030


State 923

  211 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 211 (expr_pipe)


State 924

   60 expression_if_then_else: expr "if" $@2 . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1031
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 925

  288 expr_assign: expr "+=" expr .
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 288 (expr_assign)


State 926

  289 expr_assign: expr "-=" expr .
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 289 (expr_assign)


State 927

  291 expr_assign: expr "/=" expr .
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 291 (expr_assign)


State 928

  290 expr_assign: expr "*=" expr .
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 290 (expr_assign)


State 929

  292 expr_assign: expr "%=" expr .
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 292 (expr_assign)


State 930

  282 expr_assign: expr "&=" expr .
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 282 (expr_assign)


State 931

  283 expr_assign: expr "|=" expr .
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 283 (expr_assign)


State 932

  284 expr_assign: expr "^=" expr .
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 284 (expr_assign)


State 933

  293 expr_assign: expr "<<=" expr .
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 293 (expr_assign)


State 934

  294 expr_assign: expr ">>=" expr .
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 294 (expr_assign)


State 935

  299 expr_assign_pipe: expr "<-" "@ <|" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1032
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 936

  300 expr_assign_pipe: expr "<-" "@@ <|" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1033
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 937

  280 expr_assign: expr "<-" expr .
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 280 (expr_assign)


State 938

  281 expr_assign: expr ":=" expr .
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 281 (expr_assign)


State 939

  295 expr_assign: expr "<<<=" expr .
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 295 (expr_assign)


State 940

  296 expr_assign: expr ">>>=" expr .
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 296 (expr_assign)


State 941

  285 expr_assign: expr "&&=" expr .
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 285 (expr_assign)


State 942

  286 expr_assign: expr "||=" expr .
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 286 (expr_assign)


State 943

  287 expr_assign: expr "^^=" expr .
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 287 (expr_assign)


State 944

  297 expr_assign_pipe: expr '=' "@ <|" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1034
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 945

  298 expr_assign_pipe: expr '=' "@@ <|" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1035
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 946

  279 expr_assign: expr '=' expr .
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 279 (expr_assign)


State 947

  485 enum_list: enum_list "name" '=' expr ';' .

    $default  reduce using rule 485 (enum_list)


State 948

   94 annotation_list: annotation_list . ',' annotation_declaration
   96 optional_annotation_list: '[' annotation_list . ']'
  436 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' ';'

    ','  shift, and go to state 82
    ']'  shift, and go to state 1036


State 949

  433 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" $@27 function_declaration_header ';'
  435                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_override optional_constant $@28 function_declaration_header expression_block

    "public"   shift, and go to state 1037
    "private"  shift, and go to state 1038

    $default  reduce using rule 425 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1039


State 950

  428 structure_variable_declaration: optional_field_annotation . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1040
    "sealed"    shift, and go to state 1041

    $default  reduce using rule 420 (optional_override)

    optional_override  go to state 1042


State 951

  431 struct_variable_declaration_list: struct_variable_declaration_list $@26 structure_variable_declaration . ';'

    ';'  shift, and go to state 1043


State 952

  466 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 466 (let_variable_name_with_pos_list)


State 953

  469 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 469 (let_variable_declaration)


State 954

  278 expr_assign: expr .
  279            | expr . '=' expr
  280            | expr . "<-" expr
  281            | expr . ":=" expr
  282            | expr . "&=" expr
  283            | expr . "|=" expr
  284            | expr . "^=" expr
  285            | expr . "&&=" expr
  286            | expr . "||=" expr
  287            | expr . "^^=" expr
  288            | expr . "+=" expr
  289            | expr . "-=" expr
  290            | expr . "*=" expr
  291            | expr . "/=" expr
  292            | expr . "%=" expr
  293            | expr . "<<=" expr
  294            | expr . ">>=" expr
  295            | expr . "<<<=" expr
  296            | expr . ">>>=" expr
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'
  468 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 501
    "as"    shift, and go to state 502
    "+="    shift, and go to state 773
    "-="    shift, and go to state 774
    "/="    shift, and go to state 775
    "*="    shift, and go to state 776
    "%="    shift, and go to state 777
    "&="    shift, and go to state 778
    "|="    shift, and go to state 779
    "^="    shift, and go to state 780
    "<<"    shift, and go to state 503
    ">>"    shift, and go to state 504
    "++"    shift, and go to state 505
    "--"    shift, and go to state 506
    "<="    shift, and go to state 507
    "<<="   shift, and go to state 781
    ">>="   shift, and go to state 782
    ">="    shift, and go to state 508
    "=="    shift, and go to state 509
    "!="    shift, and go to state 510
    "->"    shift, and go to state 511
    "<-"    shift, and go to state 909
    "??"    shift, and go to state 512
    "?."    shift, and go to state 513
    "?["    shift, and go to state 514
    "<|"    shift, and go to state 515
    "|>"    shift, and go to state 516
    ":="    shift, and go to state 784
    "<<<"   shift, and go to state 517
    ">>>"   shift, and go to state 518
    "<<<="  shift, and go to state 785
    ">>>="  shift, and go to state 786
    "&&"    shift, and go to state 519
    "||"    shift, and go to state 520
    "^^"    shift, and go to state 521
    "&&="   shift, and go to state 787
    "||="   shift, and go to state 788
    "^^="   shift, and go to state 789
    ".."    shift, and go to state 522
    '='     shift, and go to state 910
    '?'     shift, and go to state 523
    '|'     shift, and go to state 524
    '^'     shift, and go to state 525
    '&'     shift, and go to state 526
    '<'     shift, and go to state 527
    '>'     shift, and go to state 528
    '-'     shift, and go to state 529
    '+'     shift, and go to state 530
    '*'     shift, and go to state 531
    '/'     shift, and go to state 532
    '%'     shift, and go to state 533
    '.'     shift, and go to state 534
    '['     shift, and go to state 535
    ';'     shift, and go to state 1044

    $default  reduce using rule 278 (expr_assign)


State 955

  470 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 470 (let_variable_declaration)


State 956

  594 type_declaration: "block" '<' $@46 optional_function_argument_list optional_function_type '>' $@47 .

    $default  reduce using rule 594 (type_declaration)


State 957

  601 type_declaration: "function" '<' $@50 optional_function_argument_list optional_function_type '>' $@51 .

    $default  reduce using rule 601 (type_declaration)


State 958

  608 type_declaration: "lambda" '<' $@54 optional_function_argument_list optional_function_type '>' $@55 .

    $default  reduce using rule 608 (type_declaration)


State 959

  220 expr_new: "new" type_declaration '(' expr_list ')' .

    $default  reduce using rule 220 (expr_new)


State 960

  252 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  253               | "typeinfo" '(' name_in_namespace '<' "name" . ';' "name" '>' expr ')'

    '>'  shift, and go to state 1045
    ';'  shift, and go to state 1046


State 961

  251 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 251 (expr_type_info)


State 962

  250 expr_type_decl: "type" '<' $@12 type_declaration '>' . $@13

    $default  reduce using rule 249 ($@13)

    $@13  go to state 1047


State 963

  241 expr_cast: "cast" '<' $@6 type_declaration '>' . $@7 expr

    $default  reduce using rule 240 ($@7)

    $@7  go to state 1048


State 964

  244 expr_cast: "upcast" '<' $@8 type_declaration '>' . $@9 expr

    $default  reduce using rule 243 ($@9)

    $@9  go to state 1049


State 965

  247 expr_cast: "reinterpret" '<' $@10 type_declaration '>' . $@11 expr

    $default  reduce using rule 246 ($@11)

    $@11  go to state 1050


State 966

  373 expr: "generator" '<' type_declaration '>' optional_capture_list . '(' ')'
  374     | "generator" '<' type_declaration '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1051


State 967

  408 expr_mtag: "$c" '(' expr ')' '(' . ')'
  409          | "$c" '(' expr ')' '(' . expr_list ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    ')'                               shift, and go to state 1052
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    expr_list               go to state 1053
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 677
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 968

  255 expr_list: expr_list . ',' expr
  653 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where ']' ']'

    ','  shift, and go to state 866
    ';'  shift, and go to state 1054


State 969

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'
  625 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 625 (make_struct_fields)


State 970

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'
  624 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 624 (make_struct_fields)


State 971

  629 make_struct_dim: make_struct_dim . ';' make_struct_fields
  635 make_struct_decl: "[[" type_declaration '(' ')' make_struct_dim . optional_block ']' ']'

    "where"  shift, and go to state 645
    ';'      shift, and go to state 844

    $default  reduce using rule 630 (optional_block)

    optional_block  go to state 1055


State 972

  634 make_struct_decl: "[[" type_declaration '(' ')' optional_block . ']' ']'

    ']'  shift, and go to state 1056


State 973

  626 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  627                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 733
    ":="  shift, and go to state 1057
    '='   shift, and go to state 735

    copy_or_move  go to state 1058


State 974

  626 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  627                   | make_struct_fields . ',' "name" ":=" expr
  629 make_struct_dim: make_struct_dim ';' make_struct_fields .

    ','  shift, and go to state 843

    $default  reduce using rule 629 (make_struct_dim)


State 975

  632 make_struct_decl: "[[" type_declaration make_struct_dim optional_block ']' . ']'

    ']'  shift, and go to state 1059


State 976

  633 make_struct_decl: "[[" type_declaration optional_block ']' ']' .

    $default  reduce using rule 633 (make_struct_decl)


State 977

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'
  639 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 639 (make_tuple)


State 978

  646 make_dim_decl: "[[" type_declaration make_dim ']' ']' .

    $default  reduce using rule 646 (make_dim_decl)


State 979

  645 make_dim: make_dim ';' make_any_tuple .

    $default  reduce using rule 645 (make_dim)


State 980

  255 expr_list: expr_list . ',' expr
  654 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where '}' ']'

    ','  shift, and go to state 866
    ';'  shift, and go to state 1060


State 981

  629 make_struct_dim: make_struct_dim . ';' make_struct_fields
  637 make_struct_decl: "[{" type_declaration '(' ')' make_struct_dim . optional_block '}' ']'

    "where"  shift, and go to state 645
    ';'      shift, and go to state 844

    $default  reduce using rule 630 (optional_block)

    optional_block  go to state 1061


State 982

  636 make_struct_decl: "[{" type_declaration make_struct_dim optional_block '}' . ']'

    ']'  shift, and go to state 1062


State 983

  647 make_dim_decl: "[{" type_declaration make_dim '}' ']' .

    $default  reduce using rule 647 (make_dim_decl)


State 984

   27 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 27 (string_builder_body)


State 985

   30 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 30 (reader_character_sequence)


State 986

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  305 func_addr_name: "$i" '(' expr . ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1063


State 987

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'
  417          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1064


State 988

  309 func_addr_expr: '@' '@' '<' $@14 type_declaration . '>' $@15 func_addr_name
  562 type_declaration: type_declaration . '[' expr ']'
  563                 | type_declaration . '[' ']'
  564                 | type_declaration . '-' '[' ']'
  565                 | type_declaration . "explicit"
  566                 | type_declaration . "const"
  567                 | type_declaration . '-' "const"
  568                 | type_declaration . '&'
  569                 | type_declaration . '-' '&'
  570                 | type_declaration . '#'
  571                 | type_declaration . "implicit"
  572                 | type_declaration . '-' '#'
  573                 | type_declaration . '=' "const"
  574                 | type_declaration . '?'
  578                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 1065
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 989

  312 func_addr_expr: '@' '@' '<' $@16 optional_function_argument_list . optional_function_type '>' $@17 func_addr_name

    ':'  shift, and go to state 428

    $default  reduce using rule 100 (optional_function_type)

    optional_function_type  go to state 1066


State 990

  301 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1067


State 991

  255 expr_list: expr_list ',' expr .
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 255 (expr_list)


State 992

  264 capture_entry: "<-" "name" .

    $default  reduce using rule 264 (capture_entry)


State 993

  265 capture_entry: ":=" "name" .

    $default  reduce using rule 265 (capture_entry)


State 994

  263 capture_entry: '=' "name" .

    $default  reduce using rule 263 (capture_entry)


State 995

  262 capture_entry: '&' "name" .

    $default  reduce using rule 262 (capture_entry)


State 996

  267 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 868
    ":="  shift, and go to state 869
    '='   shift, and go to state 870
    '&'   shift, and go to state 871

    capture_entry  go to state 1068


State 997

  269 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1069


State 998

  271 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"  shift, and go to state 1070
    '{'   shift, and go to state 311

    expression_block       go to state 1071
    block_or_simple_block  go to state 1072


State 999

  379 expr: expr "is" "type" '<' $@20 . type_declaration '>' $@21

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 1073


State 1000

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'
  416          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1074


State 1001

  385 expr: expr "as" "type" '<' $@22 . type_declaration '>' $@23

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 1075


State 1002

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  414          | expr "as" "$f" '(' expr . ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1076


State 1003

  302 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 302 (expr_method_call)


State 1004

  255 expr_list: expr_list . ',' expr
  303 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 866
    ')'  shift, and go to state 1077


State 1005

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  411          | expr "?." "$f" '(' expr . ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1078


State 1006

  390 expr: expr '?' "as" "type" '<' . $@24 type_declaration '>' $@25

    $default  reduce using rule 388 ($@24)

    $@24  go to state 1079


State 1007

  415 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1080
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1008

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  376     | expr '?' expr ':' expr .
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 376 (expr)


State 1009

  413 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1081
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1010

  362 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 362 (expr)


State 1011

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  410          | expr '.' "$f" '(' expr . ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1082


State 1012

  412 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1083
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1013

  360 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 360 (expr)


State 1014

  317 expr_field: expr '.' $@18 error $@19 .

    $default  reduce using rule 317 (expr_field)


State 1015

  512 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 512 (variable_name_with_pos_list)


State 1016

  515 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1084


State 1017

  449 copy_or_move: '=' .
  573 type_declaration: type_declaration '=' . "const"

    "const"  shift, and go to state 409

    $default  reduce using rule 449 (copy_or_move)


State 1018

  454 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1085
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1019

   61 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list . ';' expression_block
  255 expr_list: expr_list . ',' expr

    ','  shift, and go to state 866
    ';'  shift, and go to state 1086


State 1020

  226 expression_return: "return" "<-" expr ';' .

    $default  reduce using rule 226 (expression_return)


State 1021

  230 expression_return: "return" expr "if" $@5 . expr ';'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1087
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1022

  235 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 235 (expression_try_catch)


State 1023

   66 expression_with_alias: "assume" "name" '=' $@3 . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1088
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1024

  232 expression_yield: "yield" "<-" expr ';' .

    $default  reduce using rule 232 (expression_yield)


State 1025

  187 expression_block: '{' expressions '}' "finally" '{' expressions . '}'
  209 expressions: expressions . expression_any
  210            | expressions . error

    error                             shift, and go to state 552
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 553
    "if"                              shift, and go to state 554
    "static_if"                       shift, and go to state 555
    "for"                             shift, and go to state 556
    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "return"                          shift, and go to state 557
    "null"                            shift, and go to state 350
    "break"                           shift, and go to state 558
    "try"                             shift, and go to state 559
    "delete"                          shift, and go to state 560
    "deref"                           shift, and go to state 351
    "with"                            shift, and go to state 561
    "assume"                          shift, and go to state 562
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 354
    "continue"                        shift, and go to state 563
    "pass"                            shift, and go to state 564
    "reinterpret"                     shift, and go to state 355
    "label"                           shift, and go to state 565
    "goto"                            shift, and go to state 566
    "unsafe"                          shift, and go to state 567
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "yield"                           shift, and go to state 568
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "@ <|"                            shift, and go to state 569
    "@@ <|"                           shift, and go to state 570
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    ';'                               shift, and go to state 571
    '{'                               shift, and go to state 311
    '}'                               shift, and go to state 1089

    string_builder           go to state 386
    expr_reader              go to state 387
    expression_label         go to state 573
    expression_goto          go to state 574
    if_or_static_if          go to state 575
    expression_if_then_else  go to state 576
    expression_for_loop      go to state 577
    expression_unsafe        go to state 578
    expression_while_loop    go to state 579
    expression_with          go to state 580
    expression_with_alias    go to state 581
    expression_block         go to state 388
    expression_any           go to state 582
    expr_pipe                go to state 583
    name_in_namespace        go to state 389
    expression_delete        go to state 584
    expr_new                 go to state 390
    expression_break         go to state 585
    expression_continue      go to state 586
    expression_return        go to state 587
    expression_yield         go to state 588
    expression_try_catch     go to state 589
    kwd_let                  go to state 590
    expression_let           go to state 591
    expr_cast                go to state 391
    expr_type_decl           go to state 392
    expr_type_info           go to state 393
    block_or_lambda          go to state 394
    expr_block               go to state 395
    expr_numeric_const       go to state 396
    expr_assign              go to state 592
    expr_assign_pipe         go to state 593
    expr_named_call          go to state 397
    expr_method_call         go to state 398
    func_addr_expr           go to state 399
    expr_field               go to state 400
    expr                     go to state 594
    expr_mtag                go to state 402
    basic_type_declaration   go to state 403
    make_decl                go to state 404
    make_struct_decl         go to state 405
    make_dim_decl            go to state 406
    make_table_decl          go to state 407
    array_comprehension      go to state 408


State 1026

   54 expression_else: "else" . expression_block

    '{'  shift, and go to state 311

    expression_block  go to state 1090


State 1027

   51 elif_or_static_elif: "elif" .

    $default  reduce using rule 51 (elif_or_static_elif)


State 1028

   52 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 52 (elif_or_static_elif)


State 1029

   55 expression_else: elif_or_static_elif . expr expression_block expression_else

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1091
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1030

   58 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 58 (expression_if_then_else)


State 1031

   60 expression_if_then_else: expr "if" $@2 expr .
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    "++"      [reduce using rule 60 (expression_if_then_else)]
    "--"      [reduce using rule 60 (expression_if_then_else)]
    '-'       [reduce using rule 60 (expression_if_then_else)]
    '+'       [reduce using rule 60 (expression_if_then_else)]
    '*'       [reduce using rule 60 (expression_if_then_else)]
    '%'       [reduce using rule 60 (expression_if_then_else)]
    $default  reduce using rule 60 (expression_if_then_else)


State 1032

  299 expr_assign_pipe: expr "<-" "@ <|" expr .
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '/'    shift, and go to state 532
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 299 (expr_assign_pipe)


State 1033

  300 expr_assign_pipe: expr "<-" "@@ <|" expr .
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    "++"      [reduce using rule 300 (expr_assign_pipe)]
    "--"      [reduce using rule 300 (expr_assign_pipe)]
    '-'       [reduce using rule 300 (expr_assign_pipe)]
    '+'       [reduce using rule 300 (expr_assign_pipe)]
    '*'       [reduce using rule 300 (expr_assign_pipe)]
    '%'       [reduce using rule 300 (expr_assign_pipe)]
    $default  reduce using rule 300 (expr_assign_pipe)


State 1034

  297 expr_assign_pipe: expr '=' "@ <|" expr .
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '/'    shift, and go to state 532
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 297 (expr_assign_pipe)


State 1035

  298 expr_assign_pipe: expr '=' "@@ <|" expr .
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    "++"      [reduce using rule 298 (expr_assign_pipe)]
    "--"      [reduce using rule 298 (expr_assign_pipe)]
    '-'       [reduce using rule 298 (expr_assign_pipe)]
    '+'       [reduce using rule 298 (expr_assign_pipe)]
    '*'       [reduce using rule 298 (expr_assign_pipe)]
    '%'       [reduce using rule 298 (expr_assign_pipe)]
    $default  reduce using rule 298 (expr_assign_pipe)


State 1036

   96 optional_annotation_list: '[' annotation_list ']' .
  436 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . ';'

    ';'  shift, and go to state 1092

    $default  reduce using rule 96 (optional_annotation_list)


State 1037

  426 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 426 (optional_public_or_private_member_variable)


State 1038

  427 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 427 (optional_public_or_private_member_variable)


State 1039

  433 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" $@27 function_declaration_header ';'
  435                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_override optional_constant $@28 function_declaration_header expression_block

    "override"  shift, and go to state 1040
    "abstract"  shift, and go to state 1093
    "sealed"    shift, and go to state 1041

    $default  reduce using rule 420 (optional_override)

    optional_override  go to state 1094


State 1040

  421 optional_override: "override" .

    $default  reduce using rule 421 (optional_override)


State 1041

  422 optional_override: "sealed" .

    $default  reduce using rule 422 (optional_override)


State 1042

  428 structure_variable_declaration: optional_field_annotation optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1037
    "private"  shift, and go to state 1038

    $default  reduce using rule 425 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1095


State 1043

  431 struct_variable_declaration_list: struct_variable_declaration_list $@26 structure_variable_declaration ';' .

    $default  reduce using rule 431 (struct_variable_declaration_list)


State 1044

  468 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone expr ';' .

    $default  reduce using rule 468 (let_variable_declaration)


State 1045

  252 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1096
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1046

  253 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' . "name" '>' expr ')'

    "name"  shift, and go to state 1097


State 1047

  250 expr_type_decl: "type" '<' $@12 type_declaration '>' $@13 .

    $default  reduce using rule 250 (expr_type_decl)


State 1048

  241 expr_cast: "cast" '<' $@6 type_declaration '>' $@7 . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1098
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1049

  244 expr_cast: "upcast" '<' $@8 type_declaration '>' $@9 . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1099
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1050

  247 expr_cast: "reinterpret" '<' $@10 type_declaration '>' $@11 . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1100
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1051

  373 expr: "generator" '<' type_declaration '>' optional_capture_list '(' . ')'
  374     | "generator" '<' type_declaration '>' optional_capture_list '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    ')'                               shift, and go to state 1101
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1102
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1052

  408 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 408 (expr_mtag)


State 1053

  255 expr_list: expr_list . ',' expr
  409 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 866
    ')'  shift, and go to state 1103


State 1054

  653 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where ']' ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1104
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1055

  635 make_struct_decl: "[[" type_declaration '(' ')' make_struct_dim optional_block . ']' ']'

    ']'  shift, and go to state 1105


State 1056

  634 make_struct_decl: "[[" type_declaration '(' ')' optional_block ']' . ']'

    ']'  shift, and go to state 1106


State 1057

  627 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1107
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1058

  626 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1108
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1059

  632 make_struct_decl: "[[" type_declaration make_struct_dim optional_block ']' ']' .

    $default  reduce using rule 632 (make_struct_decl)


State 1060

  654 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where '}' ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1109
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1061

  637 make_struct_decl: "[{" type_declaration '(' ')' make_struct_dim optional_block . '}' ']'

    '}'  shift, and go to state 1110


State 1062

  636 make_struct_decl: "[{" type_declaration make_struct_dim optional_block '}' ']' .

    $default  reduce using rule 636 (make_struct_decl)


State 1063

  305 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 305 (func_addr_name)


State 1064

  417 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 417 (expr_mtag)


State 1065

  309 func_addr_expr: '@' '@' '<' $@14 type_declaration '>' . $@15 func_addr_name

    $default  reduce using rule 308 ($@15)

    $@15  go to state 1111


State 1066

  312 func_addr_expr: '@' '@' '<' $@16 optional_function_argument_list optional_function_type . '>' $@17 func_addr_name

    '>'  shift, and go to state 1112


State 1067

  301 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 301 (expr_named_call)


State 1068

  267 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 267 (capture_list)


State 1069

  269 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 269 (optional_capture_list)


State 1070

  257 block_or_simple_block: "=>" . expr
  258                      | "=>" . "<-" expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "<-"                              shift, and go to state 1113
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1114
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1071

  256 block_or_simple_block: expression_block .

    $default  reduce using rule 256 (block_or_simple_block)


State 1072

  271 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 271 (expr_block)


State 1073

  379 expr: expr "is" "type" '<' $@20 type_declaration . '>' $@21
  562 type_declaration: type_declaration . '[' expr ']'
  563                 | type_declaration . '[' ']'
  564                 | type_declaration . '-' '[' ']'
  565                 | type_declaration . "explicit"
  566                 | type_declaration . "const"
  567                 | type_declaration . '-' "const"
  568                 | type_declaration . '&'
  569                 | type_declaration . '-' '&'
  570                 | type_declaration . '#'
  571                 | type_declaration . "implicit"
  572                 | type_declaration . '-' '#'
  573                 | type_declaration . '=' "const"
  574                 | type_declaration . '?'
  578                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 1115
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 1074

  416 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 416 (expr_mtag)


State 1075

  385 expr: expr "as" "type" '<' $@22 type_declaration . '>' $@23
  562 type_declaration: type_declaration . '[' expr ']'
  563                 | type_declaration . '[' ']'
  564                 | type_declaration . '-' '[' ']'
  565                 | type_declaration . "explicit"
  566                 | type_declaration . "const"
  567                 | type_declaration . '-' "const"
  568                 | type_declaration . '&'
  569                 | type_declaration . '-' '&'
  570                 | type_declaration . '#'
  571                 | type_declaration . "implicit"
  572                 | type_declaration . '-' '#'
  573                 | type_declaration . '=' "const"
  574                 | type_declaration . '?'
  578                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 1116
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 1076

  414 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 414 (expr_mtag)


State 1077

  303 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 303 (expr_method_call)


State 1078

  411 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 411 (expr_mtag)


State 1079

  390 expr: expr '?' "as" "type" '<' $@24 . type_declaration '>' $@25

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 1117


State 1080

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  415          | expr '?' "as" "$f" '(' expr . ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1118


State 1081

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  413          | expr '.' "?." "$f" '(' expr . ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1119


State 1082

  410 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 410 (expr_mtag)


State 1083

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  412          | expr '.' '.' "$f" '(' expr . ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1120


State 1084

  515 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 515 (variable_name_with_pos_list)


State 1085

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'
  454 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 454 (variable_declaration)


State 1086

   61 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' . expression_block

    '{'  shift, and go to state 311

    expression_block  go to state 1121


State 1087

  230 expression_return: "return" expr "if" $@5 expr . ';'
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ';'    shift, and go to state 1122


State 1088

   66 expression_with_alias: "assume" "name" '=' $@3 expr .
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 66 (expression_with_alias)


State 1089

  187 expression_block: '{' expressions '}' "finally" '{' expressions '}' .

    $default  reduce using rule 187 (expression_block)


State 1090

   54 expression_else: "else" expression_block .

    $default  reduce using rule 54 (expression_else)


State 1091

   55 expression_else: elif_or_static_elif expr . expression_block expression_else
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    '{'    shift, and go to state 311

    expression_block  go to state 1123


State 1092

  436 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' ';' .

    $default  reduce using rule 436 (struct_variable_declaration_list)


State 1093

  433 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . $@27 function_declaration_header ';'

    $default  reduce using rule 432 ($@27)

    $@27  go to state 1124


State 1094

  435 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override . optional_constant $@28 function_declaration_header expression_block

    "const"  shift, and go to state 1125

    $default  reduce using rule 423 (optional_constant)

    optional_constant  go to state 1126


State 1095

  428 structure_variable_declaration: optional_field_annotation optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 545
    "name"  shift, and go to state 546

    variable_declaration         go to state 1127
    variable_name_with_pos_list  go to state 548


State 1096

  252 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1128


State 1097

  253 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" . '>' expr ')'

    '>'  shift, and go to state 1129


State 1098

  241 expr_cast: "cast" '<' $@6 type_declaration '>' $@7 expr .
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 241 (expr_cast)


State 1099

  244 expr_cast: "upcast" '<' $@8 type_declaration '>' $@9 expr .
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 244 (expr_cast)


State 1100

  247 expr_cast: "reinterpret" '<' $@10 type_declaration '>' $@11 expr .
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 247 (expr_cast)


State 1101

  373 expr: "generator" '<' type_declaration '>' optional_capture_list '(' ')' .

    $default  reduce using rule 373 (expr)


State 1102

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  374     | "generator" '<' type_declaration '>' optional_capture_list '(' expr . ')'
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1130


State 1103

  409 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 409 (expr_mtag)


State 1104

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'
  653 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where ']' ']'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ';'    shift, and go to state 1131

    $default  reduce using rule 651 (array_comprehension_where)

    array_comprehension_where  go to state 1132


State 1105

  635 make_struct_decl: "[[" type_declaration '(' ')' make_struct_dim optional_block ']' . ']'

    ']'  shift, and go to state 1133


State 1106

  634 make_struct_decl: "[[" type_declaration '(' ')' optional_block ']' ']' .

    $default  reduce using rule 634 (make_struct_decl)


State 1107

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'
  627 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 627 (make_struct_fields)


State 1108

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'
  626 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 626 (make_struct_fields)


State 1109

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'
  654 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where '}' ']'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ';'    shift, and go to state 1131

    $default  reduce using rule 651 (array_comprehension_where)

    array_comprehension_where  go to state 1134


State 1110

  637 make_struct_decl: "[{" type_declaration '(' ')' make_struct_dim optional_block '}' . ']'

    ']'  shift, and go to state 1135


State 1111

  309 func_addr_expr: '@' '@' '<' $@14 type_declaration '>' $@15 . func_addr_name

    "::"    shift, and go to state 50
    "$i"    shift, and go to state 669
    "name"  shift, and go to state 51

    name_in_namespace  go to state 672
    func_addr_name     go to state 1136


State 1112

  312 func_addr_expr: '@' '@' '<' $@16 optional_function_argument_list optional_function_type '>' . $@17 func_addr_name

    $default  reduce using rule 311 ($@17)

    $@17  go to state 1137


State 1113

  258 block_or_simple_block: "=>" "<-" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1138
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1114

  257 block_or_simple_block: "=>" expr .
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    ".."  error (nonassociative)

    $default  reduce using rule 257 (block_or_simple_block)


State 1115

  379 expr: expr "is" "type" '<' $@20 type_declaration '>' . $@21

    $default  reduce using rule 378 ($@21)

    $@21  go to state 1139


State 1116

  385 expr: expr "as" "type" '<' $@22 type_declaration '>' . $@23

    $default  reduce using rule 384 ($@23)

    $@23  go to state 1140


State 1117

  390 expr: expr '?' "as" "type" '<' $@24 type_declaration . '>' $@25
  562 type_declaration: type_declaration . '[' expr ']'
  563                 | type_declaration . '[' ']'
  564                 | type_declaration . '-' '[' ']'
  565                 | type_declaration . "explicit"
  566                 | type_declaration . "const"
  567                 | type_declaration . '-' "const"
  568                 | type_declaration . '&'
  569                 | type_declaration . '-' '&'
  570                 | type_declaration . '#'
  571                 | type_declaration . "implicit"
  572                 | type_declaration . '-' '#'
  573                 | type_declaration . '=' "const"
  574                 | type_declaration . '?'
  578                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 1141
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 1118

  415 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 415 (expr_mtag)


State 1119

  413 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 413 (expr_mtag)


State 1120

  412 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 412 (expr_mtag)


State 1121

   61 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' expression_block .

    $default  reduce using rule 61 (expression_for_loop)


State 1122

  230 expression_return: "return" expr "if" $@5 expr ';' .

    $default  reduce using rule 230 (expression_return)


State 1123

   55 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1026
    "elif"         shift, and go to state 1027
    "static_elif"  shift, and go to state 1028

    $default  reduce using rule 53 (expression_else)

    elif_or_static_elif  go to state 1029
    expression_else      go to state 1142


State 1124

  433 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" $@27 . function_declaration_header ';'

    "operator"  shift, and go to state 188
    "bool"      shift, and go to state 189
    "string"    shift, and go to state 190
    "int"       shift, and go to state 191
    "int2"      shift, and go to state 192
    "int3"      shift, and go to state 193
    "int4"      shift, and go to state 194
    "uint"      shift, and go to state 195
    "uint2"     shift, and go to state 196
    "uint3"     shift, and go to state 197
    "uint4"     shift, and go to state 198
    "float"     shift, and go to state 199
    "float2"    shift, and go to state 200
    "float3"    shift, and go to state 201
    "float4"    shift, and go to state 202
    "range"     shift, and go to state 203
    "urange"    shift, and go to state 204
    "int64"     shift, and go to state 205
    "uint64"    shift, and go to state 206
    "double"    shift, and go to state 207
    "int8"      shift, and go to state 208
    "uint8"     shift, and go to state 209
    "int16"     shift, and go to state 210
    "uint16"    shift, and go to state 211
    "++"        shift, and go to state 212
    "--"        shift, and go to state 213
    "name"      shift, and go to state 214

    function_name                go to state 215
    function_declaration_header  go to state 1143


State 1125

  424 optional_constant: "const" .

    $default  reduce using rule 424 (optional_constant)


State 1126

  435 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant . $@28 function_declaration_header expression_block

    $default  reduce using rule 434 ($@28)

    $@28  go to state 1144


State 1127

  428 structure_variable_declaration: optional_field_annotation optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 428 (structure_variable_declaration)


State 1128

  252 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 252 (expr_type_info)


State 1129

  253 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1145
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1130

  374 expr: "generator" '<' type_declaration '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 374 (expr)


State 1131

  652 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1146


State 1132

  653 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1147


State 1133

  635 make_struct_decl: "[[" type_declaration '(' ')' make_struct_dim optional_block ']' ']' .

    $default  reduce using rule 635 (make_struct_decl)


State 1134

  654 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . '}' ']'

    '}'  shift, and go to state 1148


State 1135

  637 make_struct_decl: "[{" type_declaration '(' ')' make_struct_dim optional_block '}' ']' .

    $default  reduce using rule 637 (make_struct_decl)


State 1136

  309 func_addr_expr: '@' '@' '<' $@14 type_declaration '>' $@15 func_addr_name .

    $default  reduce using rule 309 (func_addr_expr)


State 1137

  312 func_addr_expr: '@' '@' '<' $@16 optional_function_argument_list optional_function_type '>' $@17 . func_addr_name

    "::"    shift, and go to state 50
    "$i"    shift, and go to state 669
    "name"  shift, and go to state 51

    name_in_namespace  go to state 672
    func_addr_name     go to state 1149


State 1138

  258 block_or_simple_block: "=>" "<-" expr .
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 258 (block_or_simple_block)


State 1139

  379 expr: expr "is" "type" '<' $@20 type_declaration '>' $@21 .

    $default  reduce using rule 379 (expr)


State 1140

  385 expr: expr "as" "type" '<' $@22 type_declaration '>' $@23 .

    $default  reduce using rule 385 (expr)


State 1141

  390 expr: expr '?' "as" "type" '<' $@24 type_declaration '>' . $@25

    $default  reduce using rule 389 ($@25)

    $@25  go to state 1150


State 1142

   55 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 55 (expression_else)


State 1143

  433 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" $@27 function_declaration_header . ';'

    ';'  shift, and go to state 1151


State 1144

  435 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant $@28 . function_declaration_header expression_block

    "operator"  shift, and go to state 188
    "bool"      shift, and go to state 189
    "string"    shift, and go to state 190
    "int"       shift, and go to state 191
    "int2"      shift, and go to state 192
    "int3"      shift, and go to state 193
    "int4"      shift, and go to state 194
    "uint"      shift, and go to state 195
    "uint2"     shift, and go to state 196
    "uint3"     shift, and go to state 197
    "uint4"     shift, and go to state 198
    "float"     shift, and go to state 199
    "float2"    shift, and go to state 200
    "float3"    shift, and go to state 201
    "float4"    shift, and go to state 202
    "range"     shift, and go to state 203
    "urange"    shift, and go to state 204
    "int64"     shift, and go to state 205
    "uint64"    shift, and go to state 206
    "double"    shift, and go to state 207
    "int8"      shift, and go to state 208
    "uint8"     shift, and go to state 209
    "int16"     shift, and go to state 210
    "uint16"    shift, and go to state 211
    "++"        shift, and go to state 212
    "--"        shift, and go to state 213
    "name"      shift, and go to state 214

    function_name                go to state 215
    function_declaration_header  go to state 1152


State 1145

  253 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr . ')'
  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1153


State 1146

  652 array_comprehension_where: ';' "where" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1154
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1147

  653 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1155


State 1148

  654 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' . ']'

    ']'  shift, and go to state 1156


State 1149

  312 func_addr_expr: '@' '@' '<' $@16 optional_function_argument_list optional_function_type '>' $@17 func_addr_name .

    $default  reduce using rule 312 (func_addr_expr)


State 1150

  390 expr: expr '?' "as" "type" '<' $@24 type_declaration '>' $@25 .

    $default  reduce using rule 390 (expr)


State 1151

  433 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" $@27 function_declaration_header ';' .

    $default  reduce using rule 433 (struct_variable_declaration_list)


State 1152

  435 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant $@28 function_declaration_header . expression_block

    '{'  shift, and go to state 311

    expression_block  go to state 1157


State 1153

  253 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')' .

    $default  reduce using rule 253 (expr_type_info)


State 1154

  302 expr_method_call: expr . "->" "name" '(' ')'
  303                 | expr . "->" "name" '(' expr_list ')'
  313 expr_field: expr . '.' "name"
  314           | expr . '.' '.' "name"
  317           | expr . '.' $@18 error $@19
  332 expr: expr . "<<" expr
  333     | expr . ">>" expr
  334     | expr . "<<<" expr
  335     | expr . ">>>" expr
  336     | expr . '+' expr
  337     | expr . '-' expr
  338     | expr . '*' expr
  339     | expr . '/' expr
  340     | expr . '%' expr
  341     | expr . '<' expr
  342     | expr . '>' expr
  343     | expr . "==" expr
  344     | expr . "!=" expr
  345     | expr . "<=" expr
  346     | expr . ">=" expr
  347     | expr . '&' expr
  348     | expr . '|' expr
  349     | expr . '^' expr
  350     | expr . "&&" expr
  351     | expr . "||" expr
  352     | expr . "^^" expr
  353     | expr . ".." expr
  356     | expr . "++"
  357     | expr . "--"
  359     | expr . '[' expr ']'
  360     | expr . '.' '[' expr ']'
  361     | expr . "?[" expr ']'
  362     | expr . '.' "?[" expr ']'
  363     | expr . "?." "name"
  364     | expr . '.' "?." "name"
  375     | expr . "??" expr
  376     | expr . '?' expr ':' expr
  379     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  380     | expr . "is" basic_type_declaration
  381     | expr . "is" "name"
  382     | expr . "as" "name"
  385     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  386     | expr . "as" basic_type_declaration
  387     | expr . '?' "as" "name"
  390     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  391     | expr . '?' "as" basic_type_declaration
  399     | expr . "<|" expr
  400     | expr . "|>" expr
  410 expr_mtag: expr . '.' "$f" '(' expr ')'
  411          | expr . "?." "$f" '(' expr ')'
  412          | expr . '.' '.' "$f" '(' expr ')'
  413          | expr . '.' "?." "$f" '(' expr ')'
  414          | expr . "as" "$f" '(' expr ')'
  415          | expr . '?' "as" "$f" '(' expr ')'
  416          | expr . "is" "$f" '(' expr ')'
  652 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 652 (array_comprehension_where)


State 1155

  653 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']' .

    $default  reduce using rule 653 (array_comprehension)


State 1156

  654 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']' .

    $default  reduce using rule 654 (array_comprehension)


State 1157

  435 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant $@28 function_declaration_header expression_block .

    $default  reduce using rule 435 (struct_variable_declaration_list)

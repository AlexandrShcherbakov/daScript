Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 51 conflicts: 1 shift/reduce
State 148 conflicts: 1 shift/reduce
State 154 conflicts: 1 shift/reduce
State 164 conflicts: 1 shift/reduce
State 168 conflicts: 1 shift/reduce
State 169 conflicts: 1 shift/reduce
State 389 conflicts: 2 shift/reduce
State 463 conflicts: 7 shift/reduce
State 649 conflicts: 3 reduce/reduce
State 666 conflicts: 2 shift/reduce
State 1028 conflicts: 6 shift/reduce
State 1030 conflicts: 6 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program bitfield_alias_declaration
   13        | program ';'

   14 optional_public_or_private_module: %empty
   15                                  | "public"
   16                                  | "private"

   17 module_name: '$'
   18            | "name"

   19 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   20 character_sequence: STRING_CHARACTER
   21                   | STRING_CHARACTER_ESC
   22                   | character_sequence STRING_CHARACTER
   23                   | character_sequence STRING_CHARACTER_ESC

   24 string_constant: "start of the string" character_sequence "end of the string"

   25 string_builder_body: %empty
   26                    | string_builder_body character_sequence
   27                    | string_builder_body "{" expr "}"

   28 string_builder: "start of the string" string_builder_body "end of the string"

   29 reader_character_sequence: STRING_CHARACTER
   30                          | reader_character_sequence STRING_CHARACTER

   31 $@1: %empty

   32 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   33 options_declaration: "options" annotation_argument_list

   34 require_declaration: "require" require_module

   35 require_module_name: "name"
   36                    | '%' require_module_name
   37                    | require_module_name '.' "name"
   38                    | require_module_name '/' "name"

   39 require_module: require_module_name is_public_module
   40               | require_module_name "as" "name" is_public_module

   41 is_public_module: %empty
   42                 | "public"

   43 expect_declaration: "expect" expect_list

   44 expect_list: expect_error
   45            | expect_list ',' expect_error

   46 expect_error: "integer constant"
   47             | "integer constant" ':' "integer constant"

   48 expression_label: "label" "integer constant" ':'

   49 expression_goto: "goto" "label" "integer constant"
   50                | "goto" expr

   51 elif_or_static_elif: "elif"
   52                    | "static_elif"

   53 expression_else: %empty
   54                | "else" expression_block
   55                | elif_or_static_elif expr expression_block expression_else

   56 if_or_static_if: "if"
   57                | "static_if"

   58 expression_if_then_else: if_or_static_if expr expression_block expression_else

   59 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' expression_block

   60 expression_unsafe: "unsafe" expression_block

   61 expression_while_loop: "while" expr expression_block

   62 expression_with: "with" expr expression_block

   63 $@2: %empty

   64 expression_with_alias: "assume" "name" '=' $@2 expr

   65 annotation_argument_value: string_constant
   66                          | "name"
   67                          | "integer constant"
   68                          | "floating point constant"
   69                          | "true"
   70                          | "false"

   71 annotation_argument_value_list: annotation_argument_value
   72                               | annotation_argument_value_list ',' annotation_argument_value

   73 annotation_argument_name: "name"
   74                         | "type"
   75                         | "in"

   76 annotation_argument: annotation_argument_name '=' string_constant
   77                    | annotation_argument_name '=' "name"
   78                    | annotation_argument_name '=' "integer constant"
   79                    | annotation_argument_name '=' "floating point constant"
   80                    | annotation_argument_name '=' "true"
   81                    | annotation_argument_name '=' "false"
   82                    | annotation_argument_name
   83                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

   84 annotation_argument_list: annotation_argument
   85                         | annotation_argument_list ',' annotation_argument

   86 annotation_declaration_name: name_in_namespace
   87                            | "require"
   88                            | "private"

   89 annotation_declaration: annotation_declaration_name
   90                       | annotation_declaration_name '(' annotation_argument_list ')'

   91 annotation_list: annotation_declaration
   92                | annotation_list ',' annotation_declaration

   93 optional_annotation_list: %empty
   94                         | '[' annotation_list ']'

   95 optional_function_argument_list: %empty
   96                                | '(' ')'
   97                                | '(' function_argument_list ')'

   98 optional_function_type: %empty
   99                       | ':' type_declaration

  100 function_name: "name"
  101              | "operator" '!'
  102              | "operator" '~'
  103              | "operator" "+="
  104              | "operator" "-="
  105              | "operator" "*="
  106              | "operator" "/="
  107              | "operator" "%="
  108              | "operator" "&="
  109              | "operator" "|="
  110              | "operator" "^="
  111              | "operator" "&&="
  112              | "operator" "||="
  113              | "operator" "^^="
  114              | "operator" "&&"
  115              | "operator" "||"
  116              | "operator" "^^"
  117              | "operator" '+'
  118              | "operator" '-'
  119              | "operator" '*'
  120              | "operator" '/'
  121              | "operator" '%'
  122              | "operator" '<'
  123              | "operator" '>'
  124              | "operator" ".."
  125              | "operator" "=="
  126              | "operator" "!="
  127              | "operator" "<="
  128              | "operator" ">="
  129              | "operator" '&'
  130              | "operator" '|'
  131              | "operator" '^'
  132              | "++" "operator"
  133              | "--" "operator"
  134              | "operator" "++"
  135              | "operator" "--"
  136              | "operator" "<<"
  137              | "operator" ">>"
  138              | "operator" "<<="
  139              | "operator" ">>="
  140              | "operator" "<<<"
  141              | "operator" ">>>"
  142              | "operator" "<<<="
  143              | "operator" ">>>="
  144              | "operator" '[' ']'
  145              | "operator" "?[" ']'
  146              | "operator" '.'
  147              | "operator" "?."
  148              | "operator" ":="
  149              | "operator" "delete"
  150              | "operator" "??"
  151              | "operator" "is"
  152              | "operator" "as"
  153              | "operator" '?' "as"
  154              | "bool"
  155              | "string"
  156              | "int"
  157              | "int2"
  158              | "int3"
  159              | "int4"
  160              | "uint"
  161              | "uint2"
  162              | "uint3"
  163              | "uint4"
  164              | "float"
  165              | "float2"
  166              | "float3"
  167              | "float4"
  168              | "range"
  169              | "urange"
  170              | "int64"
  171              | "uint64"
  172              | "double"
  173              | "int8"
  174              | "uint8"
  175              | "int16"
  176              | "uint16"

  177 global_function_declaration: optional_annotation_list "def" function_declaration

  178 optional_public_or_private_function: %empty
  179                                    | "private"
  180                                    | "public"

  181 function_declaration_header: function_name optional_function_argument_list optional_function_type

  182 $@3: %empty

  183 function_declaration: optional_public_or_private_function $@3 function_declaration_header expression_block

  184 expression_block: '{' expressions '}'
  185                 | '{' expressions '}' "finally" '{' expressions '}'

  186 expression_any: ';'
  187               | expr_pipe
  188               | expr_assign_pipe
  189               | expr_assign ';'
  190               | expression_delete ';'
  191               | expression_let
  192               | expression_while_loop
  193               | expression_unsafe
  194               | expression_with
  195               | expression_with_alias
  196               | expression_for_loop
  197               | expression_break ';'
  198               | expression_continue ';'
  199               | expression_return
  200               | expression_yield
  201               | expression_if_then_else
  202               | expression_try_catch
  203               | expression_label ';'
  204               | expression_goto ';'
  205               | "pass" ';'

  206 expressions: %empty
  207            | expressions expression_any
  208            | expressions error

  209 expr_pipe: expr_assign " <|" expr_block
  210          | "@ <|" expr_block
  211          | "@@ <|" expr_block

  212 name_in_namespace: "name"
  213                  | "name" "::" "name"
  214                  | "::" "name"

  215 expression_delete: "delete" expr

  216 expr_new: "new" type_declaration
  217         | "new" type_declaration '(' ')'
  218         | "new" type_declaration '(' expr_list ')'
  219         | "new" make_decl

  220 expression_break: "break"

  221 expression_continue: "continue"

  222 expression_return: "return" ';'
  223                  | "return" expr ';'
  224                  | "return" "<-" expr ';'
  225                  | "return" expr_pipe
  226                  | "return" "<-" expr_pipe

  227 expression_yield: "yield" expr ';'
  228                 | "yield" "<-" expr ';'
  229                 | "yield" expr_pipe
  230                 | "yield" "<-" expr_pipe

  231 expression_try_catch: "try" expression_block "recover" expression_block

  232 kwd_let: "let"
  233        | "var"

  234 expression_let: kwd_let let_variable_declaration

  235 $@4: %empty

  236 $@5: %empty

  237 expr_cast: "cast" '<' $@4 type_declaration '>' $@5 expr

  238 $@6: %empty

  239 $@7: %empty

  240 expr_cast: "upcast" '<' $@6 type_declaration '>' $@7 expr

  241 $@8: %empty

  242 $@9: %empty

  243 expr_cast: "reinterpret" '<' $@8 type_declaration '>' $@9 expr

  244 $@10: %empty

  245 $@11: %empty

  246 expr_type_decl: "type" '<' $@10 type_declaration '>' $@11

  247 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  248               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  249               | "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

  250 expr_list: expr
  251          | expr_list ',' expr

  252 block_or_simple_block: expression_block
  253                      | "=>" expr
  254                      | "=>" "<-" expr

  255 block_or_lambda: '$'
  256                | '@'
  257                | '@' '@'

  258 capture_entry: '&' "name"
  259              | '=' "name"
  260              | "<-" "name"
  261              | ":=" "name"

  262 capture_list: capture_entry
  263             | capture_list ',' capture_entry

  264 optional_capture_list: %empty
  265                      | "[[" capture_list ']' ']'

  266 expr_block: expression_block
  267           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  268 expr_numeric_const: "integer constant"
  269                   | "unsigned integer constant"
  270                   | "long integer constant"
  271                   | "unsigned long integer constant"
  272                   | "floating point constant"
  273                   | "double constant"

  274 expr_assign: expr
  275            | expr '=' expr
  276            | expr "<-" expr
  277            | expr ":=" expr
  278            | expr "&=" expr
  279            | expr "|=" expr
  280            | expr "^=" expr
  281            | expr "&&=" expr
  282            | expr "||=" expr
  283            | expr "^^=" expr
  284            | expr "+=" expr
  285            | expr "-=" expr
  286            | expr "*=" expr
  287            | expr "/=" expr
  288            | expr "%=" expr
  289            | expr "<<=" expr
  290            | expr ">>=" expr
  291            | expr "<<<=" expr
  292            | expr ">>>=" expr

  293 expr_assign_pipe: expr '=' "@ <|" expr
  294                 | expr '=' "@@ <|" expr
  295                 | expr "<-" "@ <|" expr
  296                 | expr "<-" "@@ <|" expr

  297 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'

  298 expr_method_call: expr "->" "name" '(' ')'
  299                 | expr "->" "name" '(' expr_list ')'

  300 func_addr_name: name_in_namespace
  301               | "$i" '(' expr ')'

  302 func_addr_expr: '@' '@' func_addr_name

  303 $@12: %empty

  304 $@13: %empty

  305 func_addr_expr: '@' '@' '<' $@12 type_declaration '>' $@13 func_addr_name

  306 $@14: %empty

  307 $@15: %empty

  308 func_addr_expr: '@' '@' '<' $@14 optional_function_argument_list optional_function_type '>' $@15 func_addr_name

  309 expr_field: expr '.' "name"
  310           | expr '.' '.' "name"

  311 $@16: %empty

  312 $@17: %empty

  313 expr_field: expr '.' $@16 error $@17

  314 expr: "null"
  315     | name_in_namespace
  316     | expr_numeric_const
  317     | expr_reader
  318     | string_builder
  319     | make_decl
  320     | "true"
  321     | "false"
  322     | expr_field
  323     | expr_mtag
  324     | '!' expr
  325     | '~' expr
  326     | '+' expr
  327     | '-' expr
  328     | expr "<<" expr
  329     | expr ">>" expr
  330     | expr "<<<" expr
  331     | expr ">>>" expr
  332     | expr '+' expr
  333     | expr '-' expr
  334     | expr '*' expr
  335     | expr '/' expr
  336     | expr '%' expr
  337     | expr '<' expr
  338     | expr '>' expr
  339     | expr "==" expr
  340     | expr "!=" expr
  341     | expr "<=" expr
  342     | expr ">=" expr
  343     | expr '&' expr
  344     | expr '|' expr
  345     | expr '^' expr
  346     | expr "&&" expr
  347     | expr "||" expr
  348     | expr "^^" expr
  349     | expr ".." expr
  350     | "++" expr
  351     | "--" expr
  352     | expr "++"
  353     | expr "--"
  354     | '(' expr ')'
  355     | expr '[' expr ']'
  356     | expr '.' '[' expr ']'
  357     | expr "?[" expr ']'
  358     | expr '.' "?[" expr ']'
  359     | expr "?." "name"
  360     | expr '.' "?." "name"
  361     | func_addr_expr
  362     | name_in_namespace '(' ')'
  363     | name_in_namespace '(' expr_list ')'
  364     | basic_type_declaration '(' ')'
  365     | basic_type_declaration '(' expr_list ')'
  366     | '*' expr
  367     | "deref" '(' expr ')'
  368     | "addr" '(' expr ')'
  369     | "generator" '<' type_declaration '>' optional_capture_list '(' ')'
  370     | "generator" '<' type_declaration '>' optional_capture_list '(' expr ')'
  371     | expr "??" expr
  372     | expr '?' expr ':' expr

  373 $@18: %empty

  374 $@19: %empty

  375 expr: expr "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr "is" basic_type_declaration
  377     | expr "is" "name"
  378     | expr "as" "name"

  379 $@20: %empty

  380 $@21: %empty

  381 expr: expr "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr "as" basic_type_declaration
  383     | expr '?' "as" "name"

  384 $@22: %empty

  385 $@23: %empty

  386 expr: expr '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr '?' "as" basic_type_declaration
  388     | expr_type_info
  389     | expr_type_decl
  390     | expr_cast
  391     | expr_new
  392     | expr_method_call
  393     | expr_named_call
  394     | expr_block
  395     | expr "<|" expr
  396     | expr "|>" expr
  397     | name_in_namespace "name"
  398     | "unsafe" '(' expr ')'

  399 expr_mtag: "$$" '(' expr ')'
  400          | "$i" '(' expr ')'
  401          | "$v" '(' expr ')'
  402          | "$b" '(' expr ')'
  403          | "$a" '(' expr ')'
  404          | "$c" '(' expr ')' '(' ')'
  405          | "$c" '(' expr ')' '(' expr_list ')'
  406          | expr '.' "$f" '(' expr ')'
  407          | expr "?." "$f" '(' expr ')'
  408          | expr '.' '.' "$f" '(' expr ')'
  409          | expr '.' "?." "$f" '(' expr ')'
  410          | expr "as" "$f" '(' expr ')'
  411          | expr '?' "as" "$f" '(' expr ')'
  412          | expr "is" "$f" '(' expr ')'
  413          | '@' '@' "$c" '(' expr ')'

  414 optional_field_annotation: %empty
  415                          | "[[" annotation_argument_list ']' ']'

  416 optional_override: %empty
  417                  | "override"
  418                  | "sealed"

  419 optional_constant: %empty
  420                  | "const"

  421 optional_public_or_private_member_variable: %empty
  422                                           | "public"
  423                                           | "private"

  424 structure_variable_declaration: optional_field_annotation optional_override optional_public_or_private_member_variable variable_declaration

  425 struct_variable_declaration_list: %empty

  426 $@24: %empty

  427 struct_variable_declaration_list: struct_variable_declaration_list $@24 structure_variable_declaration ';'

  428 $@25: %empty

  429 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" $@25 function_declaration_header ';'

  430 $@26: %empty

  431 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant $@26 function_declaration_header expression_block
  432                                 | struct_variable_declaration_list '[' annotation_list ']' ';'

  433 function_argument_declaration: optional_field_annotation variable_declaration
  434                              | optional_field_annotation "var" variable_declaration
  435                              | "$a" '(' expr ')'

  436 function_argument_list: function_argument_declaration
  437                       | function_argument_list ';' function_argument_declaration

  438 tuple_type: type_declaration
  439           | "name" ':' type_declaration

  440 tuple_type_list: tuple_type
  441                | tuple_type_list ';' tuple_type

  442 variant_type: "name" ':' type_declaration

  443 variant_type_list: variant_type
  444                  | variant_type_list ';' variant_type

  445 copy_or_move: '='
  446             | "<-"

  447 variable_declaration: variable_name_with_pos_list
  448                     | variable_name_with_pos_list '&'
  449                     | variable_name_with_pos_list ':' type_declaration
  450                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  451                     | variable_name_with_pos_list copy_or_move expr
  452                     | variable_name_with_pos_list copy_or_move expr_pipe

  453 copy_or_move_or_clone: '='
  454                      | "<-"
  455                      | ":="

  456 optional_ref: %empty
  457             | '&'

  458 let_variable_name_with_pos_list: "name"
  459                                | "$i" '(' expr ')'
  460                                | "name" "aka" "name"
  461                                | let_variable_name_with_pos_list ',' "name"
  462                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  463 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration ';'
  464                         | let_variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone expr ';'
  465                         | let_variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone expr_pipe
  466                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';'
  467                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  468 global_variable_declaration_list: %empty

  469 $@27: %empty

  470 global_variable_declaration_list: global_variable_declaration_list $@27 optional_field_annotation let_variable_declaration

  471 optional_shared: %empty
  472                | "shared"

  473 optional_public_or_private_variable: %empty
  474                                    | "private"
  475                                    | "public"

  476 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  477 $@28: %empty

  478 global_let: kwd_let optional_shared optional_public_or_private_variable $@28 optional_field_annotation let_variable_declaration

  479 enum_list: %empty
  480          | enum_list "name" ';'
  481          | enum_list "name" '=' expr ';'

  482 $@29: %empty

  483 single_alias: "name" $@29 '=' type_declaration

  484 alias_list: single_alias ';'
  485           | alias_list single_alias ';'

  486 alias_declaration: "typedef" '{' alias_list '}'
  487                  | "typedef" single_alias

  488 optional_public_or_private_enum: %empty
  489                                | "private"
  490                                | "public"

  491 enum_name: "name"

  492 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' enum_list '}'
  493                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list '}'

  494 optional_structure_parent: %empty
  495                          | ':' name_in_namespace

  496 optional_sealed: %empty
  497                | "sealed"

  498 structure_name: optional_sealed "name" optional_structure_parent

  499 class_or_struct: "class"
  500                | "struct"

  501 optional_public_or_private_structure: %empty
  502                                     | "private"
  503                                     | "public"

  504 $@30: %empty

  505 $@31: %empty

  506 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@30 structure_name $@31 '{' struct_variable_declaration_list '}'

  507 variable_name_with_pos_list: "name"
  508                            | "$i" '(' expr ')'
  509                            | "name" "aka" "name"
  510                            | variable_name_with_pos_list ',' "name"
  511                            | variable_name_with_pos_list ',' "name" "aka" "name"

  512 basic_type_declaration: "bool"
  513                       | "string"
  514                       | "int"
  515                       | "int8"
  516                       | "int16"
  517                       | "int64"
  518                       | "int2"
  519                       | "int3"
  520                       | "int4"
  521                       | "uint"
  522                       | "uint8"
  523                       | "uint16"
  524                       | "uint64"
  525                       | "uint2"
  526                       | "uint3"
  527                       | "uint4"
  528                       | "float"
  529                       | "float2"
  530                       | "float3"
  531                       | "float4"
  532                       | "void"
  533                       | "range"
  534                       | "urange"
  535                       | "double"
  536                       | "bitfield"

  537 enum_basic_type_declaration: "int"
  538                            | "int8"
  539                            | "int16"
  540                            | "uint"
  541                            | "uint8"
  542                            | "uint16"

  543 structure_type_declaration: name_in_namespace

  544 auto_type_declaration: "auto"
  545                      | "auto" '(' "name" ')'
  546                      | "$t" '(' expr ')'

  547 bitfield_bits: "name"
  548              | bitfield_bits ';' "name"

  549 $@32: %empty

  550 $@33: %empty

  551 bitfield_type_declaration: "bitfield" '<' $@32 bitfield_bits '>' $@33

  552 table_type_pair: type_declaration
  553                | type_declaration ';' type_declaration

  554 type_declaration: basic_type_declaration
  555                 | auto_type_declaration
  556                 | bitfield_type_declaration
  557                 | structure_type_declaration
  558                 | type_declaration '[' expr ']'
  559                 | type_declaration '[' ']'
  560                 | type_declaration '-' '[' ']'
  561                 | type_declaration "explicit"
  562                 | type_declaration "const"
  563                 | type_declaration '-' "const"
  564                 | type_declaration '&'
  565                 | type_declaration '-' '&'
  566                 | type_declaration '#'
  567                 | type_declaration "implicit"
  568                 | type_declaration '-' '#'
  569                 | type_declaration '=' "const"
  570                 | type_declaration '?'

  571 $@34: %empty

  572 $@35: %empty

  573 type_declaration: "smart_ptr" '<' $@34 type_declaration '>' $@35
  574                 | type_declaration "??"

  575 $@36: %empty

  576 $@37: %empty

  577 type_declaration: "array" '<' $@36 type_declaration '>' $@37

  578 $@38: %empty

  579 $@39: %empty

  580 type_declaration: "table" '<' $@38 table_type_pair '>' $@39

  581 $@40: %empty

  582 $@41: %empty

  583 type_declaration: "iterator" '<' $@40 type_declaration '>' $@41
  584                 | "block"

  585 $@42: %empty

  586 $@43: %empty

  587 type_declaration: "block" '<' $@42 type_declaration '>' $@43

  588 $@44: %empty

  589 $@45: %empty

  590 type_declaration: "block" '<' $@44 optional_function_argument_list optional_function_type '>' $@45
  591                 | "function"

  592 $@46: %empty

  593 $@47: %empty

  594 type_declaration: "function" '<' $@46 type_declaration '>' $@47

  595 $@48: %empty

  596 $@49: %empty

  597 type_declaration: "function" '<' $@48 optional_function_argument_list optional_function_type '>' $@49
  598                 | "lambda"

  599 $@50: %empty

  600 $@51: %empty

  601 type_declaration: "lambda" '<' $@50 type_declaration '>' $@51

  602 $@52: %empty

  603 $@53: %empty

  604 type_declaration: "lambda" '<' $@52 optional_function_argument_list optional_function_type '>' $@53

  605 $@54: %empty

  606 $@55: %empty

  607 type_declaration: "tuple" '<' $@54 tuple_type_list '>' $@55

  608 $@56: %empty

  609 $@57: %empty

  610 type_declaration: "variant" '<' $@56 variant_type_list '>' $@57

  611 $@58: %empty

  612 $@59: %empty

  613 variant_alias_declaration: "variant" $@58 "name" $@59 '{' variant_type_list ';' '}'

  614 $@60: %empty

  615 bitfield_alias_declaration: "bitfield" $@60 "name" '{' bitfield_bits ';' '}'

  616 make_decl: make_struct_decl
  617          | make_dim_decl
  618          | make_table_decl
  619          | array_comprehension

  620 make_struct_fields: "name" copy_or_move expr
  621                   | "name" ":=" expr
  622                   | make_struct_fields ',' "name" copy_or_move expr
  623                   | make_struct_fields ',' "name" ":=" expr

  624 make_struct_dim: make_struct_fields
  625                | make_struct_dim ';' make_struct_fields

  626 optional_block: %empty
  627               | "where" expr_block

  628 make_struct_decl: "[[" type_declaration make_struct_dim optional_block ']' ']'
  629                 | "[[" type_declaration optional_block ']' ']'
  630                 | "[[" type_declaration '(' ')' optional_block ']' ']'
  631                 | "[[" type_declaration '(' ')' make_struct_dim optional_block ']' ']'
  632                 | "[{" type_declaration make_struct_dim optional_block '}' ']'
  633                 | "[{" type_declaration '(' ')' make_struct_dim optional_block '}' ']'

  634 make_tuple: expr
  635           | make_tuple ',' expr

  636 make_map_tuple: expr "=>" expr
  637               | expr

  638 make_any_tuple: make_tuple
  639               | make_map_tuple

  640 make_dim: make_any_tuple
  641         | make_dim ';' make_any_tuple

  642 make_dim_decl: "[[" type_declaration make_dim ']' ']'
  643              | "[{" type_declaration make_dim '}' ']'

  644 make_table: make_map_tuple
  645           | make_table ';' make_map_tuple

  646 make_table_decl: "{{" make_table '}' '}'

  647 array_comprehension_where: %empty
  648                          | ';' "where" expr

  649 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'
  650                    | "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 101 324
    '#' (35) 566 568
    '$' (36) 17 255
    '%' (37) 32 36 121 336
    '&' (38) 129 258 343 448 457 564 565
    '(' (40) 83 90 96 97 217 218 247 248 249 297 298 299 301 354 362 363 364 365 367 368 369 370 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 435 459 508 545 546 630 631 633
    ')' (41) 83 90 96 97 217 218 247 248 249 297 298 299 301 354 362 363 364 365 367 368 369 370 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 435 459 508 545 546 630 631 633
    '*' (42) 119 334 366
    '+' (43) 117 326 332
    ',' (44) 45 72 85 92 251 263 461 462 510 511 622 623 635
    '-' (45) 118 327 333 560 563 565 568
    '.' (46) 37 146 309 310 313 356 358 360 406 408 409
    '/' (47) 38 120 335
    ':' (58) 47 48 99 372 439 442 449 450 463 464 465 493 495
    ';' (59) 13 59 186 189 190 197 198 203 204 205 222 223 224 227 228 249 427 429 432 437 441 444 463 464 466 480 481 484 485 548 553 613 615 625 641 645 648 649 650
    '<' (60) 122 237 240 243 246 248 249 305 308 337 369 370 375 381 386 551 573 577 580 583 587 590 594 597 601 604 607 610
    '=' (61) 64 76 77 78 79 80 81 83 259 275 293 294 445 453 481 483 569
    '>' (62) 123 237 240 243 246 248 249 305 308 338 369 370 375 381 386 551 573 577 580 583 587 590 594 597 601 604 607 610
    '?' (63) 153 372 383 386 387 411 570
    '@' (64) 256 257 302 305 308 413
    '[' (91) 94 144 297 355 356 432 558 559 560
    ']' (93) 94 144 145 265 297 355 356 357 358 415 432 558 559 560 628 629 630 631 632 633 642 643 649 650
    '^' (94) 131 345
    '{' (123) 184 185 476 486 492 493 506 613 615
    '|' (124) 130 344
    '}' (125) 184 185 476 486 492 493 506 613 615 632 633 643 646 650
    '~' (126) 102 325
    error (256) 208 313
    "lexer error" (258)
    "struct" (259) 500
    "class" (260) 499
    "let" (261) 232
    "def" (262) 177 429 431
    "while" (263) 61
    "if" (264) 56
    "static_if" (265) 57
    "else" (266) 54
    "for" (267) 59 649 650
    "recover" (268) 231
    "true" (269) 69 80 320
    "false" (270) 70 81 321
    "new" (271) 216 217 218 219
    "typeinfo" (272) 247 248 249
    "type" (273) 74 246 375 381 386
    "in" (274) 59 75 649 650
    "is" (275) 151 375 376 377 412
    "as" (276) 40 152 153 378 381 382 383 386 387 410 411
    "elif" (277) 51
    "static_elif" (278) 52
    "array" (279) 577
    "return" (280) 222 223 224 225 226
    "null" (281) 314
    "break" (282) 220
    "try" (283) 231
    "options" (284) 33
    "table" (285) 580
    "expect" (286) 43
    "const" (287) 420 562 563 569
    "require" (288) 34 87
    "operator" (289) 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153
    "enum" (290) 492 493
    "finally" (291) 185
    "delete" (292) 149 215
    "deref" (293) 367
    "typedef" (294) 486 487
    "with" (295) 62
    "aka" (296) 460 462 509 511
    "assume" (297) 64
    "cast" (298) 237
    "override" (299) 417
    "abstract" (300) 429
    "upcast" (301) 240
    "iterator" (302) 583
    "var" (303) 233 434
    "addr" (304) 368
    "continue" (305) 221
    "where" (306) 627 648
    "pass" (307) 205
    "reinterpret" (308) 243
    "module" (309) 19
    "public" (310) 15 42 180 422 475 490 503
    "label" (311) 48 49
    "goto" (312) 49 50
    "implicit" (313) 567
    "explicit" (314) 561
    "shared" (315) 472
    "private" (316) 16 88 179 423 474 489 502
    "smart_ptr" (317) 573
    "unsafe" (318) 60 398
    "bool" (319) 154 512
    "void" (320) 532
    "string" (321) 155 513
    "auto" (322) 544 545
    "int" (323) 156 514 537
    "int2" (324) 157 518
    "int3" (325) 158 519
    "int4" (326) 159 520
    "uint" (327) 160 521 540
    "bitfield" (328) 536 551 615
    "uint2" (329) 161 525
    "uint3" (330) 162 526
    "uint4" (331) 163 527
    "float" (332) 164 528
    "float2" (333) 165 529
    "float3" (334) 166 530
    "float4" (335) 167 531
    "range" (336) 168 533
    "urange" (337) 169 534
    "block" (338) 584 587 590
    "int64" (339) 170 517
    "uint64" (340) 171 524
    "double" (341) 172 535
    "function" (342) 591 594 597
    "lambda" (343) 598 601 604
    "int8" (344) 173 515 538
    "uint8" (345) 174 522 541
    "int16" (346) 175 516 539
    "uint16" (347) 176 523 542
    "tuple" (348) 607
    "variant" (349) 610 613
    "generator" (350) 369 370
    "yield" (351) 227 228 229 230
    "sealed" (352) 418 497
    "+=" (353) 103 284
    "-=" (354) 104 285
    "/=" (355) 106 287
    "*=" (356) 105 286
    "%=" (357) 107 288
    "&=" (358) 108 278
    "|=" (359) 109 279
    "^=" (360) 110 280
    "<<" (361) 136 328
    ">>" (362) 137 329
    "++" (363) 132 134 350 352
    "--" (364) 133 135 351 353
    "<=" (365) 127 341
    "<<=" (366) 138 289
    ">>=" (367) 139 290
    ">=" (368) 128 342
    "==" (369) 125 339
    "!=" (370) 126 340
    "->" (371) 298 299
    "<-" (372) 224 226 228 230 254 260 276 295 296 446 454
    "??" (373) 150 371 574
    "?." (374) 147 359 360 407 409
    "?[" (375) 145 357 358
    "<|" (376) 395
    " <|" (377) 209
    "@ <|" (378) 210 293 295
    "@@ <|" (379) 211 294 296
    "|>" (380) 396
    ":=" (381) 148 261 277 455 621 623
    "<<<" (382) 140 330
    ">>>" (383) 141 331
    "<<<=" (384) 142 291
    ">>>=" (385) 143 292
    "=>" (386) 253 254 636
    "::" (387) 213 214
    "&&" (388) 114 346
    "||" (389) 115 347
    "^^" (390) 116 348
    "&&=" (391) 111 281
    "||=" (392) 112 282
    "^^=" (393) 113 283
    ".." (394) 124 349
    "$$" (395) 399
    "$i" (396) 301 400 459 508
    "$v" (397) 401
    "$b" (398) 402
    "$a" (399) 403 435
    "$t" (400) 546
    "$c" (401) 404 405 413
    "$f" (402) 406 407 408 409 410 411 412
    "[[" (403) 265 415 628 629 630 631 642 649
    "[{" (404) 632 633 643 650
    "{{" (405) 646
    "integer constant" <i> (406) 46 47 48 49 67 78 268
    "long integer constant" <i64> (407) 270
    "unsigned integer constant" <ui> (408) 269
    "unsigned long integer constant" <ui64> (409) 271
    "floating point constant" <fd> (410) 68 79 272
    "double constant" <d> (411) 273
    "name" <s> (412) 18 35 37 38 40 64 66 73 77 100 212 213 214 248 249 258 259 260 261 298 299 309 310 359 360 377 378 383 397 439 442 458 460 461 462 480 481 483 491 498 507 509 510 511 545 547 548 613 615 620 621 622 623
    "start of the string" (413) 24 28
    STRING_CHARACTER <ch> (414) 20 22 29 30
    STRING_CHARACTER_ESC (415) 21 23
    "end of the string" (416) 24 28
    "{" (417) 27
    "}" (418) 27
    "end of failed eader macro" (419)
    UNARY_MINUS (420)
    UNARY_PLUS (421)
    PRE_INC (422)
    PRE_DEC (423)
    POST_INC (424)
    POST_DEC (425)
    DEREF (426)


Nonterminals, with rules where they appear

    $accept (199)
        on left: 0
    program (200)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13
    optional_public_or_private_module <b> (201)
        on left: 14 15 16
        on right: 19
    module_name <s> (202)
        on left: 17 18
        on right: 19
    module_declaration (203)
        on left: 19
        on right: 2
    character_sequence <s> (204)
        on left: 20 21 22 23
        on right: 22 23 24 26
    string_constant <s> (205)
        on left: 24
        on right: 65 76
    string_builder_body <pExpression> (206)
        on left: 25 26 27
        on right: 26 27 28
    string_builder <pExpression> (207)
        on left: 28
        on right: 318
    reader_character_sequence (208)
        on left: 29 30
        on right: 30 32
    expr_reader <pExpression> (209)
        on left: 32
        on right: 317
    $@1 (210)
        on left: 31
        on right: 32
    options_declaration (211)
        on left: 33
        on right: 9
    require_declaration (212)
        on left: 34
        on right: 8
    require_module_name <s> (213)
        on left: 35 36 37 38
        on right: 36 37 38 39 40
    require_module (214)
        on left: 39 40
        on right: 34
    is_public_module <b> (215)
        on left: 41 42
        on right: 39 40
    expect_declaration (216)
        on left: 43
        on right: 7
    expect_list (217)
        on left: 44 45
        on right: 43 45
    expect_error (218)
        on left: 46 47
        on right: 44 45
    expression_label <pExpression> (219)
        on left: 48
        on right: 203
    expression_goto <pExpression> (220)
        on left: 49 50
        on right: 204
    elif_or_static_elif <b> (221)
        on left: 51 52
        on right: 55
    expression_else <pExpression> (222)
        on left: 53 54 55
        on right: 55 58
    if_or_static_if <b> (223)
        on left: 56 57
        on right: 58
    expression_if_then_else <pExpression> (224)
        on left: 58
        on right: 201
    expression_for_loop <pExpression> (225)
        on left: 59
        on right: 196
    expression_unsafe <pExpression> (226)
        on left: 60
        on right: 193
    expression_while_loop <pExpression> (227)
        on left: 61
        on right: 192
    expression_with <pExpression> (228)
        on left: 62
        on right: 194
    expression_with_alias <pExpression> (229)
        on left: 64
        on right: 195
    $@2 (230)
        on left: 63
        on right: 64
    annotation_argument_value <aa> (231)
        on left: 65 66 67 68 69 70
        on right: 71 72
    annotation_argument_value_list <aaList> (232)
        on left: 71 72
        on right: 72 83
    annotation_argument_name <s> (233)
        on left: 73 74 75
        on right: 76 77 78 79 80 81 82 83
    annotation_argument <aa> (234)
        on left: 76 77 78 79 80 81 82 83
        on right: 84 85
    annotation_argument_list <aaList> (235)
        on left: 84 85
        on right: 33 85 90 415
    annotation_declaration_name <s> (236)
        on left: 86 87 88
        on right: 89 90
    annotation_declaration <fa> (237)
        on left: 89 90
        on right: 91 92
    annotation_list <faList> (238)
        on left: 91 92
        on right: 92 94 432
    optional_annotation_list <faList> (239)
        on left: 93 94
        on right: 177 267 429 431 492 493 506
    optional_function_argument_list <pVarDeclList> (240)
        on left: 95 96 97
        on right: 181 267 308 590 597 604
    optional_function_type <pTypeDecl> (241)
        on left: 98 99
        on right: 181 267 308 590 597 604
    function_name <s> (242)
        on left: 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176
        on right: 181
    global_function_declaration (243)
        on left: 177
        on right: 6
    optional_public_or_private_function <b> (244)
        on left: 178 179 180
        on right: 183
    function_declaration_header <pFuncDecl> (245)
        on left: 181
        on right: 183 429 431
    function_declaration <pFuncDecl> (246)
        on left: 183
        on right: 177
    $@3 (247)
        on left: 182
        on right: 183
    expression_block <pExpression> (248)
        on left: 184 185
        on right: 54 55 58 59 60 61 62 183 231 252 266 431
    expression_any <pExpression> (249)
        on left: 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205
        on right: 207
    expressions <pExpression> (250)
        on left: 206 207 208
        on right: 184 185 207 208
    expr_pipe <pExpression> (251)
        on left: 209 210 211
        on right: 187 225 226 229 230 452 465 467
    name_in_namespace <s> (252)
        on left: 212 213 214
        on right: 32 86 247 248 249 297 300 315 362 363 397 495 543
    expression_delete <pExpression> (253)
        on left: 215
        on right: 190
    expr_new <pExpression> (254)
        on left: 216 217 218 219
        on right: 391
    expression_break <pExpression> (255)
        on left: 220
        on right: 197
    expression_continue <pExpression> (256)
        on left: 221
        on right: 198
    expression_return <pExpression> (257)
        on left: 222 223 224 225 226
        on right: 199
    expression_yield <pExpression> (258)
        on left: 227 228 229 230
        on right: 200
    expression_try_catch <pExpression> (259)
        on left: 231
        on right: 202
    kwd_let <b> (260)
        on left: 232 233
        on right: 234 476 478
    expression_let <pExpression> (261)
        on left: 234
        on right: 191
    expr_cast <pExpression> (262)
        on left: 237 240 243
        on right: 390
    $@4 (263)
        on left: 235
        on right: 237
    $@5 (264)
        on left: 236
        on right: 237
    $@6 (265)
        on left: 238
        on right: 240
    $@7 (266)
        on left: 239
        on right: 240
    $@8 (267)
        on left: 241
        on right: 243
    $@9 (268)
        on left: 242
        on right: 243
    expr_type_decl <pExpression> (269)
        on left: 246
        on right: 389
    $@10 (270)
        on left: 244
        on right: 246
    $@11 (271)
        on left: 245
        on right: 246
    expr_type_info <pExpression> (272)
        on left: 247 248 249
        on right: 388
    expr_list <pExpression> (273)
        on left: 250 251
        on right: 59 218 251 299 363 365 405 649 650
    block_or_simple_block <pExpression> (274)
        on left: 252 253 254
        on right: 267
    block_or_lambda <i> (275)
        on left: 255 256 257
        on right: 267
    capture_entry <pCapt> (276)
        on left: 258 259 260 261
        on right: 262 263
    capture_list <pCaptList> (277)
        on left: 262 263
        on right: 263 265
    optional_capture_list <pCaptList> (278)
        on left: 264 265
        on right: 267 369 370
    expr_block <pExpression> (279)
        on left: 266 267
        on right: 209 210 211 394 627
    expr_numeric_const <pExpression> (280)
        on left: 268 269 270 271 272 273
        on right: 316
    expr_assign <pExpression> (281)
        on left: 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292
        on right: 189 209
    expr_assign_pipe <pExpression> (282)
        on left: 293 294 295 296
        on right: 188
    expr_named_call <pExpression> (283)
        on left: 297
        on right: 393
    expr_method_call <pExpression> (284)
        on left: 298 299
        on right: 392
    func_addr_name <pExpression> (285)
        on left: 300 301
        on right: 302 305 308
    func_addr_expr <pExpression> (286)
        on left: 302 305 308
        on right: 361
    $@12 (287)
        on left: 303
        on right: 305
    $@13 (288)
        on left: 304
        on right: 305
    $@14 (289)
        on left: 306
        on right: 308
    $@15 (290)
        on left: 307
        on right: 308
    expr_field <pExpression> (291)
        on left: 309 310 313
        on right: 322
    $@16 (292)
        on left: 311
        on right: 313
    $@17 (293)
        on left: 312
        on right: 313
    expr <pExpression> (294)
        on left: 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 375 376 377 378 381 382 383 386 387 388 389 390 391 392 393 394 395 396 397 398
        on right
    $@18 (295)
        on left: 373
        on right: 375
    $@19 (296)
        on left: 374
        on right: 375
    $@20 (297)
        on left: 379
        on right: 381
    $@21 (298)
        on left: 380
        on right: 381
    $@22 (299)
        on left: 384
        on right: 386
    $@23 (300)
        on left: 385
        on right: 386
    expr_mtag <pExpression> (301)
        on left: 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413
        on right: 323
    optional_field_annotation <aaList> (302)
        on left: 414 415
        on right: 424 433 434 470 478
    optional_override <i> (303)
        on left: 416 417 418
        on right: 424 431
    optional_constant <b> (304)
        on left: 419 420
        on right: 431
    optional_public_or_private_member_variable <b> (305)
        on left: 421 422 423
        on right: 424 429 431
    structure_variable_declaration <pVarDecl> (306)
        on left: 424
        on right: 427
    struct_variable_declaration_list <pVarDeclList> (307)
        on left: 425 427 429 431 432
        on right: 427 429 431 432 506
    $@24 (308)
        on left: 426
        on right: 427
    $@25 (309)
        on left: 428
        on right: 429
    $@26 (310)
        on left: 430
        on right: 431
    function_argument_declaration <pVarDecl> (311)
        on left: 433 434 435
        on right: 436 437
    function_argument_list <pVarDeclList> (312)
        on left: 436 437
        on right: 97 437
    tuple_type <pVarDecl> (313)
        on left: 438 439
        on right: 440 441
    tuple_type_list <pVarDeclList> (314)
        on left: 440 441
        on right: 441 607
    variant_type <pVarDecl> (315)
        on left: 442
        on right: 443 444
    variant_type_list <pVarDeclList> (316)
        on left: 443 444
        on right: 444 610 613
    copy_or_move <b> (317)
        on left: 445 446
        on right: 450 451 452 620 622
    variable_declaration <pVarDecl> (318)
        on left: 447 448 449 450 451 452
        on right: 424 433 434
    copy_or_move_or_clone <i> (319)
        on left: 453 454 455
        on right: 464 465 466 467
    optional_ref <b> (320)
        on left: 456 457
        on right: 466 467
    let_variable_name_with_pos_list <pNameWithPosList> (321)
        on left: 458 459 460 461 462
        on right: 461 462 463 464 465 466 467
    let_variable_declaration <pVarDecl> (322)
        on left: 463 464 465 466 467
        on right: 234 470 478
    global_variable_declaration_list <pVarDeclList> (323)
        on left: 468 470
        on right: 470 476
    $@27 (324)
        on left: 469
        on right: 470
    optional_shared <b> (325)
        on left: 471 472
        on right: 19 476 478
    optional_public_or_private_variable <b> (326)
        on left: 473 474 475
        on right: 476 478
    global_let (327)
        on left: 476 478
        on right: 5
    $@28 (328)
        on left: 477
        on right: 478
    enum_list <pEnum> (329)
        on left: 479 480 481
        on right: 480 481 492 493
    single_alias (330)
        on left: 483
        on right: 484 485 487
    $@29 (331)
        on left: 482
        on right: 483
    alias_list (332)
        on left: 484 485
        on right: 485 486
    alias_declaration (333)
        on left: 486 487
        on right: 10
    optional_public_or_private_enum <b> (334)
        on left: 488 489 490
        on right: 492 493
    enum_name <pEnum> (335)
        on left: 491
        on right: 492 493
    enum_declaration (336)
        on left: 492 493
        on right: 4
    optional_structure_parent <s> (337)
        on left: 494 495
        on right: 498
    optional_sealed <b> (338)
        on left: 496 497
        on right: 498
    structure_name <pStructure> (339)
        on left: 498
        on right: 506
    class_or_struct <b> (340)
        on left: 499 500
        on right: 506
    optional_public_or_private_structure <b> (341)
        on left: 501 502 503
        on right: 506
    structure_declaration (342)
        on left: 506
        on right: 3
    $@30 (343)
        on left: 504
        on right: 506
    $@31 (344)
        on left: 505
        on right: 506
    variable_name_with_pos_list <pNameWithPosList> (345)
        on left: 507 508 509 510 511
        on right: 59 447 448 449 450 451 452 510 511 649 650
    basic_type_declaration <type> (346)
        on left: 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536
        on right: 364 365 376 382 387 554
    enum_basic_type_declaration <type> (347)
        on left: 537 538 539 540 541 542
        on right: 493
    structure_type_declaration <pTypeDecl> (348)
        on left: 543
        on right: 557
    auto_type_declaration <pTypeDecl> (349)
        on left: 544 545 546
        on right: 555
    bitfield_bits <pNameList> (350)
        on left: 547 548
        on right: 548 551 615
    bitfield_type_declaration <pTypeDecl> (351)
        on left: 551
        on right: 556
    $@32 (352)
        on left: 549
        on right: 551
    $@33 (353)
        on left: 550
        on right: 551
    table_type_pair <aTypePair> (354)
        on left: 552 553
        on right: 580
    type_declaration <pTypeDecl> (355)
        on left: 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 573 574 577 580 583 584 587 590 591 594 597 598 601 604 607 610
        on right: 99 216 217 218 237 240 243 246 305 369 370 375 381 386 438 439 442 449 450 463 464 465 483 552 553 558 559 560 561 562 563 564 565 566 567 568 569 570 573 574 577 583 587 594 601 628 629 630 631 632 633 642 643
    $@34 (356)
        on left: 571
        on right: 573
    $@35 (357)
        on left: 572
        on right: 573
    $@36 (358)
        on left: 575
        on right: 577
    $@37 (359)
        on left: 576
        on right: 577
    $@38 (360)
        on left: 578
        on right: 580
    $@39 (361)
        on left: 579
        on right: 580
    $@40 (362)
        on left: 581
        on right: 583
    $@41 (363)
        on left: 582
        on right: 583
    $@42 (364)
        on left: 585
        on right: 587
    $@43 (365)
        on left: 586
        on right: 587
    $@44 (366)
        on left: 588
        on right: 590
    $@45 (367)
        on left: 589
        on right: 590
    $@46 (368)
        on left: 592
        on right: 594
    $@47 (369)
        on left: 593
        on right: 594
    $@48 (370)
        on left: 595
        on right: 597
    $@49 (371)
        on left: 596
        on right: 597
    $@50 (372)
        on left: 599
        on right: 601
    $@51 (373)
        on left: 600
        on right: 601
    $@52 (374)
        on left: 602
        on right: 604
    $@53 (375)
        on left: 603
        on right: 604
    $@54 (376)
        on left: 605
        on right: 607
    $@55 (377)
        on left: 606
        on right: 607
    $@56 (378)
        on left: 608
        on right: 610
    $@57 (379)
        on left: 609
        on right: 610
    variant_alias_declaration (380)
        on left: 613
        on right: 11
    $@58 (381)
        on left: 611
        on right: 613
    $@59 (382)
        on left: 612
        on right: 613
    bitfield_alias_declaration (383)
        on left: 615
        on right: 12
    $@60 (384)
        on left: 614
        on right: 615
    make_decl <pExpression> (385)
        on left: 616 617 618 619
        on right: 219 319
    make_struct_fields <pMakeStruct> (386)
        on left: 620 621 622 623
        on right: 297 622 623 624 625
    make_struct_dim <pExpression> (387)
        on left: 624 625
        on right: 625 628 631 632 633
    optional_block <pExpression> (388)
        on left: 626 627
        on right: 628 629 630 631 632 633
    make_struct_decl <pExpression> (389)
        on left: 628 629 630 631 632 633
        on right: 616
    make_tuple <pExpression> (390)
        on left: 634 635
        on right: 635 638
    make_map_tuple <pExpression> (391)
        on left: 636 637
        on right: 639 644 645
    make_any_tuple <pExpression> (392)
        on left: 638 639
        on right: 640 641
    make_dim <pExpression> (393)
        on left: 640 641
        on right: 641 642 643
    make_dim_decl <pExpression> (394)
        on left: 642 643
        on right: 617
    make_table <pExpression> (395)
        on left: 644 645
        on right: 645 646
    make_table_decl <pExpression> (396)
        on left: 646
        on right: 618
    array_comprehension_where <pExpression> (397)
        on left: 647 648
        on right: 649 650
    array_comprehension <pExpression> (398)
        on left: 649 650
        on right: 619


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . bitfield_alias_declaration
   13        | program . ';'

    $end        shift, and go to state 2
    "let"       shift, and go to state 3
    "options"   shift, and go to state 4
    "expect"    shift, and go to state 5
    "require"   shift, and go to state 6
    "typedef"   shift, and go to state 7
    "var"       shift, and go to state 8
    "module"    shift, and go to state 9
    "bitfield"  shift, and go to state 10
    "variant"   shift, and go to state 11
    '['         shift, and go to state 12
    ';'         shift, and go to state 13

    $default  reduce using rule 93 (optional_annotation_list)

    module_declaration           go to state 14
    options_declaration          go to state 15
    require_declaration          go to state 16
    expect_declaration           go to state 17
    optional_annotation_list     go to state 18
    global_function_declaration  go to state 19
    kwd_let                      go to state 20
    global_let                   go to state 21
    alias_declaration            go to state 22
    enum_declaration             go to state 23
    structure_declaration        go to state 24
    variant_alias_declaration    go to state 25
    bitfield_alias_declaration   go to state 26


State 2

    0 $accept: program $end .

    $default  accept


State 3

  232 kwd_let: "let" .

    $default  reduce using rule 232 (kwd_let)


State 4

   33 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 27
    "in"    shift, and go to state 28
    "name"  shift, and go to state 29

    annotation_argument_name  go to state 30
    annotation_argument       go to state 31
    annotation_argument_list  go to state 32


State 5

   43 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 33

    expect_list   go to state 34
    expect_error  go to state 35


State 6

   34 require_declaration: "require" . require_module

    "name"  shift, and go to state 36
    '%'     shift, and go to state 37

    require_module_name  go to state 38
    require_module       go to state 39


State 7

  486 alias_declaration: "typedef" . '{' alias_list '}'
  487                  | "typedef" . single_alias

    "name"  shift, and go to state 40
    '{'     shift, and go to state 41

    single_alias  go to state 42


State 8

  233 kwd_let: "var" .

    $default  reduce using rule 233 (kwd_let)


State 9

   19 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 43
    '$'     shift, and go to state 44

    module_name  go to state 45


State 10

  615 bitfield_alias_declaration: "bitfield" . $@60 "name" '{' bitfield_bits ';' '}'

    $default  reduce using rule 614 ($@60)

    $@60  go to state 46


State 11

  613 variant_alias_declaration: "variant" . $@58 "name" $@59 '{' variant_type_list ';' '}'

    $default  reduce using rule 611 ($@58)

    $@58  go to state 47


State 12

   94 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 48
    "private"  shift, and go to state 49
    "::"       shift, and go to state 50
    "name"     shift, and go to state 51

    annotation_declaration_name  go to state 52
    annotation_declaration       go to state 53
    annotation_list              go to state 54
    name_in_namespace            go to state 55


State 13

   13 program: program ';' .

    $default  reduce using rule 13 (program)


State 14

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 15

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 16

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 17

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 18

  177 global_function_declaration: optional_annotation_list . "def" function_declaration
  492 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name '{' enum_list '}'
  493                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list '}'
  506 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@30 structure_name $@31 '{' struct_variable_declaration_list '}'

    "struct"  shift, and go to state 56
    "class"   shift, and go to state 57
    "def"     shift, and go to state 58
    "enum"    shift, and go to state 59

    class_or_struct  go to state 60


State 19

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 20

  476 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  478           | kwd_let . optional_shared optional_public_or_private_variable $@28 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 61

    $default  reduce using rule 471 (optional_shared)

    optional_shared  go to state 62


State 21

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 22

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 23

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 24

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 25

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 26

   12 program: program bitfield_alias_declaration .

    $default  reduce using rule 12 (program)


State 27

   74 annotation_argument_name: "type" .

    $default  reduce using rule 74 (annotation_argument_name)


State 28

   75 annotation_argument_name: "in" .

    $default  reduce using rule 75 (annotation_argument_name)


State 29

   73 annotation_argument_name: "name" .

    $default  reduce using rule 73 (annotation_argument_name)


State 30

   76 annotation_argument: annotation_argument_name . '=' string_constant
   77                    | annotation_argument_name . '=' "name"
   78                    | annotation_argument_name . '=' "integer constant"
   79                    | annotation_argument_name . '=' "floating point constant"
   80                    | annotation_argument_name . '=' "true"
   81                    | annotation_argument_name . '=' "false"
   82                    | annotation_argument_name .
   83                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 63

    $default  reduce using rule 82 (annotation_argument)


State 31

   84 annotation_argument_list: annotation_argument .

    $default  reduce using rule 84 (annotation_argument_list)


State 32

   33 options_declaration: "options" annotation_argument_list .
   85 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 64

    $default  reduce using rule 33 (options_declaration)


State 33

   46 expect_error: "integer constant" .
   47             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 65

    $default  reduce using rule 46 (expect_error)


State 34

   43 expect_declaration: "expect" expect_list .
   45 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 66

    $default  reduce using rule 43 (expect_declaration)


State 35

   44 expect_list: expect_error .

    $default  reduce using rule 44 (expect_list)


State 36

   35 require_module_name: "name" .

    $default  reduce using rule 35 (require_module_name)


State 37

   36 require_module_name: '%' . require_module_name

    "name"  shift, and go to state 36
    '%'     shift, and go to state 37

    require_module_name  go to state 67


State 38

   37 require_module_name: require_module_name . '.' "name"
   38                    | require_module_name . '/' "name"
   39 require_module: require_module_name . is_public_module
   40               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 68
    "public"  shift, and go to state 69
    '/'       shift, and go to state 70
    '.'       shift, and go to state 71

    $default  reduce using rule 41 (is_public_module)

    is_public_module  go to state 72


State 39

   34 require_declaration: "require" require_module .

    $default  reduce using rule 34 (require_declaration)


State 40

  483 single_alias: "name" . $@29 '=' type_declaration

    $default  reduce using rule 482 ($@29)

    $@29  go to state 73


State 41

  486 alias_declaration: "typedef" '{' . alias_list '}'

    "name"  shift, and go to state 40

    single_alias  go to state 74
    alias_list    go to state 75


State 42

  487 alias_declaration: "typedef" single_alias .

    $default  reduce using rule 487 (alias_declaration)


State 43

   18 module_name: "name" .

    $default  reduce using rule 18 (module_name)


State 44

   17 module_name: '$' .

    $default  reduce using rule 17 (module_name)


State 45

   19 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 61

    $default  reduce using rule 471 (optional_shared)

    optional_shared  go to state 76


State 46

  615 bitfield_alias_declaration: "bitfield" $@60 . "name" '{' bitfield_bits ';' '}'

    "name"  shift, and go to state 77


State 47

  613 variant_alias_declaration: "variant" $@58 . "name" $@59 '{' variant_type_list ';' '}'

    "name"  shift, and go to state 78


State 48

   87 annotation_declaration_name: "require" .

    $default  reduce using rule 87 (annotation_declaration_name)


State 49

   88 annotation_declaration_name: "private" .

    $default  reduce using rule 88 (annotation_declaration_name)


State 50

  214 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 79


State 51

  212 name_in_namespace: "name" .
  213                  | "name" . "::" "name"

    "::"  shift, and go to state 80

    "::"      [reduce using rule 212 (name_in_namespace)]
    $default  reduce using rule 212 (name_in_namespace)


State 52

   89 annotation_declaration: annotation_declaration_name .
   90                       | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 81

    $default  reduce using rule 89 (annotation_declaration)


State 53

   91 annotation_list: annotation_declaration .

    $default  reduce using rule 91 (annotation_list)


State 54

   92 annotation_list: annotation_list . ',' annotation_declaration
   94 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 82
    ']'  shift, and go to state 83


State 55

   86 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 86 (annotation_declaration_name)


State 56

  500 class_or_struct: "struct" .

    $default  reduce using rule 500 (class_or_struct)


State 57

  499 class_or_struct: "class" .

    $default  reduce using rule 499 (class_or_struct)


State 58

  177 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 84
    "private"  shift, and go to state 85

    $default  reduce using rule 178 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 86
    function_declaration                 go to state 87


State 59

  492 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name '{' enum_list '}'
  493                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list '}'

    "public"   shift, and go to state 88
    "private"  shift, and go to state 89

    $default  reduce using rule 488 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 90


State 60

  506 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@30 structure_name $@31 '{' struct_variable_declaration_list '}'

    "public"   shift, and go to state 91
    "private"  shift, and go to state 92

    $default  reduce using rule 501 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 93


State 61

  472 optional_shared: "shared" .

    $default  reduce using rule 472 (optional_shared)


State 62

  476 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  478           | kwd_let optional_shared . optional_public_or_private_variable $@28 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 94
    "private"  shift, and go to state 95

    $default  reduce using rule 473 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 96


State 63

   76 annotation_argument: annotation_argument_name '=' . string_constant
   77                    | annotation_argument_name '=' . "name"
   78                    | annotation_argument_name '=' . "integer constant"
   79                    | annotation_argument_name '=' . "floating point constant"
   80                    | annotation_argument_name '=' . "true"
   81                    | annotation_argument_name '=' . "false"
   83                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 97
    "false"                    shift, and go to state 98
    "integer constant"         shift, and go to state 99
    "floating point constant"  shift, and go to state 100
    "name"                     shift, and go to state 101
    "start of the string"      shift, and go to state 102
    '('                        shift, and go to state 103

    string_constant  go to state 104


State 64

   85 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 27
    "in"    shift, and go to state 28
    "name"  shift, and go to state 29

    annotation_argument_name  go to state 30
    annotation_argument       go to state 105


State 65

   47 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 106


State 66

   45 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 33

    expect_error  go to state 107


State 67

   36 require_module_name: '%' require_module_name .
   37                    | require_module_name . '.' "name"
   38                    | require_module_name . '/' "name"

    '.'  shift, and go to state 71

    $default  reduce using rule 36 (require_module_name)


State 68

   40 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 108


State 69

   42 is_public_module: "public" .

    $default  reduce using rule 42 (is_public_module)


State 70

   38 require_module_name: require_module_name '/' . "name"

    "name"  shift, and go to state 109


State 71

   37 require_module_name: require_module_name '.' . "name"

    "name"  shift, and go to state 110


State 72

   39 require_module: require_module_name is_public_module .

    $default  reduce using rule 39 (require_module)


State 73

  483 single_alias: "name" $@29 . '=' type_declaration

    '='  shift, and go to state 111


State 74

  484 alias_list: single_alias . ';'

    ';'  shift, and go to state 112


State 75

  485 alias_list: alias_list . single_alias ';'
  486 alias_declaration: "typedef" '{' alias_list . '}'

    "name"  shift, and go to state 40
    '}'     shift, and go to state 113

    single_alias  go to state 114


State 76

   19 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 115
    "private"  shift, and go to state 116

    $default  reduce using rule 14 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 117


State 77

  615 bitfield_alias_declaration: "bitfield" $@60 "name" . '{' bitfield_bits ';' '}'

    '{'  shift, and go to state 118


State 78

  613 variant_alias_declaration: "variant" $@58 "name" . $@59 '{' variant_type_list ';' '}'

    $default  reduce using rule 612 ($@59)

    $@59  go to state 119


State 79

  214 name_in_namespace: "::" "name" .

    $default  reduce using rule 214 (name_in_namespace)


State 80

  213 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 120


State 81

   90 annotation_declaration: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 27
    "in"    shift, and go to state 28
    "name"  shift, and go to state 29

    annotation_argument_name  go to state 30
    annotation_argument       go to state 31
    annotation_argument_list  go to state 121


State 82

   92 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 48
    "private"  shift, and go to state 49
    "::"       shift, and go to state 50
    "name"     shift, and go to state 51

    annotation_declaration_name  go to state 52
    annotation_declaration       go to state 122
    name_in_namespace            go to state 55


State 83

   94 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 94 (optional_annotation_list)


State 84

  180 optional_public_or_private_function: "public" .

    $default  reduce using rule 180 (optional_public_or_private_function)


State 85

  179 optional_public_or_private_function: "private" .

    $default  reduce using rule 179 (optional_public_or_private_function)


State 86

  183 function_declaration: optional_public_or_private_function . $@3 function_declaration_header expression_block

    $default  reduce using rule 182 ($@3)

    $@3  go to state 123


State 87

  177 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 177 (global_function_declaration)


State 88

  490 optional_public_or_private_enum: "public" .

    $default  reduce using rule 490 (optional_public_or_private_enum)


State 89

  489 optional_public_or_private_enum: "private" .

    $default  reduce using rule 489 (optional_public_or_private_enum)


State 90

  492 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name '{' enum_list '}'
  493                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration '{' enum_list '}'

    "name"  shift, and go to state 124

    enum_name  go to state 125


State 91

  503 optional_public_or_private_structure: "public" .

    $default  reduce using rule 503 (optional_public_or_private_structure)


State 92

  502 optional_public_or_private_structure: "private" .

    $default  reduce using rule 502 (optional_public_or_private_structure)


State 93

  506 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@30 structure_name $@31 '{' struct_variable_declaration_list '}'

    $default  reduce using rule 504 ($@30)

    $@30  go to state 126


State 94

  475 optional_public_or_private_variable: "public" .

    $default  reduce using rule 475 (optional_public_or_private_variable)


State 95

  474 optional_public_or_private_variable: "private" .

    $default  reduce using rule 474 (optional_public_or_private_variable)


State 96

  476 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  478           | kwd_let optional_shared optional_public_or_private_variable . $@28 optional_field_annotation let_variable_declaration

    '{'  shift, and go to state 127

    $default  reduce using rule 477 ($@28)

    $@28  go to state 128


State 97

   80 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 80 (annotation_argument)


State 98

   81 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 81 (annotation_argument)


State 99

   78 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 78 (annotation_argument)


State 100

   79 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 79 (annotation_argument)


State 101

   77 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 77 (annotation_argument)


State 102

   24 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 129
    STRING_CHARACTER_ESC  shift, and go to state 130

    character_sequence  go to state 131


State 103

   83 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 132
    "false"                    shift, and go to state 133
    "integer constant"         shift, and go to state 134
    "floating point constant"  shift, and go to state 135
    "name"                     shift, and go to state 136
    "start of the string"      shift, and go to state 102

    string_constant                 go to state 137
    annotation_argument_value       go to state 138
    annotation_argument_value_list  go to state 139


State 104

   76 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 76 (annotation_argument)


State 105

   85 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 85 (annotation_argument_list)


State 106

   47 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 47 (expect_error)


State 107

   45 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 45 (expect_list)


State 108

   40 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 69

    $default  reduce using rule 41 (is_public_module)

    is_public_module  go to state 140


State 109

   38 require_module_name: require_module_name '/' "name" .

    $default  reduce using rule 38 (require_module_name)


State 110

   37 require_module_name: require_module_name '.' "name" .

    $default  reduce using rule 37 (require_module_name)


State 111

  483 single_alias: "name" $@29 '=' . type_declaration

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 182


State 112

  484 alias_list: single_alias ';' .

    $default  reduce using rule 484 (alias_list)


State 113

  486 alias_declaration: "typedef" '{' alias_list '}' .

    $default  reduce using rule 486 (alias_declaration)


State 114

  485 alias_list: alias_list single_alias . ';'

    ';'  shift, and go to state 183


State 115

   15 optional_public_or_private_module: "public" .

    $default  reduce using rule 15 (optional_public_or_private_module)


State 116

   16 optional_public_or_private_module: "private" .

    $default  reduce using rule 16 (optional_public_or_private_module)


State 117

   19 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 19 (module_declaration)


State 118

  615 bitfield_alias_declaration: "bitfield" $@60 "name" '{' . bitfield_bits ';' '}'

    "name"  shift, and go to state 184

    bitfield_bits  go to state 185


State 119

  613 variant_alias_declaration: "variant" $@58 "name" $@59 . '{' variant_type_list ';' '}'

    '{'  shift, and go to state 186


State 120

  213 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 213 (name_in_namespace)


State 121

   85 annotation_argument_list: annotation_argument_list . ',' annotation_argument
   90 annotation_declaration: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 64
    ')'  shift, and go to state 187


State 122

   92 annotation_list: annotation_list ',' annotation_declaration .

    $default  reduce using rule 92 (annotation_list)


State 123

  183 function_declaration: optional_public_or_private_function $@3 . function_declaration_header expression_block

    "operator"  shift, and go to state 188
    "bool"      shift, and go to state 189
    "string"    shift, and go to state 190
    "int"       shift, and go to state 191
    "int2"      shift, and go to state 192
    "int3"      shift, and go to state 193
    "int4"      shift, and go to state 194
    "uint"      shift, and go to state 195
    "uint2"     shift, and go to state 196
    "uint3"     shift, and go to state 197
    "uint4"     shift, and go to state 198
    "float"     shift, and go to state 199
    "float2"    shift, and go to state 200
    "float3"    shift, and go to state 201
    "float4"    shift, and go to state 202
    "range"     shift, and go to state 203
    "urange"    shift, and go to state 204
    "int64"     shift, and go to state 205
    "uint64"    shift, and go to state 206
    "double"    shift, and go to state 207
    "int8"      shift, and go to state 208
    "uint8"     shift, and go to state 209
    "int16"     shift, and go to state 210
    "uint16"    shift, and go to state 211
    "++"        shift, and go to state 212
    "--"        shift, and go to state 213
    "name"      shift, and go to state 214

    function_name                go to state 215
    function_declaration_header  go to state 216


State 124

  491 enum_name: "name" .

    $default  reduce using rule 491 (enum_name)


State 125

  492 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . '{' enum_list '}'
  493                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration '{' enum_list '}'

    ':'  shift, and go to state 217
    '{'  shift, and go to state 218


State 126

  506 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@30 . structure_name $@31 '{' struct_variable_declaration_list '}'

    "sealed"  shift, and go to state 219

    $default  reduce using rule 496 (optional_sealed)

    optional_sealed  go to state 220
    structure_name   go to state 221


State 127

  476 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 468 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 222


State 128

  478 global_let: kwd_let optional_shared optional_public_or_private_variable $@28 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 223

    $default  reduce using rule 414 (optional_field_annotation)

    optional_field_annotation  go to state 224


State 129

   20 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 20 (character_sequence)


State 130

   21 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 21 (character_sequence)


State 131

   22 character_sequence: character_sequence . STRING_CHARACTER
   23                   | character_sequence . STRING_CHARACTER_ESC
   24 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 225
    STRING_CHARACTER_ESC  shift, and go to state 226
    "end of the string"   shift, and go to state 227


State 132

   69 annotation_argument_value: "true" .

    $default  reduce using rule 69 (annotation_argument_value)


State 133

   70 annotation_argument_value: "false" .

    $default  reduce using rule 70 (annotation_argument_value)


State 134

   67 annotation_argument_value: "integer constant" .

    $default  reduce using rule 67 (annotation_argument_value)


State 135

   68 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 68 (annotation_argument_value)


State 136

   66 annotation_argument_value: "name" .

    $default  reduce using rule 66 (annotation_argument_value)


State 137

   65 annotation_argument_value: string_constant .

    $default  reduce using rule 65 (annotation_argument_value)


State 138

   71 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 71 (annotation_argument_value_list)


State 139

   72 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
   83 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 228
    ')'  shift, and go to state 229


State 140

   40 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 40 (require_module)


State 141

  577 type_declaration: "array" . '<' $@36 type_declaration '>' $@37

    '<'  shift, and go to state 230


State 142

  580 type_declaration: "table" . '<' $@38 table_type_pair '>' $@39

    '<'  shift, and go to state 231


State 143

  583 type_declaration: "iterator" . '<' $@40 type_declaration '>' $@41

    '<'  shift, and go to state 232


State 144

  573 type_declaration: "smart_ptr" . '<' $@34 type_declaration '>' $@35

    '<'  shift, and go to state 233


State 145

  512 basic_type_declaration: "bool" .

    $default  reduce using rule 512 (basic_type_declaration)


State 146

  532 basic_type_declaration: "void" .

    $default  reduce using rule 532 (basic_type_declaration)


State 147

  513 basic_type_declaration: "string" .

    $default  reduce using rule 513 (basic_type_declaration)


State 148

  544 auto_type_declaration: "auto" .
  545                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 234

    '('       [reduce using rule 544 (auto_type_declaration)]
    $default  reduce using rule 544 (auto_type_declaration)


State 149

  514 basic_type_declaration: "int" .

    $default  reduce using rule 514 (basic_type_declaration)


State 150

  518 basic_type_declaration: "int2" .

    $default  reduce using rule 518 (basic_type_declaration)


State 151

  519 basic_type_declaration: "int3" .

    $default  reduce using rule 519 (basic_type_declaration)


State 152

  520 basic_type_declaration: "int4" .

    $default  reduce using rule 520 (basic_type_declaration)


State 153

  521 basic_type_declaration: "uint" .

    $default  reduce using rule 521 (basic_type_declaration)


State 154

  536 basic_type_declaration: "bitfield" .
  551 bitfield_type_declaration: "bitfield" . '<' $@32 bitfield_bits '>' $@33

    '<'  shift, and go to state 235

    '<'       [reduce using rule 536 (basic_type_declaration)]
    $default  reduce using rule 536 (basic_type_declaration)


State 155

  525 basic_type_declaration: "uint2" .

    $default  reduce using rule 525 (basic_type_declaration)


State 156

  526 basic_type_declaration: "uint3" .

    $default  reduce using rule 526 (basic_type_declaration)


State 157

  527 basic_type_declaration: "uint4" .

    $default  reduce using rule 527 (basic_type_declaration)


State 158

  528 basic_type_declaration: "float" .

    $default  reduce using rule 528 (basic_type_declaration)


State 159

  529 basic_type_declaration: "float2" .

    $default  reduce using rule 529 (basic_type_declaration)


State 160

  530 basic_type_declaration: "float3" .

    $default  reduce using rule 530 (basic_type_declaration)


State 161

  531 basic_type_declaration: "float4" .

    $default  reduce using rule 531 (basic_type_declaration)


State 162

  533 basic_type_declaration: "range" .

    $default  reduce using rule 533 (basic_type_declaration)


State 163

  534 basic_type_declaration: "urange" .

    $default  reduce using rule 534 (basic_type_declaration)


State 164

  584 type_declaration: "block" .
  587                 | "block" . '<' $@42 type_declaration '>' $@43
  590                 | "block" . '<' $@44 optional_function_argument_list optional_function_type '>' $@45

    '<'  shift, and go to state 236

    '<'       [reduce using rule 584 (type_declaration)]
    $default  reduce using rule 584 (type_declaration)


State 165

  517 basic_type_declaration: "int64" .

    $default  reduce using rule 517 (basic_type_declaration)


State 166

  524 basic_type_declaration: "uint64" .

    $default  reduce using rule 524 (basic_type_declaration)


State 167

  535 basic_type_declaration: "double" .

    $default  reduce using rule 535 (basic_type_declaration)


State 168

  591 type_declaration: "function" .
  594                 | "function" . '<' $@46 type_declaration '>' $@47
  597                 | "function" . '<' $@48 optional_function_argument_list optional_function_type '>' $@49

    '<'  shift, and go to state 237

    '<'       [reduce using rule 591 (type_declaration)]
    $default  reduce using rule 591 (type_declaration)


State 169

  598 type_declaration: "lambda" .
  601                 | "lambda" . '<' $@50 type_declaration '>' $@51
  604                 | "lambda" . '<' $@52 optional_function_argument_list optional_function_type '>' $@53

    '<'  shift, and go to state 238

    '<'       [reduce using rule 598 (type_declaration)]
    $default  reduce using rule 598 (type_declaration)


State 170

  515 basic_type_declaration: "int8" .

    $default  reduce using rule 515 (basic_type_declaration)


State 171

  522 basic_type_declaration: "uint8" .

    $default  reduce using rule 522 (basic_type_declaration)


State 172

  516 basic_type_declaration: "int16" .

    $default  reduce using rule 516 (basic_type_declaration)


State 173

  523 basic_type_declaration: "uint16" .

    $default  reduce using rule 523 (basic_type_declaration)


State 174

  607 type_declaration: "tuple" . '<' $@54 tuple_type_list '>' $@55

    '<'  shift, and go to state 239


State 175

  610 type_declaration: "variant" . '<' $@56 variant_type_list '>' $@57

    '<'  shift, and go to state 240


State 176

  546 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 241


State 177

  543 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 543 (structure_type_declaration)


State 178

  554 type_declaration: basic_type_declaration .

    $default  reduce using rule 554 (type_declaration)


State 179

  557 type_declaration: structure_type_declaration .

    $default  reduce using rule 557 (type_declaration)


State 180

  555 type_declaration: auto_type_declaration .

    $default  reduce using rule 555 (type_declaration)


State 181

  556 type_declaration: bitfield_type_declaration .

    $default  reduce using rule 556 (type_declaration)


State 182

  483 single_alias: "name" $@29 '=' type_declaration .
  558 type_declaration: type_declaration . '[' expr ']'
  559                 | type_declaration . '[' ']'
  560                 | type_declaration . '-' '[' ']'
  561                 | type_declaration . "explicit"
  562                 | type_declaration . "const"
  563                 | type_declaration . '-' "const"
  564                 | type_declaration . '&'
  565                 | type_declaration . '-' '&'
  566                 | type_declaration . '#'
  567                 | type_declaration . "implicit"
  568                 | type_declaration . '-' '#'
  569                 | type_declaration . '=' "const"
  570                 | type_declaration . '?'
  574                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251

    $default  reduce using rule 483 (single_alias)


State 183

  485 alias_list: alias_list single_alias ';' .

    $default  reduce using rule 485 (alias_list)


State 184

  547 bitfield_bits: "name" .

    $default  reduce using rule 547 (bitfield_bits)


State 185

  548 bitfield_bits: bitfield_bits . ';' "name"
  615 bitfield_alias_declaration: "bitfield" $@60 "name" '{' bitfield_bits . ';' '}'

    ';'  shift, and go to state 252


State 186

  613 variant_alias_declaration: "variant" $@58 "name" $@59 '{' . variant_type_list ';' '}'

    "name"  shift, and go to state 253

    variant_type       go to state 254
    variant_type_list  go to state 255


State 187

   90 annotation_declaration: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 90 (annotation_declaration)


State 188

  101 function_name: "operator" . '!'
  102              | "operator" . '~'
  103              | "operator" . "+="
  104              | "operator" . "-="
  105              | "operator" . "*="
  106              | "operator" . "/="
  107              | "operator" . "%="
  108              | "operator" . "&="
  109              | "operator" . "|="
  110              | "operator" . "^="
  111              | "operator" . "&&="
  112              | "operator" . "||="
  113              | "operator" . "^^="
  114              | "operator" . "&&"
  115              | "operator" . "||"
  116              | "operator" . "^^"
  117              | "operator" . '+'
  118              | "operator" . '-'
  119              | "operator" . '*'
  120              | "operator" . '/'
  121              | "operator" . '%'
  122              | "operator" . '<'
  123              | "operator" . '>'
  124              | "operator" . ".."
  125              | "operator" . "=="
  126              | "operator" . "!="
  127              | "operator" . "<="
  128              | "operator" . ">="
  129              | "operator" . '&'
  130              | "operator" . '|'
  131              | "operator" . '^'
  134              | "operator" . "++"
  135              | "operator" . "--"
  136              | "operator" . "<<"
  137              | "operator" . ">>"
  138              | "operator" . "<<="
  139              | "operator" . ">>="
  140              | "operator" . "<<<"
  141              | "operator" . ">>>"
  142              | "operator" . "<<<="
  143              | "operator" . ">>>="
  144              | "operator" . '[' ']'
  145              | "operator" . "?[" ']'
  146              | "operator" . '.'
  147              | "operator" . "?."
  148              | "operator" . ":="
  149              | "operator" . "delete"
  150              | "operator" . "??"
  151              | "operator" . "is"
  152              | "operator" . "as"
  153              | "operator" . '?' "as"

    "is"      shift, and go to state 256
    "as"      shift, and go to state 257
    "delete"  shift, and go to state 258
    "+="      shift, and go to state 259
    "-="      shift, and go to state 260
    "/="      shift, and go to state 261
    "*="      shift, and go to state 262
    "%="      shift, and go to state 263
    "&="      shift, and go to state 264
    "|="      shift, and go to state 265
    "^="      shift, and go to state 266
    "<<"      shift, and go to state 267
    ">>"      shift, and go to state 268
    "++"      shift, and go to state 269
    "--"      shift, and go to state 270
    "<="      shift, and go to state 271
    "<<="     shift, and go to state 272
    ">>="     shift, and go to state 273
    ">="      shift, and go to state 274
    "=="      shift, and go to state 275
    "!="      shift, and go to state 276
    "??"      shift, and go to state 277
    "?."      shift, and go to state 278
    "?["      shift, and go to state 279
    ":="      shift, and go to state 280
    "<<<"     shift, and go to state 281
    ">>>"     shift, and go to state 282
    "<<<="    shift, and go to state 283
    ">>>="    shift, and go to state 284
    "&&"      shift, and go to state 285
    "||"      shift, and go to state 286
    "^^"      shift, and go to state 287
    "&&="     shift, and go to state 288
    "||="     shift, and go to state 289
    "^^="     shift, and go to state 290
    ".."      shift, and go to state 291
    '?'       shift, and go to state 292
    '|'       shift, and go to state 293
    '^'       shift, and go to state 294
    '&'       shift, and go to state 295
    '<'       shift, and go to state 296
    '>'       shift, and go to state 297
    '-'       shift, and go to state 298
    '+'       shift, and go to state 299
    '*'       shift, and go to state 300
    '/'       shift, and go to state 301
    '%'       shift, and go to state 302
    '~'       shift, and go to state 303
    '!'       shift, and go to state 304
    '.'       shift, and go to state 305
    '['       shift, and go to state 306


State 189

  154 function_name: "bool" .

    $default  reduce using rule 154 (function_name)


State 190

  155 function_name: "string" .

    $default  reduce using rule 155 (function_name)


State 191

  156 function_name: "int" .

    $default  reduce using rule 156 (function_name)


State 192

  157 function_name: "int2" .

    $default  reduce using rule 157 (function_name)


State 193

  158 function_name: "int3" .

    $default  reduce using rule 158 (function_name)


State 194

  159 function_name: "int4" .

    $default  reduce using rule 159 (function_name)


State 195

  160 function_name: "uint" .

    $default  reduce using rule 160 (function_name)


State 196

  161 function_name: "uint2" .

    $default  reduce using rule 161 (function_name)


State 197

  162 function_name: "uint3" .

    $default  reduce using rule 162 (function_name)


State 198

  163 function_name: "uint4" .

    $default  reduce using rule 163 (function_name)


State 199

  164 function_name: "float" .

    $default  reduce using rule 164 (function_name)


State 200

  165 function_name: "float2" .

    $default  reduce using rule 165 (function_name)


State 201

  166 function_name: "float3" .

    $default  reduce using rule 166 (function_name)


State 202

  167 function_name: "float4" .

    $default  reduce using rule 167 (function_name)


State 203

  168 function_name: "range" .

    $default  reduce using rule 168 (function_name)


State 204

  169 function_name: "urange" .

    $default  reduce using rule 169 (function_name)


State 205

  170 function_name: "int64" .

    $default  reduce using rule 170 (function_name)


State 206

  171 function_name: "uint64" .

    $default  reduce using rule 171 (function_name)


State 207

  172 function_name: "double" .

    $default  reduce using rule 172 (function_name)


State 208

  173 function_name: "int8" .

    $default  reduce using rule 173 (function_name)


State 209

  174 function_name: "uint8" .

    $default  reduce using rule 174 (function_name)


State 210

  175 function_name: "int16" .

    $default  reduce using rule 175 (function_name)


State 211

  176 function_name: "uint16" .

    $default  reduce using rule 176 (function_name)


State 212

  132 function_name: "++" . "operator"

    "operator"  shift, and go to state 307


State 213

  133 function_name: "--" . "operator"

    "operator"  shift, and go to state 308


State 214

  100 function_name: "name" .

    $default  reduce using rule 100 (function_name)


State 215

  181 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 309

    $default  reduce using rule 95 (optional_function_argument_list)

    optional_function_argument_list  go to state 310


State 216

  183 function_declaration: optional_public_or_private_function $@3 function_declaration_header . expression_block

    '{'  shift, and go to state 311

    expression_block  go to state 312


State 217

  493 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration '{' enum_list '}'

    "int"     shift, and go to state 313
    "uint"    shift, and go to state 314
    "int8"    shift, and go to state 315
    "uint8"   shift, and go to state 316
    "int16"   shift, and go to state 317
    "uint16"  shift, and go to state 318

    enum_basic_type_declaration  go to state 319


State 218

  492 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' . enum_list '}'

    $default  reduce using rule 479 (enum_list)

    enum_list  go to state 320


State 219

  497 optional_sealed: "sealed" .

    $default  reduce using rule 497 (optional_sealed)


State 220

  498 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 321


State 221

  506 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@30 structure_name . $@31 '{' struct_variable_declaration_list '}'

    $default  reduce using rule 505 ($@31)

    $@31  go to state 322


State 222

  470 global_variable_declaration_list: global_variable_declaration_list . $@27 optional_field_annotation let_variable_declaration
  476 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    '}'  shift, and go to state 323

    $default  reduce using rule 469 ($@27)

    $@27  go to state 324


State 223

  415 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 27
    "in"    shift, and go to state 28
    "name"  shift, and go to state 29

    annotation_argument_name  go to state 30
    annotation_argument       go to state 31
    annotation_argument_list  go to state 325


State 224

  478 global_let: kwd_let optional_shared optional_public_or_private_variable $@28 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 326
    "name"  shift, and go to state 327

    let_variable_name_with_pos_list  go to state 328
    let_variable_declaration         go to state 329


State 225

   22 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 22 (character_sequence)


State 226

   23 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 23 (character_sequence)


State 227

   24 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 24 (string_constant)


State 228

   72 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 132
    "false"                    shift, and go to state 133
    "integer constant"         shift, and go to state 134
    "floating point constant"  shift, and go to state 135
    "name"                     shift, and go to state 136
    "start of the string"      shift, and go to state 102

    string_constant            go to state 137
    annotation_argument_value  go to state 330


State 229

   83 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 83 (annotation_argument)


State 230

  577 type_declaration: "array" '<' . $@36 type_declaration '>' $@37

    $default  reduce using rule 575 ($@36)

    $@36  go to state 331


State 231

  580 type_declaration: "table" '<' . $@38 table_type_pair '>' $@39

    $default  reduce using rule 578 ($@38)

    $@38  go to state 332


State 232

  583 type_declaration: "iterator" '<' . $@40 type_declaration '>' $@41

    $default  reduce using rule 581 ($@40)

    $@40  go to state 333


State 233

  573 type_declaration: "smart_ptr" '<' . $@34 type_declaration '>' $@35

    $default  reduce using rule 571 ($@34)

    $@34  go to state 334


State 234

  545 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 335


State 235

  551 bitfield_type_declaration: "bitfield" '<' . $@32 bitfield_bits '>' $@33

    $default  reduce using rule 549 ($@32)

    $@32  go to state 336


State 236

  587 type_declaration: "block" '<' . $@42 type_declaration '>' $@43
  590                 | "block" '<' . $@44 optional_function_argument_list optional_function_type '>' $@45

    ':'       reduce using rule 588 ($@44)
    '>'       reduce using rule 588 ($@44)
    '('       reduce using rule 588 ($@44)
    $default  reduce using rule 585 ($@42)

    $@42  go to state 337
    $@44  go to state 338


State 237

  594 type_declaration: "function" '<' . $@46 type_declaration '>' $@47
  597                 | "function" '<' . $@48 optional_function_argument_list optional_function_type '>' $@49

    ':'       reduce using rule 595 ($@48)
    '>'       reduce using rule 595 ($@48)
    '('       reduce using rule 595 ($@48)
    $default  reduce using rule 592 ($@46)

    $@46  go to state 339
    $@48  go to state 340


State 238

  601 type_declaration: "lambda" '<' . $@50 type_declaration '>' $@51
  604                 | "lambda" '<' . $@52 optional_function_argument_list optional_function_type '>' $@53

    ':'       reduce using rule 602 ($@52)
    '>'       reduce using rule 602 ($@52)
    '('       reduce using rule 602 ($@52)
    $default  reduce using rule 599 ($@50)

    $@50  go to state 341
    $@52  go to state 342


State 239

  607 type_declaration: "tuple" '<' . $@54 tuple_type_list '>' $@55

    $default  reduce using rule 605 ($@54)

    $@54  go to state 343


State 240

  610 type_declaration: "variant" '<' . $@56 variant_type_list '>' $@57

    $default  reduce using rule 608 ($@56)

    $@56  go to state 344


State 241

  546 auto_type_declaration: "$t" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 401
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 242

  562 type_declaration: type_declaration "const" .

    $default  reduce using rule 562 (type_declaration)


State 243

  567 type_declaration: type_declaration "implicit" .

    $default  reduce using rule 567 (type_declaration)


State 244

  561 type_declaration: type_declaration "explicit" .

    $default  reduce using rule 561 (type_declaration)


State 245

  574 type_declaration: type_declaration "??" .

    $default  reduce using rule 574 (type_declaration)


State 246

  569 type_declaration: type_declaration '=' . "const"

    "const"  shift, and go to state 409


State 247

  570 type_declaration: type_declaration '?' .

    $default  reduce using rule 570 (type_declaration)


State 248

  564 type_declaration: type_declaration '&' .

    $default  reduce using rule 564 (type_declaration)


State 249

  560 type_declaration: type_declaration '-' . '[' ']'
  563                 | type_declaration '-' . "const"
  565                 | type_declaration '-' . '&'
  568                 | type_declaration '-' . '#'

    "const"  shift, and go to state 410
    '&'      shift, and go to state 411
    '['      shift, and go to state 412
    '#'      shift, and go to state 413


State 250

  558 type_declaration: type_declaration '[' . expr ']'
  559                 | type_declaration '[' . ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    ']'                               shift, and go to state 414
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 415
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 251

  566 type_declaration: type_declaration '#' .

    $default  reduce using rule 566 (type_declaration)


State 252

  548 bitfield_bits: bitfield_bits ';' . "name"
  615 bitfield_alias_declaration: "bitfield" $@60 "name" '{' bitfield_bits ';' . '}'

    "name"  shift, and go to state 416
    '}'     shift, and go to state 417


State 253

  442 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 418


State 254

  443 variant_type_list: variant_type .

    $default  reduce using rule 443 (variant_type_list)


State 255

  444 variant_type_list: variant_type_list . ';' variant_type
  613 variant_alias_declaration: "variant" $@58 "name" $@59 '{' variant_type_list . ';' '}'

    ';'  shift, and go to state 419


State 256

  151 function_name: "operator" "is" .

    $default  reduce using rule 151 (function_name)


State 257

  152 function_name: "operator" "as" .

    $default  reduce using rule 152 (function_name)


State 258

  149 function_name: "operator" "delete" .

    $default  reduce using rule 149 (function_name)


State 259

  103 function_name: "operator" "+=" .

    $default  reduce using rule 103 (function_name)


State 260

  104 function_name: "operator" "-=" .

    $default  reduce using rule 104 (function_name)


State 261

  106 function_name: "operator" "/=" .

    $default  reduce using rule 106 (function_name)


State 262

  105 function_name: "operator" "*=" .

    $default  reduce using rule 105 (function_name)


State 263

  107 function_name: "operator" "%=" .

    $default  reduce using rule 107 (function_name)


State 264

  108 function_name: "operator" "&=" .

    $default  reduce using rule 108 (function_name)


State 265

  109 function_name: "operator" "|=" .

    $default  reduce using rule 109 (function_name)


State 266

  110 function_name: "operator" "^=" .

    $default  reduce using rule 110 (function_name)


State 267

  136 function_name: "operator" "<<" .

    $default  reduce using rule 136 (function_name)


State 268

  137 function_name: "operator" ">>" .

    $default  reduce using rule 137 (function_name)


State 269

  134 function_name: "operator" "++" .

    $default  reduce using rule 134 (function_name)


State 270

  135 function_name: "operator" "--" .

    $default  reduce using rule 135 (function_name)


State 271

  127 function_name: "operator" "<=" .

    $default  reduce using rule 127 (function_name)


State 272

  138 function_name: "operator" "<<=" .

    $default  reduce using rule 138 (function_name)


State 273

  139 function_name: "operator" ">>=" .

    $default  reduce using rule 139 (function_name)


State 274

  128 function_name: "operator" ">=" .

    $default  reduce using rule 128 (function_name)


State 275

  125 function_name: "operator" "==" .

    $default  reduce using rule 125 (function_name)


State 276

  126 function_name: "operator" "!=" .

    $default  reduce using rule 126 (function_name)


State 277

  150 function_name: "operator" "??" .

    $default  reduce using rule 150 (function_name)


State 278

  147 function_name: "operator" "?." .

    $default  reduce using rule 147 (function_name)


State 279

  145 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 420


State 280

  148 function_name: "operator" ":=" .

    $default  reduce using rule 148 (function_name)


State 281

  140 function_name: "operator" "<<<" .

    $default  reduce using rule 140 (function_name)


State 282

  141 function_name: "operator" ">>>" .

    $default  reduce using rule 141 (function_name)


State 283

  142 function_name: "operator" "<<<=" .

    $default  reduce using rule 142 (function_name)


State 284

  143 function_name: "operator" ">>>=" .

    $default  reduce using rule 143 (function_name)


State 285

  114 function_name: "operator" "&&" .

    $default  reduce using rule 114 (function_name)


State 286

  115 function_name: "operator" "||" .

    $default  reduce using rule 115 (function_name)


State 287

  116 function_name: "operator" "^^" .

    $default  reduce using rule 116 (function_name)


State 288

  111 function_name: "operator" "&&=" .

    $default  reduce using rule 111 (function_name)


State 289

  112 function_name: "operator" "||=" .

    $default  reduce using rule 112 (function_name)


State 290

  113 function_name: "operator" "^^=" .

    $default  reduce using rule 113 (function_name)


State 291

  124 function_name: "operator" ".." .

    $default  reduce using rule 124 (function_name)


State 292

  153 function_name: "operator" '?' . "as"

    "as"  shift, and go to state 421


State 293

  130 function_name: "operator" '|' .

    $default  reduce using rule 130 (function_name)


State 294

  131 function_name: "operator" '^' .

    $default  reduce using rule 131 (function_name)


State 295

  129 function_name: "operator" '&' .

    $default  reduce using rule 129 (function_name)


State 296

  122 function_name: "operator" '<' .

    $default  reduce using rule 122 (function_name)


State 297

  123 function_name: "operator" '>' .

    $default  reduce using rule 123 (function_name)


State 298

  118 function_name: "operator" '-' .

    $default  reduce using rule 118 (function_name)


State 299

  117 function_name: "operator" '+' .

    $default  reduce using rule 117 (function_name)


State 300

  119 function_name: "operator" '*' .

    $default  reduce using rule 119 (function_name)


State 301

  120 function_name: "operator" '/' .

    $default  reduce using rule 120 (function_name)


State 302

  121 function_name: "operator" '%' .

    $default  reduce using rule 121 (function_name)


State 303

  102 function_name: "operator" '~' .

    $default  reduce using rule 102 (function_name)


State 304

  101 function_name: "operator" '!' .

    $default  reduce using rule 101 (function_name)


State 305

  146 function_name: "operator" '.' .

    $default  reduce using rule 146 (function_name)


State 306

  144 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 422


State 307

  132 function_name: "++" "operator" .

    $default  reduce using rule 132 (function_name)


State 308

  133 function_name: "--" "operator" .

    $default  reduce using rule 133 (function_name)


State 309

   96 optional_function_argument_list: '(' . ')'
   97                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 423
    "[["  shift, and go to state 223
    ')'   shift, and go to state 424

    $default  reduce using rule 414 (optional_field_annotation)

    optional_field_annotation      go to state 425
    function_argument_declaration  go to state 426
    function_argument_list         go to state 427


State 310

  181 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 428

    $default  reduce using rule 98 (optional_function_type)

    optional_function_type  go to state 429


State 311

  184 expression_block: '{' . expressions '}'
  185                 | '{' . expressions '}' "finally" '{' expressions '}'

    $default  reduce using rule 206 (expressions)

    expressions  go to state 430


State 312

  183 function_declaration: optional_public_or_private_function $@3 function_declaration_header expression_block .

    $default  reduce using rule 183 (function_declaration)


State 313

  537 enum_basic_type_declaration: "int" .

    $default  reduce using rule 537 (enum_basic_type_declaration)


State 314

  540 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 540 (enum_basic_type_declaration)


State 315

  538 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 538 (enum_basic_type_declaration)


State 316

  541 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 541 (enum_basic_type_declaration)


State 317

  539 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 539 (enum_basic_type_declaration)


State 318

  542 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 542 (enum_basic_type_declaration)


State 319

  493 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . '{' enum_list '}'

    '{'  shift, and go to state 431


State 320

  480 enum_list: enum_list . "name" ';'
  481          | enum_list . "name" '=' expr ';'
  492 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' enum_list . '}'

    "name"  shift, and go to state 432
    '}'     shift, and go to state 433


State 321

  498 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 434

    $default  reduce using rule 494 (optional_structure_parent)

    optional_structure_parent  go to state 435


State 322

  506 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@30 structure_name $@31 . '{' struct_variable_declaration_list '}'

    '{'  shift, and go to state 436


State 323

  476 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 476 (global_let)


State 324

  470 global_variable_declaration_list: global_variable_declaration_list $@27 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 223

    $default  reduce using rule 414 (optional_field_annotation)

    optional_field_annotation  go to state 437


State 325

   85 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  415 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 64
    ']'  shift, and go to state 438


State 326

  459 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 439


State 327

  458 let_variable_name_with_pos_list: "name" .
  460                                | "name" . "aka" "name"

    "aka"  shift, and go to state 440

    $default  reduce using rule 458 (let_variable_name_with_pos_list)


State 328

  461 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  462                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  463 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration ';'
  464                         | let_variable_name_with_pos_list . ':' type_declaration copy_or_move_or_clone expr ';'
  465                         | let_variable_name_with_pos_list . ':' type_declaration copy_or_move_or_clone expr_pipe
  466                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr ';'
  467                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 441
    ':'  shift, and go to state 442
    '&'  shift, and go to state 443

    $default  reduce using rule 456 (optional_ref)

    optional_ref  go to state 444


State 329

  478 global_let: kwd_let optional_shared optional_public_or_private_variable $@28 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 478 (global_let)


State 330

   72 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 72 (annotation_argument_value_list)


State 331

  577 type_declaration: "array" '<' $@36 . type_declaration '>' $@37

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 445


State 332

  580 type_declaration: "table" '<' $@38 . table_type_pair '>' $@39

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    table_type_pair             go to state 446
    type_declaration            go to state 447


State 333

  583 type_declaration: "iterator" '<' $@40 . type_declaration '>' $@41

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 448


State 334

  573 type_declaration: "smart_ptr" '<' $@34 . type_declaration '>' $@35

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 449


State 335

  545 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 450


State 336

  551 bitfield_type_declaration: "bitfield" '<' $@32 . bitfield_bits '>' $@33

    "name"  shift, and go to state 184

    bitfield_bits  go to state 451


State 337

  587 type_declaration: "block" '<' $@42 . type_declaration '>' $@43

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 452


State 338

  590 type_declaration: "block" '<' $@44 . optional_function_argument_list optional_function_type '>' $@45

    '('  shift, and go to state 309

    $default  reduce using rule 95 (optional_function_argument_list)

    optional_function_argument_list  go to state 453


State 339

  594 type_declaration: "function" '<' $@46 . type_declaration '>' $@47

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 454


State 340

  597 type_declaration: "function" '<' $@48 . optional_function_argument_list optional_function_type '>' $@49

    '('  shift, and go to state 309

    $default  reduce using rule 95 (optional_function_argument_list)

    optional_function_argument_list  go to state 455


State 341

  601 type_declaration: "lambda" '<' $@50 . type_declaration '>' $@51

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 456


State 342

  604 type_declaration: "lambda" '<' $@52 . optional_function_argument_list optional_function_type '>' $@53

    '('  shift, and go to state 309

    $default  reduce using rule 95 (optional_function_argument_list)

    optional_function_argument_list  go to state 457


State 343

  607 type_declaration: "tuple" '<' $@54 . tuple_type_list '>' $@55

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 458

    name_in_namespace           go to state 177
    tuple_type                  go to state 459
    tuple_type_list             go to state 460
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 461


State 344

  610 type_declaration: "variant" '<' $@56 . variant_type_list '>' $@57

    "name"  shift, and go to state 253

    variant_type       go to state 254
    variant_type_list  go to state 462


State 345

  320 expr: "true" .

    $default  reduce using rule 320 (expr)


State 346

  321 expr: "false" .

    $default  reduce using rule 321 (expr)


State 347

  216 expr_new: "new" . type_declaration
  217         | "new" . type_declaration '(' ')'
  218         | "new" . type_declaration '(' expr_list ')'
  219         | "new" . make_decl

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "[["         shift, and go to state 367
    "[{"         shift, and go to state 368
    "{{"         shift, and go to state 369
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 463
    make_decl                   go to state 464
    make_struct_decl            go to state 405
    make_dim_decl               go to state 406
    make_table_decl             go to state 407
    array_comprehension         go to state 408


State 348

  247 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  248               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  249               | "typeinfo" . '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

    '('  shift, and go to state 465


State 349

  246 expr_type_decl: "type" . '<' $@10 type_declaration '>' $@11

    '<'  shift, and go to state 466


State 350

  314 expr: "null" .

    $default  reduce using rule 314 (expr)


State 351

  367 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 467


State 352

  237 expr_cast: "cast" . '<' $@4 type_declaration '>' $@5 expr

    '<'  shift, and go to state 468


State 353

  240 expr_cast: "upcast" . '<' $@6 type_declaration '>' $@7 expr

    '<'  shift, and go to state 469


State 354

  368 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 470


State 355

  243 expr_cast: "reinterpret" . '<' $@8 type_declaration '>' $@9 expr

    '<'  shift, and go to state 471


State 356

  398 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 472


State 357

  536 basic_type_declaration: "bitfield" .

    $default  reduce using rule 536 (basic_type_declaration)


State 358

  369 expr: "generator" . '<' type_declaration '>' optional_capture_list '(' ')'
  370     | "generator" . '<' type_declaration '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 473


State 359

  350 expr: "++" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 474
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 360

  351 expr: "--" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 475
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 361

  399 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 476


State 362

  400 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 477


State 363

  401 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 478


State 364

  402 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 479


State 365

  403 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 480


State 366

  404 expr_mtag: "$c" . '(' expr ')' '(' ')'
  405          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 481


State 367

  628 make_struct_decl: "[[" . type_declaration make_struct_dim optional_block ']' ']'
  629                 | "[[" . type_declaration optional_block ']' ']'
  630                 | "[[" . type_declaration '(' ')' optional_block ']' ']'
  631                 | "[[" . type_declaration '(' ')' make_struct_dim optional_block ']' ']'
  642 make_dim_decl: "[[" . type_declaration make_dim ']' ']'
  649 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 482
    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 483


State 368

  632 make_struct_decl: "[{" . type_declaration make_struct_dim optional_block '}' ']'
  633                 | "[{" . type_declaration '(' ')' make_struct_dim optional_block '}' ']'
  643 make_dim_decl: "[{" . type_declaration make_dim '}' ']'
  650 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "for"        shift, and go to state 484
    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 485


State 369

  646 make_table_decl: "{{" . make_table '}' '}'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 486
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_map_tuple          go to state 487
    make_dim_decl           go to state 406
    make_table              go to state 488
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 370

  268 expr_numeric_const: "integer constant" .

    $default  reduce using rule 268 (expr_numeric_const)


State 371

  270 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 270 (expr_numeric_const)


State 372

  269 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 269 (expr_numeric_const)


State 373

  271 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 271 (expr_numeric_const)


State 374

  272 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 272 (expr_numeric_const)


State 375

  273 expr_numeric_const: "double constant" .

    $default  reduce using rule 273 (expr_numeric_const)


State 376

   28 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 25 (string_builder_body)

    string_builder_body  go to state 489


State 377

  327 expr: '-' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 490
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 378

  326 expr: '+' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 491
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 379

  366 expr: '*' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 492
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 380

   32 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 50
    "name"  shift, and go to state 51

    name_in_namespace  go to state 493


State 381

  325 expr: '~' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 494
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 382

  324 expr: '!' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 495
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 383

  354 expr: '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 496
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 384

  255 block_or_lambda: '$' .

    $default  reduce using rule 255 (block_or_lambda)


State 385

  256 block_or_lambda: '@' .
  257                | '@' . '@'
  302 func_addr_expr: '@' . '@' func_addr_name
  305               | '@' . '@' '<' $@12 type_declaration '>' $@13 func_addr_name
  308               | '@' . '@' '<' $@14 optional_function_argument_list optional_function_type '>' $@15 func_addr_name
  413 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 497

    $default  reduce using rule 256 (block_or_lambda)


State 386

  318 expr: string_builder .

    $default  reduce using rule 318 (expr)


State 387

  317 expr: expr_reader .

    $default  reduce using rule 317 (expr)


State 388

  266 expr_block: expression_block .

    $default  reduce using rule 266 (expr_block)


State 389

  297 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  315 expr: name_in_namespace .
  362     | name_in_namespace . '(' ')'
  363     | name_in_namespace . '(' expr_list ')'
  397     | name_in_namespace . "name"

    "name"  shift, and go to state 498
    '('     shift, and go to state 499

    "name"    [reduce using rule 315 (expr)]
    '('       [reduce using rule 315 (expr)]
    $default  reduce using rule 315 (expr)


State 390

  391 expr: expr_new .

    $default  reduce using rule 391 (expr)


State 391

  390 expr: expr_cast .

    $default  reduce using rule 390 (expr)


State 392

  389 expr: expr_type_decl .

    $default  reduce using rule 389 (expr)


State 393

  388 expr: expr_type_info .

    $default  reduce using rule 388 (expr)


State 394

  267 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 12

    $default  reduce using rule 93 (optional_annotation_list)

    optional_annotation_list  go to state 500


State 395

  394 expr: expr_block .

    $default  reduce using rule 394 (expr)


State 396

  316 expr: expr_numeric_const .

    $default  reduce using rule 316 (expr)


State 397

  393 expr: expr_named_call .

    $default  reduce using rule 393 (expr)


State 398

  392 expr: expr_method_call .

    $default  reduce using rule 392 (expr)


State 399

  361 expr: func_addr_expr .

    $default  reduce using rule 361 (expr)


State 400

  322 expr: expr_field .

    $default  reduce using rule 322 (expr)


State 401

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'
  546 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 536


State 402

  323 expr: expr_mtag .

    $default  reduce using rule 323 (expr)


State 403

  364 expr: basic_type_declaration . '(' ')'
  365     | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 537


State 404

  319 expr: make_decl .

    $default  reduce using rule 319 (expr)


State 405

  616 make_decl: make_struct_decl .

    $default  reduce using rule 616 (make_decl)


State 406

  617 make_decl: make_dim_decl .

    $default  reduce using rule 617 (make_decl)


State 407

  618 make_decl: make_table_decl .

    $default  reduce using rule 618 (make_decl)


State 408

  619 make_decl: array_comprehension .

    $default  reduce using rule 619 (make_decl)


State 409

  569 type_declaration: type_declaration '=' "const" .

    $default  reduce using rule 569 (type_declaration)


State 410

  563 type_declaration: type_declaration '-' "const" .

    $default  reduce using rule 563 (type_declaration)


State 411

  565 type_declaration: type_declaration '-' '&' .

    $default  reduce using rule 565 (type_declaration)


State 412

  560 type_declaration: type_declaration '-' '[' . ']'

    ']'  shift, and go to state 538


State 413

  568 type_declaration: type_declaration '-' '#' .

    $default  reduce using rule 568 (type_declaration)


State 414

  559 type_declaration: type_declaration '[' ']' .

    $default  reduce using rule 559 (type_declaration)


State 415

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'
  558 type_declaration: type_declaration '[' expr . ']'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ']'    shift, and go to state 539


State 416

  548 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 548 (bitfield_bits)


State 417

  615 bitfield_alias_declaration: "bitfield" $@60 "name" '{' bitfield_bits ';' '}' .

    $default  reduce using rule 615 (bitfield_alias_declaration)


State 418

  442 variant_type: "name" ':' . type_declaration

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 540


State 419

  444 variant_type_list: variant_type_list ';' . variant_type
  613 variant_alias_declaration: "variant" $@58 "name" $@59 '{' variant_type_list ';' . '}'

    "name"  shift, and go to state 253
    '}'     shift, and go to state 541

    variant_type  go to state 542


State 420

  145 function_name: "operator" "?[" ']' .

    $default  reduce using rule 145 (function_name)


State 421

  153 function_name: "operator" '?' "as" .

    $default  reduce using rule 153 (function_name)


State 422

  144 function_name: "operator" '[' ']' .

    $default  reduce using rule 144 (function_name)


State 423

  435 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 543


State 424

   96 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 96 (optional_function_argument_list)


State 425

  433 function_argument_declaration: optional_field_annotation . variable_declaration
  434                              | optional_field_annotation . "var" variable_declaration

    "var"   shift, and go to state 544
    "$i"    shift, and go to state 545
    "name"  shift, and go to state 546

    variable_declaration         go to state 547
    variable_name_with_pos_list  go to state 548


State 426

  436 function_argument_list: function_argument_declaration .

    $default  reduce using rule 436 (function_argument_list)


State 427

   97 optional_function_argument_list: '(' function_argument_list . ')'
  437 function_argument_list: function_argument_list . ';' function_argument_declaration

    ')'  shift, and go to state 549
    ';'  shift, and go to state 550


State 428

   99 optional_function_type: ':' . type_declaration

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 551


State 429

  181 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 181 (function_declaration_header)


State 430

  184 expression_block: '{' expressions . '}'
  185                 | '{' expressions . '}' "finally" '{' expressions '}'
  207 expressions: expressions . expression_any
  208            | expressions . error

    error                             shift, and go to state 552
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 553
    "if"                              shift, and go to state 554
    "static_if"                       shift, and go to state 555
    "for"                             shift, and go to state 556
    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "return"                          shift, and go to state 557
    "null"                            shift, and go to state 350
    "break"                           shift, and go to state 558
    "try"                             shift, and go to state 559
    "delete"                          shift, and go to state 560
    "deref"                           shift, and go to state 351
    "with"                            shift, and go to state 561
    "assume"                          shift, and go to state 562
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 354
    "continue"                        shift, and go to state 563
    "pass"                            shift, and go to state 564
    "reinterpret"                     shift, and go to state 355
    "label"                           shift, and go to state 565
    "goto"                            shift, and go to state 566
    "unsafe"                          shift, and go to state 567
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "yield"                           shift, and go to state 568
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "@ <|"                            shift, and go to state 569
    "@@ <|"                           shift, and go to state 570
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    ';'                               shift, and go to state 571
    '{'                               shift, and go to state 311
    '}'                               shift, and go to state 572

    string_builder           go to state 386
    expr_reader              go to state 387
    expression_label         go to state 573
    expression_goto          go to state 574
    if_or_static_if          go to state 575
    expression_if_then_else  go to state 576
    expression_for_loop      go to state 577
    expression_unsafe        go to state 578
    expression_while_loop    go to state 579
    expression_with          go to state 580
    expression_with_alias    go to state 581
    expression_block         go to state 388
    expression_any           go to state 582
    expr_pipe                go to state 583
    name_in_namespace        go to state 389
    expression_delete        go to state 584
    expr_new                 go to state 390
    expression_break         go to state 585
    expression_continue      go to state 586
    expression_return        go to state 587
    expression_yield         go to state 588
    expression_try_catch     go to state 589
    kwd_let                  go to state 590
    expression_let           go to state 591
    expr_cast                go to state 391
    expr_type_decl           go to state 392
    expr_type_info           go to state 393
    block_or_lambda          go to state 394
    expr_block               go to state 395
    expr_numeric_const       go to state 396
    expr_assign              go to state 592
    expr_assign_pipe         go to state 593
    expr_named_call          go to state 397
    expr_method_call         go to state 398
    func_addr_expr           go to state 399
    expr_field               go to state 400
    expr                     go to state 594
    expr_mtag                go to state 402
    basic_type_declaration   go to state 403
    make_decl                go to state 404
    make_struct_decl         go to state 405
    make_dim_decl            go to state 406
    make_table_decl          go to state 407
    array_comprehension      go to state 408


State 431

  493 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' . enum_list '}'

    $default  reduce using rule 479 (enum_list)

    enum_list  go to state 595


State 432

  480 enum_list: enum_list "name" . ';'
  481          | enum_list "name" . '=' expr ';'

    '='  shift, and go to state 596
    ';'  shift, and go to state 597


State 433

  492 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' enum_list '}' .

    $default  reduce using rule 492 (enum_declaration)


State 434

  495 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 50
    "name"  shift, and go to state 51

    name_in_namespace  go to state 598


State 435

  498 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 498 (structure_name)


State 436

  506 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@30 structure_name $@31 '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 425 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 599


State 437

  470 global_variable_declaration_list: global_variable_declaration_list $@27 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 326
    "name"  shift, and go to state 327

    let_variable_name_with_pos_list  go to state 328
    let_variable_declaration         go to state 600


State 438

  415 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 601


State 439

  459 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 602
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 440

  460 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 603


State 441

  461 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  462                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 604


State 442

  463 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration ';'
  464                         | let_variable_name_with_pos_list ':' . type_declaration copy_or_move_or_clone expr ';'
  465                         | let_variable_name_with_pos_list ':' . type_declaration copy_or_move_or_clone expr_pipe

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 605


State 443

  457 optional_ref: '&' .

    $default  reduce using rule 457 (optional_ref)


State 444

  466 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr ';'
  467                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 606
    ":="  shift, and go to state 607
    '='   shift, and go to state 608

    copy_or_move_or_clone  go to state 609


State 445

  558 type_declaration: type_declaration . '[' expr ']'
  559                 | type_declaration . '[' ']'
  560                 | type_declaration . '-' '[' ']'
  561                 | type_declaration . "explicit"
  562                 | type_declaration . "const"
  563                 | type_declaration . '-' "const"
  564                 | type_declaration . '&'
  565                 | type_declaration . '-' '&'
  566                 | type_declaration . '#'
  567                 | type_declaration . "implicit"
  568                 | type_declaration . '-' '#'
  569                 | type_declaration . '=' "const"
  570                 | type_declaration . '?'
  574                 | type_declaration . "??"
  577                 | "array" '<' $@36 type_declaration . '>' $@37

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 610
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 446

  580 type_declaration: "table" '<' $@38 table_type_pair . '>' $@39

    '>'  shift, and go to state 611


State 447

  552 table_type_pair: type_declaration .
  553                | type_declaration . ';' type_declaration
  558 type_declaration: type_declaration . '[' expr ']'
  559                 | type_declaration . '[' ']'
  560                 | type_declaration . '-' '[' ']'
  561                 | type_declaration . "explicit"
  562                 | type_declaration . "const"
  563                 | type_declaration . '-' "const"
  564                 | type_declaration . '&'
  565                 | type_declaration . '-' '&'
  566                 | type_declaration . '#'
  567                 | type_declaration . "implicit"
  568                 | type_declaration . '-' '#'
  569                 | type_declaration . '=' "const"
  570                 | type_declaration . '?'
  574                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    ';'         shift, and go to state 612
    '#'         shift, and go to state 251

    $default  reduce using rule 552 (table_type_pair)


State 448

  558 type_declaration: type_declaration . '[' expr ']'
  559                 | type_declaration . '[' ']'
  560                 | type_declaration . '-' '[' ']'
  561                 | type_declaration . "explicit"
  562                 | type_declaration . "const"
  563                 | type_declaration . '-' "const"
  564                 | type_declaration . '&'
  565                 | type_declaration . '-' '&'
  566                 | type_declaration . '#'
  567                 | type_declaration . "implicit"
  568                 | type_declaration . '-' '#'
  569                 | type_declaration . '=' "const"
  570                 | type_declaration . '?'
  574                 | type_declaration . "??"
  583                 | "iterator" '<' $@40 type_declaration . '>' $@41

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 613
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 449

  558 type_declaration: type_declaration . '[' expr ']'
  559                 | type_declaration . '[' ']'
  560                 | type_declaration . '-' '[' ']'
  561                 | type_declaration . "explicit"
  562                 | type_declaration . "const"
  563                 | type_declaration . '-' "const"
  564                 | type_declaration . '&'
  565                 | type_declaration . '-' '&'
  566                 | type_declaration . '#'
  567                 | type_declaration . "implicit"
  568                 | type_declaration . '-' '#'
  569                 | type_declaration . '=' "const"
  570                 | type_declaration . '?'
  573                 | "smart_ptr" '<' $@34 type_declaration . '>' $@35
  574                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 614
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 450

  545 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 545 (auto_type_declaration)


State 451

  548 bitfield_bits: bitfield_bits . ';' "name"
  551 bitfield_type_declaration: "bitfield" '<' $@32 bitfield_bits . '>' $@33

    '>'  shift, and go to state 615
    ';'  shift, and go to state 616


State 452

  558 type_declaration: type_declaration . '[' expr ']'
  559                 | type_declaration . '[' ']'
  560                 | type_declaration . '-' '[' ']'
  561                 | type_declaration . "explicit"
  562                 | type_declaration . "const"
  563                 | type_declaration . '-' "const"
  564                 | type_declaration . '&'
  565                 | type_declaration . '-' '&'
  566                 | type_declaration . '#'
  567                 | type_declaration . "implicit"
  568                 | type_declaration . '-' '#'
  569                 | type_declaration . '=' "const"
  570                 | type_declaration . '?'
  574                 | type_declaration . "??"
  587                 | "block" '<' $@42 type_declaration . '>' $@43

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 617
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 453

  590 type_declaration: "block" '<' $@44 optional_function_argument_list . optional_function_type '>' $@45

    ':'  shift, and go to state 428

    $default  reduce using rule 98 (optional_function_type)

    optional_function_type  go to state 618


State 454

  558 type_declaration: type_declaration . '[' expr ']'
  559                 | type_declaration . '[' ']'
  560                 | type_declaration . '-' '[' ']'
  561                 | type_declaration . "explicit"
  562                 | type_declaration . "const"
  563                 | type_declaration . '-' "const"
  564                 | type_declaration . '&'
  565                 | type_declaration . '-' '&'
  566                 | type_declaration . '#'
  567                 | type_declaration . "implicit"
  568                 | type_declaration . '-' '#'
  569                 | type_declaration . '=' "const"
  570                 | type_declaration . '?'
  574                 | type_declaration . "??"
  594                 | "function" '<' $@46 type_declaration . '>' $@47

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 619
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 455

  597 type_declaration: "function" '<' $@48 optional_function_argument_list . optional_function_type '>' $@49

    ':'  shift, and go to state 428

    $default  reduce using rule 98 (optional_function_type)

    optional_function_type  go to state 620


State 456

  558 type_declaration: type_declaration . '[' expr ']'
  559                 | type_declaration . '[' ']'
  560                 | type_declaration . '-' '[' ']'
  561                 | type_declaration . "explicit"
  562                 | type_declaration . "const"
  563                 | type_declaration . '-' "const"
  564                 | type_declaration . '&'
  565                 | type_declaration . '-' '&'
  566                 | type_declaration . '#'
  567                 | type_declaration . "implicit"
  568                 | type_declaration . '-' '#'
  569                 | type_declaration . '=' "const"
  570                 | type_declaration . '?'
  574                 | type_declaration . "??"
  601                 | "lambda" '<' $@50 type_declaration . '>' $@51

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 621
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 457

  604 type_declaration: "lambda" '<' $@52 optional_function_argument_list . optional_function_type '>' $@53

    ':'  shift, and go to state 428

    $default  reduce using rule 98 (optional_function_type)

    optional_function_type  go to state 622


State 458

  212 name_in_namespace: "name" .
  213                  | "name" . "::" "name"
  439 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 80
    ':'   shift, and go to state 623

    $default  reduce using rule 212 (name_in_namespace)


State 459

  440 tuple_type_list: tuple_type .

    $default  reduce using rule 440 (tuple_type_list)


State 460

  441 tuple_type_list: tuple_type_list . ';' tuple_type
  607 type_declaration: "tuple" '<' $@54 tuple_type_list . '>' $@55

    '>'  shift, and go to state 624
    ';'  shift, and go to state 625


State 461

  438 tuple_type: type_declaration .
  558 type_declaration: type_declaration . '[' expr ']'
  559                 | type_declaration . '[' ']'
  560                 | type_declaration . '-' '[' ']'
  561                 | type_declaration . "explicit"
  562                 | type_declaration . "const"
  563                 | type_declaration . '-' "const"
  564                 | type_declaration . '&'
  565                 | type_declaration . '-' '&'
  566                 | type_declaration . '#'
  567                 | type_declaration . "implicit"
  568                 | type_declaration . '-' '#'
  569                 | type_declaration . '=' "const"
  570                 | type_declaration . '?'
  574                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251

    $default  reduce using rule 438 (tuple_type)


State 462

  444 variant_type_list: variant_type_list . ';' variant_type
  610 type_declaration: "variant" '<' $@56 variant_type_list . '>' $@57

    '>'  shift, and go to state 626
    ';'  shift, and go to state 627


State 463

  216 expr_new: "new" type_declaration .
  217         | "new" type_declaration . '(' ')'
  218         | "new" type_declaration . '(' expr_list ')'
  558 type_declaration: type_declaration . '[' expr ']'
  559                 | type_declaration . '[' ']'
  560                 | type_declaration . '-' '[' ']'
  561                 | type_declaration . "explicit"
  562                 | type_declaration . "const"
  563                 | type_declaration . '-' "const"
  564                 | type_declaration . '&'
  565                 | type_declaration . '-' '&'
  566                 | type_declaration . '#'
  567                 | type_declaration . "implicit"
  568                 | type_declaration . '-' '#'
  569                 | type_declaration . '=' "const"
  570                 | type_declaration . '?'
  574                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '('         shift, and go to state 628
    '#'         shift, and go to state 251

    "??"      [reduce using rule 216 (expr_new)]
    '='       [reduce using rule 216 (expr_new)]
    '?'       [reduce using rule 216 (expr_new)]
    '&'       [reduce using rule 216 (expr_new)]
    '-'       [reduce using rule 216 (expr_new)]
    '['       [reduce using rule 216 (expr_new)]
    '('       [reduce using rule 216 (expr_new)]
    $default  reduce using rule 216 (expr_new)


State 464

  219 expr_new: "new" make_decl .

    $default  reduce using rule 219 (expr_new)


State 465

  247 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  248               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  249               | "typeinfo" '(' . name_in_namespace '<' "name" ';' "name" '>' expr ')'

    "::"    shift, and go to state 50
    "name"  shift, and go to state 51

    name_in_namespace  go to state 629


State 466

  246 expr_type_decl: "type" '<' . $@10 type_declaration '>' $@11

    $default  reduce using rule 244 ($@10)

    $@10  go to state 630


State 467

  367 expr: "deref" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 631
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 468

  237 expr_cast: "cast" '<' . $@4 type_declaration '>' $@5 expr

    $default  reduce using rule 235 ($@4)

    $@4  go to state 632


State 469

  240 expr_cast: "upcast" '<' . $@6 type_declaration '>' $@7 expr

    $default  reduce using rule 238 ($@6)

    $@6  go to state 633


State 470

  368 expr: "addr" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 634
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 471

  243 expr_cast: "reinterpret" '<' . $@8 type_declaration '>' $@9 expr

    $default  reduce using rule 241 ($@8)

    $@8  go to state 635


State 472

  398 expr: "unsafe" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 636
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 473

  369 expr: "generator" '<' . type_declaration '>' optional_capture_list '(' ')'
  370     | "generator" '<' . type_declaration '>' optional_capture_list '(' expr ')'

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 637


State 474

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  350     | "++" expr .
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 350 (expr)


State 475

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  351     | "--" expr .
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 351 (expr)


State 476

  399 expr_mtag: "$$" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 638
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 477

  400 expr_mtag: "$i" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 639
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 478

  401 expr_mtag: "$v" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 640
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 479

  402 expr_mtag: "$b" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 641
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 480

  403 expr_mtag: "$a" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 642
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 481

  404 expr_mtag: "$c" '(' . expr ')' '(' ')'
  405          | "$c" '(' . expr ')' '(' expr_list ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 643
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 482

  649 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 545
    "name"  shift, and go to state 546

    variable_name_with_pos_list  go to state 644


State 483

  558 type_declaration: type_declaration . '[' expr ']'
  559                 | type_declaration . '[' ']'
  560                 | type_declaration . '-' '[' ']'
  561                 | type_declaration . "explicit"
  562                 | type_declaration . "const"
  563                 | type_declaration . '-' "const"
  564                 | type_declaration . '&'
  565                 | type_declaration . '-' '&'
  566                 | type_declaration . '#'
  567                 | type_declaration . "implicit"
  568                 | type_declaration . '-' '#'
  569                 | type_declaration . '=' "const"
  570                 | type_declaration . '?'
  574                 | type_declaration . "??"
  628 make_struct_decl: "[[" type_declaration . make_struct_dim optional_block ']' ']'
  629                 | "[[" type_declaration . optional_block ']' ']'
  630                 | "[[" type_declaration . '(' ')' optional_block ']' ']'
  631                 | "[[" type_declaration . '(' ')' make_struct_dim optional_block ']' ']'
  642 make_dim_decl: "[[" type_declaration . make_dim ']' ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "const"                           shift, and go to state 242
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "where"                           shift, and go to state 645
    "reinterpret"                     shift, and go to state 355
    "implicit"                        shift, and go to state 243
    "explicit"                        shift, and go to state 244
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "??"                              shift, and go to state 245
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 646
    "start of the string"             shift, and go to state 376
    '='                               shift, and go to state 246
    '?'                               shift, and go to state 247
    '&'                               shift, and go to state 248
    '-'                               shift, and go to state 647
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '['                               shift, and go to state 250
    '('                               shift, and go to state 648
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311
    '#'                               shift, and go to state 251

    $default  reduce using rule 626 (optional_block)

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 649
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_fields      go to state 650
    make_struct_dim         go to state 651
    optional_block          go to state 652
    make_struct_decl        go to state 405
    make_tuple              go to state 653
    make_map_tuple          go to state 654
    make_any_tuple          go to state 655
    make_dim                go to state 656
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 484

  650 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "$i"    shift, and go to state 545
    "name"  shift, and go to state 546

    variable_name_with_pos_list  go to state 657


State 485

  558 type_declaration: type_declaration . '[' expr ']'
  559                 | type_declaration . '[' ']'
  560                 | type_declaration . '-' '[' ']'
  561                 | type_declaration . "explicit"
  562                 | type_declaration . "const"
  563                 | type_declaration . '-' "const"
  564                 | type_declaration . '&'
  565                 | type_declaration . '-' '&'
  566                 | type_declaration . '#'
  567                 | type_declaration . "implicit"
  568                 | type_declaration . '-' '#'
  569                 | type_declaration . '=' "const"
  570                 | type_declaration . '?'
  574                 | type_declaration . "??"
  632 make_struct_decl: "[{" type_declaration . make_struct_dim optional_block '}' ']'
  633                 | "[{" type_declaration . '(' ')' make_struct_dim optional_block '}' ']'
  643 make_dim_decl: "[{" type_declaration . make_dim '}' ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "const"                           shift, and go to state 242
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "implicit"                        shift, and go to state 243
    "explicit"                        shift, and go to state 244
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "??"                              shift, and go to state 245
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 646
    "start of the string"             shift, and go to state 376
    '='                               shift, and go to state 246
    '?'                               shift, and go to state 247
    '&'                               shift, and go to state 248
    '-'                               shift, and go to state 647
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '['                               shift, and go to state 250
    '('                               shift, and go to state 658
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311
    '#'                               shift, and go to state 251

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 649
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_fields      go to state 650
    make_struct_dim         go to state 659
    make_struct_decl        go to state 405
    make_tuple              go to state 653
    make_map_tuple          go to state 654
    make_any_tuple          go to state 655
    make_dim                go to state 660
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 486

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'
  636 make_map_tuple: expr . "=>" expr
  637               | expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "=>"   shift, and go to state 661
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 637 (make_map_tuple)


State 487

  644 make_table: make_map_tuple .

    $default  reduce using rule 644 (make_table)


State 488

  645 make_table: make_table . ';' make_map_tuple
  646 make_table_decl: "{{" make_table . '}' '}'

    ';'  shift, and go to state 662
    '}'  shift, and go to state 663


State 489

   26 string_builder_body: string_builder_body . character_sequence
   27                    | string_builder_body . "{" expr "}"
   28 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 129
    STRING_CHARACTER_ESC  shift, and go to state 130
    "end of the string"   shift, and go to state 664
    "{"                   shift, and go to state 665

    character_sequence  go to state 666


State 490

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  327 expr: '-' expr .
  328     | expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 327 (expr)


State 491

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  326 expr: '+' expr .
  328     | expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 326 (expr)


State 492

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  366     | '*' expr .
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 366 (expr)


State 493

   32 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 31 ($@1)

    $@1  go to state 667


State 494

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  325 expr: '~' expr .
  328     | expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 325 (expr)


State 495

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  324 expr: '!' expr .
  328     | expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 324 (expr)


State 496

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  354     | '(' expr . ')'
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 668


State 497

  257 block_or_lambda: '@' '@' .
  302 func_addr_expr: '@' '@' . func_addr_name
  305               | '@' '@' . '<' $@12 type_declaration '>' $@13 func_addr_name
  308               | '@' '@' . '<' $@14 optional_function_argument_list optional_function_type '>' $@15 func_addr_name
  413 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 50
    "$i"    shift, and go to state 669
    "$c"    shift, and go to state 670
    "name"  shift, and go to state 51
    '<'     shift, and go to state 671

    $default  reduce using rule 257 (block_or_lambda)

    name_in_namespace  go to state 672
    func_addr_name     go to state 673


State 498

  397 expr: name_in_namespace "name" .

    $default  reduce using rule 397 (expr)


State 499

  297 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  362 expr: name_in_namespace '(' . ')'
  363     | name_in_namespace '(' . expr_list ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '['                               shift, and go to state 674
    '('                               shift, and go to state 383
    ')'                               shift, and go to state 675
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    expr_list               go to state 676
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 677
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 500

  267 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 678

    $default  reduce using rule 264 (optional_capture_list)

    optional_capture_list  go to state 679


State 501

  375 expr: expr "is" . "type" '<' $@18 type_declaration '>' $@19
  376     | expr "is" . basic_type_declaration
  377     | expr "is" . "name"
  412 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 680
    "bool"      shift, and go to state 145
    "void"      shift, and go to state 146
    "string"    shift, and go to state 147
    "int"       shift, and go to state 149
    "int2"      shift, and go to state 150
    "int3"      shift, and go to state 151
    "int4"      shift, and go to state 152
    "uint"      shift, and go to state 153
    "bitfield"  shift, and go to state 357
    "uint2"     shift, and go to state 155
    "uint3"     shift, and go to state 156
    "uint4"     shift, and go to state 157
    "float"     shift, and go to state 158
    "float2"    shift, and go to state 159
    "float3"    shift, and go to state 160
    "float4"    shift, and go to state 161
    "range"     shift, and go to state 162
    "urange"    shift, and go to state 163
    "int64"     shift, and go to state 165
    "uint64"    shift, and go to state 166
    "double"    shift, and go to state 167
    "int8"      shift, and go to state 170
    "uint8"     shift, and go to state 171
    "int16"     shift, and go to state 172
    "uint16"    shift, and go to state 173
    "$f"        shift, and go to state 681
    "name"      shift, and go to state 682

    basic_type_declaration  go to state 683


State 502

  378 expr: expr "as" . "name"
  381     | expr "as" . "type" '<' $@20 type_declaration '>' $@21
  382     | expr "as" . basic_type_declaration
  410 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 684
    "bool"      shift, and go to state 145
    "void"      shift, and go to state 146
    "string"    shift, and go to state 147
    "int"       shift, and go to state 149
    "int2"      shift, and go to state 150
    "int3"      shift, and go to state 151
    "int4"      shift, and go to state 152
    "uint"      shift, and go to state 153
    "bitfield"  shift, and go to state 357
    "uint2"     shift, and go to state 155
    "uint3"     shift, and go to state 156
    "uint4"     shift, and go to state 157
    "float"     shift, and go to state 158
    "float2"    shift, and go to state 159
    "float3"    shift, and go to state 160
    "float4"    shift, and go to state 161
    "range"     shift, and go to state 162
    "urange"    shift, and go to state 163
    "int64"     shift, and go to state 165
    "uint64"    shift, and go to state 166
    "double"    shift, and go to state 167
    "int8"      shift, and go to state 170
    "uint8"     shift, and go to state 171
    "int16"     shift, and go to state 172
    "uint16"    shift, and go to state 173
    "$f"        shift, and go to state 685
    "name"      shift, and go to state 686

    basic_type_declaration  go to state 687


State 503

  328 expr: expr "<<" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 688
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 504

  329 expr: expr ">>" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 689
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 505

  352 expr: expr "++" .

    $default  reduce using rule 352 (expr)


State 506

  353 expr: expr "--" .

    $default  reduce using rule 353 (expr)


State 507

  341 expr: expr "<=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 690
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 508

  342 expr: expr ">=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 691
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 509

  339 expr: expr "==" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 692
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 510

  340 expr: expr "!=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 693
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 511

  298 expr_method_call: expr "->" . "name" '(' ')'
  299                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 694


State 512

  371 expr: expr "??" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 695
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 513

  359 expr: expr "?." . "name"
  407 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 696
    "name"  shift, and go to state 697


State 514

  357 expr: expr "?[" . expr ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 698
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 515

  395 expr: expr "<|" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 699
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 516

  396 expr: expr "|>" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 700
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 517

  330 expr: expr "<<<" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 701
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 518

  331 expr: expr ">>>" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 702
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 519

  346 expr: expr "&&" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 703
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 520

  347 expr: expr "||" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 704
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 521

  348 expr: expr "^^" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 705
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 522

  349 expr: expr ".." . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 706
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 523

  372 expr: expr '?' . expr ':' expr
  383     | expr '?' . "as" "name"
  386     | expr '?' . "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr '?' . "as" basic_type_declaration
  411 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "as"                              shift, and go to state 707
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 708
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 524

  344 expr: expr '|' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 709
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 525

  345 expr: expr '^' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 710
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 526

  343 expr: expr '&' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 711
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 527

  337 expr: expr '<' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 712
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 528

  338 expr: expr '>' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 713
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 529

  333 expr: expr '-' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 714
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 530

  332 expr: expr '+' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 715
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 531

  334 expr: expr '*' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 716
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 532

  335 expr: expr '/' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 717
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 533

  336 expr: expr '%' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 718
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 534

  309 expr_field: expr '.' . "name"
  310           | expr '.' . '.' "name"
  313           | expr '.' . $@16 error $@17
  356 expr: expr '.' . '[' expr ']'
  358     | expr '.' . "?[" expr ']'
  360     | expr '.' . "?." "name"
  406 expr_mtag: expr '.' . "$f" '(' expr ')'
  408          | expr '.' . '.' "$f" '(' expr ')'
  409          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 719
    "?["    shift, and go to state 720
    "$f"    shift, and go to state 721
    "name"  shift, and go to state 722
    '.'     shift, and go to state 723
    '['     shift, and go to state 724

    $default  reduce using rule 311 ($@16)

    $@16  go to state 725


State 535

  355 expr: expr '[' . expr ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 726
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 536

  546 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 546 (auto_type_declaration)


State 537

  364 expr: basic_type_declaration '(' . ')'
  365     | basic_type_declaration '(' . expr_list ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    ')'                               shift, and go to state 727
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    expr_list               go to state 728
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 677
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 538

  560 type_declaration: type_declaration '-' '[' ']' .

    $default  reduce using rule 560 (type_declaration)


State 539

  558 type_declaration: type_declaration '[' expr ']' .

    $default  reduce using rule 558 (type_declaration)


State 540

  442 variant_type: "name" ':' type_declaration .
  558 type_declaration: type_declaration . '[' expr ']'
  559                 | type_declaration . '[' ']'
  560                 | type_declaration . '-' '[' ']'
  561                 | type_declaration . "explicit"
  562                 | type_declaration . "const"
  563                 | type_declaration . '-' "const"
  564                 | type_declaration . '&'
  565                 | type_declaration . '-' '&'
  566                 | type_declaration . '#'
  567                 | type_declaration . "implicit"
  568                 | type_declaration . '-' '#'
  569                 | type_declaration . '=' "const"
  570                 | type_declaration . '?'
  574                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251

    $default  reduce using rule 442 (variant_type)


State 541

  613 variant_alias_declaration: "variant" $@58 "name" $@59 '{' variant_type_list ';' '}' .

    $default  reduce using rule 613 (variant_alias_declaration)


State 542

  444 variant_type_list: variant_type_list ';' variant_type .

    $default  reduce using rule 444 (variant_type_list)


State 543

  435 function_argument_declaration: "$a" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 729
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 544

  434 function_argument_declaration: optional_field_annotation "var" . variable_declaration

    "$i"    shift, and go to state 545
    "name"  shift, and go to state 546

    variable_declaration         go to state 730
    variable_name_with_pos_list  go to state 548


State 545

  508 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 731


State 546

  507 variable_name_with_pos_list: "name" .
  509                            | "name" . "aka" "name"

    "aka"  shift, and go to state 732

    $default  reduce using rule 507 (variable_name_with_pos_list)


State 547

  433 function_argument_declaration: optional_field_annotation variable_declaration .

    $default  reduce using rule 433 (function_argument_declaration)


State 548

  447 variable_declaration: variable_name_with_pos_list .
  448                     | variable_name_with_pos_list . '&'
  449                     | variable_name_with_pos_list . ':' type_declaration
  450                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  451                     | variable_name_with_pos_list . copy_or_move expr
  452                     | variable_name_with_pos_list . copy_or_move expr_pipe
  510 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  511                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 733
    ','   shift, and go to state 734
    '='   shift, and go to state 735
    ':'   shift, and go to state 736
    '&'   shift, and go to state 737

    $default  reduce using rule 447 (variable_declaration)

    copy_or_move  go to state 738


State 549

   97 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 97 (optional_function_argument_list)


State 550

  437 function_argument_list: function_argument_list ';' . function_argument_declaration

    "$a"  shift, and go to state 423
    "[["  shift, and go to state 223

    $default  reduce using rule 414 (optional_field_annotation)

    optional_field_annotation      go to state 425
    function_argument_declaration  go to state 739


State 551

   99 optional_function_type: ':' type_declaration .
  558 type_declaration: type_declaration . '[' expr ']'
  559                 | type_declaration . '[' ']'
  560                 | type_declaration . '-' '[' ']'
  561                 | type_declaration . "explicit"
  562                 | type_declaration . "const"
  563                 | type_declaration . '-' "const"
  564                 | type_declaration . '&'
  565                 | type_declaration . '-' '&'
  566                 | type_declaration . '#'
  567                 | type_declaration . "implicit"
  568                 | type_declaration . '-' '#'
  569                 | type_declaration . '=' "const"
  570                 | type_declaration . '?'
  574                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251

    $default  reduce using rule 99 (optional_function_type)


State 552

  208 expressions: expressions error .

    $default  reduce using rule 208 (expressions)


State 553

   61 expression_while_loop: "while" . expr expression_block

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 740
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 554

   56 if_or_static_if: "if" .

    $default  reduce using rule 56 (if_or_static_if)


State 555

   57 if_or_static_if: "static_if" .

    $default  reduce using rule 57 (if_or_static_if)


State 556

   59 expression_for_loop: "for" . variable_name_with_pos_list "in" expr_list ';' expression_block

    "$i"    shift, and go to state 545
    "name"  shift, and go to state 546

    variable_name_with_pos_list  go to state 741


State 557

  222 expression_return: "return" . ';'
  223                  | "return" . expr ';'
  224                  | "return" . "<-" expr ';'
  225                  | "return" . expr_pipe
  226                  | "return" . "<-" expr_pipe

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "<-"                              shift, and go to state 742
    "@ <|"                            shift, and go to state 569
    "@@ <|"                           shift, and go to state 570
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    ';'                               shift, and go to state 743
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    expr_pipe               go to state 744
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_assign             go to state 745
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 746
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 558

  220 expression_break: "break" .

    $default  reduce using rule 220 (expression_break)


State 559

  231 expression_try_catch: "try" . expression_block "recover" expression_block

    '{'  shift, and go to state 311

    expression_block  go to state 747


State 560

  215 expression_delete: "delete" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 748
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 561

   62 expression_with: "with" . expr expression_block

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 749
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 562

   64 expression_with_alias: "assume" . "name" '=' $@2 expr

    "name"  shift, and go to state 750


State 563

  221 expression_continue: "continue" .

    $default  reduce using rule 221 (expression_continue)


State 564

  205 expression_any: "pass" . ';'

    ';'  shift, and go to state 751


State 565

   48 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 752


State 566

   49 expression_goto: "goto" . "label" "integer constant"
   50                | "goto" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "label"                           shift, and go to state 753
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 754
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 567

   60 expression_unsafe: "unsafe" . expression_block
  398 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 472
    '{'  shift, and go to state 311

    expression_block  go to state 755


State 568

  227 expression_yield: "yield" . expr ';'
  228                 | "yield" . "<-" expr ';'
  229                 | "yield" . expr_pipe
  230                 | "yield" . "<-" expr_pipe

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "<-"                              shift, and go to state 756
    "@ <|"                            shift, and go to state 569
    "@@ <|"                           shift, and go to state 570
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    expr_pipe               go to state 757
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_assign             go to state 745
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 758
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 569

  210 expr_pipe: "@ <|" . expr_block

    '$'  shift, and go to state 384
    '@'  shift, and go to state 759
    '{'  shift, and go to state 311

    expression_block  go to state 388
    block_or_lambda   go to state 394
    expr_block        go to state 760


State 570

  211 expr_pipe: "@@ <|" . expr_block

    '$'  shift, and go to state 384
    '@'  shift, and go to state 759
    '{'  shift, and go to state 311

    expression_block  go to state 388
    block_or_lambda   go to state 394
    expr_block        go to state 761


State 571

  186 expression_any: ';' .

    $default  reduce using rule 186 (expression_any)


State 572

  184 expression_block: '{' expressions '}' .
  185                 | '{' expressions '}' . "finally" '{' expressions '}'

    "finally"  shift, and go to state 762

    $default  reduce using rule 184 (expression_block)


State 573

  203 expression_any: expression_label . ';'

    ';'  shift, and go to state 763


State 574

  204 expression_any: expression_goto . ';'

    ';'  shift, and go to state 764


State 575

   58 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 765
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 576

  201 expression_any: expression_if_then_else .

    $default  reduce using rule 201 (expression_any)


State 577

  196 expression_any: expression_for_loop .

    $default  reduce using rule 196 (expression_any)


State 578

  193 expression_any: expression_unsafe .

    $default  reduce using rule 193 (expression_any)


State 579

  192 expression_any: expression_while_loop .

    $default  reduce using rule 192 (expression_any)


State 580

  194 expression_any: expression_with .

    $default  reduce using rule 194 (expression_any)


State 581

  195 expression_any: expression_with_alias .

    $default  reduce using rule 195 (expression_any)


State 582

  207 expressions: expressions expression_any .

    $default  reduce using rule 207 (expressions)


State 583

  187 expression_any: expr_pipe .

    $default  reduce using rule 187 (expression_any)


State 584

  190 expression_any: expression_delete . ';'

    ';'  shift, and go to state 766


State 585

  197 expression_any: expression_break . ';'

    ';'  shift, and go to state 767


State 586

  198 expression_any: expression_continue . ';'

    ';'  shift, and go to state 768


State 587

  199 expression_any: expression_return .

    $default  reduce using rule 199 (expression_any)


State 588

  200 expression_any: expression_yield .

    $default  reduce using rule 200 (expression_any)


State 589

  202 expression_any: expression_try_catch .

    $default  reduce using rule 202 (expression_any)


State 590

  234 expression_let: kwd_let . let_variable_declaration

    "$i"    shift, and go to state 326
    "name"  shift, and go to state 327

    let_variable_name_with_pos_list  go to state 328
    let_variable_declaration         go to state 769


State 591

  191 expression_any: expression_let .

    $default  reduce using rule 191 (expression_any)


State 592

  189 expression_any: expr_assign . ';'
  209 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 770
    ';'    shift, and go to state 771


State 593

  188 expression_any: expr_assign_pipe .

    $default  reduce using rule 188 (expression_any)


State 594

  274 expr_assign: expr .
  275            | expr . '=' expr
  276            | expr . "<-" expr
  277            | expr . ":=" expr
  278            | expr . "&=" expr
  279            | expr . "|=" expr
  280            | expr . "^=" expr
  281            | expr . "&&=" expr
  282            | expr . "||=" expr
  283            | expr . "^^=" expr
  284            | expr . "+=" expr
  285            | expr . "-=" expr
  286            | expr . "*=" expr
  287            | expr . "/=" expr
  288            | expr . "%=" expr
  289            | expr . "<<=" expr
  290            | expr . ">>=" expr
  291            | expr . "<<<=" expr
  292            | expr . ">>>=" expr
  293 expr_assign_pipe: expr . '=' "@ <|" expr
  294                 | expr . '=' "@@ <|" expr
  295                 | expr . "<-" "@ <|" expr
  296                 | expr . "<-" "@@ <|" expr
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 501
    "as"    shift, and go to state 502
    "+="    shift, and go to state 772
    "-="    shift, and go to state 773
    "/="    shift, and go to state 774
    "*="    shift, and go to state 775
    "%="    shift, and go to state 776
    "&="    shift, and go to state 777
    "|="    shift, and go to state 778
    "^="    shift, and go to state 779
    "<<"    shift, and go to state 503
    ">>"    shift, and go to state 504
    "++"    shift, and go to state 505
    "--"    shift, and go to state 506
    "<="    shift, and go to state 507
    "<<="   shift, and go to state 780
    ">>="   shift, and go to state 781
    ">="    shift, and go to state 508
    "=="    shift, and go to state 509
    "!="    shift, and go to state 510
    "->"    shift, and go to state 511
    "<-"    shift, and go to state 782
    "??"    shift, and go to state 512
    "?."    shift, and go to state 513
    "?["    shift, and go to state 514
    "<|"    shift, and go to state 515
    "|>"    shift, and go to state 516
    ":="    shift, and go to state 783
    "<<<"   shift, and go to state 517
    ">>>"   shift, and go to state 518
    "<<<="  shift, and go to state 784
    ">>>="  shift, and go to state 785
    "&&"    shift, and go to state 519
    "||"    shift, and go to state 520
    "^^"    shift, and go to state 521
    "&&="   shift, and go to state 786
    "||="   shift, and go to state 787
    "^^="   shift, and go to state 788
    ".."    shift, and go to state 522
    '='     shift, and go to state 789
    '?'     shift, and go to state 523
    '|'     shift, and go to state 524
    '^'     shift, and go to state 525
    '&'     shift, and go to state 526
    '<'     shift, and go to state 527
    '>'     shift, and go to state 528
    '-'     shift, and go to state 529
    '+'     shift, and go to state 530
    '*'     shift, and go to state 531
    '/'     shift, and go to state 532
    '%'     shift, and go to state 533
    '.'     shift, and go to state 534
    '['     shift, and go to state 535

    $default  reduce using rule 274 (expr_assign)


State 595

  480 enum_list: enum_list . "name" ';'
  481          | enum_list . "name" '=' expr ';'
  493 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list . '}'

    "name"  shift, and go to state 432
    '}'     shift, and go to state 790


State 596

  481 enum_list: enum_list "name" '=' . expr ';'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 791
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 597

  480 enum_list: enum_list "name" ';' .

    $default  reduce using rule 480 (enum_list)


State 598

  495 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 495 (optional_structure_parent)


State 599

  427 struct_variable_declaration_list: struct_variable_declaration_list . $@24 structure_variable_declaration ';'
  429                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" $@25 function_declaration_header ';'
  431                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant $@26 function_declaration_header expression_block
  432                                 | struct_variable_declaration_list . '[' annotation_list ']' ';'
  506 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@30 structure_name $@31 '{' struct_variable_declaration_list . '}'

    '['  shift, and go to state 792
    '}'  shift, and go to state 793

    "def"     reduce using rule 93 (optional_annotation_list)
    $default  reduce using rule 426 ($@24)

    optional_annotation_list  go to state 794
    $@24                      go to state 795


State 600

  470 global_variable_declaration_list: global_variable_declaration_list $@27 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 470 (global_variable_declaration_list)


State 601

  415 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 415 (optional_field_annotation)


State 602

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'
  459 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 796


State 603

  460 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 460 (let_variable_name_with_pos_list)


State 604

  461 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  462                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 797

    $default  reduce using rule 461 (let_variable_name_with_pos_list)


State 605

  463 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration . ';'
  464                         | let_variable_name_with_pos_list ':' type_declaration . copy_or_move_or_clone expr ';'
  465                         | let_variable_name_with_pos_list ':' type_declaration . copy_or_move_or_clone expr_pipe
  558 type_declaration: type_declaration . '[' expr ']'
  559                 | type_declaration . '[' ']'
  560                 | type_declaration . '-' '[' ']'
  561                 | type_declaration . "explicit"
  562                 | type_declaration . "const"
  563                 | type_declaration . '-' "const"
  564                 | type_declaration . '&'
  565                 | type_declaration . '-' '&'
  566                 | type_declaration . '#'
  567                 | type_declaration . "implicit"
  568                 | type_declaration . '-' '#'
  569                 | type_declaration . '=' "const"
  570                 | type_declaration . '?'
  574                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "<-"        shift, and go to state 606
    "??"        shift, and go to state 245
    ":="        shift, and go to state 607
    '='         shift, and go to state 798
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    ';'         shift, and go to state 799
    '#'         shift, and go to state 251

    copy_or_move_or_clone  go to state 800


State 606

  454 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 454 (copy_or_move_or_clone)


State 607

  455 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 455 (copy_or_move_or_clone)


State 608

  453 copy_or_move_or_clone: '=' .

    $default  reduce using rule 453 (copy_or_move_or_clone)


State 609

  466 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr ';'
  467                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "@ <|"                            shift, and go to state 569
    "@@ <|"                           shift, and go to state 570
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    expr_pipe               go to state 801
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_assign             go to state 745
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 802
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 610

  577 type_declaration: "array" '<' $@36 type_declaration '>' . $@37

    $default  reduce using rule 576 ($@37)

    $@37  go to state 803


State 611

  580 type_declaration: "table" '<' $@38 table_type_pair '>' . $@39

    $default  reduce using rule 579 ($@39)

    $@39  go to state 804


State 612

  553 table_type_pair: type_declaration ';' . type_declaration

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 805


State 613

  583 type_declaration: "iterator" '<' $@40 type_declaration '>' . $@41

    $default  reduce using rule 582 ($@41)

    $@41  go to state 806


State 614

  573 type_declaration: "smart_ptr" '<' $@34 type_declaration '>' . $@35

    $default  reduce using rule 572 ($@35)

    $@35  go to state 807


State 615

  551 bitfield_type_declaration: "bitfield" '<' $@32 bitfield_bits '>' . $@33

    $default  reduce using rule 550 ($@33)

    $@33  go to state 808


State 616

  548 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 416


State 617

  587 type_declaration: "block" '<' $@42 type_declaration '>' . $@43

    $default  reduce using rule 586 ($@43)

    $@43  go to state 809


State 618

  590 type_declaration: "block" '<' $@44 optional_function_argument_list optional_function_type . '>' $@45

    '>'  shift, and go to state 810


State 619

  594 type_declaration: "function" '<' $@46 type_declaration '>' . $@47

    $default  reduce using rule 593 ($@47)

    $@47  go to state 811


State 620

  597 type_declaration: "function" '<' $@48 optional_function_argument_list optional_function_type . '>' $@49

    '>'  shift, and go to state 812


State 621

  601 type_declaration: "lambda" '<' $@50 type_declaration '>' . $@51

    $default  reduce using rule 600 ($@51)

    $@51  go to state 813


State 622

  604 type_declaration: "lambda" '<' $@52 optional_function_argument_list optional_function_type . '>' $@53

    '>'  shift, and go to state 814


State 623

  439 tuple_type: "name" ':' . type_declaration

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 815


State 624

  607 type_declaration: "tuple" '<' $@54 tuple_type_list '>' . $@55

    $default  reduce using rule 606 ($@55)

    $@55  go to state 816


State 625

  441 tuple_type_list: tuple_type_list ';' . tuple_type

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 458

    name_in_namespace           go to state 177
    tuple_type                  go to state 817
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 461


State 626

  610 type_declaration: "variant" '<' $@56 variant_type_list '>' . $@57

    $default  reduce using rule 609 ($@57)

    $@57  go to state 818


State 627

  444 variant_type_list: variant_type_list ';' . variant_type

    "name"  shift, and go to state 253

    variant_type  go to state 542


State 628

  217 expr_new: "new" type_declaration '(' . ')'
  218         | "new" type_declaration '(' . expr_list ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    ')'                               shift, and go to state 819
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    expr_list               go to state 820
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 677
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 629

  247 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  248               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  249               | "typeinfo" '(' name_in_namespace . '<' "name" ';' "name" '>' expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '<'                               shift, and go to state 821
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 822
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 630

  246 expr_type_decl: "type" '<' $@10 . type_declaration '>' $@11

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 823


State 631

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  367     | "deref" '(' expr . ')'
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 824


State 632

  237 expr_cast: "cast" '<' $@4 . type_declaration '>' $@5 expr

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 825


State 633

  240 expr_cast: "upcast" '<' $@6 . type_declaration '>' $@7 expr

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 826


State 634

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  368     | "addr" '(' expr . ')'
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 827


State 635

  243 expr_cast: "reinterpret" '<' $@8 . type_declaration '>' $@9 expr

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 828


State 636

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  398     | "unsafe" '(' expr . ')'
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 829


State 637

  369 expr: "generator" '<' type_declaration . '>' optional_capture_list '(' ')'
  370     | "generator" '<' type_declaration . '>' optional_capture_list '(' expr ')'
  558 type_declaration: type_declaration . '[' expr ']'
  559                 | type_declaration . '[' ']'
  560                 | type_declaration . '-' '[' ']'
  561                 | type_declaration . "explicit"
  562                 | type_declaration . "const"
  563                 | type_declaration . '-' "const"
  564                 | type_declaration . '&'
  565                 | type_declaration . '-' '&'
  566                 | type_declaration . '#'
  567                 | type_declaration . "implicit"
  568                 | type_declaration . '-' '#'
  569                 | type_declaration . '=' "const"
  570                 | type_declaration . '?'
  574                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 830
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 638

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  399 expr_mtag: "$$" '(' expr . ')'
  406          | expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 831


State 639

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  400 expr_mtag: "$i" '(' expr . ')'
  406          | expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 832


State 640

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  401 expr_mtag: "$v" '(' expr . ')'
  406          | expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 833


State 641

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  402 expr_mtag: "$b" '(' expr . ')'
  406          | expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 834


State 642

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  403 expr_mtag: "$a" '(' expr . ')'
  406          | expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 835


State 643

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  404 expr_mtag: "$c" '(' expr . ')' '(' ')'
  405          | "$c" '(' expr . ')' '(' expr_list ')'
  406          | expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 836


State 644

  510 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  511                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  649 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 837
    ','   shift, and go to state 734


State 645

  627 optional_block: "where" . expr_block

    '$'  shift, and go to state 384
    '@'  shift, and go to state 759
    '{'  shift, and go to state 311

    expression_block  go to state 388
    block_or_lambda   go to state 394
    expr_block        go to state 838


State 646

  212 name_in_namespace: "name" .
  213                  | "name" . "::" "name"
  620 make_struct_fields: "name" . copy_or_move expr
  621                   | "name" . ":=" expr

    "<-"  shift, and go to state 733
    ":="  shift, and go to state 839
    "::"  shift, and go to state 80
    '='   shift, and go to state 735

    $default  reduce using rule 212 (name_in_namespace)

    copy_or_move  go to state 840


State 647

  327 expr: '-' . expr
  560 type_declaration: type_declaration '-' . '[' ']'
  563                 | type_declaration '-' . "const"
  565                 | type_declaration '-' . '&'
  568                 | type_declaration '-' . '#'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "const"                           shift, and go to state 410
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '&'                               shift, and go to state 411
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '['                               shift, and go to state 412
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311
    '#'                               shift, and go to state 413

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 490
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 648

  354 expr: '(' . expr ')'
  630 make_struct_decl: "[[" type_declaration '(' . ')' optional_block ']' ']'
  631                 | "[[" type_declaration '(' . ')' make_struct_dim optional_block ']' ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    ')'                               shift, and go to state 841
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 496
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 649

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'
  634 make_tuple: expr .
  636 make_map_tuple: expr . "=>" expr
  637               | expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "=>"   shift, and go to state 661
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    ']'       reduce using rule 634 (make_tuple)
    ']'       [reduce using rule 637 (make_map_tuple)]
    ';'       reduce using rule 634 (make_tuple)
    ';'       [reduce using rule 637 (make_map_tuple)]
    '}'       reduce using rule 634 (make_tuple)
    '}'       [reduce using rule 637 (make_map_tuple)]
    $default  reduce using rule 634 (make_tuple)


State 650

  622 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  623                   | make_struct_fields . ',' "name" ":=" expr
  624 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 842

    $default  reduce using rule 624 (make_struct_dim)


State 651

  625 make_struct_dim: make_struct_dim . ';' make_struct_fields
  628 make_struct_decl: "[[" type_declaration make_struct_dim . optional_block ']' ']'

    "where"  shift, and go to state 645
    ';'      shift, and go to state 843

    $default  reduce using rule 626 (optional_block)

    optional_block  go to state 844


State 652

  629 make_struct_decl: "[[" type_declaration optional_block . ']' ']'

    ']'  shift, and go to state 845


State 653

  635 make_tuple: make_tuple . ',' expr
  638 make_any_tuple: make_tuple .

    ','  shift, and go to state 846

    $default  reduce using rule 638 (make_any_tuple)


State 654

  639 make_any_tuple: make_map_tuple .

    $default  reduce using rule 639 (make_any_tuple)


State 655

  640 make_dim: make_any_tuple .

    $default  reduce using rule 640 (make_dim)


State 656

  641 make_dim: make_dim . ';' make_any_tuple
  642 make_dim_decl: "[[" type_declaration make_dim . ']' ']'

    ']'  shift, and go to state 847
    ';'  shift, and go to state 848


State 657

  510 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  511                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  650 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where '}' ']'

    "in"  shift, and go to state 849
    ','   shift, and go to state 734


State 658

  354 expr: '(' . expr ')'
  633 make_struct_decl: "[{" type_declaration '(' . ')' make_struct_dim optional_block '}' ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    ')'                               shift, and go to state 850
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 496
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 659

  625 make_struct_dim: make_struct_dim . ';' make_struct_fields
  632 make_struct_decl: "[{" type_declaration make_struct_dim . optional_block '}' ']'

    "where"  shift, and go to state 645
    ';'      shift, and go to state 843

    $default  reduce using rule 626 (optional_block)

    optional_block  go to state 851


State 660

  641 make_dim: make_dim . ';' make_any_tuple
  643 make_dim_decl: "[{" type_declaration make_dim . '}' ']'

    ';'  shift, and go to state 848
    '}'  shift, and go to state 852


State 661

  636 make_map_tuple: expr "=>" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 853
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 662

  645 make_table: make_table ';' . make_map_tuple

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 486
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_map_tuple          go to state 854
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 663

  646 make_table_decl: "{{" make_table '}' . '}'

    '}'  shift, and go to state 855


State 664

   28 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 28 (string_builder)


State 665

   27 string_builder_body: string_builder_body "{" . expr "}"

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 856
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 666

   22 character_sequence: character_sequence . STRING_CHARACTER
   23                   | character_sequence . STRING_CHARACTER_ESC
   26 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 225
    STRING_CHARACTER_ESC  shift, and go to state 226

    STRING_CHARACTER      [reduce using rule 26 (string_builder_body)]
    STRING_CHARACTER_ESC  [reduce using rule 26 (string_builder_body)]
    $default              reduce using rule 26 (string_builder_body)


State 667

   32 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 857

    reader_character_sequence  go to state 858


State 668

  354 expr: '(' expr ')' .

    $default  reduce using rule 354 (expr)


State 669

  301 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 859


State 670

  413 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 860


State 671

  305 func_addr_expr: '@' '@' '<' . $@12 type_declaration '>' $@13 func_addr_name
  308               | '@' '@' '<' . $@14 optional_function_argument_list optional_function_type '>' $@15 func_addr_name

    ':'       reduce using rule 306 ($@14)
    '>'       reduce using rule 306 ($@14)
    '('       reduce using rule 306 ($@14)
    $default  reduce using rule 303 ($@12)

    $@12  go to state 861
    $@14  go to state 862


State 672

  300 func_addr_name: name_in_namespace .

    $default  reduce using rule 300 (func_addr_name)


State 673

  302 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 302 (func_addr_expr)


State 674

  297 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'

    "name"  shift, and go to state 863

    make_struct_fields  go to state 864


State 675

  362 expr: name_in_namespace '(' ')' .

    $default  reduce using rule 362 (expr)


State 676

  251 expr_list: expr_list . ',' expr
  363 expr: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 865
    ')'  shift, and go to state 866


State 677

  250 expr_list: expr .
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 250 (expr_list)


State 678

  265 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"  shift, and go to state 867
    ":="  shift, and go to state 868
    '='   shift, and go to state 869
    '&'   shift, and go to state 870

    capture_entry  go to state 871
    capture_list   go to state 872


State 679

  267 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 309

    $default  reduce using rule 95 (optional_function_argument_list)

    optional_function_argument_list  go to state 873


State 680

  375 expr: expr "is" "type" . '<' $@18 type_declaration '>' $@19

    '<'  shift, and go to state 874


State 681

  412 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 875


State 682

  377 expr: expr "is" "name" .

    $default  reduce using rule 377 (expr)


State 683

  376 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 376 (expr)


State 684

  381 expr: expr "as" "type" . '<' $@20 type_declaration '>' $@21

    '<'  shift, and go to state 876


State 685

  410 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 877


State 686

  378 expr: expr "as" "name" .

    $default  reduce using rule 378 (expr)


State 687

  382 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 382 (expr)


State 688

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  328     | expr "<<" expr .
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '-'   shift, and go to state 529
    '+'   shift, and go to state 530
    '*'   shift, and go to state 531
    '/'   shift, and go to state 532
    '%'   shift, and go to state 533
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 328 (expr)


State 689

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  329     | expr ">>" expr .
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '-'   shift, and go to state 529
    '+'   shift, and go to state 530
    '*'   shift, and go to state 531
    '/'   shift, and go to state 532
    '%'   shift, and go to state 533
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 329 (expr)


State 690

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  341     | expr "<=" expr .
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 341 (expr)


State 691

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  342     | expr ">=" expr .
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 342 (expr)


State 692

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  339     | expr "==" expr .
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 339 (expr)


State 693

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  340     | expr "!=" expr .
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 340 (expr)


State 694

  298 expr_method_call: expr "->" "name" . '(' ')'
  299                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 878


State 695

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  371     | expr "??" expr .
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 371 (expr)


State 696

  407 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 879


State 697

  359 expr: expr "?." "name" .

    $default  reduce using rule 359 (expr)


State 698

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  357     | expr "?[" expr . ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ']'    shift, and go to state 880


State 699

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  395     | expr "<|" expr .
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 511
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 395 (expr)


State 700

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  396     | expr "|>" expr .
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 511
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 396 (expr)


State 701

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  330     | expr "<<<" expr .
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '-'   shift, and go to state 529
    '+'   shift, and go to state 530
    '*'   shift, and go to state 531
    '/'   shift, and go to state 532
    '%'   shift, and go to state 533
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 330 (expr)


State 702

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  331     | expr ">>>" expr .
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '-'   shift, and go to state 529
    '+'   shift, and go to state 530
    '*'   shift, and go to state 531
    '/'   shift, and go to state 532
    '%'   shift, and go to state 533
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 331 (expr)


State 703

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  346     | expr "&&" expr .
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 346 (expr)


State 704

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  347     | expr "||" expr .
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "^^"   shift, and go to state 521
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 347 (expr)


State 705

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  348     | expr "^^" expr .
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 348 (expr)


State 706

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  349     | expr ".." expr .
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    ".."  error (nonassociative)

    $default  reduce using rule 349 (expr)


State 707

  383 expr: expr '?' "as" . "name"
  386     | expr '?' "as" . "type" '<' $@22 type_declaration '>' $@23
  387     | expr '?' "as" . basic_type_declaration
  411 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 881
    "bool"      shift, and go to state 145
    "void"      shift, and go to state 146
    "string"    shift, and go to state 147
    "int"       shift, and go to state 149
    "int2"      shift, and go to state 150
    "int3"      shift, and go to state 151
    "int4"      shift, and go to state 152
    "uint"      shift, and go to state 153
    "bitfield"  shift, and go to state 357
    "uint2"     shift, and go to state 155
    "uint3"     shift, and go to state 156
    "uint4"     shift, and go to state 157
    "float"     shift, and go to state 158
    "float2"    shift, and go to state 159
    "float3"    shift, and go to state 160
    "float4"    shift, and go to state 161
    "range"     shift, and go to state 162
    "urange"    shift, and go to state 163
    "int64"     shift, and go to state 165
    "uint64"    shift, and go to state 166
    "double"    shift, and go to state 167
    "int8"      shift, and go to state 170
    "uint8"     shift, and go to state 171
    "int16"     shift, and go to state 172
    "uint16"    shift, and go to state 173
    "$f"        shift, and go to state 882
    "name"      shift, and go to state 883

    basic_type_declaration  go to state 884


State 708

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  372     | expr '?' expr . ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    ':'    shift, and go to state 885
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535


State 709

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  344     | expr '|' expr .
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 344 (expr)


State 710

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  345     | expr '^' expr .
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 345 (expr)


State 711

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  343     | expr '&' expr .
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 343 (expr)


State 712

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  337     | expr '<' expr .
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 337 (expr)


State 713

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  338     | expr '>' expr .
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 338 (expr)


State 714

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  333     | expr '-' expr .
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '*'   shift, and go to state 531
    '/'   shift, and go to state 532
    '%'   shift, and go to state 533
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 333 (expr)


State 715

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  332     | expr '+' expr .
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '*'   shift, and go to state 531
    '/'   shift, and go to state 532
    '%'   shift, and go to state 533
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 332 (expr)


State 716

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  334     | expr '*' expr .
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 334 (expr)


State 717

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  335     | expr '/' expr .
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 335 (expr)


State 718

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  336     | expr '%' expr .
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 336 (expr)


State 719

  360 expr: expr '.' "?." . "name"
  409 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 886
    "name"  shift, and go to state 887


State 720

  358 expr: expr '.' "?[" . expr ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 888
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 721

  406 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 889


State 722

  309 expr_field: expr '.' "name" .

    $default  reduce using rule 309 (expr_field)


State 723

  310 expr_field: expr '.' '.' . "name"
  408 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 890
    "name"  shift, and go to state 891


State 724

  356 expr: expr '.' '[' . expr ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 892
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 725

  313 expr_field: expr '.' $@16 . error $@17

    error  shift, and go to state 893


State 726

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  355     | expr '[' expr . ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ']'    shift, and go to state 894


State 727

  364 expr: basic_type_declaration '(' ')' .

    $default  reduce using rule 364 (expr)


State 728

  251 expr_list: expr_list . ',' expr
  365 expr: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 865
    ')'  shift, and go to state 895


State 729

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'
  435 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 896


State 730

  434 function_argument_declaration: optional_field_annotation "var" variable_declaration .

    $default  reduce using rule 434 (function_argument_declaration)


State 731

  508 variable_name_with_pos_list: "$i" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 897
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 732

  509 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 898


State 733

  446 copy_or_move: "<-" .

    $default  reduce using rule 446 (copy_or_move)


State 734

  510 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  511                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 899


State 735

  445 copy_or_move: '=' .

    $default  reduce using rule 445 (copy_or_move)


State 736

  449 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  450                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 900


State 737

  448 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 448 (variable_declaration)


State 738

  451 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  452                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "@ <|"                            shift, and go to state 569
    "@@ <|"                           shift, and go to state 570
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    expr_pipe               go to state 901
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_assign             go to state 745
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 902
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 739

  437 function_argument_list: function_argument_list ';' function_argument_declaration .

    $default  reduce using rule 437 (function_argument_list)


State 740

   61 expression_while_loop: "while" expr . expression_block
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    '{'    shift, and go to state 311

    expression_block  go to state 903


State 741

   59 expression_for_loop: "for" variable_name_with_pos_list . "in" expr_list ';' expression_block
  510 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  511                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 904
    ','   shift, and go to state 734


State 742

  224 expression_return: "return" "<-" . expr ';'
  226                  | "return" "<-" . expr_pipe

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "@ <|"                            shift, and go to state 569
    "@@ <|"                           shift, and go to state 570
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    expr_pipe               go to state 905
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_assign             go to state 745
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 906
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 743

  222 expression_return: "return" ';' .

    $default  reduce using rule 222 (expression_return)


State 744

  225 expression_return: "return" expr_pipe .

    $default  reduce using rule 225 (expression_return)


State 745

  209 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 770


State 746

  223 expression_return: "return" expr . ';'
  274 expr_assign: expr .
  275            | expr . '=' expr
  276            | expr . "<-" expr
  277            | expr . ":=" expr
  278            | expr . "&=" expr
  279            | expr . "|=" expr
  280            | expr . "^=" expr
  281            | expr . "&&=" expr
  282            | expr . "||=" expr
  283            | expr . "^^=" expr
  284            | expr . "+=" expr
  285            | expr . "-=" expr
  286            | expr . "*=" expr
  287            | expr . "/=" expr
  288            | expr . "%=" expr
  289            | expr . "<<=" expr
  290            | expr . ">>=" expr
  291            | expr . "<<<=" expr
  292            | expr . ">>>=" expr
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 501
    "as"    shift, and go to state 502
    "+="    shift, and go to state 772
    "-="    shift, and go to state 773
    "/="    shift, and go to state 774
    "*="    shift, and go to state 775
    "%="    shift, and go to state 776
    "&="    shift, and go to state 777
    "|="    shift, and go to state 778
    "^="    shift, and go to state 779
    "<<"    shift, and go to state 503
    ">>"    shift, and go to state 504
    "++"    shift, and go to state 505
    "--"    shift, and go to state 506
    "<="    shift, and go to state 507
    "<<="   shift, and go to state 780
    ">>="   shift, and go to state 781
    ">="    shift, and go to state 508
    "=="    shift, and go to state 509
    "!="    shift, and go to state 510
    "->"    shift, and go to state 511
    "<-"    shift, and go to state 907
    "??"    shift, and go to state 512
    "?."    shift, and go to state 513
    "?["    shift, and go to state 514
    "<|"    shift, and go to state 515
    "|>"    shift, and go to state 516
    ":="    shift, and go to state 783
    "<<<"   shift, and go to state 517
    ">>>"   shift, and go to state 518
    "<<<="  shift, and go to state 784
    ">>>="  shift, and go to state 785
    "&&"    shift, and go to state 519
    "||"    shift, and go to state 520
    "^^"    shift, and go to state 521
    "&&="   shift, and go to state 786
    "||="   shift, and go to state 787
    "^^="   shift, and go to state 788
    ".."    shift, and go to state 522
    '='     shift, and go to state 908
    '?'     shift, and go to state 523
    '|'     shift, and go to state 524
    '^'     shift, and go to state 525
    '&'     shift, and go to state 526
    '<'     shift, and go to state 527
    '>'     shift, and go to state 528
    '-'     shift, and go to state 529
    '+'     shift, and go to state 530
    '*'     shift, and go to state 531
    '/'     shift, and go to state 532
    '%'     shift, and go to state 533
    '.'     shift, and go to state 534
    '['     shift, and go to state 535
    ';'     shift, and go to state 909

    $default  reduce using rule 274 (expr_assign)


State 747

  231 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 910


State 748

  215 expression_delete: "delete" expr .
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 215 (expression_delete)


State 749

   62 expression_with: "with" expr . expression_block
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    '{'    shift, and go to state 311

    expression_block  go to state 911


State 750

   64 expression_with_alias: "assume" "name" . '=' $@2 expr

    '='  shift, and go to state 912


State 751

  205 expression_any: "pass" ';' .

    $default  reduce using rule 205 (expression_any)


State 752

   48 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 913


State 753

   49 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 914


State 754

   50 expression_goto: "goto" expr .
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 50 (expression_goto)


State 755

   60 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 60 (expression_unsafe)


State 756

  228 expression_yield: "yield" "<-" . expr ';'
  230                 | "yield" "<-" . expr_pipe

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "@ <|"                            shift, and go to state 569
    "@@ <|"                           shift, and go to state 570
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    expr_pipe               go to state 915
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_assign             go to state 745
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 916
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 757

  229 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 229 (expression_yield)


State 758

  227 expression_yield: "yield" expr . ';'
  274 expr_assign: expr .
  275            | expr . '=' expr
  276            | expr . "<-" expr
  277            | expr . ":=" expr
  278            | expr . "&=" expr
  279            | expr . "|=" expr
  280            | expr . "^=" expr
  281            | expr . "&&=" expr
  282            | expr . "||=" expr
  283            | expr . "^^=" expr
  284            | expr . "+=" expr
  285            | expr . "-=" expr
  286            | expr . "*=" expr
  287            | expr . "/=" expr
  288            | expr . "%=" expr
  289            | expr . "<<=" expr
  290            | expr . ">>=" expr
  291            | expr . "<<<=" expr
  292            | expr . ">>>=" expr
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 501
    "as"    shift, and go to state 502
    "+="    shift, and go to state 772
    "-="    shift, and go to state 773
    "/="    shift, and go to state 774
    "*="    shift, and go to state 775
    "%="    shift, and go to state 776
    "&="    shift, and go to state 777
    "|="    shift, and go to state 778
    "^="    shift, and go to state 779
    "<<"    shift, and go to state 503
    ">>"    shift, and go to state 504
    "++"    shift, and go to state 505
    "--"    shift, and go to state 506
    "<="    shift, and go to state 507
    "<<="   shift, and go to state 780
    ">>="   shift, and go to state 781
    ">="    shift, and go to state 508
    "=="    shift, and go to state 509
    "!="    shift, and go to state 510
    "->"    shift, and go to state 511
    "<-"    shift, and go to state 907
    "??"    shift, and go to state 512
    "?."    shift, and go to state 513
    "?["    shift, and go to state 514
    "<|"    shift, and go to state 515
    "|>"    shift, and go to state 516
    ":="    shift, and go to state 783
    "<<<"   shift, and go to state 517
    ">>>"   shift, and go to state 518
    "<<<="  shift, and go to state 784
    ">>>="  shift, and go to state 785
    "&&"    shift, and go to state 519
    "||"    shift, and go to state 520
    "^^"    shift, and go to state 521
    "&&="   shift, and go to state 786
    "||="   shift, and go to state 787
    "^^="   shift, and go to state 788
    ".."    shift, and go to state 522
    '='     shift, and go to state 908
    '?'     shift, and go to state 523
    '|'     shift, and go to state 524
    '^'     shift, and go to state 525
    '&'     shift, and go to state 526
    '<'     shift, and go to state 527
    '>'     shift, and go to state 528
    '-'     shift, and go to state 529
    '+'     shift, and go to state 530
    '*'     shift, and go to state 531
    '/'     shift, and go to state 532
    '%'     shift, and go to state 533
    '.'     shift, and go to state 534
    '['     shift, and go to state 535
    ';'     shift, and go to state 917

    $default  reduce using rule 274 (expr_assign)


State 759

  256 block_or_lambda: '@' .
  257                | '@' . '@'

    '@'  shift, and go to state 918

    $default  reduce using rule 256 (block_or_lambda)


State 760

  210 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 210 (expr_pipe)


State 761

  211 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 211 (expr_pipe)


State 762

  185 expression_block: '{' expressions '}' "finally" . '{' expressions '}'

    '{'  shift, and go to state 919


State 763

  203 expression_any: expression_label ';' .

    $default  reduce using rule 203 (expression_any)


State 764

  204 expression_any: expression_goto ';' .

    $default  reduce using rule 204 (expression_any)


State 765

   58 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    '{'    shift, and go to state 311

    expression_block  go to state 920


State 766

  190 expression_any: expression_delete ';' .

    $default  reduce using rule 190 (expression_any)


State 767

  197 expression_any: expression_break ';' .

    $default  reduce using rule 197 (expression_any)


State 768

  198 expression_any: expression_continue ';' .

    $default  reduce using rule 198 (expression_any)


State 769

  234 expression_let: kwd_let let_variable_declaration .

    $default  reduce using rule 234 (expression_let)


State 770

  209 expr_pipe: expr_assign " <|" . expr_block

    '$'  shift, and go to state 384
    '@'  shift, and go to state 759
    '{'  shift, and go to state 311

    expression_block  go to state 388
    block_or_lambda   go to state 394
    expr_block        go to state 921


State 771

  189 expression_any: expr_assign ';' .

    $default  reduce using rule 189 (expression_any)


State 772

  284 expr_assign: expr "+=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 922
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 773

  285 expr_assign: expr "-=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 923
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 774

  287 expr_assign: expr "/=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 924
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 775

  286 expr_assign: expr "*=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 925
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 776

  288 expr_assign: expr "%=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 926
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 777

  278 expr_assign: expr "&=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 927
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 778

  279 expr_assign: expr "|=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 928
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 779

  280 expr_assign: expr "^=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 929
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 780

  289 expr_assign: expr "<<=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 930
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 781

  290 expr_assign: expr ">>=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 931
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 782

  276 expr_assign: expr "<-" . expr
  295 expr_assign_pipe: expr "<-" . "@ <|" expr
  296                 | expr "<-" . "@@ <|" expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "@ <|"                            shift, and go to state 932
    "@@ <|"                           shift, and go to state 933
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 934
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 783

  277 expr_assign: expr ":=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 935
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 784

  291 expr_assign: expr "<<<=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 936
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 785

  292 expr_assign: expr ">>>=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 937
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 786

  281 expr_assign: expr "&&=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 938
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 787

  282 expr_assign: expr "||=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 939
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 788

  283 expr_assign: expr "^^=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 940
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 789

  275 expr_assign: expr '=' . expr
  293 expr_assign_pipe: expr '=' . "@ <|" expr
  294                 | expr '=' . "@@ <|" expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "@ <|"                            shift, and go to state 941
    "@@ <|"                           shift, and go to state 942
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 943
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 790

  493 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list '}' .

    $default  reduce using rule 493 (enum_declaration)


State 791

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'
  481 enum_list: enum_list "name" '=' expr . ';'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ';'    shift, and go to state 944


State 792

   94 optional_annotation_list: '[' . annotation_list ']'
  432 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' ';'

    "require"  shift, and go to state 48
    "private"  shift, and go to state 49
    "::"       shift, and go to state 50
    "name"     shift, and go to state 51

    annotation_declaration_name  go to state 52
    annotation_declaration       go to state 53
    annotation_list              go to state 945
    name_in_namespace            go to state 55


State 793

  506 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@30 structure_name $@31 '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 506 (structure_declaration)


State 794

  429 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" $@25 function_declaration_header ';'
  431                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_override optional_constant $@26 function_declaration_header expression_block

    "def"  shift, and go to state 946


State 795

  427 struct_variable_declaration_list: struct_variable_declaration_list $@24 . structure_variable_declaration ';'

    "[["  shift, and go to state 223

    $default  reduce using rule 414 (optional_field_annotation)

    optional_field_annotation       go to state 947
    structure_variable_declaration  go to state 948


State 796

  459 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 459 (let_variable_name_with_pos_list)


State 797

  462 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 949


State 798

  453 copy_or_move_or_clone: '=' .
  569 type_declaration: type_declaration '=' . "const"

    "const"  shift, and go to state 409

    $default  reduce using rule 453 (copy_or_move_or_clone)


State 799

  463 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration ';' .

    $default  reduce using rule 463 (let_variable_declaration)


State 800

  464 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone . expr ';'
  465                         | let_variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone . expr_pipe

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "@ <|"                            shift, and go to state 569
    "@@ <|"                           shift, and go to state 570
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    expr_pipe               go to state 950
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_assign             go to state 745
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 951
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 801

  467 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 467 (let_variable_declaration)


State 802

  274 expr_assign: expr .
  275            | expr . '=' expr
  276            | expr . "<-" expr
  277            | expr . ":=" expr
  278            | expr . "&=" expr
  279            | expr . "|=" expr
  280            | expr . "^=" expr
  281            | expr . "&&=" expr
  282            | expr . "||=" expr
  283            | expr . "^^=" expr
  284            | expr . "+=" expr
  285            | expr . "-=" expr
  286            | expr . "*=" expr
  287            | expr . "/=" expr
  288            | expr . "%=" expr
  289            | expr . "<<=" expr
  290            | expr . ">>=" expr
  291            | expr . "<<<=" expr
  292            | expr . ">>>=" expr
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'
  466 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 501
    "as"    shift, and go to state 502
    "+="    shift, and go to state 772
    "-="    shift, and go to state 773
    "/="    shift, and go to state 774
    "*="    shift, and go to state 775
    "%="    shift, and go to state 776
    "&="    shift, and go to state 777
    "|="    shift, and go to state 778
    "^="    shift, and go to state 779
    "<<"    shift, and go to state 503
    ">>"    shift, and go to state 504
    "++"    shift, and go to state 505
    "--"    shift, and go to state 506
    "<="    shift, and go to state 507
    "<<="   shift, and go to state 780
    ">>="   shift, and go to state 781
    ">="    shift, and go to state 508
    "=="    shift, and go to state 509
    "!="    shift, and go to state 510
    "->"    shift, and go to state 511
    "<-"    shift, and go to state 907
    "??"    shift, and go to state 512
    "?."    shift, and go to state 513
    "?["    shift, and go to state 514
    "<|"    shift, and go to state 515
    "|>"    shift, and go to state 516
    ":="    shift, and go to state 783
    "<<<"   shift, and go to state 517
    ">>>"   shift, and go to state 518
    "<<<="  shift, and go to state 784
    ">>>="  shift, and go to state 785
    "&&"    shift, and go to state 519
    "||"    shift, and go to state 520
    "^^"    shift, and go to state 521
    "&&="   shift, and go to state 786
    "||="   shift, and go to state 787
    "^^="   shift, and go to state 788
    ".."    shift, and go to state 522
    '='     shift, and go to state 908
    '?'     shift, and go to state 523
    '|'     shift, and go to state 524
    '^'     shift, and go to state 525
    '&'     shift, and go to state 526
    '<'     shift, and go to state 527
    '>'     shift, and go to state 528
    '-'     shift, and go to state 529
    '+'     shift, and go to state 530
    '*'     shift, and go to state 531
    '/'     shift, and go to state 532
    '%'     shift, and go to state 533
    '.'     shift, and go to state 534
    '['     shift, and go to state 535
    ';'     shift, and go to state 952

    $default  reduce using rule 274 (expr_assign)


State 803

  577 type_declaration: "array" '<' $@36 type_declaration '>' $@37 .

    $default  reduce using rule 577 (type_declaration)


State 804

  580 type_declaration: "table" '<' $@38 table_type_pair '>' $@39 .

    $default  reduce using rule 580 (type_declaration)


State 805

  553 table_type_pair: type_declaration ';' type_declaration .
  558 type_declaration: type_declaration . '[' expr ']'
  559                 | type_declaration . '[' ']'
  560                 | type_declaration . '-' '[' ']'
  561                 | type_declaration . "explicit"
  562                 | type_declaration . "const"
  563                 | type_declaration . '-' "const"
  564                 | type_declaration . '&'
  565                 | type_declaration . '-' '&'
  566                 | type_declaration . '#'
  567                 | type_declaration . "implicit"
  568                 | type_declaration . '-' '#'
  569                 | type_declaration . '=' "const"
  570                 | type_declaration . '?'
  574                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251

    $default  reduce using rule 553 (table_type_pair)


State 806

  583 type_declaration: "iterator" '<' $@40 type_declaration '>' $@41 .

    $default  reduce using rule 583 (type_declaration)


State 807

  573 type_declaration: "smart_ptr" '<' $@34 type_declaration '>' $@35 .

    $default  reduce using rule 573 (type_declaration)


State 808

  551 bitfield_type_declaration: "bitfield" '<' $@32 bitfield_bits '>' $@33 .

    $default  reduce using rule 551 (bitfield_type_declaration)


State 809

  587 type_declaration: "block" '<' $@42 type_declaration '>' $@43 .

    $default  reduce using rule 587 (type_declaration)


State 810

  590 type_declaration: "block" '<' $@44 optional_function_argument_list optional_function_type '>' . $@45

    $default  reduce using rule 589 ($@45)

    $@45  go to state 953


State 811

  594 type_declaration: "function" '<' $@46 type_declaration '>' $@47 .

    $default  reduce using rule 594 (type_declaration)


State 812

  597 type_declaration: "function" '<' $@48 optional_function_argument_list optional_function_type '>' . $@49

    $default  reduce using rule 596 ($@49)

    $@49  go to state 954


State 813

  601 type_declaration: "lambda" '<' $@50 type_declaration '>' $@51 .

    $default  reduce using rule 601 (type_declaration)


State 814

  604 type_declaration: "lambda" '<' $@52 optional_function_argument_list optional_function_type '>' . $@53

    $default  reduce using rule 603 ($@53)

    $@53  go to state 955


State 815

  439 tuple_type: "name" ':' type_declaration .
  558 type_declaration: type_declaration . '[' expr ']'
  559                 | type_declaration . '[' ']'
  560                 | type_declaration . '-' '[' ']'
  561                 | type_declaration . "explicit"
  562                 | type_declaration . "const"
  563                 | type_declaration . '-' "const"
  564                 | type_declaration . '&'
  565                 | type_declaration . '-' '&'
  566                 | type_declaration . '#'
  567                 | type_declaration . "implicit"
  568                 | type_declaration . '-' '#'
  569                 | type_declaration . '=' "const"
  570                 | type_declaration . '?'
  574                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251

    $default  reduce using rule 439 (tuple_type)


State 816

  607 type_declaration: "tuple" '<' $@54 tuple_type_list '>' $@55 .

    $default  reduce using rule 607 (type_declaration)


State 817

  441 tuple_type_list: tuple_type_list ';' tuple_type .

    $default  reduce using rule 441 (tuple_type_list)


State 818

  610 type_declaration: "variant" '<' $@56 variant_type_list '>' $@57 .

    $default  reduce using rule 610 (type_declaration)


State 819

  217 expr_new: "new" type_declaration '(' ')' .

    $default  reduce using rule 217 (expr_new)


State 820

  218 expr_new: "new" type_declaration '(' expr_list . ')'
  251 expr_list: expr_list . ',' expr

    ','  shift, and go to state 865
    ')'  shift, and go to state 956


State 821

  248 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  249               | "typeinfo" '(' name_in_namespace '<' . "name" ';' "name" '>' expr ')'

    "name"  shift, and go to state 957


State 822

  247 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 958


State 823

  246 expr_type_decl: "type" '<' $@10 type_declaration . '>' $@11
  558 type_declaration: type_declaration . '[' expr ']'
  559                 | type_declaration . '[' ']'
  560                 | type_declaration . '-' '[' ']'
  561                 | type_declaration . "explicit"
  562                 | type_declaration . "const"
  563                 | type_declaration . '-' "const"
  564                 | type_declaration . '&'
  565                 | type_declaration . '-' '&'
  566                 | type_declaration . '#'
  567                 | type_declaration . "implicit"
  568                 | type_declaration . '-' '#'
  569                 | type_declaration . '=' "const"
  570                 | type_declaration . '?'
  574                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 959
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 824

  367 expr: "deref" '(' expr ')' .

    $default  reduce using rule 367 (expr)


State 825

  237 expr_cast: "cast" '<' $@4 type_declaration . '>' $@5 expr
  558 type_declaration: type_declaration . '[' expr ']'
  559                 | type_declaration . '[' ']'
  560                 | type_declaration . '-' '[' ']'
  561                 | type_declaration . "explicit"
  562                 | type_declaration . "const"
  563                 | type_declaration . '-' "const"
  564                 | type_declaration . '&'
  565                 | type_declaration . '-' '&'
  566                 | type_declaration . '#'
  567                 | type_declaration . "implicit"
  568                 | type_declaration . '-' '#'
  569                 | type_declaration . '=' "const"
  570                 | type_declaration . '?'
  574                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 960
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 826

  240 expr_cast: "upcast" '<' $@6 type_declaration . '>' $@7 expr
  558 type_declaration: type_declaration . '[' expr ']'
  559                 | type_declaration . '[' ']'
  560                 | type_declaration . '-' '[' ']'
  561                 | type_declaration . "explicit"
  562                 | type_declaration . "const"
  563                 | type_declaration . '-' "const"
  564                 | type_declaration . '&'
  565                 | type_declaration . '-' '&'
  566                 | type_declaration . '#'
  567                 | type_declaration . "implicit"
  568                 | type_declaration . '-' '#'
  569                 | type_declaration . '=' "const"
  570                 | type_declaration . '?'
  574                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 961
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 827

  368 expr: "addr" '(' expr ')' .

    $default  reduce using rule 368 (expr)


State 828

  243 expr_cast: "reinterpret" '<' $@8 type_declaration . '>' $@9 expr
  558 type_declaration: type_declaration . '[' expr ']'
  559                 | type_declaration . '[' ']'
  560                 | type_declaration . '-' '[' ']'
  561                 | type_declaration . "explicit"
  562                 | type_declaration . "const"
  563                 | type_declaration . '-' "const"
  564                 | type_declaration . '&'
  565                 | type_declaration . '-' '&'
  566                 | type_declaration . '#'
  567                 | type_declaration . "implicit"
  568                 | type_declaration . '-' '#'
  569                 | type_declaration . '=' "const"
  570                 | type_declaration . '?'
  574                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 962
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 829

  398 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 398 (expr)


State 830

  369 expr: "generator" '<' type_declaration '>' . optional_capture_list '(' ')'
  370     | "generator" '<' type_declaration '>' . optional_capture_list '(' expr ')'

    "[["  shift, and go to state 678

    $default  reduce using rule 264 (optional_capture_list)

    optional_capture_list  go to state 963


State 831

  399 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 399 (expr_mtag)


State 832

  400 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 400 (expr_mtag)


State 833

  401 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 401 (expr_mtag)


State 834

  402 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 402 (expr_mtag)


State 835

  403 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 403 (expr_mtag)


State 836

  404 expr_mtag: "$c" '(' expr ')' . '(' ')'
  405          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 964


State 837

  649 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where ']' ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    expr_list               go to state 965
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 677
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 838

  627 optional_block: "where" expr_block .

    $default  reduce using rule 627 (optional_block)


State 839

  621 make_struct_fields: "name" ":=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 966
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 840

  620 make_struct_fields: "name" copy_or_move . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 967
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 841

  630 make_struct_decl: "[[" type_declaration '(' ')' . optional_block ']' ']'
  631                 | "[[" type_declaration '(' ')' . make_struct_dim optional_block ']' ']'

    "where"  shift, and go to state 645
    "name"   shift, and go to state 863

    $default  reduce using rule 626 (optional_block)

    make_struct_fields  go to state 650
    make_struct_dim     go to state 968
    optional_block      go to state 969


State 842

  622 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  623                   | make_struct_fields ',' . "name" ":=" expr

    "name"  shift, and go to state 970


State 843

  625 make_struct_dim: make_struct_dim ';' . make_struct_fields

    "name"  shift, and go to state 863

    make_struct_fields  go to state 971


State 844

  628 make_struct_decl: "[[" type_declaration make_struct_dim optional_block . ']' ']'

    ']'  shift, and go to state 972


State 845

  629 make_struct_decl: "[[" type_declaration optional_block ']' . ']'

    ']'  shift, and go to state 973


State 846

  635 make_tuple: make_tuple ',' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 974
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 847

  642 make_dim_decl: "[[" type_declaration make_dim ']' . ']'

    ']'  shift, and go to state 975


State 848

  641 make_dim: make_dim ';' . make_any_tuple

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 649
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_tuple              go to state 653
    make_map_tuple          go to state 654
    make_any_tuple          go to state 976
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 849

  650 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where '}' ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    expr_list               go to state 977
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 677
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 850

  633 make_struct_decl: "[{" type_declaration '(' ')' . make_struct_dim optional_block '}' ']'

    "name"  shift, and go to state 863

    make_struct_fields  go to state 650
    make_struct_dim     go to state 978


State 851

  632 make_struct_decl: "[{" type_declaration make_struct_dim optional_block . '}' ']'

    '}'  shift, and go to state 979


State 852

  643 make_dim_decl: "[{" type_declaration make_dim '}' . ']'

    ']'  shift, and go to state 980


State 853

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'
  636 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 636 (make_map_tuple)


State 854

  645 make_table: make_table ';' make_map_tuple .

    $default  reduce using rule 645 (make_table)


State 855

  646 make_table_decl: "{{" make_table '}' '}' .

    $default  reduce using rule 646 (make_table_decl)


State 856

   27 string_builder_body: string_builder_body "{" expr . "}"
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    "}"    shift, and go to state 981
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535


State 857

   29 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 29 (reader_character_sequence)


State 858

   30 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   32 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 982

    $default  reduce using rule 32 (expr_reader)


State 859

  301 func_addr_name: "$i" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 983
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 860

  413 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 984
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 861

  305 func_addr_expr: '@' '@' '<' $@12 . type_declaration '>' $@13 func_addr_name

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 985


State 862

  308 func_addr_expr: '@' '@' '<' $@14 . optional_function_argument_list optional_function_type '>' $@15 func_addr_name

    '('  shift, and go to state 309

    $default  reduce using rule 95 (optional_function_argument_list)

    optional_function_argument_list  go to state 986


State 863

  620 make_struct_fields: "name" . copy_or_move expr
  621                   | "name" . ":=" expr

    "<-"  shift, and go to state 733
    ":="  shift, and go to state 839
    '='   shift, and go to state 735

    copy_or_move  go to state 840


State 864

  297 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  622 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  623                   | make_struct_fields . ',' "name" ":=" expr

    ','  shift, and go to state 842
    ']'  shift, and go to state 987


State 865

  251 expr_list: expr_list ',' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 988
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 866

  363 expr: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 363 (expr)


State 867

  260 capture_entry: "<-" . "name"

    "name"  shift, and go to state 989


State 868

  261 capture_entry: ":=" . "name"

    "name"  shift, and go to state 990


State 869

  259 capture_entry: '=' . "name"

    "name"  shift, and go to state 991


State 870

  258 capture_entry: '&' . "name"

    "name"  shift, and go to state 992


State 871

  262 capture_list: capture_entry .

    $default  reduce using rule 262 (capture_list)


State 872

  263 capture_list: capture_list . ',' capture_entry
  265 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 993
    ']'  shift, and go to state 994


State 873

  267 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 428

    $default  reduce using rule 98 (optional_function_type)

    optional_function_type  go to state 995


State 874

  375 expr: expr "is" "type" '<' . $@18 type_declaration '>' $@19

    $default  reduce using rule 373 ($@18)

    $@18  go to state 996


State 875

  412 expr_mtag: expr "is" "$f" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 997
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 876

  381 expr: expr "as" "type" '<' . $@20 type_declaration '>' $@21

    $default  reduce using rule 379 ($@20)

    $@20  go to state 998


State 877

  410 expr_mtag: expr "as" "$f" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 999
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 878

  298 expr_method_call: expr "->" "name" '(' . ')'
  299                 | expr "->" "name" '(' . expr_list ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    ')'                               shift, and go to state 1000
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    expr_list               go to state 1001
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 677
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 879

  407 expr_mtag: expr "?." "$f" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1002
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 880

  357 expr: expr "?[" expr ']' .

    $default  reduce using rule 357 (expr)


State 881

  386 expr: expr '?' "as" "type" . '<' $@22 type_declaration '>' $@23

    '<'  shift, and go to state 1003


State 882

  411 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1004


State 883

  383 expr: expr '?' "as" "name" .

    $default  reduce using rule 383 (expr)


State 884

  387 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 387 (expr)


State 885

  372 expr: expr '?' expr ':' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1005
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 886

  409 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1006


State 887

  360 expr: expr '.' "?." "name" .

    $default  reduce using rule 360 (expr)


State 888

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  358     | expr '.' "?[" expr . ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ']'    shift, and go to state 1007


State 889

  406 expr_mtag: expr '.' "$f" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1008
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 890

  408 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1009


State 891

  310 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 310 (expr_field)


State 892

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  356     | expr '.' '[' expr . ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ']'    shift, and go to state 1010


State 893

  313 expr_field: expr '.' $@16 error . $@17

    $default  reduce using rule 312 ($@17)

    $@17  go to state 1011


State 894

  355 expr: expr '[' expr ']' .

    $default  reduce using rule 355 (expr)


State 895

  365 expr: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 365 (expr)


State 896

  435 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 435 (function_argument_declaration)


State 897

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'
  508 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1012


State 898

  509 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 509 (variable_name_with_pos_list)


State 899

  510 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  511                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1013

    $default  reduce using rule 510 (variable_name_with_pos_list)


State 900

  449 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  450                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  558 type_declaration: type_declaration . '[' expr ']'
  559                 | type_declaration . '[' ']'
  560                 | type_declaration . '-' '[' ']'
  561                 | type_declaration . "explicit"
  562                 | type_declaration . "const"
  563                 | type_declaration . '-' "const"
  564                 | type_declaration . '&'
  565                 | type_declaration . '-' '&'
  566                 | type_declaration . '#'
  567                 | type_declaration . "implicit"
  568                 | type_declaration . '-' '#'
  569                 | type_declaration . '=' "const"
  570                 | type_declaration . '?'
  574                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "<-"        shift, and go to state 733
    "??"        shift, and go to state 245
    '='         shift, and go to state 1014
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251

    $default  reduce using rule 449 (variable_declaration)

    copy_or_move  go to state 1015


State 901

  452 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 452 (variable_declaration)


State 902

  274 expr_assign: expr .
  275            | expr . '=' expr
  276            | expr . "<-" expr
  277            | expr . ":=" expr
  278            | expr . "&=" expr
  279            | expr . "|=" expr
  280            | expr . "^=" expr
  281            | expr . "&&=" expr
  282            | expr . "||=" expr
  283            | expr . "^^=" expr
  284            | expr . "+=" expr
  285            | expr . "-=" expr
  286            | expr . "*=" expr
  287            | expr . "/=" expr
  288            | expr . "%=" expr
  289            | expr . "<<=" expr
  290            | expr . ">>=" expr
  291            | expr . "<<<=" expr
  292            | expr . ">>>=" expr
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'
  451 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 501
    "as"    shift, and go to state 502
    "+="    shift, and go to state 772
    "-="    shift, and go to state 773
    "/="    shift, and go to state 774
    "*="    shift, and go to state 775
    "%="    shift, and go to state 776
    "&="    shift, and go to state 777
    "|="    shift, and go to state 778
    "^="    shift, and go to state 779
    "<<"    shift, and go to state 503
    ">>"    shift, and go to state 504
    "++"    shift, and go to state 505
    "--"    shift, and go to state 506
    "<="    shift, and go to state 507
    "<<="   shift, and go to state 780
    ">>="   shift, and go to state 781
    ">="    shift, and go to state 508
    "=="    shift, and go to state 509
    "!="    shift, and go to state 510
    "->"    shift, and go to state 511
    "<-"    shift, and go to state 907
    "??"    shift, and go to state 512
    "?."    shift, and go to state 513
    "?["    shift, and go to state 514
    "<|"    shift, and go to state 515
    "|>"    shift, and go to state 516
    ":="    shift, and go to state 783
    "<<<"   shift, and go to state 517
    ">>>"   shift, and go to state 518
    "<<<="  shift, and go to state 784
    ">>>="  shift, and go to state 785
    "&&"    shift, and go to state 519
    "||"    shift, and go to state 520
    "^^"    shift, and go to state 521
    "&&="   shift, and go to state 786
    "||="   shift, and go to state 787
    "^^="   shift, and go to state 788
    ".."    shift, and go to state 522
    '='     shift, and go to state 908
    '?'     shift, and go to state 523
    '|'     shift, and go to state 524
    '^'     shift, and go to state 525
    '&'     shift, and go to state 526
    '<'     shift, and go to state 527
    '>'     shift, and go to state 528
    '-'     shift, and go to state 529
    '+'     shift, and go to state 530
    '*'     shift, and go to state 531
    '/'     shift, and go to state 532
    '%'     shift, and go to state 533
    '.'     shift, and go to state 534
    '['     shift, and go to state 535

    " <|"     reduce using rule 274 (expr_assign)
    $default  reduce using rule 451 (variable_declaration)


State 903

   61 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 61 (expression_while_loop)


State 904

   59 expression_for_loop: "for" variable_name_with_pos_list "in" . expr_list ';' expression_block

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    expr_list               go to state 1016
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 677
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 905

  226 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 226 (expression_return)


State 906

  224 expression_return: "return" "<-" expr . ';'
  274 expr_assign: expr .
  275            | expr . '=' expr
  276            | expr . "<-" expr
  277            | expr . ":=" expr
  278            | expr . "&=" expr
  279            | expr . "|=" expr
  280            | expr . "^=" expr
  281            | expr . "&&=" expr
  282            | expr . "||=" expr
  283            | expr . "^^=" expr
  284            | expr . "+=" expr
  285            | expr . "-=" expr
  286            | expr . "*=" expr
  287            | expr . "/=" expr
  288            | expr . "%=" expr
  289            | expr . "<<=" expr
  290            | expr . ">>=" expr
  291            | expr . "<<<=" expr
  292            | expr . ">>>=" expr
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 501
    "as"    shift, and go to state 502
    "+="    shift, and go to state 772
    "-="    shift, and go to state 773
    "/="    shift, and go to state 774
    "*="    shift, and go to state 775
    "%="    shift, and go to state 776
    "&="    shift, and go to state 777
    "|="    shift, and go to state 778
    "^="    shift, and go to state 779
    "<<"    shift, and go to state 503
    ">>"    shift, and go to state 504
    "++"    shift, and go to state 505
    "--"    shift, and go to state 506
    "<="    shift, and go to state 507
    "<<="   shift, and go to state 780
    ">>="   shift, and go to state 781
    ">="    shift, and go to state 508
    "=="    shift, and go to state 509
    "!="    shift, and go to state 510
    "->"    shift, and go to state 511
    "<-"    shift, and go to state 907
    "??"    shift, and go to state 512
    "?."    shift, and go to state 513
    "?["    shift, and go to state 514
    "<|"    shift, and go to state 515
    "|>"    shift, and go to state 516
    ":="    shift, and go to state 783
    "<<<"   shift, and go to state 517
    ">>>"   shift, and go to state 518
    "<<<="  shift, and go to state 784
    ">>>="  shift, and go to state 785
    "&&"    shift, and go to state 519
    "||"    shift, and go to state 520
    "^^"    shift, and go to state 521
    "&&="   shift, and go to state 786
    "||="   shift, and go to state 787
    "^^="   shift, and go to state 788
    ".."    shift, and go to state 522
    '='     shift, and go to state 908
    '?'     shift, and go to state 523
    '|'     shift, and go to state 524
    '^'     shift, and go to state 525
    '&'     shift, and go to state 526
    '<'     shift, and go to state 527
    '>'     shift, and go to state 528
    '-'     shift, and go to state 529
    '+'     shift, and go to state 530
    '*'     shift, and go to state 531
    '/'     shift, and go to state 532
    '%'     shift, and go to state 533
    '.'     shift, and go to state 534
    '['     shift, and go to state 535
    ';'     shift, and go to state 1017

    $default  reduce using rule 274 (expr_assign)


State 907

  276 expr_assign: expr "<-" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 934
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 908

  275 expr_assign: expr '=' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 943
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 909

  223 expression_return: "return" expr ';' .

    $default  reduce using rule 223 (expression_return)


State 910

  231 expression_try_catch: "try" expression_block "recover" . expression_block

    '{'  shift, and go to state 311

    expression_block  go to state 1018


State 911

   62 expression_with: "with" expr expression_block .

    $default  reduce using rule 62 (expression_with)


State 912

   64 expression_with_alias: "assume" "name" '=' . $@2 expr

    $default  reduce using rule 63 ($@2)

    $@2  go to state 1019


State 913

   48 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 48 (expression_label)


State 914

   49 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 49 (expression_goto)


State 915

  230 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 230 (expression_yield)


State 916

  228 expression_yield: "yield" "<-" expr . ';'
  274 expr_assign: expr .
  275            | expr . '=' expr
  276            | expr . "<-" expr
  277            | expr . ":=" expr
  278            | expr . "&=" expr
  279            | expr . "|=" expr
  280            | expr . "^=" expr
  281            | expr . "&&=" expr
  282            | expr . "||=" expr
  283            | expr . "^^=" expr
  284            | expr . "+=" expr
  285            | expr . "-=" expr
  286            | expr . "*=" expr
  287            | expr . "/=" expr
  288            | expr . "%=" expr
  289            | expr . "<<=" expr
  290            | expr . ">>=" expr
  291            | expr . "<<<=" expr
  292            | expr . ">>>=" expr
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 501
    "as"    shift, and go to state 502
    "+="    shift, and go to state 772
    "-="    shift, and go to state 773
    "/="    shift, and go to state 774
    "*="    shift, and go to state 775
    "%="    shift, and go to state 776
    "&="    shift, and go to state 777
    "|="    shift, and go to state 778
    "^="    shift, and go to state 779
    "<<"    shift, and go to state 503
    ">>"    shift, and go to state 504
    "++"    shift, and go to state 505
    "--"    shift, and go to state 506
    "<="    shift, and go to state 507
    "<<="   shift, and go to state 780
    ">>="   shift, and go to state 781
    ">="    shift, and go to state 508
    "=="    shift, and go to state 509
    "!="    shift, and go to state 510
    "->"    shift, and go to state 511
    "<-"    shift, and go to state 907
    "??"    shift, and go to state 512
    "?."    shift, and go to state 513
    "?["    shift, and go to state 514
    "<|"    shift, and go to state 515
    "|>"    shift, and go to state 516
    ":="    shift, and go to state 783
    "<<<"   shift, and go to state 517
    ">>>"   shift, and go to state 518
    "<<<="  shift, and go to state 784
    ">>>="  shift, and go to state 785
    "&&"    shift, and go to state 519
    "||"    shift, and go to state 520
    "^^"    shift, and go to state 521
    "&&="   shift, and go to state 786
    "||="   shift, and go to state 787
    "^^="   shift, and go to state 788
    ".."    shift, and go to state 522
    '='     shift, and go to state 908
    '?'     shift, and go to state 523
    '|'     shift, and go to state 524
    '^'     shift, and go to state 525
    '&'     shift, and go to state 526
    '<'     shift, and go to state 527
    '>'     shift, and go to state 528
    '-'     shift, and go to state 529
    '+'     shift, and go to state 530
    '*'     shift, and go to state 531
    '/'     shift, and go to state 532
    '%'     shift, and go to state 533
    '.'     shift, and go to state 534
    '['     shift, and go to state 535
    ';'     shift, and go to state 1020

    $default  reduce using rule 274 (expr_assign)


State 917

  227 expression_yield: "yield" expr ';' .

    $default  reduce using rule 227 (expression_yield)


State 918

  257 block_or_lambda: '@' '@' .

    $default  reduce using rule 257 (block_or_lambda)


State 919

  185 expression_block: '{' expressions '}' "finally" '{' . expressions '}'

    $default  reduce using rule 206 (expressions)

    expressions  go to state 1021


State 920

   58 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1022
    "elif"         shift, and go to state 1023
    "static_elif"  shift, and go to state 1024

    $default  reduce using rule 53 (expression_else)

    elif_or_static_elif  go to state 1025
    expression_else      go to state 1026


State 921

  209 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 209 (expr_pipe)


State 922

  284 expr_assign: expr "+=" expr .
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 284 (expr_assign)


State 923

  285 expr_assign: expr "-=" expr .
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 285 (expr_assign)


State 924

  287 expr_assign: expr "/=" expr .
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 287 (expr_assign)


State 925

  286 expr_assign: expr "*=" expr .
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 286 (expr_assign)


State 926

  288 expr_assign: expr "%=" expr .
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 288 (expr_assign)


State 927

  278 expr_assign: expr "&=" expr .
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 278 (expr_assign)


State 928

  279 expr_assign: expr "|=" expr .
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 279 (expr_assign)


State 929

  280 expr_assign: expr "^=" expr .
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 280 (expr_assign)


State 930

  289 expr_assign: expr "<<=" expr .
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 289 (expr_assign)


State 931

  290 expr_assign: expr ">>=" expr .
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 290 (expr_assign)


State 932

  295 expr_assign_pipe: expr "<-" "@ <|" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1027
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 933

  296 expr_assign_pipe: expr "<-" "@@ <|" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1028
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 934

  276 expr_assign: expr "<-" expr .
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 276 (expr_assign)


State 935

  277 expr_assign: expr ":=" expr .
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 277 (expr_assign)


State 936

  291 expr_assign: expr "<<<=" expr .
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 291 (expr_assign)


State 937

  292 expr_assign: expr ">>>=" expr .
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 292 (expr_assign)


State 938

  281 expr_assign: expr "&&=" expr .
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 281 (expr_assign)


State 939

  282 expr_assign: expr "||=" expr .
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 282 (expr_assign)


State 940

  283 expr_assign: expr "^^=" expr .
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 283 (expr_assign)


State 941

  293 expr_assign_pipe: expr '=' "@ <|" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1029
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 942

  294 expr_assign_pipe: expr '=' "@@ <|" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1030
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 943

  275 expr_assign: expr '=' expr .
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 275 (expr_assign)


State 944

  481 enum_list: enum_list "name" '=' expr ';' .

    $default  reduce using rule 481 (enum_list)


State 945

   92 annotation_list: annotation_list . ',' annotation_declaration
   94 optional_annotation_list: '[' annotation_list . ']'
  432 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' ';'

    ','  shift, and go to state 82
    ']'  shift, and go to state 1031


State 946

  429 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" $@25 function_declaration_header ';'
  431                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_override optional_constant $@26 function_declaration_header expression_block

    "public"   shift, and go to state 1032
    "private"  shift, and go to state 1033

    $default  reduce using rule 421 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1034


State 947

  424 structure_variable_declaration: optional_field_annotation . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1035
    "sealed"    shift, and go to state 1036

    $default  reduce using rule 416 (optional_override)

    optional_override  go to state 1037


State 948

  427 struct_variable_declaration_list: struct_variable_declaration_list $@24 structure_variable_declaration . ';'

    ';'  shift, and go to state 1038


State 949

  462 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 462 (let_variable_name_with_pos_list)


State 950

  465 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 465 (let_variable_declaration)


State 951

  274 expr_assign: expr .
  275            | expr . '=' expr
  276            | expr . "<-" expr
  277            | expr . ":=" expr
  278            | expr . "&=" expr
  279            | expr . "|=" expr
  280            | expr . "^=" expr
  281            | expr . "&&=" expr
  282            | expr . "||=" expr
  283            | expr . "^^=" expr
  284            | expr . "+=" expr
  285            | expr . "-=" expr
  286            | expr . "*=" expr
  287            | expr . "/=" expr
  288            | expr . "%=" expr
  289            | expr . "<<=" expr
  290            | expr . ">>=" expr
  291            | expr . "<<<=" expr
  292            | expr . ">>>=" expr
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'
  464 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 501
    "as"    shift, and go to state 502
    "+="    shift, and go to state 772
    "-="    shift, and go to state 773
    "/="    shift, and go to state 774
    "*="    shift, and go to state 775
    "%="    shift, and go to state 776
    "&="    shift, and go to state 777
    "|="    shift, and go to state 778
    "^="    shift, and go to state 779
    "<<"    shift, and go to state 503
    ">>"    shift, and go to state 504
    "++"    shift, and go to state 505
    "--"    shift, and go to state 506
    "<="    shift, and go to state 507
    "<<="   shift, and go to state 780
    ">>="   shift, and go to state 781
    ">="    shift, and go to state 508
    "=="    shift, and go to state 509
    "!="    shift, and go to state 510
    "->"    shift, and go to state 511
    "<-"    shift, and go to state 907
    "??"    shift, and go to state 512
    "?."    shift, and go to state 513
    "?["    shift, and go to state 514
    "<|"    shift, and go to state 515
    "|>"    shift, and go to state 516
    ":="    shift, and go to state 783
    "<<<"   shift, and go to state 517
    ">>>"   shift, and go to state 518
    "<<<="  shift, and go to state 784
    ">>>="  shift, and go to state 785
    "&&"    shift, and go to state 519
    "||"    shift, and go to state 520
    "^^"    shift, and go to state 521
    "&&="   shift, and go to state 786
    "||="   shift, and go to state 787
    "^^="   shift, and go to state 788
    ".."    shift, and go to state 522
    '='     shift, and go to state 908
    '?'     shift, and go to state 523
    '|'     shift, and go to state 524
    '^'     shift, and go to state 525
    '&'     shift, and go to state 526
    '<'     shift, and go to state 527
    '>'     shift, and go to state 528
    '-'     shift, and go to state 529
    '+'     shift, and go to state 530
    '*'     shift, and go to state 531
    '/'     shift, and go to state 532
    '%'     shift, and go to state 533
    '.'     shift, and go to state 534
    '['     shift, and go to state 535
    ';'     shift, and go to state 1039

    $default  reduce using rule 274 (expr_assign)


State 952

  466 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 466 (let_variable_declaration)


State 953

  590 type_declaration: "block" '<' $@44 optional_function_argument_list optional_function_type '>' $@45 .

    $default  reduce using rule 590 (type_declaration)


State 954

  597 type_declaration: "function" '<' $@48 optional_function_argument_list optional_function_type '>' $@49 .

    $default  reduce using rule 597 (type_declaration)


State 955

  604 type_declaration: "lambda" '<' $@52 optional_function_argument_list optional_function_type '>' $@53 .

    $default  reduce using rule 604 (type_declaration)


State 956

  218 expr_new: "new" type_declaration '(' expr_list ')' .

    $default  reduce using rule 218 (expr_new)


State 957

  248 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  249               | "typeinfo" '(' name_in_namespace '<' "name" . ';' "name" '>' expr ')'

    '>'  shift, and go to state 1040
    ';'  shift, and go to state 1041


State 958

  247 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 247 (expr_type_info)


State 959

  246 expr_type_decl: "type" '<' $@10 type_declaration '>' . $@11

    $default  reduce using rule 245 ($@11)

    $@11  go to state 1042


State 960

  237 expr_cast: "cast" '<' $@4 type_declaration '>' . $@5 expr

    $default  reduce using rule 236 ($@5)

    $@5  go to state 1043


State 961

  240 expr_cast: "upcast" '<' $@6 type_declaration '>' . $@7 expr

    $default  reduce using rule 239 ($@7)

    $@7  go to state 1044


State 962

  243 expr_cast: "reinterpret" '<' $@8 type_declaration '>' . $@9 expr

    $default  reduce using rule 242 ($@9)

    $@9  go to state 1045


State 963

  369 expr: "generator" '<' type_declaration '>' optional_capture_list . '(' ')'
  370     | "generator" '<' type_declaration '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1046


State 964

  404 expr_mtag: "$c" '(' expr ')' '(' . ')'
  405          | "$c" '(' expr ')' '(' . expr_list ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    ')'                               shift, and go to state 1047
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    expr_list               go to state 1048
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 677
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 965

  251 expr_list: expr_list . ',' expr
  649 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where ']' ']'

    ','  shift, and go to state 865
    ';'  shift, and go to state 1049


State 966

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'
  621 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 621 (make_struct_fields)


State 967

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'
  620 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 620 (make_struct_fields)


State 968

  625 make_struct_dim: make_struct_dim . ';' make_struct_fields
  631 make_struct_decl: "[[" type_declaration '(' ')' make_struct_dim . optional_block ']' ']'

    "where"  shift, and go to state 645
    ';'      shift, and go to state 843

    $default  reduce using rule 626 (optional_block)

    optional_block  go to state 1050


State 969

  630 make_struct_decl: "[[" type_declaration '(' ')' optional_block . ']' ']'

    ']'  shift, and go to state 1051


State 970

  622 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  623                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 733
    ":="  shift, and go to state 1052
    '='   shift, and go to state 735

    copy_or_move  go to state 1053


State 971

  622 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  623                   | make_struct_fields . ',' "name" ":=" expr
  625 make_struct_dim: make_struct_dim ';' make_struct_fields .

    ','  shift, and go to state 842

    $default  reduce using rule 625 (make_struct_dim)


State 972

  628 make_struct_decl: "[[" type_declaration make_struct_dim optional_block ']' . ']'

    ']'  shift, and go to state 1054


State 973

  629 make_struct_decl: "[[" type_declaration optional_block ']' ']' .

    $default  reduce using rule 629 (make_struct_decl)


State 974

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'
  635 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 635 (make_tuple)


State 975

  642 make_dim_decl: "[[" type_declaration make_dim ']' ']' .

    $default  reduce using rule 642 (make_dim_decl)


State 976

  641 make_dim: make_dim ';' make_any_tuple .

    $default  reduce using rule 641 (make_dim)


State 977

  251 expr_list: expr_list . ',' expr
  650 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where '}' ']'

    ','  shift, and go to state 865
    ';'  shift, and go to state 1055


State 978

  625 make_struct_dim: make_struct_dim . ';' make_struct_fields
  633 make_struct_decl: "[{" type_declaration '(' ')' make_struct_dim . optional_block '}' ']'

    "where"  shift, and go to state 645
    ';'      shift, and go to state 843

    $default  reduce using rule 626 (optional_block)

    optional_block  go to state 1056


State 979

  632 make_struct_decl: "[{" type_declaration make_struct_dim optional_block '}' . ']'

    ']'  shift, and go to state 1057


State 980

  643 make_dim_decl: "[{" type_declaration make_dim '}' ']' .

    $default  reduce using rule 643 (make_dim_decl)


State 981

   27 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 27 (string_builder_body)


State 982

   30 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 30 (reader_character_sequence)


State 983

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  301 func_addr_name: "$i" '(' expr . ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1058


State 984

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'
  413          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1059


State 985

  305 func_addr_expr: '@' '@' '<' $@12 type_declaration . '>' $@13 func_addr_name
  558 type_declaration: type_declaration . '[' expr ']'
  559                 | type_declaration . '[' ']'
  560                 | type_declaration . '-' '[' ']'
  561                 | type_declaration . "explicit"
  562                 | type_declaration . "const"
  563                 | type_declaration . '-' "const"
  564                 | type_declaration . '&'
  565                 | type_declaration . '-' '&'
  566                 | type_declaration . '#'
  567                 | type_declaration . "implicit"
  568                 | type_declaration . '-' '#'
  569                 | type_declaration . '=' "const"
  570                 | type_declaration . '?'
  574                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 1060
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 986

  308 func_addr_expr: '@' '@' '<' $@14 optional_function_argument_list . optional_function_type '>' $@15 func_addr_name

    ':'  shift, and go to state 428

    $default  reduce using rule 98 (optional_function_type)

    optional_function_type  go to state 1061


State 987

  297 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1062


State 988

  251 expr_list: expr_list ',' expr .
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 251 (expr_list)


State 989

  260 capture_entry: "<-" "name" .

    $default  reduce using rule 260 (capture_entry)


State 990

  261 capture_entry: ":=" "name" .

    $default  reduce using rule 261 (capture_entry)


State 991

  259 capture_entry: '=' "name" .

    $default  reduce using rule 259 (capture_entry)


State 992

  258 capture_entry: '&' "name" .

    $default  reduce using rule 258 (capture_entry)


State 993

  263 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 867
    ":="  shift, and go to state 868
    '='   shift, and go to state 869
    '&'   shift, and go to state 870

    capture_entry  go to state 1063


State 994

  265 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1064


State 995

  267 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"  shift, and go to state 1065
    '{'   shift, and go to state 311

    expression_block       go to state 1066
    block_or_simple_block  go to state 1067


State 996

  375 expr: expr "is" "type" '<' $@18 . type_declaration '>' $@19

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 1068


State 997

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'
  412          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1069


State 998

  381 expr: expr "as" "type" '<' $@20 . type_declaration '>' $@21

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 1070


State 999

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  410          | expr "as" "$f" '(' expr . ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1071


State 1000

  298 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 298 (expr_method_call)


State 1001

  251 expr_list: expr_list . ',' expr
  299 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 865
    ')'  shift, and go to state 1072


State 1002

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  407          | expr "?." "$f" '(' expr . ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1073


State 1003

  386 expr: expr '?' "as" "type" '<' . $@22 type_declaration '>' $@23

    $default  reduce using rule 384 ($@22)

    $@22  go to state 1074


State 1004

  411 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1075
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1005

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  372     | expr '?' expr ':' expr .
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 372 (expr)


State 1006

  409 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1076
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1007

  358 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 358 (expr)


State 1008

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  406          | expr '.' "$f" '(' expr . ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1077


State 1009

  408 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1078
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1010

  356 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 356 (expr)


State 1011

  313 expr_field: expr '.' $@16 error $@17 .

    $default  reduce using rule 313 (expr_field)


State 1012

  508 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 508 (variable_name_with_pos_list)


State 1013

  511 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1079


State 1014

  445 copy_or_move: '=' .
  569 type_declaration: type_declaration '=' . "const"

    "const"  shift, and go to state 409

    $default  reduce using rule 445 (copy_or_move)


State 1015

  450 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1080
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1016

   59 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list . ';' expression_block
  251 expr_list: expr_list . ',' expr

    ','  shift, and go to state 865
    ';'  shift, and go to state 1081


State 1017

  224 expression_return: "return" "<-" expr ';' .

    $default  reduce using rule 224 (expression_return)


State 1018

  231 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 231 (expression_try_catch)


State 1019

   64 expression_with_alias: "assume" "name" '=' $@2 . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1082
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1020

  228 expression_yield: "yield" "<-" expr ';' .

    $default  reduce using rule 228 (expression_yield)


State 1021

  185 expression_block: '{' expressions '}' "finally" '{' expressions . '}'
  207 expressions: expressions . expression_any
  208            | expressions . error

    error                             shift, and go to state 552
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 553
    "if"                              shift, and go to state 554
    "static_if"                       shift, and go to state 555
    "for"                             shift, and go to state 556
    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "return"                          shift, and go to state 557
    "null"                            shift, and go to state 350
    "break"                           shift, and go to state 558
    "try"                             shift, and go to state 559
    "delete"                          shift, and go to state 560
    "deref"                           shift, and go to state 351
    "with"                            shift, and go to state 561
    "assume"                          shift, and go to state 562
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 354
    "continue"                        shift, and go to state 563
    "pass"                            shift, and go to state 564
    "reinterpret"                     shift, and go to state 355
    "label"                           shift, and go to state 565
    "goto"                            shift, and go to state 566
    "unsafe"                          shift, and go to state 567
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "yield"                           shift, and go to state 568
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "@ <|"                            shift, and go to state 569
    "@@ <|"                           shift, and go to state 570
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    ';'                               shift, and go to state 571
    '{'                               shift, and go to state 311
    '}'                               shift, and go to state 1083

    string_builder           go to state 386
    expr_reader              go to state 387
    expression_label         go to state 573
    expression_goto          go to state 574
    if_or_static_if          go to state 575
    expression_if_then_else  go to state 576
    expression_for_loop      go to state 577
    expression_unsafe        go to state 578
    expression_while_loop    go to state 579
    expression_with          go to state 580
    expression_with_alias    go to state 581
    expression_block         go to state 388
    expression_any           go to state 582
    expr_pipe                go to state 583
    name_in_namespace        go to state 389
    expression_delete        go to state 584
    expr_new                 go to state 390
    expression_break         go to state 585
    expression_continue      go to state 586
    expression_return        go to state 587
    expression_yield         go to state 588
    expression_try_catch     go to state 589
    kwd_let                  go to state 590
    expression_let           go to state 591
    expr_cast                go to state 391
    expr_type_decl           go to state 392
    expr_type_info           go to state 393
    block_or_lambda          go to state 394
    expr_block               go to state 395
    expr_numeric_const       go to state 396
    expr_assign              go to state 592
    expr_assign_pipe         go to state 593
    expr_named_call          go to state 397
    expr_method_call         go to state 398
    func_addr_expr           go to state 399
    expr_field               go to state 400
    expr                     go to state 594
    expr_mtag                go to state 402
    basic_type_declaration   go to state 403
    make_decl                go to state 404
    make_struct_decl         go to state 405
    make_dim_decl            go to state 406
    make_table_decl          go to state 407
    array_comprehension      go to state 408


State 1022

   54 expression_else: "else" . expression_block

    '{'  shift, and go to state 311

    expression_block  go to state 1084


State 1023

   51 elif_or_static_elif: "elif" .

    $default  reduce using rule 51 (elif_or_static_elif)


State 1024

   52 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 52 (elif_or_static_elif)


State 1025

   55 expression_else: elif_or_static_elif . expr expression_block expression_else

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1085
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1026

   58 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 58 (expression_if_then_else)


State 1027

  295 expr_assign_pipe: expr "<-" "@ <|" expr .
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '/'    shift, and go to state 532
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 295 (expr_assign_pipe)


State 1028

  296 expr_assign_pipe: expr "<-" "@@ <|" expr .
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    "++"      [reduce using rule 296 (expr_assign_pipe)]
    "--"      [reduce using rule 296 (expr_assign_pipe)]
    '-'       [reduce using rule 296 (expr_assign_pipe)]
    '+'       [reduce using rule 296 (expr_assign_pipe)]
    '*'       [reduce using rule 296 (expr_assign_pipe)]
    '%'       [reduce using rule 296 (expr_assign_pipe)]
    $default  reduce using rule 296 (expr_assign_pipe)


State 1029

  293 expr_assign_pipe: expr '=' "@ <|" expr .
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '/'    shift, and go to state 532
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 293 (expr_assign_pipe)


State 1030

  294 expr_assign_pipe: expr '=' "@@ <|" expr .
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    "++"      [reduce using rule 294 (expr_assign_pipe)]
    "--"      [reduce using rule 294 (expr_assign_pipe)]
    '-'       [reduce using rule 294 (expr_assign_pipe)]
    '+'       [reduce using rule 294 (expr_assign_pipe)]
    '*'       [reduce using rule 294 (expr_assign_pipe)]
    '%'       [reduce using rule 294 (expr_assign_pipe)]
    $default  reduce using rule 294 (expr_assign_pipe)


State 1031

   94 optional_annotation_list: '[' annotation_list ']' .
  432 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . ';'

    ';'  shift, and go to state 1086

    $default  reduce using rule 94 (optional_annotation_list)


State 1032

  422 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 422 (optional_public_or_private_member_variable)


State 1033

  423 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 423 (optional_public_or_private_member_variable)


State 1034

  429 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" $@25 function_declaration_header ';'
  431                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_override optional_constant $@26 function_declaration_header expression_block

    "override"  shift, and go to state 1035
    "abstract"  shift, and go to state 1087
    "sealed"    shift, and go to state 1036

    $default  reduce using rule 416 (optional_override)

    optional_override  go to state 1088


State 1035

  417 optional_override: "override" .

    $default  reduce using rule 417 (optional_override)


State 1036

  418 optional_override: "sealed" .

    $default  reduce using rule 418 (optional_override)


State 1037

  424 structure_variable_declaration: optional_field_annotation optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1032
    "private"  shift, and go to state 1033

    $default  reduce using rule 421 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1089


State 1038

  427 struct_variable_declaration_list: struct_variable_declaration_list $@24 structure_variable_declaration ';' .

    $default  reduce using rule 427 (struct_variable_declaration_list)


State 1039

  464 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone expr ';' .

    $default  reduce using rule 464 (let_variable_declaration)


State 1040

  248 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1090
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1041

  249 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' . "name" '>' expr ')'

    "name"  shift, and go to state 1091


State 1042

  246 expr_type_decl: "type" '<' $@10 type_declaration '>' $@11 .

    $default  reduce using rule 246 (expr_type_decl)


State 1043

  237 expr_cast: "cast" '<' $@4 type_declaration '>' $@5 . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1092
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1044

  240 expr_cast: "upcast" '<' $@6 type_declaration '>' $@7 . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1093
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1045

  243 expr_cast: "reinterpret" '<' $@8 type_declaration '>' $@9 . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1094
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1046

  369 expr: "generator" '<' type_declaration '>' optional_capture_list '(' . ')'
  370     | "generator" '<' type_declaration '>' optional_capture_list '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    ')'                               shift, and go to state 1095
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1096
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1047

  404 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 404 (expr_mtag)


State 1048

  251 expr_list: expr_list . ',' expr
  405 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 865
    ')'  shift, and go to state 1097


State 1049

  649 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where ']' ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1098
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1050

  631 make_struct_decl: "[[" type_declaration '(' ')' make_struct_dim optional_block . ']' ']'

    ']'  shift, and go to state 1099


State 1051

  630 make_struct_decl: "[[" type_declaration '(' ')' optional_block ']' . ']'

    ']'  shift, and go to state 1100


State 1052

  623 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1101
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1053

  622 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1102
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1054

  628 make_struct_decl: "[[" type_declaration make_struct_dim optional_block ']' ']' .

    $default  reduce using rule 628 (make_struct_decl)


State 1055

  650 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where '}' ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1103
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1056

  633 make_struct_decl: "[{" type_declaration '(' ')' make_struct_dim optional_block . '}' ']'

    '}'  shift, and go to state 1104


State 1057

  632 make_struct_decl: "[{" type_declaration make_struct_dim optional_block '}' ']' .

    $default  reduce using rule 632 (make_struct_decl)


State 1058

  301 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 301 (func_addr_name)


State 1059

  413 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 413 (expr_mtag)


State 1060

  305 func_addr_expr: '@' '@' '<' $@12 type_declaration '>' . $@13 func_addr_name

    $default  reduce using rule 304 ($@13)

    $@13  go to state 1105


State 1061

  308 func_addr_expr: '@' '@' '<' $@14 optional_function_argument_list optional_function_type . '>' $@15 func_addr_name

    '>'  shift, and go to state 1106


State 1062

  297 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 297 (expr_named_call)


State 1063

  263 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 263 (capture_list)


State 1064

  265 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 265 (optional_capture_list)


State 1065

  253 block_or_simple_block: "=>" . expr
  254                      | "=>" . "<-" expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "<-"                              shift, and go to state 1107
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1108
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1066

  252 block_or_simple_block: expression_block .

    $default  reduce using rule 252 (block_or_simple_block)


State 1067

  267 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 267 (expr_block)


State 1068

  375 expr: expr "is" "type" '<' $@18 type_declaration . '>' $@19
  558 type_declaration: type_declaration . '[' expr ']'
  559                 | type_declaration . '[' ']'
  560                 | type_declaration . '-' '[' ']'
  561                 | type_declaration . "explicit"
  562                 | type_declaration . "const"
  563                 | type_declaration . '-' "const"
  564                 | type_declaration . '&'
  565                 | type_declaration . '-' '&'
  566                 | type_declaration . '#'
  567                 | type_declaration . "implicit"
  568                 | type_declaration . '-' '#'
  569                 | type_declaration . '=' "const"
  570                 | type_declaration . '?'
  574                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 1109
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 1069

  412 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 412 (expr_mtag)


State 1070

  381 expr: expr "as" "type" '<' $@20 type_declaration . '>' $@21
  558 type_declaration: type_declaration . '[' expr ']'
  559                 | type_declaration . '[' ']'
  560                 | type_declaration . '-' '[' ']'
  561                 | type_declaration . "explicit"
  562                 | type_declaration . "const"
  563                 | type_declaration . '-' "const"
  564                 | type_declaration . '&'
  565                 | type_declaration . '-' '&'
  566                 | type_declaration . '#'
  567                 | type_declaration . "implicit"
  568                 | type_declaration . '-' '#'
  569                 | type_declaration . '=' "const"
  570                 | type_declaration . '?'
  574                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 1110
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 1071

  410 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 410 (expr_mtag)


State 1072

  299 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 299 (expr_method_call)


State 1073

  407 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 407 (expr_mtag)


State 1074

  386 expr: expr '?' "as" "type" '<' $@22 . type_declaration '>' $@23

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 1111


State 1075

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  411          | expr '?' "as" "$f" '(' expr . ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1112


State 1076

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  409          | expr '.' "?." "$f" '(' expr . ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1113


State 1077

  406 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 406 (expr_mtag)


State 1078

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  408          | expr '.' '.' "$f" '(' expr . ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1114


State 1079

  511 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 511 (variable_name_with_pos_list)


State 1080

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'
  450 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 450 (variable_declaration)


State 1081

   59 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' . expression_block

    '{'  shift, and go to state 311

    expression_block  go to state 1115


State 1082

   64 expression_with_alias: "assume" "name" '=' $@2 expr .
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 64 (expression_with_alias)


State 1083

  185 expression_block: '{' expressions '}' "finally" '{' expressions '}' .

    $default  reduce using rule 185 (expression_block)


State 1084

   54 expression_else: "else" expression_block .

    $default  reduce using rule 54 (expression_else)


State 1085

   55 expression_else: elif_or_static_elif expr . expression_block expression_else
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    '{'    shift, and go to state 311

    expression_block  go to state 1116


State 1086

  432 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' ';' .

    $default  reduce using rule 432 (struct_variable_declaration_list)


State 1087

  429 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . $@25 function_declaration_header ';'

    $default  reduce using rule 428 ($@25)

    $@25  go to state 1117


State 1088

  431 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override . optional_constant $@26 function_declaration_header expression_block

    "const"  shift, and go to state 1118

    $default  reduce using rule 419 (optional_constant)

    optional_constant  go to state 1119


State 1089

  424 structure_variable_declaration: optional_field_annotation optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 545
    "name"  shift, and go to state 546

    variable_declaration         go to state 1120
    variable_name_with_pos_list  go to state 548


State 1090

  248 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1121


State 1091

  249 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" . '>' expr ')'

    '>'  shift, and go to state 1122


State 1092

  237 expr_cast: "cast" '<' $@4 type_declaration '>' $@5 expr .
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 237 (expr_cast)


State 1093

  240 expr_cast: "upcast" '<' $@6 type_declaration '>' $@7 expr .
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 240 (expr_cast)


State 1094

  243 expr_cast: "reinterpret" '<' $@8 type_declaration '>' $@9 expr .
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 243 (expr_cast)


State 1095

  369 expr: "generator" '<' type_declaration '>' optional_capture_list '(' ')' .

    $default  reduce using rule 369 (expr)


State 1096

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  370     | "generator" '<' type_declaration '>' optional_capture_list '(' expr . ')'
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1123


State 1097

  405 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 405 (expr_mtag)


State 1098

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'
  649 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where ']' ']'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ';'    shift, and go to state 1124

    $default  reduce using rule 647 (array_comprehension_where)

    array_comprehension_where  go to state 1125


State 1099

  631 make_struct_decl: "[[" type_declaration '(' ')' make_struct_dim optional_block ']' . ']'

    ']'  shift, and go to state 1126


State 1100

  630 make_struct_decl: "[[" type_declaration '(' ')' optional_block ']' ']' .

    $default  reduce using rule 630 (make_struct_decl)


State 1101

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'
  623 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 623 (make_struct_fields)


State 1102

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'
  622 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 622 (make_struct_fields)


State 1103

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'
  650 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where '}' ']'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ';'    shift, and go to state 1124

    $default  reduce using rule 647 (array_comprehension_where)

    array_comprehension_where  go to state 1127


State 1104

  633 make_struct_decl: "[{" type_declaration '(' ')' make_struct_dim optional_block '}' . ']'

    ']'  shift, and go to state 1128


State 1105

  305 func_addr_expr: '@' '@' '<' $@12 type_declaration '>' $@13 . func_addr_name

    "::"    shift, and go to state 50
    "$i"    shift, and go to state 669
    "name"  shift, and go to state 51

    name_in_namespace  go to state 672
    func_addr_name     go to state 1129


State 1106

  308 func_addr_expr: '@' '@' '<' $@14 optional_function_argument_list optional_function_type '>' . $@15 func_addr_name

    $default  reduce using rule 307 ($@15)

    $@15  go to state 1130


State 1107

  254 block_or_simple_block: "=>" "<-" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1131
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1108

  253 block_or_simple_block: "=>" expr .
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    ".."  error (nonassociative)

    $default  reduce using rule 253 (block_or_simple_block)


State 1109

  375 expr: expr "is" "type" '<' $@18 type_declaration '>' . $@19

    $default  reduce using rule 374 ($@19)

    $@19  go to state 1132


State 1110

  381 expr: expr "as" "type" '<' $@20 type_declaration '>' . $@21

    $default  reduce using rule 380 ($@21)

    $@21  go to state 1133


State 1111

  386 expr: expr '?' "as" "type" '<' $@22 type_declaration . '>' $@23
  558 type_declaration: type_declaration . '[' expr ']'
  559                 | type_declaration . '[' ']'
  560                 | type_declaration . '-' '[' ']'
  561                 | type_declaration . "explicit"
  562                 | type_declaration . "const"
  563                 | type_declaration . '-' "const"
  564                 | type_declaration . '&'
  565                 | type_declaration . '-' '&'
  566                 | type_declaration . '#'
  567                 | type_declaration . "implicit"
  568                 | type_declaration . '-' '#'
  569                 | type_declaration . '=' "const"
  570                 | type_declaration . '?'
  574                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 1134
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 1112

  411 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 411 (expr_mtag)


State 1113

  409 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 409 (expr_mtag)


State 1114

  408 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 408 (expr_mtag)


State 1115

   59 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' expression_block .

    $default  reduce using rule 59 (expression_for_loop)


State 1116

   55 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1022
    "elif"         shift, and go to state 1023
    "static_elif"  shift, and go to state 1024

    $default  reduce using rule 53 (expression_else)

    elif_or_static_elif  go to state 1025
    expression_else      go to state 1135


State 1117

  429 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" $@25 . function_declaration_header ';'

    "operator"  shift, and go to state 188
    "bool"      shift, and go to state 189
    "string"    shift, and go to state 190
    "int"       shift, and go to state 191
    "int2"      shift, and go to state 192
    "int3"      shift, and go to state 193
    "int4"      shift, and go to state 194
    "uint"      shift, and go to state 195
    "uint2"     shift, and go to state 196
    "uint3"     shift, and go to state 197
    "uint4"     shift, and go to state 198
    "float"     shift, and go to state 199
    "float2"    shift, and go to state 200
    "float3"    shift, and go to state 201
    "float4"    shift, and go to state 202
    "range"     shift, and go to state 203
    "urange"    shift, and go to state 204
    "int64"     shift, and go to state 205
    "uint64"    shift, and go to state 206
    "double"    shift, and go to state 207
    "int8"      shift, and go to state 208
    "uint8"     shift, and go to state 209
    "int16"     shift, and go to state 210
    "uint16"    shift, and go to state 211
    "++"        shift, and go to state 212
    "--"        shift, and go to state 213
    "name"      shift, and go to state 214

    function_name                go to state 215
    function_declaration_header  go to state 1136


State 1118

  420 optional_constant: "const" .

    $default  reduce using rule 420 (optional_constant)


State 1119

  431 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant . $@26 function_declaration_header expression_block

    $default  reduce using rule 430 ($@26)

    $@26  go to state 1137


State 1120

  424 structure_variable_declaration: optional_field_annotation optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 424 (structure_variable_declaration)


State 1121

  248 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 248 (expr_type_info)


State 1122

  249 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1138
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1123

  370 expr: "generator" '<' type_declaration '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 370 (expr)


State 1124

  648 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1139


State 1125

  649 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1140


State 1126

  631 make_struct_decl: "[[" type_declaration '(' ')' make_struct_dim optional_block ']' ']' .

    $default  reduce using rule 631 (make_struct_decl)


State 1127

  650 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . '}' ']'

    '}'  shift, and go to state 1141


State 1128

  633 make_struct_decl: "[{" type_declaration '(' ')' make_struct_dim optional_block '}' ']' .

    $default  reduce using rule 633 (make_struct_decl)


State 1129

  305 func_addr_expr: '@' '@' '<' $@12 type_declaration '>' $@13 func_addr_name .

    $default  reduce using rule 305 (func_addr_expr)


State 1130

  308 func_addr_expr: '@' '@' '<' $@14 optional_function_argument_list optional_function_type '>' $@15 . func_addr_name

    "::"    shift, and go to state 50
    "$i"    shift, and go to state 669
    "name"  shift, and go to state 51

    name_in_namespace  go to state 672
    func_addr_name     go to state 1142


State 1131

  254 block_or_simple_block: "=>" "<-" expr .
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 254 (block_or_simple_block)


State 1132

  375 expr: expr "is" "type" '<' $@18 type_declaration '>' $@19 .

    $default  reduce using rule 375 (expr)


State 1133

  381 expr: expr "as" "type" '<' $@20 type_declaration '>' $@21 .

    $default  reduce using rule 381 (expr)


State 1134

  386 expr: expr '?' "as" "type" '<' $@22 type_declaration '>' . $@23

    $default  reduce using rule 385 ($@23)

    $@23  go to state 1143


State 1135

   55 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 55 (expression_else)


State 1136

  429 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" $@25 function_declaration_header . ';'

    ';'  shift, and go to state 1144


State 1137

  431 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant $@26 . function_declaration_header expression_block

    "operator"  shift, and go to state 188
    "bool"      shift, and go to state 189
    "string"    shift, and go to state 190
    "int"       shift, and go to state 191
    "int2"      shift, and go to state 192
    "int3"      shift, and go to state 193
    "int4"      shift, and go to state 194
    "uint"      shift, and go to state 195
    "uint2"     shift, and go to state 196
    "uint3"     shift, and go to state 197
    "uint4"     shift, and go to state 198
    "float"     shift, and go to state 199
    "float2"    shift, and go to state 200
    "float3"    shift, and go to state 201
    "float4"    shift, and go to state 202
    "range"     shift, and go to state 203
    "urange"    shift, and go to state 204
    "int64"     shift, and go to state 205
    "uint64"    shift, and go to state 206
    "double"    shift, and go to state 207
    "int8"      shift, and go to state 208
    "uint8"     shift, and go to state 209
    "int16"     shift, and go to state 210
    "uint16"    shift, and go to state 211
    "++"        shift, and go to state 212
    "--"        shift, and go to state 213
    "name"      shift, and go to state 214

    function_name                go to state 215
    function_declaration_header  go to state 1145


State 1138

  249 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr . ')'
  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1146


State 1139

  648 array_comprehension_where: ';' "where" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1147
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1140

  649 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1148


State 1141

  650 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' . ']'

    ']'  shift, and go to state 1149


State 1142

  308 func_addr_expr: '@' '@' '<' $@14 optional_function_argument_list optional_function_type '>' $@15 func_addr_name .

    $default  reduce using rule 308 (func_addr_expr)


State 1143

  386 expr: expr '?' "as" "type" '<' $@22 type_declaration '>' $@23 .

    $default  reduce using rule 386 (expr)


State 1144

  429 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" $@25 function_declaration_header ';' .

    $default  reduce using rule 429 (struct_variable_declaration_list)


State 1145

  431 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant $@26 function_declaration_header . expression_block

    '{'  shift, and go to state 311

    expression_block  go to state 1150


State 1146

  249 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')' .

    $default  reduce using rule 249 (expr_type_info)


State 1147

  298 expr_method_call: expr . "->" "name" '(' ')'
  299                 | expr . "->" "name" '(' expr_list ')'
  309 expr_field: expr . '.' "name"
  310           | expr . '.' '.' "name"
  313           | expr . '.' $@16 error $@17
  328 expr: expr . "<<" expr
  329     | expr . ">>" expr
  330     | expr . "<<<" expr
  331     | expr . ">>>" expr
  332     | expr . '+' expr
  333     | expr . '-' expr
  334     | expr . '*' expr
  335     | expr . '/' expr
  336     | expr . '%' expr
  337     | expr . '<' expr
  338     | expr . '>' expr
  339     | expr . "==" expr
  340     | expr . "!=" expr
  341     | expr . "<=" expr
  342     | expr . ">=" expr
  343     | expr . '&' expr
  344     | expr . '|' expr
  345     | expr . '^' expr
  346     | expr . "&&" expr
  347     | expr . "||" expr
  348     | expr . "^^" expr
  349     | expr . ".." expr
  352     | expr . "++"
  353     | expr . "--"
  355     | expr . '[' expr ']'
  356     | expr . '.' '[' expr ']'
  357     | expr . "?[" expr ']'
  358     | expr . '.' "?[" expr ']'
  359     | expr . "?." "name"
  360     | expr . '.' "?." "name"
  371     | expr . "??" expr
  372     | expr . '?' expr ':' expr
  375     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  376     | expr . "is" basic_type_declaration
  377     | expr . "is" "name"
  378     | expr . "as" "name"
  381     | expr . "as" "type" '<' $@20 type_declaration '>' $@21
  382     | expr . "as" basic_type_declaration
  383     | expr . '?' "as" "name"
  386     | expr . '?' "as" "type" '<' $@22 type_declaration '>' $@23
  387     | expr . '?' "as" basic_type_declaration
  395     | expr . "<|" expr
  396     | expr . "|>" expr
  406 expr_mtag: expr . '.' "$f" '(' expr ')'
  407          | expr . "?." "$f" '(' expr ')'
  408          | expr . '.' '.' "$f" '(' expr ')'
  409          | expr . '.' "?." "$f" '(' expr ')'
  410          | expr . "as" "$f" '(' expr ')'
  411          | expr . '?' "as" "$f" '(' expr ')'
  412          | expr . "is" "$f" '(' expr ')'
  648 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 648 (array_comprehension_where)


State 1148

  649 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']' .

    $default  reduce using rule 649 (array_comprehension)


State 1149

  650 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']' .

    $default  reduce using rule 650 (array_comprehension)


State 1150

  431 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant $@26 function_declaration_header expression_block .

    $default  reduce using rule 431 (struct_variable_declaration_list)
